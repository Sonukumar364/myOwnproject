{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __reflectGet = Reflect.get;\nvar __knownSymbol = (name, symbol) => {\n  return (symbol = Symbol[name]) ? symbol : Symbol.for(\"Symbol.\" + name);\n};\nvar __pow = Math.pow;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--) if (decorator = decorators[i]) result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result) __defProp(target, key, result);\n  return result;\n};\nvar __superGet = (cls, obj, key) => __reflectGet(__getProtoOf(cls), key, obj);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar __await = function (promise, isYieldStar) {\n  this[0] = promise;\n  this[1] = isYieldStar;\n};\nvar __yieldStar = value => {\n  var obj = value[__knownSymbol(\"asyncIterator\")];\n  var isAwait = false;\n  var method;\n  var it = {};\n  if (obj == null) {\n    obj = value[__knownSymbol(\"iterator\")]();\n    method = k => it[k] = x => obj[k](x);\n  } else {\n    obj = obj.call(value);\n    method = k => it[k] = v => {\n      if (isAwait) {\n        isAwait = false;\n        if (k === \"throw\") throw v;\n        return v;\n      }\n      isAwait = true;\n      return {\n        done: false,\n        value: new __await(new Promise(resolve => {\n          var x = obj[k](v);\n          if (!(x instanceof Object)) throw TypeError(\"Object expected\");\n          resolve(x);\n        }), 1)\n      };\n    };\n  }\n  return it[__knownSymbol(\"iterator\")] = () => it, method(\"next\"), \"throw\" in obj ? method(\"throw\") : it.throw = x => {\n    throw x;\n  }, \"return\" in obj && method(\"return\"), it;\n};\n\n// packages/ag-charts-community/src/options/chart/errorBarOptions.ts\nvar AgErrorBarSupportedSeriesTypes = [\"bar\", \"line\", \"scatter\"];\n\n// packages/ag-charts-community/src/options/agChartOptions.ts\nvar __FORCE_MODULE_DETECTION = 0;\n\n// packages/ag-charts-community/src/util/time/index.ts\nvar time_exports = {};\n__export(time_exports, {\n  day: () => day,\n  friday: () => friday,\n  hour: () => hour,\n  millisecond: () => millisecond,\n  minute: () => minute,\n  monday: () => monday,\n  month: () => month,\n  saturday: () => saturday,\n  second: () => second,\n  sunday: () => sunday,\n  thursday: () => thursday,\n  tuesday: () => tuesday,\n  utcDay: () => utcDay,\n  utcHour: () => utcHour,\n  utcMinute: () => utcMinute,\n  utcMonth: () => utcMonth,\n  utcYear: () => utcYear,\n  wednesday: () => wednesday,\n  year: () => year\n});\n\n// packages/ag-charts-community/src/util/time/interval.ts\nvar TimeInterval = class {\n  constructor(_encode, _decode, _rangeCallback) {\n    this._encode = _encode;\n    this._decode = _decode;\n    this._rangeCallback = _rangeCallback;\n  }\n  /**\n   * Returns a new date representing the latest interval boundary date before or equal to date.\n   * For example, `day.floor(date)` typically returns 12:00 AM local time on the given date.\n   * @param date\n   */\n  floor(date) {\n    const d = new Date(date);\n    const e = this._encode(d);\n    return this._decode(e);\n  }\n  /**\n   * Returns a new date representing the earliest interval boundary date after or equal to date.\n   * @param date\n   */\n  ceil(date) {\n    const d = new Date(Number(date) - 1);\n    const e = this._encode(d);\n    return this._decode(e + 1);\n  }\n  /**\n   * Returns an array of dates representing every interval boundary after or equal to start (inclusive) and before stop (exclusive).\n   * @param start Range start.\n   * @param stop Range end.\n   * @param extend If specified, the requested range will be extended to the closest \"nice\" values.\n   */\n  range(start, stop, extend) {\n    var _a;\n    const rangeCallback = (_a = this._rangeCallback) == null ? void 0 : _a.call(this, start, stop);\n    const e0 = this._encode(extend ? this.floor(start) : this.ceil(start));\n    const e1 = this._encode(extend ? this.ceil(stop) : this.floor(stop));\n    if (e1 < e0) {\n      return [];\n    }\n    const range3 = [];\n    for (let e = e0; e <= e1; e++) {\n      const d = this._decode(e);\n      range3.push(d);\n    }\n    rangeCallback == null ? void 0 : rangeCallback();\n    return range3;\n  }\n};\nvar CountableTimeInterval = class extends TimeInterval {\n  getOffset(snapTo, step) {\n    const s = typeof snapTo === \"number\" || snapTo instanceof Date ? this._encode(new Date(snapTo)) : 0;\n    return Math.floor(s) % step;\n  }\n  /**\n   * Returns a filtered view of this interval representing every step'th date.\n   * It can be a number of minutes, hours, days etc.\n   * Must be a positive integer.\n   * @param step\n   */\n  every(step, options) {\n    let offset4 = 0;\n    let rangeCallback;\n    const {\n      snapTo = \"start\"\n    } = options != null ? options : {};\n    if (typeof snapTo === \"string\") {\n      const initialOffset = offset4;\n      rangeCallback = (start, stop) => {\n        const s = snapTo === \"start\" ? start : stop;\n        offset4 = this.getOffset(s, step);\n        return () => offset4 = initialOffset;\n      };\n    } else if (typeof snapTo === \"number\") {\n      offset4 = this.getOffset(new Date(snapTo), step);\n    } else if (snapTo instanceof Date) {\n      offset4 = this.getOffset(snapTo, step);\n    }\n    const encode13 = date => {\n      const e = this._encode(date);\n      return Math.floor((e - offset4) / step);\n    };\n    const decode13 = encoded => {\n      return this._decode(encoded * step + offset4);\n    };\n    return new TimeInterval(encode13, decode13, rangeCallback);\n  }\n};\n\n// packages/ag-charts-community/src/util/time/millisecond.ts\nfunction encode(date) {\n  return date.getTime();\n}\nfunction decode(encoded) {\n  return new Date(encoded);\n}\nvar millisecond = new CountableTimeInterval(encode, decode);\nvar millisecond_default = millisecond;\n\n// packages/ag-charts-community/src/util/time/duration.ts\nvar epochYear = ( /* @__PURE__ */new Date(0)).getFullYear();\nvar durationSecond = 1e3;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\n// packages/ag-charts-community/src/util/time/second.ts\nvar offset = ( /* @__PURE__ */new Date()).getTimezoneOffset() * durationMinute;\nfunction encode2(date) {\n  return Math.floor((date.getTime() - offset) / durationSecond);\n}\nfunction decode2(encoded) {\n  return new Date(offset + encoded * durationSecond);\n}\nvar second = new CountableTimeInterval(encode2, decode2);\nvar second_default = second;\n\n// packages/ag-charts-community/src/util/time/minute.ts\nvar offset2 = ( /* @__PURE__ */new Date()).getTimezoneOffset() * durationMinute;\nfunction encode3(date) {\n  return Math.floor((date.getTime() - offset2) / durationMinute);\n}\nfunction decode3(encoded) {\n  return new Date(offset2 + encoded * durationMinute);\n}\nvar minute = new CountableTimeInterval(encode3, decode3);\nvar minute_default = minute;\n\n// packages/ag-charts-community/src/util/time/hour.ts\nvar offset3 = ( /* @__PURE__ */new Date()).getTimezoneOffset() * durationMinute;\nfunction encode4(date) {\n  return Math.floor((date.getTime() - offset3) / durationHour);\n}\nfunction decode4(encoded) {\n  return new Date(offset3 + encoded * durationHour);\n}\nvar hour = new CountableTimeInterval(encode4, decode4);\nvar hour_default = hour;\n\n// packages/ag-charts-community/src/util/time/day.ts\nfunction encode5(date) {\n  const tzOffsetMs = date.getTimezoneOffset() * durationMinute;\n  return Math.floor((date.getTime() - tzOffsetMs) / durationDay);\n}\nfunction decode5(encoded) {\n  const d = new Date(1970, 0, 1);\n  d.setDate(d.getDate() + encoded);\n  return d;\n}\nvar day = new CountableTimeInterval(encode5, decode5);\nvar day_default = day;\n\n// packages/ag-charts-community/src/util/time/week.ts\nfunction weekday(weekStart) {\n  const thursday2 = 4;\n  const dayShift = (7 + weekStart - thursday2) % 7;\n  function encode13(date) {\n    const tzOffsetMs = date.getTimezoneOffset() * durationMinute;\n    return Math.floor((date.getTime() - tzOffsetMs) / durationWeek - dayShift / 7);\n  }\n  function decode13(encoded) {\n    const d = new Date(1970, 0, 1);\n    d.setDate(d.getDate() + encoded * 7 + dayShift);\n    return d;\n  }\n  return new CountableTimeInterval(encode13, decode13);\n}\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\nvar week_default = sunday;\n\n// packages/ag-charts-community/src/util/time/month.ts\nfunction encode6(date) {\n  return date.getFullYear() * 12 + date.getMonth();\n}\nfunction decode6(encoded) {\n  const year2 = Math.floor(encoded / 12);\n  const month2 = encoded - year2 * 12;\n  return new Date(year2, month2, 1);\n}\nvar month = new CountableTimeInterval(encode6, decode6);\nvar month_default = month;\n\n// packages/ag-charts-community/src/util/time/year.ts\nfunction encode7(date) {\n  return date.getFullYear();\n}\nfunction decode7(encoded) {\n  const d = /* @__PURE__ */new Date();\n  d.setFullYear(encoded);\n  d.setMonth(0, 1);\n  d.setHours(0, 0, 0, 0);\n  return d;\n}\nvar year = new CountableTimeInterval(encode7, decode7);\nvar year_default = year;\n\n// packages/ag-charts-community/src/util/time/utcMinute.ts\nfunction encode8(date) {\n  return Math.floor(date.getTime() / durationMinute);\n}\nfunction decode8(encoded) {\n  return new Date(encoded * durationMinute);\n}\nvar utcMinute = new CountableTimeInterval(encode8, decode8);\n\n// packages/ag-charts-community/src/util/time/utcHour.ts\nfunction encode9(date) {\n  return Math.floor(date.getTime() / durationHour);\n}\nfunction decode9(encoded) {\n  return new Date(encoded * durationHour);\n}\nvar utcHour = new CountableTimeInterval(encode9, decode9);\n\n// packages/ag-charts-community/src/util/time/utcDay.ts\nfunction encode10(date) {\n  return Math.floor(date.getTime() / durationDay);\n}\nfunction decode10(encoded) {\n  const d = /* @__PURE__ */new Date(0);\n  d.setUTCDate(d.getUTCDate() + encoded);\n  d.setUTCHours(0, 0, 0, 0);\n  return d;\n}\nvar utcDay = new CountableTimeInterval(encode10, decode10);\n\n// packages/ag-charts-community/src/util/time/utcMonth.ts\nfunction encode11(date) {\n  return date.getUTCFullYear() * 12 + date.getUTCMonth();\n}\nfunction decode11(encoded) {\n  const year2 = Math.floor(encoded / 12);\n  const month2 = encoded - year2 * 12;\n  return new Date(Date.UTC(year2, month2, 1));\n}\nvar utcMonth = new CountableTimeInterval(encode11, decode11);\n\n// packages/ag-charts-community/src/util/time/utcYear.ts\nfunction encode12(date) {\n  return date.getUTCFullYear();\n}\nfunction decode12(encoded) {\n  const d = /* @__PURE__ */new Date();\n  d.setUTCFullYear(encoded);\n  d.setUTCMonth(0, 1);\n  d.setUTCHours(0, 0, 0, 0);\n  return d;\n}\nvar utcYear = new CountableTimeInterval(encode12, decode12);\n\n// packages/ag-charts-community/src/module/enterpriseModule.ts\nvar enterpriseModule = {\n  isEnterprise: false\n};\n\n// packages/ag-charts-community/src/module/module.ts\nvar BaseModuleInstance = class {\n  constructor() {\n    this.destroyFns = [];\n  }\n  destroy() {\n    for (const destroyFn of this.destroyFns) {\n      destroyFn();\n    }\n  }\n};\nvar REGISTERED_MODULES = [];\nfunction registerModule(module) {\n  const otherModule = REGISTERED_MODULES.find(other => {\n    return module.type === other.type && module.optionsKey === other.optionsKey && module.identifier === other.identifier;\n  });\n  if (otherModule) {\n    if (module.packageType === \"enterprise\" && otherModule.packageType === \"community\") {\n      const index = REGISTERED_MODULES.indexOf(otherModule);\n      REGISTERED_MODULES.splice(index, 1, module);\n    } else {}\n  } else {\n    REGISTERED_MODULES.push(module);\n  }\n}\nfunction hasRegisteredEnterpriseModules() {\n  return REGISTERED_MODULES.some(m => m.packageType === \"enterprise\");\n}\nvar MODULE_CONFLICTS = /* @__PURE__ */new Map();\nfunction registerModuleConflicts(source, targets) {\n  MODULE_CONFLICTS.set(source, targets);\n}\n\n// packages/ag-charts-community/src/util/array.ts\nfunction extent(values) {\n  const {\n    length\n  } = values;\n  if (length === 0) {\n    return void 0;\n  }\n  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < length; i++) {\n    let v = values[i];\n    if (v instanceof Date) {\n      v = v.getTime();\n    }\n    if (typeof v !== \"number\") {\n      continue;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n  }\n  const extent2 = [min, max];\n  if (extent2.some(v => !isFinite(v))) {\n    return void 0;\n  }\n  return extent2;\n}\nfunction normalisedExtent(d, min, max) {\n  return normalisedExtentWithMetadata(d, min, max).extent;\n}\nfunction normalisedExtentWithMetadata(d, min, max) {\n  var _a;\n  let clipped = false;\n  if (d.length > 2) {\n    d = (_a = extent(d)) != null ? _a : [NaN, NaN];\n  }\n  if (!isNaN(min)) {\n    clipped || (clipped = min > d[0]);\n    d = [min, d[1]];\n  }\n  if (!isNaN(max)) {\n    clipped || (clipped = max < d[1]);\n    d = [d[0], max];\n  }\n  if (d[0] > d[1]) {\n    d = [];\n  }\n  return {\n    extent: d,\n    clipped\n  };\n}\nfunction arraysEqual(a, b) {\n  if (a == null || b == null || a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (Array.isArray(a[i]) && Array.isArray(b[i])) {\n      if (!arraysEqual(a[i], b[i])) {\n        return false;\n      }\n    } else if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toArray(value) {\n  if (typeof value === \"undefined\") {\n    return [];\n  }\n  return Array.isArray(value) ? value : [value];\n}\nfunction unique(array) {\n  return Array.from(new Set(array));\n}\n\n// packages/ag-charts-community/src/util/function.ts\nvar doOnceFlags = {};\nfunction doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\n\n// packages/ag-charts-community/src/util/logger.ts\nvar Logger = {\n  log(...logContent) {\n    console.log(...logContent);\n  },\n  warn(message, ...logContent) {\n    console.warn(`AG Charts - ${message}`, ...logContent);\n  },\n  error(message, ...logContent) {\n    if (typeof message === \"object\") {\n      console.error(`AG Charts error`, message, ...logContent);\n    } else {\n      console.error(`AG Charts - ${message}`, ...logContent);\n    }\n  },\n  table(...logContent) {\n    console.table(...logContent);\n  },\n  warnOnce(message, ...logContent) {\n    doOnce(() => Logger.warn(message, ...logContent), `Logger.warn: ${message}`);\n  },\n  errorOnce(message, ...logContent) {\n    doOnce(() => Logger.error(message, ...logContent), `Logger.error: ${message}`);\n  }\n};\n\n// packages/ag-charts-community/src/util/window.ts\nfunction windowValue(name) {\n  const WINDOW = typeof window !== \"undefined\" ? window :\n  // typeof global !== 'undefined' ? (global as any) :\n  void 0;\n  return WINDOW == null ? void 0 : WINDOW[name];\n}\n\n// packages/ag-charts-community/src/util/debug.ts\nvar LONG_TIME_PERIOD_THRESHOLD = 2e3;\nvar timeOfLastLog = Date.now();\nvar logTimeGap = () => {\n  const timeSinceLastLog = Date.now() - timeOfLastLog;\n  if (timeSinceLastLog > LONG_TIME_PERIOD_THRESHOLD) {\n    const prettyDuration = (Math.floor(timeSinceLastLog / 100) / 10).toFixed(1);\n    Logger.log(`**** ${prettyDuration}s since last log message ****`);\n  }\n  timeOfLastLog = Date.now();\n};\nvar Debug = {\n  create(...debugSelectors) {\n    return (...logContent) => {\n      if (Debug.check(...debugSelectors)) {\n        if (typeof logContent[0] === \"function\") {\n          logContent = toArray(logContent[0]());\n        }\n        logTimeGap();\n        Logger.log(...logContent);\n      }\n    };\n  },\n  check(...debugSelectors) {\n    if (debugSelectors.length === 0) {\n      debugSelectors.push(true);\n    }\n    const chartDebug = toArray(windowValue(\"agChartsDebug\"));\n    return chartDebug.some(selector => debugSelectors.includes(selector));\n  }\n};\n\n// packages/ag-charts-community/src/util/decorator.ts\nvar BREAK_TRANSFORM_CHAIN = Symbol(\"BREAK\");\nvar CONFIG_KEY = \"__decorator_config\";\nfunction initialiseConfig(target, propertyKeyOrSymbol) {\n  if (Object.getOwnPropertyDescriptor(target, CONFIG_KEY) == null) {\n    Object.defineProperty(target, CONFIG_KEY, {\n      value: {}\n    });\n  }\n  const config = target[CONFIG_KEY];\n  const propertyKey = propertyKeyOrSymbol.toString();\n  if (typeof config[propertyKey] !== \"undefined\") {\n    return config[propertyKey];\n  }\n  const valuesMap = /* @__PURE__ */new WeakMap();\n  config[propertyKey] = {\n    setters: [],\n    getters: [],\n    valuesMap\n  };\n  const descriptor = Object.getOwnPropertyDescriptor(target, propertyKeyOrSymbol);\n  const prevSet = descriptor == null ? void 0 : descriptor.set;\n  const prevGet = descriptor == null ? void 0 : descriptor.get;\n  const getter = function () {\n    let value = prevGet ? prevGet.call(this) : valuesMap.get(this);\n    for (const transformFn of config[propertyKey].getters) {\n      value = transformFn(this, propertyKeyOrSymbol, value);\n      if (value === BREAK_TRANSFORM_CHAIN) {\n        return;\n      }\n    }\n    return value;\n  };\n  const setter = function (value) {\n    const {\n      setters\n    } = config[propertyKey];\n    let oldValue;\n    if (setters.some(f => f.length > 2)) {\n      oldValue = prevGet ? prevGet.call(this) : valuesMap.get(this);\n    }\n    for (const transformFn of setters) {\n      value = transformFn(this, propertyKeyOrSymbol, value, oldValue);\n      if (value === BREAK_TRANSFORM_CHAIN) {\n        return;\n      }\n    }\n    if (prevSet) {\n      prevSet.call(this, value);\n    } else {\n      valuesMap.set(this, value);\n    }\n  };\n  Object.defineProperty(target, propertyKeyOrSymbol, {\n    set: setter,\n    get: getter,\n    enumerable: true,\n    configurable: false\n  });\n  return config[propertyKey];\n}\nfunction addTransformToInstanceProperty(setTransform, getTransform, configMetadata) {\n  return (target, propertyKeyOrSymbol) => {\n    const config = initialiseConfig(target, propertyKeyOrSymbol);\n    config.setters.push(setTransform);\n    if (getTransform) {\n      config.getters.unshift(getTransform);\n    }\n    if (configMetadata) {\n      Object.assign(config, configMetadata);\n    }\n  };\n}\nfunction isDecoratedObject(target) {\n  return typeof target !== \"undefined\" && CONFIG_KEY in target;\n}\nfunction listDecoratedProperties(target) {\n  const targets = /* @__PURE__ */new Set();\n  while (isDecoratedObject(target)) {\n    targets.add(target == null ? void 0 : target[CONFIG_KEY]);\n    target = Object.getPrototypeOf(target);\n  }\n  return Array.from(targets).flatMap(configMap => Object.keys(configMap));\n}\nfunction extractDecoratedProperties(target) {\n  return listDecoratedProperties(target).reduce((result, key) => {\n    var _a;\n    result[key] = (_a = target[key]) != null ? _a : null;\n    return result;\n  }, {});\n}\nfunction extractDecoratedPropertyMetadata(target, propertyKeyOrSymbol) {\n  const propertyKey = propertyKeyOrSymbol.toString();\n  while (isDecoratedObject(target)) {\n    const config = target[CONFIG_KEY];\n    if (Object.hasOwn(config, propertyKey)) {\n      return config[propertyKey];\n    }\n    target = Object.getPrototypeOf(target);\n  }\n}\n\n// packages/ag-charts-community/src/util/deprecation.ts\nfunction createDeprecationWarning() {\n  return (key, message) => {\n    const msg = [`Property [${key}] is deprecated.`, message].filter(Boolean).join(\" \");\n    Logger.warnOnce(msg);\n  };\n}\nfunction Deprecated(message, opts) {\n  const warnDeprecated = createDeprecationWarning();\n  const def = opts == null ? void 0 : opts.default;\n  return addTransformToInstanceProperty((_, key, value) => {\n    if (value !== def) {\n      warnDeprecated(key.toString(), message);\n    }\n    return value;\n  });\n}\nfunction DeprecatedAndRenamedTo(newPropName, mapValue) {\n  const warnDeprecated = createDeprecationWarning();\n  return addTransformToInstanceProperty((target, key, value) => {\n    if (value !== target[newPropName]) {\n      warnDeprecated(key.toString(), `Use [${newPropName}] instead.`);\n      target[newPropName] = mapValue ? mapValue(value) : value;\n    }\n    return BREAK_TRANSFORM_CHAIN;\n  }, (target, key) => {\n    warnDeprecated(key.toString(), `Use [${newPropName}] instead.`);\n    return target[newPropName];\n  });\n}\n\n// packages/ag-charts-community/src/scene/changeDetectable.ts\nvar RedrawType = /* @__PURE__ */(RedrawType2 => {\n  RedrawType2[RedrawType2[\"NONE\"] = 0] = \"NONE\";\n  RedrawType2[RedrawType2[\"TRIVIAL\"] = 1] = \"TRIVIAL\";\n  RedrawType2[RedrawType2[\"MINOR\"] = 2] = \"MINOR\";\n  RedrawType2[RedrawType2[\"MAJOR\"] = 3] = \"MAJOR\";\n  return RedrawType2;\n})(RedrawType || {});\nfunction functionConstructorAvailable() {\n  try {\n    new Function(\"return true\");\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar STRING_FUNCTION_USEABLE = functionConstructorAvailable();\nfunction SceneChangeDetection(opts) {\n  const {\n    changeCb,\n    convertor\n  } = opts != null ? opts : {};\n  return function (target, key) {\n    const privateKey = `__${key}`;\n    if (target[key]) {\n      return;\n    }\n    if (STRING_FUNCTION_USEABLE && changeCb == null && convertor == null) {\n      prepareFastGetSet(target, key, privateKey, opts);\n    } else {\n      prepareSlowGetSet(target, key, privateKey, opts);\n    }\n  };\n}\nfunction prepareFastGetSet(target, key, privateKey, opts) {\n  const {\n    redraw = 1 /* TRIVIAL */,\n    type = \"normal\",\n    checkDirtyOnAssignment = false\n  } = opts != null ? opts : {};\n  const setterJs = new Function(\"value\", `\n        const oldValue = this.${privateKey};\n        if (value !== oldValue) {\n            this.${privateKey} = value;\n            ${type === \"normal\" ? `this.markDirty(this, ${redraw});` : \"\"}\n            ${type === \"transform\" ? `this.markDirtyTransform(${redraw});` : \"\"}\n            ${type === \"path\" ? `if (!this._dirtyPath) { this._dirtyPath = true; this.markDirty(this, ${redraw}); }` : \"\"}\n            ${type === \"font\" ? `if (!this._dirtyFont) { this._dirtyFont = true; this.markDirty(this, ${redraw}); }` : \"\"}\n        }\n        ${checkDirtyOnAssignment ? `if (value != null && value._dirty > ${0 /* NONE */}) { this.markDirty(value, value._dirty); }` : \"\"}\n`);\n  const getterJs = new Function(`return this.${privateKey};`);\n  Object.defineProperty(target, key, {\n    set: setterJs,\n    get: getterJs,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction prepareSlowGetSet(target, key, privateKey, opts) {\n  const {\n    redraw = 1 /* TRIVIAL */,\n    type = \"normal\",\n    changeCb,\n    convertor,\n    checkDirtyOnAssignment = false\n  } = opts != null ? opts : {};\n  const setter = function (value) {\n    const oldValue = this[privateKey];\n    value = convertor ? convertor(value) : value;\n    if (value !== oldValue) {\n      this[privateKey] = value;\n      if (type === \"normal\") this.markDirty(this, redraw);\n      if (type === \"transform\") this.markDirtyTransform(redraw);\n      if (type === \"path\" && !this._dirtyPath) {\n        this._dirtyPath = true;\n        this.markDirty(this, redraw);\n      }\n      if (type === \"font\" && !this._dirtyFont) {\n        this._dirtyFont = true;\n        this.markDirty(this, redraw);\n      }\n      if (changeCb) changeCb(this);\n    }\n    if (checkDirtyOnAssignment && value != null && value._dirty > 0 /* NONE */) this.markDirty(value, value._dirty);\n  };\n  const getter = function () {\n    return this[privateKey];\n  };\n  Object.defineProperty(target, key, {\n    set: setter,\n    get: getter,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar ChangeDetectable = class {\n  constructor() {\n    this._dirty = 3 /* MAJOR */;\n  }\n  markDirty(_source, type = 1 /* TRIVIAL */) {\n    if (this._dirty > type) {\n      return;\n    }\n    this._dirty = type;\n  }\n  markClean(_opts) {\n    this._dirty = 0 /* NONE */;\n  }\n  isDirty() {\n    return this._dirty > 0 /* NONE */;\n  }\n};\n\n// packages/ag-charts-community/src/util/type-guards.ts\nfunction isDefined(val) {\n  return val != null;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\nfunction isDate(value) {\n  return value instanceof Date;\n}\nfunction isValidDate(value) {\n  return isDate(value) && !isNaN(Number(value));\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null && !isArray(value);\n}\nfunction isObjectLike(value) {\n  return typeof value === \"object\" && value !== null;\n}\nfunction isPlainObject(value) {\n  return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isFiniteNumber(value) {\n  return isNumber(value) && Number.isFinite(value);\n}\nfunction isHtmlElement(value) {\n  return typeof window !== \"undefined\" && value instanceof HTMLElement;\n}\n\n// packages/ag-charts-community/src/util/properties.ts\nvar BaseProperties = class extends ChangeDetectable {\n  constructor(className) {\n    super();\n    this.className = className;\n  }\n  set(properties) {\n    const keys = new Set(Object.keys(properties));\n    for (const propertyKey of listDecoratedProperties(this)) {\n      if (keys.has(propertyKey)) {\n        const value = properties[propertyKey];\n        const self = this;\n        if (isProperties(self[propertyKey])) {\n          self[propertyKey] = self[propertyKey] instanceof PropertiesArray ? self[propertyKey].reset(value) : self[propertyKey].set(value);\n        } else {\n          self[propertyKey] = value;\n        }\n        keys.delete(propertyKey);\n      }\n    }\n    for (const unknownKey of keys) {\n      const {\n        className = this.constructor.name\n      } = this;\n      Logger.warn(`unable to set [${unknownKey}] in ${className} - property is unknown`);\n    }\n    return this;\n  }\n  isValid() {\n    return listDecoratedProperties(this).every(propertyKey => {\n      const {\n        optional\n      } = extractDecoratedPropertyMetadata(this, propertyKey);\n      return optional || typeof this[propertyKey] !== \"undefined\";\n    });\n  }\n  toJson() {\n    return listDecoratedProperties(this).reduce((object, propertyKey) => {\n      object[propertyKey] = this[propertyKey];\n      return object;\n    }, {});\n  }\n};\nvar PropertiesArray = class _PropertiesArray extends Array {\n  constructor(itemFactory, ...properties) {\n    super(properties.length);\n    Object.defineProperty(this, \"itemFactory\", {\n      value: itemFactory,\n      enumerable: false,\n      configurable: false\n    });\n    this.set(properties);\n  }\n  set(properties) {\n    if (isArray(properties)) {\n      this.length = properties.length;\n      for (let i = 0; i < properties.length; i++) {\n        this[i] = new this.itemFactory().set(properties[i]);\n      }\n    }\n    return this;\n  }\n  reset(properties) {\n    return new _PropertiesArray(this.itemFactory, ...properties);\n  }\n};\nfunction isProperties(value) {\n  return value instanceof BaseProperties || value instanceof PropertiesArray;\n}\n\n// packages/ag-charts-community/src/util/json.ts\nvar CLASS_INSTANCE_TYPE = \"class-instance\";\nfunction jsonDiff(source, target) {\n  if (isArray(target)) {\n    if (!isArray(source) || source.length !== target.length || target.some((v, i) => jsonDiff(source[i], v) != null)) {\n      return target;\n    }\n  } else if (isObject(target)) {\n    if (!isObject(source) || !isPlainObject(target)) {\n      return target;\n    }\n    const result = {};\n    const allKeys = /* @__PURE__ */new Set([...Object.keys(source), ...Object.keys(target)]);\n    for (const key of allKeys) {\n      if (source[key] === target[key]) {\n        continue;\n      }\n      if (typeof source[key] !== typeof target[key]) {\n        result[key] = target[key];\n      } else {\n        const diff2 = jsonDiff(source[key], target[key]);\n        if (diff2 !== null) {\n          result[key] = diff2;\n        }\n      }\n    }\n    return Object.keys(result).length ? result : null;\n  } else if (source !== target) {\n    return target;\n  }\n  return null;\n}\nfunction jsonClone(source) {\n  if (isArray(source)) {\n    return source.map(jsonClone);\n  }\n  if (isPlainObject(source)) {\n    return Object.entries(source).reduce((result, [key, value]) => {\n      result[key] = jsonClone(value);\n      return result;\n    }, {});\n  }\n  return source;\n}\nvar DELETE = Symbol(\"<delete-property>\");\nvar NOT_SPECIFIED = Symbol(\"<unspecified-property>\");\nfunction jsonMerge(json, opts) {\n  var _a;\n  const avoidDeepClone = (_a = opts == null ? void 0 : opts.avoidDeepClone) != null ? _a : [];\n  const jsonTypes = json.map(v => classify(v));\n  if (jsonTypes.some(v => v === \"array\")) {\n    const finalValue = json[json.length - 1];\n    if (Array.isArray(finalValue)) {\n      return finalValue.map(v => {\n        const type = classify(v);\n        if (type === \"array\") return jsonMerge([[], v], opts);\n        if (type === \"object\") return jsonMerge([{}, v], opts);\n        return v;\n      });\n    }\n    return finalValue;\n  }\n  const result = {};\n  const props = new Set(json.map(v => v != null ? Object.keys(v) : []).reduce((r, n) => r.concat(n), []));\n  for (const nextProp of props) {\n    const values = json.map(j => {\n      if (j != null && typeof j === \"object\" && nextProp in j) {\n        return j[nextProp];\n      }\n      return NOT_SPECIFIED;\n    }).filter(v => v !== NOT_SPECIFIED);\n    if (values.length === 0) {\n      continue;\n    }\n    const lastValue = values[values.length - 1];\n    if (lastValue === DELETE) {\n      continue;\n    }\n    const types = values.map(v => classify(v));\n    const type = types[0];\n    if (types.some(t => t !== type)) {\n      result[nextProp] = lastValue;\n      continue;\n    }\n    if ((type === \"array\" || type === \"object\") && !avoidDeepClone.includes(nextProp)) {\n      result[nextProp] = jsonMerge(values, opts);\n    } else if (type === \"array\") {\n      result[nextProp] = [...lastValue];\n    } else {\n      result[nextProp] = lastValue;\n    }\n  }\n  return result;\n}\nfunction jsonApply(target, source, params = {}) {\n  var _a, _b, _c;\n  const {\n    path,\n    matcherPath = path ? path.replace(/(\\[[0-9+]+])/i, \"[]\") : void 0,\n    skip = [],\n    constructors = {},\n    constructedArrays = /* @__PURE__ */new WeakMap(),\n    allowedTypes = {},\n    idx\n  } = params;\n  if (target == null) {\n    throw new Error(`AG Charts - target is uninitialised: ${path != null ? path : \"<root>\"}`);\n  }\n  if (source == null) {\n    return target;\n  }\n  if (isProperties(target)) {\n    return target.set(source);\n  }\n  const targetAny = target;\n  if (idx != null && \"_declarationOrder\" in targetAny) {\n    targetAny[\"_declarationOrder\"] = idx;\n  }\n  const targetType = classify(target);\n  for (const property in source) {\n    const propertyMatcherPath = `${matcherPath ? matcherPath + \".\" : \"\"}${property}`;\n    if (skip.indexOf(propertyMatcherPath) >= 0) {\n      continue;\n    }\n    const newValue = source[property];\n    const propertyPath = `${path ? path + \".\" : \"\"}${property}`;\n    const targetClass = targetAny.constructor;\n    const currentValue = targetAny[property];\n    let ctr = (_a = constructors[propertyMatcherPath]) != null ? _a : constructors[property];\n    try {\n      const currentValueType = classify(currentValue);\n      const newValueType = classify(newValue);\n      if (targetType === CLASS_INSTANCE_TYPE && !(property in target || Object.hasOwn(targetAny, property))) {\n        Logger.warn(`unable to set [${propertyPath}] in ${targetClass == null ? void 0 : targetClass.name} - property is unknown`);\n        continue;\n      }\n      const allowableTypes = (_b = allowedTypes[propertyMatcherPath]) != null ? _b : [currentValueType];\n      if (currentValueType === CLASS_INSTANCE_TYPE && newValueType === \"object\") {} else if (currentValueType != null && newValueType != null && !allowableTypes.includes(newValueType)) {\n        Logger.warn(`unable to set [${propertyPath}] in ${targetClass == null ? void 0 : targetClass.name} - can't apply type of [${newValueType}], allowed types are: [${allowableTypes}]`);\n        continue;\n      }\n      if (newValueType === \"array\") {\n        ctr = (_c = ctr != null ? ctr : constructedArrays.get(currentValue)) != null ? _c : constructors[`${propertyMatcherPath}[]`];\n        if (isProperties(targetAny[property])) {\n          targetAny[property].set(newValue);\n        } else if (ctr != null) {\n          const newValueArray = newValue;\n          targetAny[property] = newValueArray.map((v, idx2) => jsonApply(new ctr(), v, __spreadProps(__spreadValues({}, params), {\n            path: propertyPath,\n            matcherPath: propertyMatcherPath + \"[]\",\n            idx: idx2\n          })));\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else if (newValueType === CLASS_INSTANCE_TYPE) {\n        targetAny[property] = newValue;\n      } else if (newValueType === \"object\") {\n        if (currentValue != null) {\n          jsonApply(currentValue, newValue, __spreadProps(__spreadValues({}, params), {\n            path: propertyPath,\n            matcherPath: propertyMatcherPath,\n            idx: void 0\n          }));\n        } else if (isProperties(targetAny[property])) {\n          targetAny[property].set(newValue);\n        } else if (ctr != null) {\n          const obj = new ctr();\n          if (isProperties(obj)) {\n            targetAny[property] = obj.set(newValue);\n          } else {\n            targetAny[property] = jsonApply(obj, newValue, __spreadProps(__spreadValues({}, params), {\n              path: propertyPath,\n              matcherPath: propertyMatcherPath,\n              idx: void 0\n            }));\n          }\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else if (isProperties(targetAny[property])) {\n        targetAny[property].set(newValue);\n      } else {\n        targetAny[property] = newValue;\n      }\n    } catch (error) {\n      Logger.warn(`unable to set [${propertyPath}] in [${targetClass == null ? void 0 : targetClass.name}]; nested error is: ${error.message}`);\n    }\n  }\n  return target;\n}\nfunction jsonWalk(json, visit, opts, ...jsons) {\n  var _a;\n  if (isArray(json)) {\n    visit(json, ...jsons);\n    json.forEach((node, index) => {\n      jsonWalk(node, visit, opts, ...keyMapper(jsons, index));\n    });\n  } else if (isPlainObject(json)) {\n    visit(json, ...jsons);\n    for (const key of Object.keys(json)) {\n      if ((_a = opts == null ? void 0 : opts.skip) == null ? void 0 : _a.includes(key)) {\n        continue;\n      }\n      const value = json[key];\n      if (isArray(value) || isPlainObject(value)) {\n        jsonWalk(value, visit, opts, ...keyMapper(jsons, key));\n      }\n    }\n  }\n}\nfunction keyMapper(data, key) {\n  return data.map(dataObject => dataObject == null ? void 0 : dataObject[key]);\n}\nfunction classify(value) {\n  if (value == null) {\n    return null;\n  }\n  if (isHtmlElement(value) || isDate(value)) {\n    return \"primitive\";\n  }\n  if (isArray(value)) {\n    return \"array\";\n  }\n  if (isObject(value)) {\n    return isPlainObject(value) ? \"object\" : CLASS_INSTANCE_TYPE;\n  }\n  if (isFunction(value)) {\n    return \"function\";\n  }\n  return \"primitive\";\n}\n\n// packages/ag-charts-community/src/util/angle.ts\nvar twoPi = Math.PI * 2;\nfunction normalizeAngle360(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  radians %= twoPi;\n  return radians;\n}\nfunction normalizeAngle360Inclusive(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  if (radians !== twoPi) {\n    radians %= twoPi;\n  }\n  return radians;\n}\nfunction normalizeAngle180(radians) {\n  radians %= twoPi;\n  if (radians < -Math.PI) {\n    radians += twoPi;\n  } else if (radians >= Math.PI) {\n    radians -= twoPi;\n  }\n  return radians;\n}\nfunction toRadians(degrees) {\n  return degrees / 180 * Math.PI;\n}\nfunction toDegrees(radians) {\n  return radians / Math.PI * 180;\n}\nfunction angleBetween(angle0, angle1) {\n  angle0 = normalizeAngle360(angle0);\n  angle1 = normalizeAngle360(angle1);\n  return angle1 - angle0 + (angle0 > angle1 ? 2 * Math.PI : 0);\n}\n\n// packages/ag-charts-community/src/scale/invalidating.ts\nvar Invalidating = (target, propertyKey) => {\n  const mappedProperty = Symbol(String(propertyKey));\n  target[mappedProperty] = void 0;\n  Object.defineProperty(target, propertyKey, {\n    get() {\n      return this[mappedProperty];\n    },\n    set(newValue) {\n      const oldValue = this[mappedProperty];\n      if (oldValue !== newValue) {\n        this[mappedProperty] = newValue;\n        this.invalid = true;\n      }\n    },\n    enumerable: true,\n    configurable: false\n  });\n};\n\n// packages/ag-charts-community/src/scale/bandScale.ts\nfunction clamp(x, min, max) {\n  return Math.max(min, Math.min(max, x));\n}\nvar BandScale = class {\n  constructor() {\n    this.type = \"band\";\n    this.invalid = true;\n    this.interval = 1;\n    /**\n     * Maps datum to its index in the {@link domain} array.\n     * Used to check for duplicate datums (not allowed).\n     */\n    this.index = /* @__PURE__ */new Map();\n    /**\n     * The output range values for datum at each index.\n     */\n    this.ordinalRange = [];\n    /**\n     * Contains unique datums only. Since `{}` is used in place of `Map`\n     * for IE11 compatibility, the datums are converted `toString` before\n     * the uniqueness check.\n     */\n    this._domain = [];\n    this.range = [0, 1];\n    this._bandwidth = 1;\n    this._step = 1;\n    this._rawBandwidth = 1;\n    /**\n     * The ratio of the range that is reserved for space between bands.\n     */\n    this._paddingInner = 0;\n    /**\n     * The ratio of the range that is reserved for space before the first\n     * and after the last band.\n     */\n    this._paddingOuter = 0;\n    this.round = false;\n  }\n  refresh() {\n    if (!this.invalid) return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n  set domain(values) {\n    this.invalid = true;\n    const domain = [];\n    this.index = /* @__PURE__ */new Map();\n    const index = this.index;\n    values.forEach(value => {\n      if (index.get(value) === void 0) {\n        index.set(value, domain.push(value) - 1);\n      }\n    });\n    this._domain = domain;\n  }\n  get domain() {\n    return this._domain;\n  }\n  ticks() {\n    this.refresh();\n    const {\n      interval = 1\n    } = this;\n    const step = Math.abs(Math.round(interval));\n    return this._domain.filter((_, i) => i % step === 0);\n  }\n  convert(d) {\n    this.refresh();\n    const i = this.index.get(d);\n    if (i === void 0) {\n      return NaN;\n    }\n    const r = this.ordinalRange[i];\n    if (r === void 0) {\n      return NaN;\n    }\n    return r;\n  }\n  invert(position) {\n    this.refresh();\n    const index = this.ordinalRange.findIndex(p => p === position);\n    return this.domain[index];\n  }\n  get bandwidth() {\n    this.refresh();\n    return this._bandwidth;\n  }\n  get step() {\n    this.refresh();\n    return this._step;\n  }\n  get rawBandwidth() {\n    this.refresh();\n    return this._rawBandwidth;\n  }\n  set padding(value) {\n    value = clamp(value, 0, 1);\n    this._paddingInner = value;\n    this._paddingOuter = value;\n  }\n  get padding() {\n    return this._paddingInner;\n  }\n  set paddingInner(value) {\n    this._paddingInner = clamp(value, 0, 1);\n  }\n  get paddingInner() {\n    return this._paddingInner;\n  }\n  set paddingOuter(value) {\n    this._paddingOuter = clamp(value, 0, 1);\n  }\n  get paddingOuter() {\n    return this._paddingOuter;\n  }\n  update() {\n    const count2 = this._domain.length;\n    if (count2 === 0) {\n      return;\n    }\n    const round3 = this.round;\n    const paddingInner = this._paddingInner;\n    const paddingOuter = this._paddingOuter;\n    const [r0, r1] = this.range;\n    const width = r1 - r0;\n    const rawStep = width / Math.max(1, count2 + 2 * paddingOuter - paddingInner);\n    const step = round3 ? Math.floor(rawStep) : rawStep;\n    const fullBandWidth = step * (count2 - paddingInner);\n    const x0 = r0 + (width - fullBandWidth) / 2;\n    const start = round3 ? Math.round(x0) : x0;\n    const bw = step * (1 - paddingInner);\n    const bandwidth = round3 ? Math.round(bw) : bw;\n    const rawBandwidth = rawStep * (1 - paddingInner);\n    const values = [];\n    for (let i = 0; i < count2; i++) {\n      values.push(start + step * i);\n    }\n    this._bandwidth = bandwidth;\n    this._rawBandwidth = rawBandwidth;\n    this._step = step;\n    this.ordinalRange = values;\n  }\n};\n__decorateClass([Invalidating], BandScale.prototype, \"interval\", 2);\n__decorateClass([Invalidating], BandScale.prototype, \"range\", 2);\n__decorateClass([Invalidating], BandScale.prototype, \"round\", 2);\n\n// packages/ag-charts-community/src/util/number.ts\nfunction clamp2(min, value, max) {\n  return Math.min(max, Math.max(min, value));\n}\nfunction clampArray(value, array) {\n  return clamp2(Math.min(...array), value, Math.max(...array));\n}\nfunction isEqual(a, b, epsilon2 = 1e-10) {\n  return Math.abs(a - b) < epsilon2;\n}\nfunction isNegative(a) {\n  return Math.sign(a) < 0 || Object.is(a, -0);\n}\nfunction isReal(a) {\n  return isFinite(a) && !isNaN(a);\n}\nfunction round(value, decimals = 2) {\n  const pow = Math.pow(10, decimals);\n  return Math.round(value * pow) / pow;\n}\nfunction toFixed(value, fractionOrSignificantDigits = 2) {\n  const power = Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  if (power >= 0 || !isFinite(power)) {\n    return value.toFixed(fractionOrSignificantDigits);\n  }\n  return value.toFixed(Math.abs(power) - 1 + fractionOrSignificantDigits);\n}\nfunction toReal(value) {\n  return isReal(value) ? value : 0;\n}\nfunction mod(n, m) {\n  if (n >= 0) {\n    return Math.floor(n % m);\n  }\n  return Math.floor(n % m + m);\n}\nvar countFractionDigits = (value, maxFractionDigits = 10) => {\n  const decimal = (Math.abs(value) % 1).toFixed(maxFractionDigits);\n  for (let i = decimal.length - 1; i >= 2; i -= 1) {\n    if (decimal[i] !== \"0\") {\n      return maxFractionDigits - (decimal.length - 1 - i);\n    }\n  }\n  return 0;\n};\n\n// packages/ag-charts-community/src/util/color.ts\nvar srgbToLinear = value => {\n  const sign = value < 0 ? -1 : 1;\n  const abs = Math.abs(value);\n  if (abs <= 0.04045) return value / 12.92;\n  return sign * __pow((abs + 0.055) / 1.055, 2.4);\n};\nvar srgbFromLinear = value => {\n  const sign = value < 0 ? -1 : 1;\n  const abs = Math.abs(value);\n  if (abs > 31308e-7) {\n    return sign * (1.055 * __pow(abs, 1 / 2.4) - 0.055);\n  }\n  return 12.92 * value;\n};\nvar _Color = class _Color {\n  /**\n   * Every color component should be in the [0, 1] range.\n   * Some easing functions (such as elastic easing) can overshoot the target value by some amount.\n   * So, when animating colors, if the source or target color components are already near\n   * or at the edge of the allowed [0, 1] range, it is possible for the intermediate color\n   * component value to end up outside of that range mid-animation. For this reason the constructor\n   * performs range checking/constraining.\n   * @param r Red component.\n   * @param g Green component.\n   * @param b Blue component.\n   * @param a Alpha (opacity) component.\n   */\n  constructor(r, g, b, a = 1) {\n    this.r = clamp2(0, r || 0, 1);\n    this.g = clamp2(0, g || 0, 1);\n    this.b = clamp2(0, b || 0, 1);\n    this.a = clamp2(0, a || 0, 1);\n  }\n  /**\n   * A color string can be in one of the following formats to be valid:\n   * - #rgb\n   * - #rrggbb\n   * - rgb(r, g, b)\n   * - rgba(r, g, b, a)\n   * - CSS color name such as 'white', 'orange', 'cyan', etc.\n   */\n  static validColorString(str) {\n    if (str.indexOf(\"#\") >= 0) {\n      return !!_Color.parseHex(str);\n    }\n    if (str.indexOf(\"rgb\") >= 0) {\n      return !!_Color.stringToRgba(str);\n    }\n    return !!_Color.nameToHex[str.toLowerCase()];\n  }\n  /**\n   * The given string can be in one of the following formats:\n   * - #rgb\n   * - #rrggbb\n   * - rgb(r, g, b)\n   * - rgba(r, g, b, a)\n   * - CSS color name such as 'white', 'orange', 'cyan', etc.\n   * @param str\n   */\n  static fromString(str) {\n    if (str.indexOf(\"#\") >= 0) {\n      return _Color.fromHexString(str);\n    }\n    const hex = _Color.nameToHex[str.toLowerCase()];\n    if (hex) {\n      return _Color.fromHexString(hex);\n    }\n    if (str.indexOf(\"rgb\") >= 0) {\n      return _Color.fromRgbaString(str);\n    }\n    throw new Error(`Invalid color string: '${str}'`);\n  }\n  static tryParseFromString(str) {\n    try {\n      return _Color.fromString(str);\n    } catch (e) {\n      Logger.warnOnce(`invalid color string: '${str}'.`);\n      return _Color.fromArray([0, 0, 0]);\n    }\n  }\n  // See https://drafts.csswg.org/css-color/#hex-notation\n  static parseHex(input) {\n    input = input.replace(/ /g, \"\").slice(1);\n    let parts;\n    switch (input.length) {\n      case 6:\n      case 8:\n        parts = [];\n        for (let i = 0; i < input.length; i += 2) {\n          parts.push(parseInt(`${input[i]}${input[i + 1]}`, 16));\n        }\n        break;\n      case 3:\n      case 4:\n        parts = input.split(\"\").map(p => parseInt(p, 16)).map(p => p + p * 16);\n        break;\n    }\n    if ((parts == null ? void 0 : parts.length) >= 3 && parts.every(p => p >= 0)) {\n      if (parts.length === 3) {\n        parts.push(255);\n      }\n      return parts;\n    }\n  }\n  static fromHexString(str) {\n    const values = _Color.parseHex(str);\n    if (values) {\n      const [r, g, b, a] = values;\n      return new _Color(r / 255, g / 255, b / 255, a / 255);\n    }\n    throw new Error(`Malformed hexadecimal color string: '${str}'`);\n  }\n  static stringToRgba(str) {\n    let [po, pc] = [NaN, NaN];\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      if (!po && c === \"(\") {\n        po = i;\n      } else if (c === \")\") {\n        pc = i;\n        break;\n      }\n    }\n    const contents = po && pc && str.substring(po + 1, pc);\n    if (!contents) {\n      return;\n    }\n    const parts = contents.split(\",\");\n    const rgba = [];\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n      let value = parseFloat(part);\n      if (isNaN(value)) {\n        return;\n      }\n      if (part.indexOf(\"%\") >= 0) {\n        value = Math.max(0, Math.min(100, value));\n        value /= 100;\n      } else {\n        if (i === 3) {\n          value = Math.max(0, Math.min(1, value));\n        } else {\n          value = Math.max(0, Math.min(255, value));\n          value /= 255;\n        }\n      }\n      rgba.push(value);\n    }\n    return rgba;\n  }\n  static fromRgbaString(str) {\n    const rgba = _Color.stringToRgba(str);\n    if (rgba) {\n      if (rgba.length === 3) {\n        return new _Color(rgba[0], rgba[1], rgba[2]);\n      } else if (rgba.length === 4) {\n        return new _Color(rgba[0], rgba[1], rgba[2], rgba[3]);\n      }\n    }\n    throw new Error(`Malformed rgb/rgba color string: '${str}'`);\n  }\n  static fromArray(arr) {\n    if (arr.length === 4) {\n      return new _Color(arr[0], arr[1], arr[2], arr[3]);\n    }\n    if (arr.length === 3) {\n      return new _Color(arr[0], arr[1], arr[2]);\n    }\n    throw new Error(\"The given array should contain 3 or 4 color components (numbers).\");\n  }\n  static fromHSB(h, s, b, alpha = 1) {\n    const rgb = _Color.HSBtoRGB(h, s, b);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static fromHSL(h, s, l, alpha = 1) {\n    const rgb = _Color.HSLtoRGB(h, s, l);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static fromOKLCH(l, c, h, alpha = 1) {\n    const rgb = _Color.OKLCHtoRGB(l, c, h);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static padHex(str) {\n    return str.length === 1 ? \"0\" + str : str;\n  }\n  toHexString() {\n    let hex = \"#\" + _Color.padHex(Math.round(this.r * 255).toString(16)) + _Color.padHex(Math.round(this.g * 255).toString(16)) + _Color.padHex(Math.round(this.b * 255).toString(16));\n    if (this.a < 1) {\n      hex += _Color.padHex(Math.round(this.a * 255).toString(16));\n    }\n    return hex;\n  }\n  toRgbaString(fractionDigits = 3) {\n    const components = [Math.round(this.r * 255), Math.round(this.g * 255), Math.round(this.b * 255)];\n    const k = Math.pow(10, fractionDigits);\n    if (this.a !== 1) {\n      components.push(Math.round(this.a * k) / k);\n      return `rgba(${components.join(\", \")})`;\n    }\n    return `rgb(${components.join(\", \")})`;\n  }\n  toString() {\n    if (this.a === 1) {\n      return this.toHexString();\n    }\n    return this.toRgbaString();\n  }\n  toHSB() {\n    return _Color.RGBtoHSB(this.r, this.g, this.b);\n  }\n  static RGBtoOKLCH(r, g, b) {\n    const LSRGB0 = srgbToLinear(r);\n    const LSRGB1 = srgbToLinear(g);\n    const LSRGB2 = srgbToLinear(b);\n    const LMS0 = Math.cbrt(0.4122214708 * LSRGB0 + 0.5363325363 * LSRGB1 + 0.0514459929 * LSRGB2);\n    const LMS1 = Math.cbrt(0.2119034982 * LSRGB0 + 0.6806995451 * LSRGB1 + 0.1073969566 * LSRGB2);\n    const LMS2 = Math.cbrt(0.0883024619 * LSRGB0 + 0.2817188376 * LSRGB1 + 0.6299787005 * LSRGB2);\n    const OKLAB0 = 0.2104542553 * LMS0 + 0.793617785 * LMS1 - 0.0040720468 * LMS2;\n    const OKLAB1 = 1.9779984951 * LMS0 - 2.428592205 * LMS1 + 0.4505937099 * LMS2;\n    const OKLAB2 = 0.0259040371 * LMS0 + 0.7827717662 * LMS1 - 0.808675766 * LMS2;\n    const hue = Math.atan2(OKLAB2, OKLAB1) * 180 / Math.PI;\n    const OKLCH0 = OKLAB0;\n    const OKLCH1 = Math.hypot(OKLAB1, OKLAB2);\n    const OKLCH2 = hue >= 0 ? hue : hue + 360;\n    return [OKLCH0, OKLCH1, OKLCH2];\n  }\n  static OKLCHtoRGB(l, c, h) {\n    const OKLAB0 = l;\n    const OKLAB1 = c * Math.cos(h * Math.PI / 180);\n    const OKLAB2 = c * Math.sin(h * Math.PI / 180);\n    const LMS0 = __pow(OKLAB0 + 0.3963377774 * OKLAB1 + 0.2158037573 * OKLAB2, 3);\n    const LMS1 = __pow(OKLAB0 - 0.1055613458 * OKLAB1 - 0.0638541728 * OKLAB2, 3);\n    const LMS2 = __pow(OKLAB0 - 0.0894841775 * OKLAB1 - 1.291485548 * OKLAB2, 3);\n    const LSRGB0 = 4.0767416621 * LMS0 - 3.3077115913 * LMS1 + 0.2309699292 * LMS2;\n    const LSRGB1 = -1.2684380046 * LMS0 + 2.6097574011 * LMS1 - 0.3413193965 * LMS2;\n    const LSRGB2 = -0.0041960863 * LMS0 - 0.7034186147 * LMS1 + 1.707614701 * LMS2;\n    const SRGB0 = srgbFromLinear(LSRGB0);\n    const SRGB1 = srgbFromLinear(LSRGB1);\n    const SRGB2 = srgbFromLinear(LSRGB2);\n    return [SRGB0, SRGB1, SRGB2];\n  }\n  static RGBtoHSL(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const l = (max + min) / 2;\n    let h;\n    let s;\n    if (max === min) {\n      h = NaN;\n      s = 0;\n    } else {\n      const delta = max - min;\n      s = l > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n      if (max === r) {\n        h = (g - b) / delta + (g < b ? 6 : 0);\n      } else if (max === g) {\n        h = (b - r) / delta + 2;\n      } else {\n        h = (r - g) / delta + 4;\n      }\n      h *= 360 / 6;\n    }\n    return [h, s, l];\n  }\n  static HSLtoRGB(h, s, l) {\n    if (s === 0) {\n      return [l, l, l];\n    }\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    function hueToRgb(t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    const r = hueToRgb(h / 360 + 1 / 3);\n    const g = hueToRgb(h / 360);\n    const b = hueToRgb(h / 360 - 1 / 3);\n    return [r, g, b];\n  }\n  /**\n   * Converts the given RGB triple to an array of HSB (HSV) components.\n   * The hue component will be `NaN` for achromatic colors.\n   */\n  static RGBtoHSB(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const S = max !== 0 ? (max - min) / max : 0;\n    let H = NaN;\n    if (min !== max) {\n      const delta = max - min;\n      const rc = (max - r) / delta;\n      const gc = (max - g) / delta;\n      const bc = (max - b) / delta;\n      if (r === max) {\n        H = bc - gc;\n      } else if (g === max) {\n        H = 2 + rc - bc;\n      } else {\n        H = 4 + gc - rc;\n      }\n      H /= 6;\n      if (H < 0) {\n        H = H + 1;\n      }\n    }\n    return [H * 360, S, max];\n  }\n  /**\n   * Converts the given HSB (HSV) triple to an array of RGB components.\n   */\n  static HSBtoRGB(H, S, B) {\n    if (isNaN(H)) {\n      H = 0;\n    }\n    H = (H % 360 + 360) % 360 / 360;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (S === 0) {\n      r = g = b = B;\n    } else {\n      const h = (H - Math.floor(H)) * 6;\n      const f = h - Math.floor(h);\n      const p = B * (1 - S);\n      const q = B * (1 - S * f);\n      const t = B * (1 - S * (1 - f));\n      switch (h >> 0) {\n        case 0:\n          r = B;\n          g = t;\n          b = p;\n          break;\n        case 1:\n          r = q;\n          g = B;\n          b = p;\n          break;\n        case 2:\n          r = p;\n          g = B;\n          b = t;\n          break;\n        case 3:\n          r = p;\n          g = q;\n          b = B;\n          break;\n        case 4:\n          r = t;\n          g = p;\n          b = B;\n          break;\n        case 5:\n          r = B;\n          g = p;\n          b = q;\n          break;\n      }\n    }\n    return [r, g, b];\n  }\n  derive(hueShift, saturationFactor, brightnessFactor, opacityFactor) {\n    const hsb = _Color.RGBtoHSB(this.r, this.g, this.b);\n    let b = hsb[2];\n    if (b == 0 && brightnessFactor > 1) {\n      b = 0.05;\n    }\n    const h = ((hsb[0] + hueShift) % 360 + 360) % 360;\n    const s = Math.max(Math.min(hsb[1] * saturationFactor, 1), 0);\n    b = Math.max(Math.min(b * brightnessFactor, 1), 0);\n    const a = Math.max(Math.min(this.a * opacityFactor, 1), 0);\n    const rgba = _Color.HSBtoRGB(h, s, b);\n    rgba.push(a);\n    return _Color.fromArray(rgba);\n  }\n  brighter() {\n    return this.derive(0, 1, 1 / 0.7, 1);\n  }\n  darker() {\n    return this.derive(0, 1, 0.7, 1);\n  }\n  static interpolate(color, other) {\n    const c0 = _Color.tryParseFromString(color);\n    const c1 = _Color.tryParseFromString(other);\n    return t => {\n      const i = (x, y) => x * (1 - t) + y * t;\n      const c = new _Color(i(c0.r, c1.r), i(c0.g, c1.g), i(c0.b, c1.b), i(c0.a, c1.a));\n      return c.toString();\n    };\n  }\n};\n_Color.didDebug = false;\n/**\n * CSS Color Module Level 4:\n * https://drafts.csswg.org/css-color/#named-colors\n */\n_Color.nameToHex = Object.freeze({\n  aliceblue: \"#F0F8FF\",\n  antiquewhite: \"#FAEBD7\",\n  aqua: \"#00FFFF\",\n  aquamarine: \"#7FFFD4\",\n  azure: \"#F0FFFF\",\n  beige: \"#F5F5DC\",\n  bisque: \"#FFE4C4\",\n  black: \"#000000\",\n  blanchedalmond: \"#FFEBCD\",\n  blue: \"#0000FF\",\n  blueviolet: \"#8A2BE2\",\n  brown: \"#A52A2A\",\n  burlywood: \"#DEB887\",\n  cadetblue: \"#5F9EA0\",\n  chartreuse: \"#7FFF00\",\n  chocolate: \"#D2691E\",\n  coral: \"#FF7F50\",\n  cornflowerblue: \"#6495ED\",\n  cornsilk: \"#FFF8DC\",\n  crimson: \"#DC143C\",\n  cyan: \"#00FFFF\",\n  darkblue: \"#00008B\",\n  darkcyan: \"#008B8B\",\n  darkgoldenrod: \"#B8860B\",\n  darkgray: \"#A9A9A9\",\n  darkgreen: \"#006400\",\n  darkgrey: \"#A9A9A9\",\n  darkkhaki: \"#BDB76B\",\n  darkmagenta: \"#8B008B\",\n  darkolivegreen: \"#556B2F\",\n  darkorange: \"#FF8C00\",\n  darkorchid: \"#9932CC\",\n  darkred: \"#8B0000\",\n  darksalmon: \"#E9967A\",\n  darkseagreen: \"#8FBC8F\",\n  darkslateblue: \"#483D8B\",\n  darkslategray: \"#2F4F4F\",\n  darkslategrey: \"#2F4F4F\",\n  darkturquoise: \"#00CED1\",\n  darkviolet: \"#9400D3\",\n  deeppink: \"#FF1493\",\n  deepskyblue: \"#00BFFF\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  dodgerblue: \"#1E90FF\",\n  firebrick: \"#B22222\",\n  floralwhite: \"#FFFAF0\",\n  forestgreen: \"#228B22\",\n  fuchsia: \"#FF00FF\",\n  gainsboro: \"#DCDCDC\",\n  ghostwhite: \"#F8F8FF\",\n  gold: \"#FFD700\",\n  goldenrod: \"#DAA520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#ADFF2F\",\n  grey: \"#808080\",\n  honeydew: \"#F0FFF0\",\n  hotpink: \"#FF69B4\",\n  indianred: \"#CD5C5C\",\n  indigo: \"#4B0082\",\n  ivory: \"#FFFFF0\",\n  khaki: \"#F0E68C\",\n  lavender: \"#E6E6FA\",\n  lavenderblush: \"#FFF0F5\",\n  lawngreen: \"#7CFC00\",\n  lemonchiffon: \"#FFFACD\",\n  lightblue: \"#ADD8E6\",\n  lightcoral: \"#F08080\",\n  lightcyan: \"#E0FFFF\",\n  lightgoldenrodyellow: \"#FAFAD2\",\n  lightgray: \"#D3D3D3\",\n  lightgreen: \"#90EE90\",\n  lightgrey: \"#D3D3D3\",\n  lightpink: \"#FFB6C1\",\n  lightsalmon: \"#FFA07A\",\n  lightseagreen: \"#20B2AA\",\n  lightskyblue: \"#87CEFA\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  lightsteelblue: \"#B0C4DE\",\n  lightyellow: \"#FFFFE0\",\n  lime: \"#00FF00\",\n  limegreen: \"#32CD32\",\n  linen: \"#FAF0E6\",\n  magenta: \"#FF00FF\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66CDAA\",\n  mediumblue: \"#0000CD\",\n  mediumorchid: \"#BA55D3\",\n  mediumpurple: \"#9370DB\",\n  mediumseagreen: \"#3CB371\",\n  mediumslateblue: \"#7B68EE\",\n  mediumspringgreen: \"#00FA9A\",\n  mediumturquoise: \"#48D1CC\",\n  mediumvioletred: \"#C71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#F5FFFA\",\n  mistyrose: \"#FFE4E1\",\n  moccasin: \"#FFE4B5\",\n  navajowhite: \"#FFDEAD\",\n  navy: \"#000080\",\n  oldlace: \"#FDF5E6\",\n  olive: \"#808000\",\n  olivedrab: \"#6B8E23\",\n  orange: \"#FFA500\",\n  orangered: \"#FF4500\",\n  orchid: \"#DA70D6\",\n  palegoldenrod: \"#EEE8AA\",\n  palegreen: \"#98FB98\",\n  paleturquoise: \"#AFEEEE\",\n  palevioletred: \"#DB7093\",\n  papayawhip: \"#FFEFD5\",\n  peachpuff: \"#FFDAB9\",\n  peru: \"#CD853F\",\n  pink: \"#FFC0CB\",\n  plum: \"#DDA0DD\",\n  powderblue: \"#B0E0E6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#FF0000\",\n  rosybrown: \"#BC8F8F\",\n  royalblue: \"#4169E1\",\n  saddlebrown: \"#8B4513\",\n  salmon: \"#FA8072\",\n  sandybrown: \"#F4A460\",\n  seagreen: \"#2E8B57\",\n  seashell: \"#FFF5EE\",\n  sienna: \"#A0522D\",\n  silver: \"#C0C0C0\",\n  skyblue: \"#87CEEB\",\n  slateblue: \"#6A5ACD\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  snow: \"#FFFAFA\",\n  springgreen: \"#00FF7F\",\n  steelblue: \"#4682B4\",\n  tan: \"#D2B48C\",\n  teal: \"#008080\",\n  thistle: \"#D8BFD8\",\n  tomato: \"#FF6347\",\n  transparent: \"#00000000\",\n  turquoise: \"#40E0D0\",\n  violet: \"#EE82EE\",\n  wheat: \"#F5DEB3\",\n  white: \"#FFFFFF\",\n  whitesmoke: \"#F5F5F5\",\n  yellow: \"#FFFF00\",\n  yellowgreen: \"#9ACD32\"\n});\nvar Color = _Color;\n\n// packages/ag-charts-community/src/util/validation.ts\nfunction Validate(predicate, options = {}) {\n  const {\n    optional = false\n  } = options;\n  return addTransformToInstanceProperty((target, property, value) => {\n    var _a;\n    const context = __spreadProps(__spreadValues({}, options), {\n      target,\n      property\n    });\n    if (optional && typeof value === \"undefined\" || predicate(value, context)) {\n      if (isProperties(target[property]) && !isProperties(value)) {\n        target[property].set(value);\n        return target[property];\n      }\n      return value;\n    }\n    const cleanKey = String(property).replace(/^_*/, \"\");\n    const targetName = (_a = target.constructor.className) != null ? _a : target.constructor.name.replace(/Properties$/, \"\");\n    Logger.warn(`Property [${cleanKey}] of [${targetName}] cannot be set to [${stringify(value)}]${predicate.message ? `; expecting ${getPredicateMessage(predicate, context)}` : \"\"}, ignoring.`);\n    return BREAK_TRANSFORM_CHAIN;\n  }, void 0, {\n    optional\n  });\n}\nvar AND = (...predicates) => {\n  const messages = [];\n  return predicateWithMessage((value, ctx) => {\n    messages.length = 0;\n    return predicates.every(predicate => {\n      const isValid = predicate(value, ctx);\n      if (!isValid) {\n        messages.push(getPredicateMessage(predicate, ctx));\n      }\n      return isValid;\n    });\n  }, () => messages.filter(Boolean).join(\" AND \"));\n};\nvar OR = (...predicates) => predicateWithMessage((value, ctx) => predicates.some(predicate => predicate(value, ctx)), ctx => predicates.map(getPredicateMessageMapper(ctx)).filter(Boolean).join(\" OR \"));\nvar OBJECT = attachObjectRestrictions(predicateWithMessage((value, ctx) => isProperties(value) || isObject(value) && isProperties(ctx.target[ctx.property]), \"an object\"));\nvar BOOLEAN = predicateWithMessage(isBoolean, \"a boolean\");\nvar FUNCTION = predicateWithMessage(isFunction, \"a function\");\nvar STRING = predicateWithMessage(isString, \"a string\");\nvar NUMBER = attachNumberRestrictions(predicateWithMessage(isFiniteNumber, \"a number\"));\nvar NAN = predicateWithMessage(value => isNumber(value) && isNaN(value), \"NaN\");\nvar POSITIVE_NUMBER = NUMBER.restrict({\n  min: 0\n});\nvar RATIO = NUMBER.restrict({\n  min: 0,\n  max: 1\n});\nvar DEGREE = NUMBER.restrict({\n  min: -360,\n  max: 360\n});\nvar NUMBER_OR_NAN = OR(NUMBER, NAN);\nvar ARRAY = attachArrayRestrictions(predicateWithMessage(isArray, \"an array\"));\nvar ARRAY_OF = (predicate, message) => predicateWithMessage((value, ctx) => isArray(value) && value.every(item => predicate(item, ctx)), ctx => {\n  var _a;\n  const arrayMessage = (_a = getPredicateMessage(ARRAY, ctx)) != null ? _a : \"\";\n  return message ? `${arrayMessage} of ${message}` : arrayMessage;\n});\nvar isComparable = value => isFiniteNumber(value) || isValidDate(value);\nvar LESS_THAN = otherField => predicateWithMessage((v, ctx) => !isComparable(v) || !isComparable(ctx.target[otherField]) || v < ctx.target[otherField], `expected to be less than ${otherField}`);\nvar GREATER_THAN = otherField => predicateWithMessage((v, ctx) => !isComparable(v) || !isComparable(ctx.target[otherField]) || v > ctx.target[otherField], `expected to be greater than ${otherField}`);\nvar DATE = predicateWithMessage(isValidDate, \"Date object\");\nvar DATE_OR_DATETIME_MS = OR(DATE, POSITIVE_NUMBER);\nvar colorMessage = `A color string can be in one of the following formats to be valid: #rgb, #rrggbb, rgb(r, g, b), rgba(r, g, b, a) or a CSS color name such as 'white', 'orange', 'cyan', etc`;\nvar COLOR_STRING = predicateWithMessage(v => isString(v) && Color.validColorString(v), `color String. ${colorMessage}`);\nvar COLOR_STRING_ARRAY = predicateWithMessage(ARRAY_OF(COLOR_STRING), `color strings. ${colorMessage}`);\nvar BOOLEAN_ARRAY = ARRAY_OF(BOOLEAN, \"boolean values\");\nvar NUMBER_ARRAY = ARRAY_OF(NUMBER, \"numbers\");\nvar STRING_ARRAY = ARRAY_OF(STRING, \"strings\");\nvar DATE_ARRAY = predicateWithMessage(ARRAY_OF(DATE), \"Date objects\");\nvar OBJECT_ARRAY = predicateWithMessage(ARRAY_OF(OBJECT), \"objects\");\nvar LINE_CAP = UNION([\"butt\", \"round\", \"square\"], \"a line cap\");\nvar LINE_JOIN = UNION([\"round\", \"bevel\", \"miter\"], \"a line join\");\nvar LINE_DASH = predicateWithMessage(ARRAY_OF(POSITIVE_NUMBER), \"numbers specifying the length in pixels of alternating dashes and gaps, for example, [6, 3] means dashes with a length of 6 pixels with gaps between of 3 pixels.\");\nvar POSITION = UNION([\"top\", \"right\", \"bottom\", \"left\"], \"a position\");\nvar FONT_STYLE = UNION([\"normal\", \"italic\", \"oblique\"], \"a font style\");\nvar FONT_WEIGHT = OR(UNION([\"normal\", \"bold\", \"bolder\", \"lighter\"], \"a font weight\"), NUMBER.restrict({\n  min: 1,\n  max: 1e3\n}));\nvar TEXT_WRAP = UNION([\"never\", \"always\", \"hyphenate\", \"on-space\"], \"a text wrap strategy\");\nvar TEXT_ALIGN = UNION([\"left\", \"center\", \"right\"], \"a text align\");\nvar VERTICAL_ALIGN = UNION([\"top\", \"middle\", \"bottom\"], \"a vertical align\");\nvar OVERFLOW_STRATEGY = UNION([\"ellipsis\", \"hide\"], \"an overflow strategy\");\nvar DIRECTION = UNION([\"horizontal\", \"vertical\"], \"a direction\");\nvar PLACEMENT = UNION([\"inside\", \"outside\"], \"a placement\");\nvar INTERACTION_RANGE = OR(UNION([\"exact\", \"nearest\"], \"interaction range\"), NUMBER);\nfunction UNION(options, message = \"a\") {\n  return predicateWithMessage(v => options.includes(v), `${message} keyword such as ${joinUnionOptions(options)}`);\n}\nvar MIN_SPACING = OR(AND(NUMBER.restrict({\n  min: 1\n}), LESS_THAN(\"maxSpacing\")), NAN);\nvar MAX_SPACING = OR(AND(NUMBER.restrict({\n  min: 1\n}), GREATER_THAN(\"minSpacing\")), NAN);\nfunction predicateWithMessage(predicate, message) {\n  predicate.message = message;\n  return predicate;\n}\nfunction joinUnionOptions(options) {\n  const values = options.map(option => `'${option}'`);\n  if (values.length === 1) {\n    return values[0];\n  }\n  const lastValue = values.pop();\n  return `${values.join(\", \")} or ${lastValue}`;\n}\nfunction getPredicateMessage(predicate, ctx) {\n  return isFunction(predicate.message) ? predicate.message(ctx) : predicate.message;\n}\nfunction getPredicateMessageMapper(ctx) {\n  return predicate => getPredicateMessage(predicate, ctx);\n}\nfunction attachArrayRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict({\n      length,\n      minLength\n    } = {}) {\n      return predicateWithMessage(value => isArray(value) && (isNumber(length) ? value.length === length : true) && (isNumber(minLength) ? value.length >= minLength : true), isNumber(minLength) && minLength > 0 ? \"a non-empty array\" : isNumber(length) ? `an array of length ${length}` : \"an array\");\n    }\n  });\n}\nfunction attachNumberRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict({\n      min,\n      max\n    } = {}) {\n      const message = [\"a number\"];\n      const hasMin = isNumber(min);\n      const hasMax = isNumber(max);\n      if (hasMin && hasMax) {\n        message.push(`between ${min} and ${max} inclusive`);\n      } else if (hasMin) {\n        message.push(`greater than or equal to ${min}`);\n      } else if (hasMax) {\n        message.push(`less than or equal to ${max}`);\n      }\n      return predicateWithMessage(value => isFiniteNumber(value) && (hasMin ? value >= min : true) && (hasMax ? value <= max : true), message.join(\" \"));\n    }\n  });\n}\nfunction attachObjectRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict(objectType) {\n      const isInstanceOf = value => isProperties(value) && value instanceof objectType;\n      return predicateWithMessage((value, ctx) => isInstanceOf(value) || isObject(value) && isInstanceOf(ctx.target[ctx.property]), ctx => {\n        var _a;\n        return (_a = getPredicateMessage(predicate, ctx)) != null ? _a : \"an object\";\n      });\n    }\n  });\n}\nfunction stringify(value) {\n  if (typeof value === \"number\") {\n    if (isNaN(value)) return \"NaN\";\n    if (value === Infinity) return \"Infinity\";\n    if (value === -Infinity) return \"-Infinity\";\n  }\n  return JSON.stringify(value);\n}\n\n// packages/ag-charts-community/src/chart/chartAxisDirection.ts\nvar ChartAxisDirection = /* @__PURE__ */(ChartAxisDirection2 => {\n  ChartAxisDirection2[\"X\"] = \"x\";\n  ChartAxisDirection2[\"Y\"] = \"y\";\n  return ChartAxisDirection2;\n})(ChartAxisDirection || {});\n\n// packages/ag-charts-community/src/util/id.ts\nvar ID_MAP = {};\nfunction resetIds() {\n  for (const key in ID_MAP) {\n    delete ID_MAP[key];\n  }\n}\nfunction createId(instance) {\n  var _a;\n  const constructor = instance.constructor;\n  const className = Object.hasOwn(constructor, \"className\") ? constructor.className : constructor.name;\n  if (!className) {\n    throw new Error(`The ${constructor} is missing the 'className' property.`);\n  }\n  const nextId = ((_a = ID_MAP[className]) != null ? _a : 0) + 1;\n  ID_MAP[className] = nextId;\n  return className + \"-\" + nextId;\n}\n\n// packages/ag-charts-community/src/scene/nearest.ts\nfunction nearestSquared(point, objects, maxDistanceSquared = Infinity) {\n  const result = {\n    nearest: void 0,\n    distanceSquared: maxDistanceSquared\n  };\n  for (const obj of objects) {\n    const thisDistance = obj.distanceSquared(point);\n    if (thisDistance === 0) {\n      return {\n        nearest: obj,\n        distanceSquared: 0\n      };\n    } else if (thisDistance < result.distanceSquared) {\n      result.nearest = obj;\n      result.distanceSquared = thisDistance;\n    }\n  }\n  return result;\n}\nfunction nearestSquaredInContainer(point, container, maxDistanceSquared = Infinity) {\n  const tpoint = container.transformPoint(point.x, point.y);\n  const result = {\n    nearest: void 0,\n    distanceSquared: maxDistanceSquared\n  };\n  for (const child of container.children) {\n    const {\n      nearest,\n      distanceSquared\n    } = child.nearestSquared(tpoint, result.distanceSquared);\n    if (distanceSquared === 0) {\n      return {\n        nearest,\n        distanceSquared\n      };\n    } else if (distanceSquared < result.distanceSquared) {\n      result.nearest = nearest;\n      result.distanceSquared = distanceSquared;\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/scene/bbox.ts\nvar _BBox = class _BBox {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  clone() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    return new _BBox(x, y, width, height);\n  }\n  equals(other) {\n    return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n  }\n  containsPoint(x, y) {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  }\n  collidesBBox(other) {\n    return this.x < other.x + other.width && this.x + this.width > other.x && this.y < other.y + other.height && this.y + this.height > other.y;\n  }\n  isInfinite() {\n    return Math.abs(this.x) === Infinity || Math.abs(this.y) === Infinity || Math.abs(this.width) === Infinity || Math.abs(this.height) === Infinity;\n  }\n  distanceSquared(point) {\n    if (this.containsPoint(point.x, point.y)) {\n      return 0;\n    }\n    const dx = point.x - Math.max(this.x, Math.min(point.x, this.x + this.width));\n    const dy = point.y - Math.max(this.y, Math.min(point.y, this.y + this.height));\n    return dx * dx + dy * dy;\n  }\n  static nearestBox(point, boxes) {\n    return nearestSquared(point, boxes);\n  }\n  shrink(amount, position) {\n    const apply = (pos, amt) => {\n      switch (pos) {\n        case \"top\":\n          this.y += amt;\n        case \"bottom\":\n          this.height -= amt;\n          break;\n        case \"left\":\n          this.x += amt;\n        case \"right\":\n          this.width -= amt;\n          break;\n        case \"vertical\":\n          this.y += amt;\n          this.height -= amt * 2;\n          break;\n        case \"horizontal\":\n          this.x += amt;\n          this.width -= amt * 2;\n          break;\n        case void 0:\n          this.x += amt;\n          this.width -= amt * 2;\n          this.y += amt;\n          this.height -= amt * 2;\n          break;\n        default:\n      }\n    };\n    if (typeof amount === \"number\") {\n      apply(position, amount);\n    } else if (typeof amount === \"object\") {\n      Object.entries(amount).forEach(([pos, amt]) => apply(pos, amt));\n    }\n    return this;\n  }\n  grow(amount, position) {\n    if (typeof amount === \"number\") {\n      this.shrink(-amount, position);\n    } else {\n      const paddingCopy = __spreadValues({}, amount);\n      for (const key in paddingCopy) {\n        paddingCopy[key] *= -1;\n      }\n      this.shrink(paddingCopy);\n    }\n    return this;\n  }\n  static merge(boxes) {\n    let left = Infinity;\n    let top = Infinity;\n    let right = -Infinity;\n    let bottom = -Infinity;\n    boxes.forEach(box => {\n      if (box.x < left) {\n        left = box.x;\n      }\n      if (box.y < top) {\n        top = box.y;\n      }\n      if (box.x + box.width > right) {\n        right = box.x + box.width;\n      }\n      if (box.y + box.height > bottom) {\n        bottom = box.y + box.height;\n      }\n    });\n    return new _BBox(left, top, right - left, bottom - top);\n  }\n};\n_BBox.zero = new _BBox(0, 0, 0, 0);\nvar BBox = _BBox;\n\n// packages/ag-charts-community/src/scene/matrix.ts\nvar _Matrix = class _Matrix {\n  get e() {\n    return [...this.elements];\n  }\n  constructor(elements = [1, 0, 0, 1, 0, 0]) {\n    this.elements = elements;\n  }\n  setElements(elements) {\n    const e = this.elements;\n    e[0] = elements[0];\n    e[1] = elements[1];\n    e[2] = elements[2];\n    e[3] = elements[3];\n    e[4] = elements[4];\n    e[5] = elements[5];\n    return this;\n  }\n  get identity() {\n    const e = this.elements;\n    return e[0] === 1 && e[1] === 0 && e[2] === 0 && e[3] === 1 && e[4] === 0 && e[5] === 0;\n  }\n  /**\n   * Performs the AxB matrix multiplication and saves the result\n   * to `C`, if given, or to `A` otherwise.\n   */\n  AxB(A, B, C) {\n    const a = A[0] * B[0] + A[2] * B[1],\n      b = A[1] * B[0] + A[3] * B[1],\n      c = A[0] * B[2] + A[2] * B[3],\n      d = A[1] * B[2] + A[3] * B[3],\n      e = A[0] * B[4] + A[2] * B[5] + A[4],\n      f = A[1] * B[4] + A[3] * B[5] + A[5];\n    C = C != null ? C : A;\n    C[0] = a;\n    C[1] = b;\n    C[2] = c;\n    C[3] = d;\n    C[4] = e;\n    C[5] = f;\n  }\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns the current matrix.\n   * @param other\n   */\n  multiplySelf(other) {\n    this.AxB(this.elements, other.elements);\n    return this;\n  }\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns a new matrix.\n   * @param other\n   */\n  multiply(other) {\n    const elements = new Array(6);\n    this.AxB(this.elements, other.elements, elements);\n    return new _Matrix(elements);\n  }\n  preMultiplySelf(other) {\n    this.AxB(other.elements, this.elements, this.elements);\n    return this;\n  }\n  /**\n   * Returns the inverse of this matrix as a new matrix.\n   */\n  inverse() {\n    const el = this.elements;\n    let a = el[0],\n      b = el[1],\n      c = el[2],\n      d = el[3];\n    const e = el[4],\n      f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    return new _Matrix([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n  }\n  /**\n   * Save the inverse of this matrix to the given matrix.\n   */\n  inverseTo(other) {\n    const el = this.elements;\n    let a = el[0],\n      b = el[1],\n      c = el[2],\n      d = el[3];\n    const e = el[4],\n      f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    other.setElements([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n    return this;\n  }\n  invertSelf() {\n    const el = this.elements;\n    let a = el[0],\n      b = el[1],\n      c = el[2],\n      d = el[3];\n    const e = el[4],\n      f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    el[0] = d;\n    el[1] = -b;\n    el[2] = -c;\n    el[3] = a;\n    el[4] = c * f - d * e;\n    el[5] = b * e - a * f;\n    return this;\n  }\n  transformPoint(x, y) {\n    const e = this.elements;\n    return {\n      x: x * e[0] + y * e[2] + e[4],\n      y: x * e[1] + y * e[3] + e[5]\n    };\n  }\n  transformBBox(bbox, target) {\n    const elements = this.elements;\n    const xx = elements[0];\n    const xy = elements[1];\n    const yx = elements[2];\n    const yy = elements[3];\n    const h_w = bbox.width * 0.5;\n    const h_h = bbox.height * 0.5;\n    const cx = bbox.x + h_w;\n    const cy = bbox.y + h_h;\n    const w = Math.abs(h_w * xx) + Math.abs(h_h * yx);\n    const h = Math.abs(h_w * xy) + Math.abs(h_h * yy);\n    if (!target) {\n      target = new BBox(0, 0, 0, 0);\n    }\n    target.x = cx * xx + cy * yx + elements[4] - w;\n    target.y = cx * xy + cy * yy + elements[5] - h;\n    target.width = w + w;\n    target.height = h + h;\n    return target;\n  }\n  toContext(ctx) {\n    if (this.identity) {\n      return;\n    }\n    const e = this.elements;\n    ctx.transform(e[0], e[1], e[2], e[3], e[4], e[5]);\n  }\n  static flyweight(sourceMatrix) {\n    return _Matrix.instance.setElements(sourceMatrix.elements);\n  }\n  static updateTransformMatrix(matrix, scalingX, scalingY, rotation, translationX, translationY, opts) {\n    const [bbcx, bbcy] = [0, 0];\n    const sx = scalingX;\n    const sy = scalingY;\n    let scx;\n    let scy;\n    if (sx === 1 && sy === 1) {\n      scx = 0;\n      scy = 0;\n    } else {\n      scx = (opts == null ? void 0 : opts.scalingCenterX) == null ? bbcx : opts == null ? void 0 : opts.scalingCenterX;\n      scy = (opts == null ? void 0 : opts.scalingCenterY) == null ? bbcy : opts == null ? void 0 : opts.scalingCenterY;\n    }\n    const r = rotation;\n    const cos = Math.cos(r);\n    const sin = Math.sin(r);\n    let rcx;\n    let rcy;\n    if (r === 0) {\n      rcx = 0;\n      rcy = 0;\n    } else {\n      rcx = (opts == null ? void 0 : opts.rotationCenterX) == null ? bbcx : opts == null ? void 0 : opts.rotationCenterX;\n      rcy = (opts == null ? void 0 : opts.rotationCenterY) == null ? bbcy : opts == null ? void 0 : opts.rotationCenterY;\n    }\n    const tx = translationX;\n    const ty = translationY;\n    const tx4 = scx * (1 - sx) - rcx;\n    const ty4 = scy * (1 - sy) - rcy;\n    matrix.setElements([cos * sx, sin * sx, -sin * sy, cos * sy, cos * tx4 - sin * ty4 + rcx + tx, sin * tx4 + cos * ty4 + rcy + ty]);\n    return matrix;\n  }\n  static fromContext(ctx) {\n    const domMatrix = ctx.getTransform();\n    return new _Matrix([domMatrix.a, domMatrix.b, domMatrix.c, domMatrix.d, domMatrix.e, domMatrix.f]);\n  }\n};\n_Matrix.instance = new _Matrix();\nvar Matrix = _Matrix;\n\n// packages/ag-charts-community/src/scene/node.ts\nvar PointerEvents = /* @__PURE__ */(PointerEvents2 => {\n  PointerEvents2[PointerEvents2[\"All\"] = 0] = \"All\";\n  PointerEvents2[PointerEvents2[\"None\"] = 1] = \"None\";\n  return PointerEvents2;\n})(PointerEvents || {});\nvar zIndexChangedCallback = o => {\n  if (o.parent) {\n    o.parent.dirtyZIndex = true;\n  }\n  o.zIndexChanged();\n};\nvar _Node = class _Node extends ChangeDetectable {\n  constructor({\n    isVirtual,\n    tag\n  } = {}) {\n    super();\n    /** Unique number to allow creation order to be easily determined. */\n    this.serialNumber = _Node._nextSerialNumber++;\n    /**\n     * Unique node ID in the form `ClassName-NaturalNumber`.\n     */\n    this.id = createId(this);\n    /**\n     * To simplify the type system (especially in Selections) we don't have the `Parent` node\n     * (one that has children). Instead, we mimic HTML DOM, where any node can have children.\n     * But we still need to distinguish regular leaf nodes from container leafs somehow.\n     */\n    this.isContainerNode = false;\n    this._virtualChildren = [];\n    this._children = [];\n    // Used to check for duplicate nodes.\n    this.childSet = {};\n    // These matrices may need to have package level visibility\n    // for performance optimization purposes.\n    this.matrix = new Matrix();\n    this.inverseMatrix = new Matrix();\n    this.dirtyTransform = false;\n    this.scalingX = 1;\n    this.scalingY = 1;\n    this.scalingCenterX = null;\n    this.scalingCenterY = null;\n    this.rotationCenterX = null;\n    this.rotationCenterY = null;\n    this.rotation = 0;\n    this.translationX = 0;\n    this.translationY = 0;\n    this.visible = true;\n    this.dirtyZIndex = false;\n    this.zIndex = 0;\n    /** Discriminators for render order within a zIndex. */\n    this.zIndexSubOrder = void 0;\n    this.pointerEvents = 0 /* All */;\n    this.isVirtual = isVirtual != null ? isVirtual : false;\n    this.tag = tag != null ? tag : NaN;\n  }\n  /**\n   * Some arbitrary data bound to the node.\n   */\n  get datum() {\n    var _a, _b;\n    return (_b = this._datum) != null ? _b : (_a = this._parent) == null ? void 0 : _a.datum;\n  }\n  get previousDatum() {\n    return this._previousDatum;\n  }\n  set datum(datum) {\n    if (this._datum !== datum) this._previousDatum = this._datum;\n    this._datum = datum;\n  }\n  _setLayerManager(value) {\n    this._layerManager = value;\n    this._debug = value == null ? void 0 : value.debug;\n    for (const child of this._children) {\n      child._setLayerManager(value);\n    }\n    for (const child of this._virtualChildren) {\n      child._setLayerManager(value);\n    }\n  }\n  get layerManager() {\n    return this._layerManager;\n  }\n  get parent() {\n    return this._parent;\n  }\n  get children() {\n    if (this._virtualChildren.length === 0) return this._children;\n    const result = [...this._children];\n    for (const next of this._virtualChildren) {\n      result.push(...next.children);\n    }\n    return result;\n  }\n  get virtualChildren() {\n    return this._virtualChildren;\n  }\n  hasVirtualChildren() {\n    return this._virtualChildren.length > 0;\n  }\n  // new Set<Node>()\n  setProperties(styles, pickKeys) {\n    const keys = pickKeys != null ? pickKeys : Object.keys(styles);\n    for (const key of keys) {\n      this[key] = styles[key];\n    }\n    return this;\n  }\n  /**\n   * Appends one or more new node instances to this parent.\n   * If one needs to:\n   * - move a child to the end of the list of children\n   * - move a child from one parent to another (including parents in other scenes)\n   * one should use the {@link insertBefore} method instead.\n   * @param nodes A node or nodes to append.\n   */\n  append(nodes) {\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n    for (const node of nodes) {\n      if (node.parent) {\n        throw new Error(`${node} already belongs to another parent: ${node.parent}.`);\n      }\n      if (node.layerManager) {\n        throw new Error(`${node} already belongs to a scene: ${node.layerManager}.`);\n      }\n      if (this.childSet[node.id]) {\n        throw new Error(`Duplicate ${node.constructor.name} node: ${node}`);\n      }\n      if (node.isVirtual) {\n        this._virtualChildren.push(node);\n      } else {\n        this._children.push(node);\n      }\n      this.childSet[node.id] = true;\n      node._parent = this;\n      node._setLayerManager(this.layerManager);\n    }\n    this.dirtyZIndex = true;\n    this.markDirty(this, 3 /* MAJOR */);\n  }\n  appendChild(node) {\n    this.append(node);\n    return node;\n  }\n  removeChild(node) {\n    const error = () => {\n      throw new Error(`The node to be removed is not a child of this node.`);\n    };\n    if (node.parent !== this) {\n      error();\n    }\n    if (node.isVirtual) {\n      const i = this._virtualChildren.indexOf(node);\n      if (i < 0) error();\n      this._virtualChildren.splice(i, 1);\n    } else {\n      const i = this._children.indexOf(node);\n      if (i < 0) error();\n      this._children.splice(i, 1);\n    }\n    delete this.childSet[node.id];\n    node._parent = void 0;\n    node._setLayerManager();\n    this.dirtyZIndex = true;\n    this.markDirty(node, 3 /* MAJOR */);\n    return node;\n  }\n  calculateCumulativeMatrix() {\n    this.computeTransformMatrix();\n    const matrix = Matrix.flyweight(this.matrix);\n    let parent = this.parent;\n    while (parent) {\n      parent.computeTransformMatrix();\n      matrix.preMultiplySelf(parent.matrix);\n      parent = parent.parent;\n    }\n    return matrix;\n  }\n  transformPoint(x, y) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.invertSelf().transformPoint(x, y);\n  }\n  inverseTransformPoint(x, y) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.transformPoint(x, y);\n  }\n  transformBBox(bbox) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.invertSelf().transformBBox(bbox);\n  }\n  inverseTransformBBox(bbox) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.transformBBox(bbox);\n  }\n  markDirtyTransform() {\n    this.dirtyTransform = true;\n    this.markDirty(this, 3 /* MAJOR */);\n  }\n  containsPoint(_x, _y) {\n    return false;\n  }\n  /**\n   * Hit testing method.\n   * Recursively checks if the given point is inside this node or any of its children.\n   * Returns the first matching node or `undefined`.\n   * Nodes that render later (show on top) are hit tested first.\n   */\n  pickNode(x, y) {\n    var _a;\n    if (!this.visible || this.pointerEvents === 1 /* None */ || !this.containsPoint(x, y)) {\n      return;\n    }\n    const children = this.children;\n    if (children.length > 1e3) {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const containsPoint = (_a = child.computeTransformedBBox()) == null ? void 0 : _a.containsPoint(x, y);\n        const hit = containsPoint ? child.pickNode(x, y) : void 0;\n        if (hit) {\n          return hit;\n        }\n      }\n    } else if (children.length) {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const hit = children[i].pickNode(x, y);\n        if (hit) {\n          return hit;\n        }\n      }\n    } else if (!this.isContainerNode) {\n      return this;\n    }\n  }\n  findNodes(predicate) {\n    const result = predicate(this) ? [this] : [];\n    for (const child of this.children) {\n      const childResult = child.findNodes(predicate);\n      if (childResult) {\n        result.push(...childResult);\n      }\n    }\n    return result;\n  }\n  computeBBox() {\n    return;\n  }\n  computeTransformedBBox() {\n    const bbox = this.computeBBox();\n    if (!bbox) {\n      return void 0;\n    }\n    this.computeTransformMatrix();\n    const matrix = Matrix.flyweight(this.matrix);\n    let parent = this.parent;\n    while (parent) {\n      parent.computeTransformMatrix();\n      matrix.preMultiplySelf(parent.matrix);\n      parent = parent.parent;\n    }\n    matrix.transformBBox(bbox, bbox);\n    return bbox;\n  }\n  computeTransformMatrix() {\n    if (!this.dirtyTransform) {\n      return;\n    }\n    const {\n      matrix,\n      scalingX,\n      scalingY,\n      rotation,\n      translationX,\n      translationY,\n      scalingCenterX,\n      scalingCenterY,\n      rotationCenterX,\n      rotationCenterY\n    } = this;\n    Matrix.updateTransformMatrix(matrix, scalingX, scalingY, rotation, translationX, translationY, {\n      scalingCenterX,\n      scalingCenterY,\n      rotationCenterX,\n      rotationCenterY\n    });\n    matrix.inverseTo(this.inverseMatrix);\n    this.dirtyTransform = false;\n  }\n  render(renderCtx) {\n    const {\n      stats\n    } = renderCtx;\n    this._dirty = 0 /* NONE */;\n    if (stats) stats.nodesRendered++;\n  }\n  clearBBox(ctx) {\n    const bbox = this.computeBBox();\n    if (bbox == null) {\n      return;\n    }\n    const {\n      x,\n      y,\n      width,\n      height\n    } = bbox;\n    const topLeft = this.transformPoint(x, y);\n    const bottomRight = this.transformPoint(x + width, y + height);\n    ctx.clearRect(topLeft.x, topLeft.y, bottomRight.x - topLeft.x, bottomRight.y - topLeft.y);\n  }\n  markDirty(_source, type = 1 /* TRIVIAL */, parentType = type) {\n    if (this._dirty > type) {\n      return;\n    }\n    if (this._dirty === type && type === parentType) {\n      return;\n    }\n    this._dirty = type;\n    if (this.parent) {\n      this.parent.markDirty(this, parentType);\n    } else if (this.layerManager) {\n      this.layerManager.markDirty();\n    }\n  }\n  get dirty() {\n    return this._dirty;\n  }\n  markClean(opts) {\n    const {\n      force = false,\n      recursive = true\n    } = opts != null ? opts : {};\n    if (this._dirty === 0 /* NONE */ && !force) {\n      return;\n    }\n    this._dirty = 0 /* NONE */;\n    if (recursive !== false) {\n      for (const child of this._virtualChildren) {\n        child.markClean({\n          force\n        });\n      }\n    }\n    if (recursive === true) {\n      for (const child of this._children) {\n        child.markClean({\n          force\n        });\n      }\n    }\n  }\n  visibilityChanged() {}\n  get nodeCount() {\n    let count2 = 1;\n    let dirtyCount = this._dirty >= 0 /* NONE */ || this.dirtyTransform ? 1 : 0;\n    let visibleCount = this.visible ? 1 : 0;\n    const countChild = child => {\n      const {\n        count: childCount,\n        visibleCount: childVisibleCount,\n        dirtyCount: childDirtyCount\n      } = child.nodeCount;\n      count2 += childCount;\n      visibleCount += childVisibleCount;\n      dirtyCount += childDirtyCount;\n    };\n    for (const child of this._children) {\n      countChild(child);\n    }\n    for (const child of this._virtualChildren) {\n      countChild(child);\n    }\n    return {\n      count: count2,\n      visibleCount,\n      dirtyCount\n    };\n  }\n  zIndexChanged() {}\n};\n_Node._nextSerialNumber = 0;\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"scalingX\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"scalingY\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"scalingCenterX\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"scalingCenterY\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"rotationCenterX\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"rotationCenterY\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"rotation\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"translationX\", 2);\n__decorateClass([SceneChangeDetection({\n  type: \"transform\"\n})], _Node.prototype, \"translationY\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */,\n  changeCb: o => o.visibilityChanged()\n})], _Node.prototype, \"visible\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 1 /* TRIVIAL */,\n  changeCb: zIndexChangedCallback\n})], _Node.prototype, \"zIndex\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 1 /* TRIVIAL */,\n  changeCb: zIndexChangedCallback\n})], _Node.prototype, \"zIndexSubOrder\", 2);\nvar Node = _Node;\n\n// packages/ag-charts-community/src/util/userAgent.ts\nfunction hasConstrainedCanvasMemory() {\n  if (typeof navigator === \"undefined\") return false;\n  const iPhoneOSMatch = navigator.userAgent.match(/\\(iPhone; CPU iPhone OS (\\d+_\\d+_\\d+) like Mac OS X\\)/);\n  if (iPhoneOSMatch == null) return false;\n  const versionString = iPhoneOSMatch[1].split(\"_\");\n  const major = Number(versionString[0]);\n  if (major > 16) {\n    return false;\n  } else if (major === 16) {\n    const minor = Number(versionString[1]);\n    return minor < 6;\n  }\n  return true;\n}\n\n// packages/ag-charts-community/src/scene/canvas/hdpiCanvas.ts\nvar _HdpiCanvas = class _HdpiCanvas {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  constructor(opts) {\n    this._enabled = true;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    const {\n      document: document2,\n      window: window2,\n      width = 600,\n      height = 300,\n      domLayer = false,\n      zIndex = 0,\n      name = void 0,\n      overrideDevicePixelRatio = void 0\n    } = opts;\n    this.document = document2;\n    this.window = window2;\n    _HdpiCanvas.document = document2;\n    this.element = document2.createElement(\"canvas\");\n    this.element.width = width;\n    this.element.height = height;\n    this.realContext = this.element.getContext(\"2d\");\n    this.imageSource = this.realContext.canvas;\n    const {\n      style\n    } = this.element;\n    style.userSelect = \"none\";\n    style.display = \"block\";\n    if (domLayer) {\n      style.position = \"absolute\";\n      style.zIndex = String(zIndex);\n      style.top = \"0\";\n      style.left = \"0\";\n      style.pointerEvents = \"none\";\n      style.opacity = `1`;\n      if (name) {\n        this.element.id = name;\n      }\n    }\n    this.context = this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  set container(value) {\n    if (this._container !== value) {\n      this.remove();\n      if (value) {\n        value.appendChild(this.element);\n      }\n      this._container = value;\n    }\n  }\n  get container() {\n    return this._container;\n  }\n  set enabled(value) {\n    this.element.style.display = value ? \"block\" : \"none\";\n    this._enabled = !!value;\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  remove() {\n    const {\n      parentNode\n    } = this.element;\n    if (parentNode != null) {\n      parentNode.removeChild(this.element);\n    }\n  }\n  destroy() {\n    this.element.remove();\n    this.element.width = 0;\n    this.element.height = 0;\n    this.context.clearRect(0, 0, 0, 0);\n    Object.freeze(this);\n  }\n  snapshot() {}\n  clear() {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  }\n  toImage() {\n    const img = this.document.createElement(\"img\");\n    img.src = this.getDataURL();\n    return img;\n  }\n  getDataURL(type) {\n    return this.element.toDataURL(type);\n  }\n  /**\n   * @param fileName The name of the downloaded file.\n   * @param fileFormat The file format, the default is `image/png`\n   */\n  download(fileName, fileFormat = \"image/png\") {\n    fileName = (fileName != null ? fileName : \"\").trim() || \"image\";\n    const dataUrl = this.getDataURL(fileFormat);\n    const document2 = this.document;\n    const a = document2.createElement(\"a\");\n    a.href = dataUrl;\n    a.download = fileName;\n    a.style.display = \"none\";\n    document2.body.appendChild(a);\n    a.click();\n    document2.body.removeChild(a);\n  }\n  get pixelRatio() {\n    return this._pixelRatio;\n  }\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  setPixelRatio(ratio) {\n    let pixelRatio = ratio != null ? ratio : this.window.devicePixelRatio;\n    if (hasConstrainedCanvasMemory()) {\n      pixelRatio = 1;\n    }\n    this._pixelRatio = pixelRatio;\n    return _HdpiCanvas.overrideScale(this.realContext, pixelRatio);\n  }\n  set pixelated(value) {\n    this.element.style.imageRendering = value ? \"pixelated\" : \"auto\";\n  }\n  get pixelated() {\n    return this.element.style.imageRendering === \"pixelated\";\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  resize(width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    const {\n      element: element2,\n      context,\n      pixelRatio\n    } = this;\n    element2.width = Math.round(width * pixelRatio);\n    element2.height = Math.round(height * pixelRatio);\n    element2.style.width = width + \"px\";\n    element2.style.height = height + \"px\";\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  }\n  static get textMeasuringContext() {\n    if (this._textMeasuringContext) {\n      return this._textMeasuringContext;\n    }\n    const canvas = this.document.createElement(\"canvas\");\n    this._textMeasuringContext = canvas.getContext(\"2d\");\n    return this._textMeasuringContext;\n  }\n  static get svgText() {\n    if (this._svgText) {\n      return this._svgText;\n    }\n    const xmlns = \"http://www.w3.org/2000/svg\";\n    const svg = document.createElementNS(xmlns, \"svg\");\n    svg.setAttribute(\"width\", \"100\");\n    svg.setAttribute(\"height\", \"100\");\n    if (svg.classList) {\n      svg.classList.add(\"text-measuring-svg\");\n    } else {\n      svg.setAttribute(\"class\", \"text-measuring-svg\");\n    }\n    svg.style.position = \"absolute\";\n    svg.style.top = \"-1000px\";\n    svg.style.visibility = \"hidden\";\n    const svgText = document.createElementNS(xmlns, \"text\");\n    svgText.setAttribute(\"x\", \"0\");\n    svgText.setAttribute(\"y\", \"30\");\n    svgText.setAttribute(\"text\", \"black\");\n    svg.appendChild(svgText);\n    document.body.appendChild(svg);\n    this._svgText = svgText;\n    return svgText;\n  }\n  static get has() {\n    if (this._has) {\n      return this._has;\n    }\n    const isChrome = typeof navigator === \"undefined\" || navigator.userAgent.indexOf(\"Chrome\") > -1;\n    const isFirefox = typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"Firefox\") > -1;\n    const isSafari = !isChrome && typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"Safari\") > -1;\n    this._has = Object.freeze({\n      textMetrics: this.textMeasuringContext.measureText(\"test\").actualBoundingBoxDescent !== void 0 &&\n      // Firefox implemented advanced TextMetrics object in v74:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n      // but it's buggy, so we'll keep using the SVG for text measurement in Firefox for now.\n      !isFirefox && !isSafari,\n      getTransform: this.textMeasuringContext.getTransform !== void 0\n    });\n    return this._has;\n  }\n  static measureText(text, font, textBaseline, textAlign) {\n    const ctx = this.textMeasuringContext;\n    ctx.font = font;\n    ctx.textBaseline = textBaseline;\n    ctx.textAlign = textAlign;\n    return ctx.measureText(text);\n  }\n  /**\n   * Returns the width and height of the measured text.\n   * @param text The single-line text to measure.\n   * @param font The font shorthand string.\n   */\n  static getTextSize(text, font) {\n    if (this.has.textMetrics) {\n      const ctx = this.textMeasuringContext;\n      ctx.font = font;\n      const metrics = ctx.measureText(text);\n      return {\n        width: metrics.width,\n        height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n      };\n    } else {\n      return this.measureSvgText(text, font);\n    }\n  }\n  static measureSvgText(text, font) {\n    const cache = this.textSizeCache;\n    const fontCache = cache[font];\n    if (fontCache) {\n      const size2 = fontCache[text];\n      if (size2) {\n        return size2;\n      }\n    } else {\n      cache[font] = {};\n    }\n    const svgText = this.svgText;\n    svgText.style.font = font;\n    svgText.textContent = text;\n    const bbox = svgText.getBBox();\n    const size = {\n      width: bbox.width,\n      height: bbox.height\n    };\n    cache[font][text] = size;\n    return size;\n  }\n  static overrideScale(ctx, scale2) {\n    let depth = 0;\n    const overrides = {\n      save() {\n        this.$save();\n        depth++;\n      },\n      restore() {\n        if (depth > 0) {\n          this.$restore();\n          depth--;\n        } else {\n          throw new Error(\"AG Charts - Unable to restore() past depth 0\");\n        }\n      },\n      setTransform(a, b, c, d, e, f) {\n        if (typeof a === \"object\") {\n          this.$setTransform(a);\n        } else {\n          this.$setTransform(a * scale2, b * scale2, c * scale2, d * scale2, e * scale2, f * scale2);\n        }\n      },\n      resetTransform() {\n        this.$setTransform(scale2, 0, 0, scale2, 0, 0);\n      },\n      verifyDepthZero() {\n        if (depth !== 0) {\n          throw new Error(\"AG Charts - Save/restore depth is non-zero: \" + depth);\n        }\n      }\n    };\n    for (const name in overrides) {\n      if (Object.hasOwn(overrides, name)) {\n        if (!ctx[\"$\" + name]) {\n          ctx[\"$\" + name] = ctx[name];\n        }\n        ctx[name] = overrides[name];\n      }\n    }\n    return ctx;\n  }\n};\n_HdpiCanvas.document = globalThis.document;\n_HdpiCanvas.textSizeCache = {};\nvar HdpiCanvas = _HdpiCanvas;\n\n// packages/ag-charts-community/src/scene/gradient/gradient.ts\nvar Gradient = class {\n  constructor() {\n    this.stops = [];\n  }\n};\n\n// packages/ag-charts-community/src/scene/gradient/linearGradient.ts\nvar LinearGradient = class extends Gradient {\n  constructor() {\n    super(...arguments);\n    this.angle = 0;\n  }\n  createGradient(ctx, bbox) {\n    const angleOffset = 90;\n    const {\n      stops,\n      angle\n    } = this;\n    const radians = normalizeAngle360(toRadians(angle + angleOffset));\n    const cos = Math.cos(radians);\n    const sin = Math.sin(radians);\n    const w = bbox.width;\n    const h = bbox.height;\n    const cx = bbox.x + w * 0.5;\n    const cy = bbox.y + h * 0.5;\n    if (w > 0 && h > 0) {\n      const diagonal = Math.sqrt(h * h + w * w) / 2;\n      const diagonalAngle = Math.atan2(h, w);\n      let quarteredAngle;\n      if (radians < Math.PI / 2) {\n        quarteredAngle = radians;\n      } else if (radians < Math.PI) {\n        quarteredAngle = Math.PI - radians;\n      } else if (radians < 3 * Math.PI / 2) {\n        quarteredAngle = radians - Math.PI;\n      } else {\n        quarteredAngle = 2 * Math.PI - radians;\n      }\n      const l = diagonal * Math.abs(Math.cos(quarteredAngle - diagonalAngle));\n      const gradient = ctx.createLinearGradient(cx + cos * l, cy + sin * l, cx - cos * l, cy - sin * l);\n      stops.forEach(stop => {\n        gradient.addColorStop(stop.offset, stop.color);\n      });\n      return gradient;\n    }\n    return \"black\";\n  }\n};\n\n// packages/ag-charts-community/src/scene/shape/shape.ts\nvar LINEAR_GRADIENT_REGEXP = /^linear-gradient\\((.*?)deg,\\s*(.*?)\\s*\\)$/i;\nvar _Shape = class _Shape extends Node {\n  constructor() {\n    super(...arguments);\n    this.fillOpacity = 1;\n    this.strokeOpacity = 1;\n    this.fill = _Shape.defaultStyles.fill;\n    this.stroke = _Shape.defaultStyles.stroke;\n    this.strokeWidth = _Shape.defaultStyles.strokeWidth;\n    this.lineDash = _Shape.defaultStyles.lineDash;\n    this.lineDashOffset = _Shape.defaultStyles.lineDashOffset;\n    this.lineCap = _Shape.defaultStyles.lineCap;\n    this.lineJoin = _Shape.defaultStyles.lineJoin;\n    this.opacity = _Shape.defaultStyles.opacity;\n    this.fillShadow = _Shape.defaultStyles.fillShadow;\n  }\n  /**\n   * Restores the default styles introduced by this subclass.\n   */\n  restoreOwnStyles() {\n    const styles = this.constructor.defaultStyles;\n    const keys = Object.getOwnPropertyNames(styles);\n    for (let i = 0, n = keys.length; i < n; i++) {\n      const key = keys[i];\n      this[key] = styles[key];\n    }\n  }\n  updateGradient() {\n    const {\n      fill\n    } = this;\n    let linearGradientMatch;\n    if ((fill == null ? void 0 : fill.startsWith(\"linear-gradient\")) && (linearGradientMatch = LINEAR_GRADIENT_REGEXP.exec(fill))) {\n      const angle = parseFloat(linearGradientMatch[1]);\n      const colors = [];\n      const colorsPart = linearGradientMatch[2];\n      const colorRegex = /(#[0-9a-f]+)|(rgba?\\(.+?\\))|([a-z]+)/gi;\n      let c;\n      while (c = colorRegex.exec(colorsPart)) {\n        colors.push(c[0]);\n      }\n      this.gradient = new LinearGradient();\n      this.gradient.angle = angle;\n      this.gradient.stops = colors.map((color, index) => {\n        const offset4 = index / (colors.length - 1);\n        return {\n          offset: offset4,\n          color\n        };\n      });\n    } else {\n      this.gradient = void 0;\n    }\n  }\n  /**\n   * Returns a device-pixel aligned coordinate (or length if length is supplied).\n   *\n   * NOTE: Not suitable for strokes, since the stroke needs to be offset to the middle\n   * of a device pixel.\n   */\n  align(start, length) {\n    var _a, _b, _c;\n    const pixelRatio = (_c = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas) == null ? void 0 : _b.pixelRatio) != null ? _c : 1;\n    const alignedStart = Math.round(start * pixelRatio) / pixelRatio;\n    if (length == void 0) {\n      return alignedStart;\n    }\n    if (length === 0) {\n      return 0;\n    }\n    if (length < 1) {\n      return Math.ceil(length * pixelRatio) / pixelRatio;\n    }\n    return Math.round((length + start) * pixelRatio) / pixelRatio - alignedStart;\n  }\n  fillStroke(ctx) {\n    this.renderFill(ctx);\n    this.renderStroke(ctx);\n  }\n  renderFill(ctx) {\n    if (this.fill) {\n      const {\n        globalAlpha\n      } = ctx;\n      this.applyFill(ctx);\n      this.applyFillAlpha(ctx);\n      this.applyShadow(ctx);\n      ctx.fill();\n      ctx.globalAlpha = globalAlpha;\n    }\n    ctx.shadowColor = \"rgba(0, 0, 0, 0)\";\n  }\n  applyFill(ctx) {\n    if (this.gradient) {\n      ctx.fillStyle = this.gradient.createGradient(ctx, this.computeBBox());\n    } else {\n      ctx.fillStyle = this.fill;\n    }\n  }\n  applyFillAlpha(ctx) {\n    const {\n      globalAlpha\n    } = ctx;\n    ctx.globalAlpha = globalAlpha * this.opacity * this.fillOpacity;\n  }\n  applyShadow(ctx) {\n    var _a, _b;\n    const pixelRatio = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas.pixelRatio) != null ? _b : 1;\n    const fillShadow = this.fillShadow;\n    if (fillShadow == null ? void 0 : fillShadow.enabled) {\n      ctx.shadowColor = fillShadow.color;\n      ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n      ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n      ctx.shadowBlur = fillShadow.blur * pixelRatio;\n    }\n  }\n  renderStroke(ctx) {\n    if (this.stroke && this.strokeWidth) {\n      const {\n        globalAlpha\n      } = ctx;\n      ctx.strokeStyle = this.stroke;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.strokeOpacity;\n      ctx.lineWidth = this.strokeWidth;\n      if (this.lineDash) {\n        ctx.setLineDash(this.lineDash);\n      }\n      if (this.lineDashOffset) {\n        ctx.lineDashOffset = this.lineDashOffset;\n      }\n      if (this.lineCap) {\n        ctx.lineCap = this.lineCap;\n      }\n      if (this.lineJoin) {\n        ctx.lineJoin = this.lineJoin;\n      }\n      ctx.stroke();\n      ctx.globalAlpha = globalAlpha;\n    }\n  }\n  containsPoint(x, y) {\n    return this.isPointInPath(x, y);\n  }\n};\n/**\n * Defaults for style properties. Note that properties that affect the position\n * and shape of the node are not considered style properties, for example:\n * `x`, `y`, `width`, `height`, `radius`, `rotation`, etc.\n * Can be used to reset to the original styling after some custom styling\n * has been applied (using the `restoreOwnStyles` method).\n * These static defaults are meant to be inherited by subclasses.\n */\n_Shape.defaultStyles = Object.assign({}, {\n  fill: \"black\",\n  stroke: void 0,\n  strokeWidth: 0,\n  lineDash: void 0,\n  lineDashOffset: 0,\n  lineCap: void 0,\n  lineJoin: void 0,\n  opacity: 1,\n  fillShadow: void 0\n});\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"fillOpacity\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"strokeOpacity\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */,\n  changeCb: s => s.updateGradient()\n})], _Shape.prototype, \"fill\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"stroke\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"strokeWidth\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"lineDash\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"lineDashOffset\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"lineCap\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], _Shape.prototype, \"lineJoin\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */,\n  convertor: v => Math.min(1, Math.max(0, v))\n})], _Shape.prototype, \"opacity\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */,\n  checkDirtyOnAssignment: true\n})], _Shape.prototype, \"fillShadow\", 2);\nvar Shape = _Shape;\n\n// packages/ag-charts-community/src/scene/shape/text.ts\nvar ellipsis = \"\\u2026\";\nfunction SceneFontChangeDetection(opts) {\n  const {\n    redraw = 3 /* MAJOR */,\n    changeCb\n  } = opts != null ? opts : {};\n  return SceneChangeDetection({\n    redraw,\n    type: \"font\",\n    changeCb\n  });\n}\nvar _Text = class _Text extends Shape {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.lines = [];\n    this.text = void 0;\n    this._dirtyFont = true;\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.textAlign = _Text.defaultStyles.textAlign;\n    this.textBaseline = _Text.defaultStyles.textBaseline;\n    this.lineHeight = void 0;\n  }\n  _setLines() {\n    this.lines = splitText(this.text);\n  }\n  get font() {\n    if (this._font == null || this._dirtyFont) {\n      this._dirtyFont = false;\n      this._font = getFont(this);\n    }\n    return this._font;\n  }\n  computeBBox() {\n    return HdpiCanvas.has.textMetrics ? getPreciseBBox(this.lines, this.x, this.y, this) : getApproximateBBox(this.lines, this.x, this.y, this);\n  }\n  getLineHeight(line) {\n    var _a, _b;\n    if (this.lineHeight) return this.lineHeight;\n    if (HdpiCanvas.has.textMetrics) {\n      const metrics = HdpiCanvas.measureText(line, this.font, this.textBaseline, this.textAlign);\n      return ((_a = metrics.fontBoundingBoxAscent) != null ? _a : metrics.emHeightAscent) + ((_b = metrics.fontBoundingBoxDescent) != null ? _b : metrics.emHeightDescent);\n    }\n    return HdpiCanvas.getTextSize(line, this.font).height;\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox ? bbox.containsPoint(point.x, point.y) : false;\n  }\n  render(renderCtx) {\n    const {\n      ctx,\n      forceRender,\n      stats\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    if (!this.lines.length || !this.layerManager) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const {\n      fill,\n      stroke,\n      strokeWidth\n    } = this;\n    ctx.font = this.font;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n    const pixelRatio = this.layerManager.canvas.pixelRatio || 1;\n    const {\n      globalAlpha\n    } = ctx;\n    if (fill) {\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.fillOpacity;\n      const {\n        fillShadow\n      } = this;\n      if (fillShadow == null ? void 0 : fillShadow.enabled) {\n        ctx.shadowColor = fillShadow.color;\n        ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = fillShadow.blur * pixelRatio;\n      }\n      this.renderLines((line, x, y) => ctx.fillText(line, x, y));\n    }\n    if (stroke && strokeWidth) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.strokeOpacity;\n      const {\n        lineDash,\n        lineDashOffset,\n        lineCap,\n        lineJoin\n      } = this;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      this.renderLines((line, x, y) => ctx.strokeText(line, x, y));\n    }\n    super.render(renderCtx);\n  }\n  renderLines(renderCallback) {\n    const {\n      lines,\n      x,\n      y\n    } = this;\n    const lineHeights = this.lines.map(line => this.getLineHeight(line));\n    const totalHeight = lineHeights.reduce((a, b) => a + b, 0);\n    let offsetY = -(totalHeight - lineHeights[0]) * getVerticalOffset(this.textBaseline);\n    for (let i = 0; i < lines.length; i++) {\n      renderCallback(lines[i], x, y + offsetY);\n      offsetY += lineHeights[i];\n    }\n  }\n  static wrapLines(text, maxWidth, maxHeight, textProps, wrapping, overflow) {\n    const canOverflow = overflow !== \"hide\";\n    const font = getFont(textProps);\n    const measurer = createTextMeasurer(font);\n    const lines = text.split(/\\r?\\n/g);\n    if (lines.length === 0) {\n      return {\n        lines: void 0,\n        truncated: false\n      };\n    }\n    if (wrapping === \"never\") {\n      const {\n        text: text2,\n        truncated: truncated2\n      } = _Text.truncateLine(lines[0], maxWidth, measurer, canOverflow ? \"auto\" : \"never\");\n      return {\n        lines: text2 != null ? [text2] : void 0,\n        truncated: truncated2\n      };\n    }\n    const wrappedLines = [];\n    let cumulativeHeight = 0;\n    let truncated = false;\n    for (const line of lines) {\n      const wrappedLine = _Text.wrapLine(line, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow);\n      if (wrappedLine == null) {\n        return {\n          lines: void 0,\n          truncated: false\n        };\n      }\n      wrappedLines.push(...wrappedLine.result);\n      cumulativeHeight = wrappedLine.cumulativeHeight;\n      if (wrappedLine.truncated) {\n        truncated = true;\n        break;\n      }\n    }\n    return {\n      lines: wrappedLines,\n      truncated\n    };\n  }\n  static wrap(text, maxWidth, maxHeight, textProps, wrapping, overflow = \"ellipsis\") {\n    const {\n      lines,\n      truncated\n    } = _Text.wrapLines(text, maxWidth, maxHeight, textProps, wrapping, overflow);\n    return {\n      text: lines != null ? lines.join(\"\\n\").trim() : \"\",\n      truncated\n    };\n  }\n  static wrapLine(text, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow) {\n    text = text.trim();\n    if (!text) {\n      return {\n        result: [],\n        truncated: false,\n        cumulativeHeight\n      };\n    }\n    const initialSize = measurer.size(text);\n    if (initialSize.width <= maxWidth) {\n      return {\n        result: [text],\n        truncated: false,\n        cumulativeHeight: cumulativeHeight + initialSize.height\n      };\n    }\n    if (initialSize.height > maxHeight || measurer.width(\"W\") > maxWidth) {\n      return canOverflow ? {\n        result: [],\n        truncated: true,\n        cumulativeHeight\n      } : void 0;\n    }\n    const words = text.split(/\\s+/g);\n    const wrapResult = _Text.wrapLineSequentially(words, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow);\n    if (wrapResult == null) {\n      return void 0;\n    }\n    cumulativeHeight = wrapResult.cumulativeHeight;\n    let {\n      lines\n    } = wrapResult;\n    if (!(wrapResult.wordsBrokenOrTruncated || wrapResult.linesTruncated)) {\n      const linesCount = wrapResult.lines.length;\n      const balanced = _Text.wrapLineBalanced(words, maxWidth, measurer, linesCount);\n      if (balanced.length === lines.length) {\n        lines = balanced;\n      }\n    }\n    const wrappedText = lines.map(ln => ln.join(\" \"));\n    return {\n      result: wrappedText,\n      truncated: wrapResult.linesTruncated,\n      cumulativeHeight\n    };\n  }\n  static breakWord(word, firstLineWidth, maxWidth, hyphens, measurer) {\n    const isPunctuationAt = index => _Text.punctuationMarks.includes(word[index]);\n    const h = hyphens ? measurer.width(\"-\") : 0;\n    const breaks = [];\n    let partWidth = 0;\n    let p = 0;\n    for (let i = 0; i < word.length; i++) {\n      const c = word[i];\n      const w = measurer.width(c);\n      const limit = p === 0 ? firstLineWidth : maxWidth;\n      if (partWidth + w + h > limit) {\n        breaks.push(i);\n        partWidth = 0;\n        p++;\n      }\n      partWidth += w;\n    }\n    const parts = [];\n    let start = 0;\n    for (const index of breaks) {\n      let part = word.substring(start, index);\n      if (hyphens && part.length > 0 && !isPunctuationAt(index - 1) && !isPunctuationAt(index)) {\n        part += \"-\";\n      }\n      parts.push(part);\n      start = index;\n    }\n    parts.push(word.substring(start));\n    return parts;\n  }\n  static truncateLine(text, maxWidth, measurer, ellipsisMode) {\n    text = text.trimEnd();\n    const lineWidth = measurer.width(text);\n    if (lineWidth > maxWidth && ellipsisMode === \"never\") {\n      return {\n        text: void 0,\n        truncated: false\n      };\n    } else if (lineWidth <= maxWidth && ellipsisMode !== \"force\") {\n      return {\n        text,\n        truncated: false\n      };\n    }\n    const ellipsisWidth = measurer.width(ellipsis);\n    let trunc = text;\n    let truncWidth = lineWidth;\n    while (trunc.length > 0 && truncWidth + ellipsisWidth > maxWidth) {\n      trunc = trunc.slice(0, -1).trimEnd();\n      truncWidth = measurer.width(trunc);\n    }\n    if (truncWidth + ellipsisWidth <= maxWidth) {\n      return {\n        text: `${trunc}${ellipsis}`,\n        truncated: true\n      };\n    } else {\n      return {\n        text: void 0,\n        truncated: false\n      };\n    }\n  }\n  static wrapLineSequentially(words, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow) {\n    const {\n      fontSize = 0,\n      lineHeight = fontSize * _Text.defaultLineHeightRatio\n    } = textProps;\n    const breakWord = wrapping === \"always\" || wrapping === \"hyphenate\";\n    const hyphenate = wrapping === \"hyphenate\";\n    const spaceWidth = measurer.width(\" \");\n    let wordsBrokenOrTruncated = false;\n    let linesTruncated = false;\n    const lines = [];\n    let currentLine = [];\n    let lineWidth = 0;\n    const getReturnValue = () => ({\n      lines,\n      linesTruncated,\n      wordsBrokenOrTruncated,\n      cumulativeHeight\n    });\n    const truncateLastLine = () => {\n      if (!canOverflow) {\n        return void 0;\n      }\n      const lastLine = currentLine.join(\" \");\n      const {\n        text\n      } = _Text.truncateLine(lastLine, maxWidth, measurer, \"force\");\n      if (text == null) {\n        return void 0;\n      }\n      currentLine.splice(0, currentLine.length, text);\n      linesTruncated = true;\n      return getReturnValue();\n    };\n    const addNewLine = () => {\n      const expectedHeight = cumulativeHeight + lineHeight;\n      if (expectedHeight >= maxHeight) {\n        return false;\n      }\n      currentLine = [];\n      lineWidth = 0;\n      cumulativeHeight = expectedHeight;\n      lines.push(currentLine);\n      return true;\n    };\n    if (!addNewLine()) {\n      return truncateLastLine();\n    }\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordWidth = measurer.width(word);\n      const expectedSpaceWidth = currentLine.length === 0 ? 0 : spaceWidth;\n      const expectedLineWidth = lineWidth + expectedSpaceWidth + wordWidth;\n      if (expectedLineWidth <= maxWidth) {\n        currentLine.push(word);\n        lineWidth = expectedLineWidth;\n        continue;\n      }\n      if (wordWidth <= maxWidth) {\n        if (!addNewLine()) {\n          return truncateLastLine();\n        }\n        currentLine.push(word);\n        lineWidth = wordWidth;\n        continue;\n      }\n      wordsBrokenOrTruncated = true;\n      if (breakWord) {\n        const availWidth = maxWidth - lineWidth - expectedSpaceWidth;\n        const parts = _Text.breakWord(word, availWidth, maxWidth, hyphenate, measurer);\n        for (let p = 0; p < parts.length; p++) {\n          const part = parts[p];\n          part && currentLine.push(part);\n          if (p === parts.length - 1) {\n            lineWidth = measurer.width(part);\n          } else if (!addNewLine()) {\n            return truncateLastLine();\n          }\n        }\n      } else if (canOverflow) {\n        if (!addNewLine()) {\n          return truncateLastLine();\n        }\n        const {\n          text\n        } = _Text.truncateLine(word, maxWidth, measurer, \"force\");\n        if (text == null) {\n          return void 0;\n        }\n        currentLine.push(text);\n        if (i < words.length - 1) {\n          linesTruncated = true;\n        }\n        break;\n      } else {\n        return void 0;\n      }\n    }\n    return getReturnValue();\n  }\n  static wrapLineBalanced(words, maxWidth, measurer, linesCount) {\n    const totalWordsWidth = words.reduce((sum2, w) => sum2 + measurer.width(w), 0);\n    const spaceWidth = measurer.width(\" \");\n    const totalSpaceWidth = spaceWidth * (words.length - linesCount - 2);\n    const averageLineWidth = (totalWordsWidth + totalSpaceWidth) / linesCount;\n    const lines = [];\n    let currentLine = [];\n    let lineWidth = measurer.width(words[0]);\n    let newLine = true;\n    for (const word of words) {\n      const width = measurer.width(word);\n      if (newLine) {\n        currentLine = [];\n        currentLine.push(word);\n        lineWidth = width;\n        newLine = false;\n        lines.push(currentLine);\n        continue;\n      }\n      const expectedLineWidth = lineWidth + spaceWidth + width;\n      if (expectedLineWidth <= averageLineWidth) {\n        currentLine.push(word);\n        lineWidth = expectedLineWidth;\n      } else if (expectedLineWidth <= maxWidth) {\n        currentLine.push(word);\n        newLine = true;\n      } else {\n        currentLine = [word];\n        lineWidth = width;\n        lines.push(currentLine);\n      }\n    }\n    return lines;\n  }\n  setFont(props) {\n    this.fontFamily = props.fontFamily;\n    this.fontSize = props.fontSize;\n    this.fontStyle = props.fontStyle;\n    this.fontWeight = props.fontWeight;\n  }\n  setAlign(props) {\n    this.textAlign = props.textAlign;\n    this.textBaseline = props.textBaseline;\n  }\n};\n_Text.className = \"Text\";\n// The default line spacing for document editors is usually 1.15\n_Text.defaultLineHeightRatio = 1.15;\n_Text.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  textAlign: \"start\",\n  fontStyle: void 0,\n  fontWeight: void 0,\n  fontSize: 10,\n  fontFamily: \"sans-serif\",\n  textBaseline: \"alphabetic\"\n});\n_Text.ellipsis = ellipsis;\n_Text.punctuationMarks = [\".\", \",\", \"-\", \":\", \";\", \"!\", \"?\", `'`, '\"', \"(\", \")\"];\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], _Text.prototype, \"x\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], _Text.prototype, \"y\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */,\n  changeCb: o => o._setLines()\n})], _Text.prototype, \"text\", 2);\n__decorateClass([SceneFontChangeDetection()], _Text.prototype, \"fontStyle\", 2);\n__decorateClass([SceneFontChangeDetection()], _Text.prototype, \"fontWeight\", 2);\n__decorateClass([SceneFontChangeDetection()], _Text.prototype, \"fontSize\", 2);\n__decorateClass([SceneFontChangeDetection()], _Text.prototype, \"fontFamily\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], _Text.prototype, \"textAlign\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], _Text.prototype, \"textBaseline\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], _Text.prototype, \"lineHeight\", 2);\nvar Text = _Text;\nfunction createTextMeasurer(font) {\n  const cache = /* @__PURE__ */new Map();\n  const getTextSize = text => HdpiCanvas.getTextSize(text, font);\n  const getLineWidth = text => {\n    if (cache.has(text)) {\n      return cache.get(text);\n    }\n    const {\n      width\n    } = getTextSize(text);\n    cache.set(text, width);\n    return width;\n  };\n  return {\n    size: getTextSize,\n    width: getLineWidth\n  };\n}\nfunction getFont(fontProps) {\n  const {\n    fontFamily,\n    fontSize,\n    fontStyle,\n    fontWeight\n  } = fontProps;\n  return [fontStyle != null ? fontStyle : \"\", fontWeight != null ? fontWeight : \"\", fontSize + \"px\", fontFamily].join(\" \").trim();\n}\nfunction measureText(lines, x, y, textProps) {\n  return HdpiCanvas.has.textMetrics ? getPreciseBBox(lines, x, y, textProps) : getApproximateBBox(lines, x, y, textProps);\n}\nfunction getPreciseBBox(lines, x, y, textProps) {\n  var _a, _b;\n  let left = 0;\n  let top = 0;\n  let width = 0;\n  let height = 0;\n  let baselineDistance = 0;\n  const font = getFont(textProps);\n  const {\n    lineHeight,\n    textBaseline = Text.defaultStyles.textBaseline,\n    textAlign = Text.defaultStyles.textAlign\n  } = textProps;\n  for (let i = 0; i < lines.length; i++) {\n    const metrics = HdpiCanvas.measureText(lines[i], font, textBaseline, textAlign);\n    left = Math.max(left, metrics.actualBoundingBoxLeft);\n    width = Math.max(width, metrics.width);\n    if (i == 0) {\n      top += metrics.actualBoundingBoxAscent;\n      height += metrics.actualBoundingBoxAscent;\n    } else {\n      baselineDistance += (_a = metrics.fontBoundingBoxAscent) != null ? _a : metrics.emHeightAscent;\n    }\n    if (i == lines.length - 1) {\n      height += metrics.actualBoundingBoxDescent;\n    } else {\n      baselineDistance += (_b = metrics.fontBoundingBoxDescent) != null ? _b : metrics.emHeightDescent;\n    }\n  }\n  if (lineHeight !== void 0) {\n    baselineDistance = (lines.length - 1) * lineHeight;\n  }\n  height += baselineDistance;\n  top += baselineDistance * getVerticalOffset(textBaseline);\n  return new BBox(x - left, y - top, width, height);\n}\nfunction getApproximateBBox(lines, x, y, textProps) {\n  let width = 0;\n  let firstLineHeight = 0;\n  let baselineDistance = 0;\n  const font = getFont(textProps);\n  const {\n    lineHeight,\n    textBaseline = Text.defaultStyles.textBaseline,\n    textAlign = Text.defaultStyles.textAlign\n  } = textProps;\n  if (lines.length > 0) {\n    const lineSize = HdpiCanvas.getTextSize(lines[0], font);\n    width = lineSize.width;\n    firstLineHeight = lineSize.height;\n  }\n  for (let i = 1; i < lines.length; i++) {\n    const lineSize = HdpiCanvas.getTextSize(lines[i], font);\n    width = Math.max(width, lineSize.width);\n    baselineDistance += lineHeight != null ? lineHeight : lineSize.height;\n  }\n  switch (textAlign) {\n    case \"end\":\n    case \"right\":\n      x -= width;\n      break;\n    case \"center\":\n      x -= width / 2;\n  }\n  switch (textBaseline) {\n    case \"alphabetic\":\n      y -= firstLineHeight * 0.7 + baselineDistance * 0.5;\n      break;\n    case \"middle\":\n      y -= firstLineHeight * 0.45 + baselineDistance * 0.5;\n      break;\n    case \"ideographic\":\n      y -= firstLineHeight + baselineDistance;\n      break;\n    case \"hanging\":\n      y -= firstLineHeight * 0.2 + baselineDistance * 0.5;\n      break;\n    case \"bottom\":\n      y -= firstLineHeight + baselineDistance;\n      break;\n  }\n  return new BBox(x, y, width, firstLineHeight + baselineDistance);\n}\nfunction getVerticalOffset(textBaseline) {\n  switch (textBaseline) {\n    case \"top\":\n    case \"hanging\":\n      return 0;\n    case \"bottom\":\n    case \"alphabetic\":\n    case \"ideographic\":\n      return 1;\n    case \"middle\":\n      return 0.5;\n  }\n}\nfunction splitText(text) {\n  return typeof text === \"string\" ? text.split(/\\r?\\n/g) : [];\n}\n\n// packages/ag-charts-community/src/util/proxy.ts\nfunction ProxyProperty(...proxyProperties) {\n  const property = proxyProperties[proxyProperties.length - 1];\n  if (proxyProperties.length === 1) {\n    return addTransformToInstanceProperty((target, _, value) => {\n      target[property] = value;\n      return value;\n    }, (target, _) => {\n      return target[property];\n    });\n  }\n  const getTarget = target => {\n    let value = target;\n    for (let i = 0; i < proxyProperties.length - 1; i += 1) {\n      value = value[proxyProperties[i]];\n    }\n    return value;\n  };\n  return addTransformToInstanceProperty((target, _, value) => {\n    getTarget(target)[property] = value;\n    return value;\n  }, (target, _) => {\n    return getTarget(target)[property];\n  });\n}\nfunction ProxyOnWrite(proxyProperty) {\n  return addTransformToInstanceProperty((target, _, value) => {\n    target[proxyProperty] = value;\n    return value;\n  });\n}\nfunction ProxyPropertyOnWrite(childName, childProperty) {\n  return addTransformToInstanceProperty((target, key, value) => {\n    target[childName][childProperty != null ? childProperty : key] = value;\n    return value;\n  });\n}\nfunction ActionOnSet(opts) {\n  const {\n    newValue: newValueFn,\n    oldValue: oldValueFn,\n    changeValue: changeValueFn\n  } = opts;\n  return addTransformToInstanceProperty((target, _, newValue, oldValue) => {\n    if (newValue !== oldValue) {\n      if (oldValue !== void 0) {\n        oldValueFn == null ? void 0 : oldValueFn.call(target, oldValue);\n      }\n      if (newValue !== void 0) {\n        newValueFn == null ? void 0 : newValueFn.call(target, newValue);\n      }\n      changeValueFn == null ? void 0 : changeValueFn.call(target, newValue, oldValue);\n    }\n    return newValue;\n  });\n}\n\n// packages/ag-charts-community/src/util/dom.ts\nfunction injectStyle(document2, cssStyle) {\n  const styleElement = document2.createElement(\"style\");\n  styleElement.innerHTML = cssStyle;\n  document2.head.insertBefore(styleElement, document2.head.querySelector(\"style\"));\n}\n\n// packages/ag-charts-community/src/chart/tooltip/tooltip.ts\nvar DEFAULT_TOOLTIP_CLASS = \"ag-chart-tooltip\";\nvar DEFAULT_TOOLTIP_DARK_CLASS = \"ag-chart-dark-tooltip\";\nvar defaultTooltipCss = `\n.${DEFAULT_TOOLTIP_CLASS} {\n    transition: transform 0.1s ease;\n    max-width: 100%;\n    position: fixed;\n    left: 0px;\n    top: 0px;\n    z-index: 99999;\n    font: 12px Verdana, sans-serif;\n    color: rgb(70, 70, 70);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-always {\n    overflow-wrap: break-word;\n    word-break: break-word;\n    hyphens: none;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-hyphenate {\n    overflow-wrap: break-word;\n    word-break: break-word;\n    hyphens: auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-on-space {\n    overflow-wrap: normal;\n    word-break: normal;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-never {\n    white-space: pre;\n    text-overflow: ellipsis;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-no-interaction {\n    pointer-events: none;\n    user-select: none;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-no-animation {\n    transition: none !important;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-hidden {\n    visibility: hidden;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-title {\n    overflow: hidden;\n    position: relative;\n    padding: 8px 14px;\n    border-top-left-radius: 2px;\n    border-top-right-radius: 2px;\n    color: white;\n    background-color: #888888;\n    z-index: 1;\n    text-overflow: inherit;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-title:only-child {\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-content {\n    overflow: hidden;\n    padding: 6px 14px;\n    line-height: 1.7em;\n    background: white;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    overflow: hidden;\n    text-overflow: inherit;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-arrow::before {\n    content: \"\";\n\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 5px solid #d9d9d9;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-arrow::after {\n    content: \"\";\n\n    position: absolute;\n    top: calc(100% - 1px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 5px solid white;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}.${DEFAULT_TOOLTIP_DARK_CLASS} {\n    color: white;\n    background: #15181c;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}.${DEFAULT_TOOLTIP_DARK_CLASS} .${DEFAULT_TOOLTIP_CLASS}-content {\n    border-color: rgba(255, 255, 255, 0.15);\n}\n\n.ag-chart-wrapper {\n    box-sizing: border-box;\n    overflow: hidden;\n}\n`;\nfunction toTooltipHtml(input, defaults) {\n  var _a, _b, _c;\n  if (typeof input === \"string\") {\n    return input;\n  }\n  const {\n    content = (_a = defaults == null ? void 0 : defaults.content) != null ? _a : \"\",\n    title = defaults == null ? void 0 : defaults.title,\n    color = (_b = defaults == null ? void 0 : defaults.color) != null ? _b : \"white\",\n    backgroundColor = (_c = defaults == null ? void 0 : defaults.backgroundColor) != null ? _c : \"#888\"\n  } = input;\n  const titleHtml = title ? `<div class=\"${DEFAULT_TOOLTIP_CLASS}-title\"\n        style=\"color: ${color}; background-color: ${backgroundColor}\">${title}</div>` : \"\";\n  const contentHtml = content ? `<div class=\"${DEFAULT_TOOLTIP_CLASS}-content\">${content}</div>` : \"\";\n  return `${titleHtml}${contentHtml}`;\n}\nvar TooltipPosition = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    /** The type of positioning for the tooltip. By default, the tooltip follows the pointer. */\n    this.type = \"pointer\";\n    /** The horizontal offset in pixels for the position of the tooltip. */\n    this.xOffset = 0;\n    /** The vertical offset in pixels for the position of the tooltip. */\n    this.yOffset = 0;\n  }\n};\n__decorateClass([Validate(UNION([\"pointer\", \"node\"], \"a position type\"))], TooltipPosition.prototype, \"type\", 2);\n__decorateClass([Validate(NUMBER)], TooltipPosition.prototype, \"xOffset\", 2);\n__decorateClass([Validate(NUMBER)], TooltipPosition.prototype, \"yOffset\", 2);\nvar _Tooltip = class _Tooltip {\n  constructor(canvasElement, document2, window2, container) {\n    this.enableInteraction = false;\n    this.enabled = true;\n    this.showArrow = void 0;\n    this.class = void 0;\n    this.lastClass = void 0;\n    this.delay = 0;\n    this.range = \"nearest\";\n    this.wrapping = \"hyphenate\";\n    this.lastVisibilityChange = Date.now();\n    this.position = new TooltipPosition();\n    this.showTimeout = 0;\n    this._showArrow = true;\n    this.tooltipRoot = container;\n    this.window = window2;\n    const element2 = document2.createElement(\"div\");\n    this.element = this.tooltipRoot.appendChild(element2);\n    this.element.classList.add(DEFAULT_TOOLTIP_CLASS);\n    this.canvasElement = canvasElement;\n    if (typeof IntersectionObserver !== \"undefined\") {\n      const observer = new IntersectionObserver(entries => {\n        for (const entry of entries) {\n          if (entry.target === this.canvasElement && entry.intersectionRatio === 0) {\n            this.toggle(false);\n          }\n        }\n      }, {\n        root: this.tooltipRoot\n      });\n      observer.observe(this.canvasElement);\n      this.observer = observer;\n    }\n    if (_Tooltip.tooltipDocuments.indexOf(document2) < 0) {\n      injectStyle(document2, defaultTooltipCss);\n      _Tooltip.tooltipDocuments.push(document2);\n    }\n  }\n  destroy() {\n    const {\n      parentNode\n    } = this.element;\n    if (parentNode) {\n      parentNode.removeChild(this.element);\n    }\n    if (this.observer) {\n      this.observer.unobserve(this.canvasElement);\n    }\n  }\n  isVisible() {\n    const {\n      element: element2\n    } = this;\n    return !element2.classList.contains(DEFAULT_TOOLTIP_CLASS + \"-hidden\");\n  }\n  updateClass(visible, showArrow, addCustomClass = true) {\n    const {\n      element: element2,\n      class: newClass,\n      lastClass,\n      enableInteraction,\n      lastVisibilityChange\n    } = this;\n    const wasVisible = this.isVisible();\n    const nowVisible = !!visible;\n    let timeSinceLastVisibilityChangeMs = Infinity;\n    if (wasVisible !== nowVisible) {\n      const now = Date.now();\n      timeSinceLastVisibilityChangeMs = now - lastVisibilityChange;\n      this.lastVisibilityChange = now;\n    }\n    const toggleClass = (name, include) => {\n      const className = `${DEFAULT_TOOLTIP_CLASS}-${name}`;\n      if (include) {\n        element2.classList.add(className);\n      } else {\n        element2.classList.remove(className);\n      }\n    };\n    const animatedMoveThresholdMs = 100;\n    const thrashingThresholdMs = 5;\n    const noAnimation = !wasVisible && nowVisible && timeSinceLastVisibilityChangeMs > animatedMoveThresholdMs;\n    if (timeSinceLastVisibilityChangeMs > thrashingThresholdMs) {\n      toggleClass(\"no-animation\", noAnimation);\n    }\n    toggleClass(\"no-interaction\", !enableInteraction);\n    toggleClass(\"hidden\", !visible);\n    toggleClass(\"arrow\", !!showArrow);\n    this.updateWrapping();\n    if (addCustomClass) {\n      if (newClass !== lastClass) {\n        if (lastClass) {\n          element2.classList.remove(lastClass);\n        }\n        if (newClass) {\n          element2.classList.add(newClass);\n        }\n      }\n      this.lastClass = newClass;\n    } else {\n      if (lastClass) {\n        element2.classList.remove(lastClass);\n      }\n      this.lastClass = void 0;\n    }\n  }\n  updateWrapping() {\n    const {\n      element: element2,\n      wrapping\n    } = this;\n    const wrappingOptions = {\n      always: false,\n      hyphenate: false,\n      \"on-space\": false,\n      never: false\n    };\n    wrappingOptions[wrapping] = true;\n    Object.entries(wrappingOptions).forEach(([name, force]) => {\n      element2.classList.toggle(`${DEFAULT_TOOLTIP_CLASS}-wrap-${name}`, force);\n    });\n  }\n  /**\n   * Shows tooltip at the given event's coordinates.\n   * If the `html` parameter is missing, moves the existing tooltip to the new position.\n   */\n  show(meta, html, instantly = false) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const {\n      element: element2,\n      canvasElement\n    } = this;\n    if (html !== void 0) {\n      element2.innerHTML = html;\n    } else if (!element2.innerHTML) {\n      this.toggle(false);\n      return;\n    }\n    const limit = (low, actual, high) => {\n      return Math.max(Math.min(actual, high), low);\n    };\n    const xOffset = (_b = (_a = meta.position) == null ? void 0 : _a.xOffset) != null ? _b : 0;\n    const yOffset = (_d = (_c = meta.position) == null ? void 0 : _c.yOffset) != null ? _d : 0;\n    const canvasRect = canvasElement.getBoundingClientRect();\n    const naiveLeft = canvasRect.left + meta.offsetX - element2.clientWidth / 2 + xOffset;\n    const naiveTop = canvasRect.top + meta.offsetY - element2.clientHeight - 8 + yOffset;\n    const windowBounds = this.getWindowBoundingBox();\n    const maxLeft = windowBounds.x + windowBounds.width - element2.clientWidth - 1;\n    const maxTop = windowBounds.y + windowBounds.height - element2.clientHeight;\n    const left = limit(windowBounds.x, naiveLeft, maxLeft);\n    const top = limit(windowBounds.y, naiveTop, maxTop);\n    const constrained = left !== naiveLeft || top !== naiveTop;\n    const defaultShowArrow = !constrained && !xOffset && !yOffset;\n    const showArrow = (_f = (_e = meta.showArrow) != null ? _e : this.showArrow) != null ? _f : defaultShowArrow;\n    this.updateShowArrow(showArrow);\n    element2.style.transform = `translate(${Math.round(left)}px, ${Math.round(top)}px)`;\n    this.enableInteraction = (_g = meta.enableInteraction) != null ? _g : false;\n    if (this.delay > 0 && !instantly) {\n      this.toggle(false);\n      this.showTimeout = this.window.setTimeout(() => {\n        this.toggle(true, meta.addCustomClass);\n      }, this.delay);\n      return;\n    }\n    this.toggle(true, meta.addCustomClass);\n  }\n  getWindowBoundingBox() {\n    return new BBox(0, 0, this.window.innerWidth, this.window.innerHeight);\n  }\n  toggle(visible, addCustomClass) {\n    if (!visible) {\n      this.window.clearTimeout(this.showTimeout);\n    }\n    this.updateClass(visible, this._showArrow, addCustomClass);\n  }\n  pointerLeftOntoTooltip(event) {\n    var _a;\n    if (!this.enableInteraction) return false;\n    const classList = (_a = event.sourceEvent.relatedTarget) == null ? void 0 : _a.classList;\n    const classes = [\"\", \"-title\", \"-content\"];\n    const classListContains = Boolean(classes.filter(c => classList == null ? void 0 : classList.contains(`${DEFAULT_TOOLTIP_CLASS}${c}`)));\n    return classList !== void 0 && classListContains;\n  }\n  updateShowArrow(show) {\n    this._showArrow = show;\n  }\n};\n_Tooltip.tooltipDocuments = [];\n__decorateClass([Validate(BOOLEAN)], _Tooltip.prototype, \"enabled\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], _Tooltip.prototype, \"showArrow\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], _Tooltip.prototype, \"class\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], _Tooltip.prototype, \"delay\", 2);\n__decorateClass([Validate(INTERACTION_RANGE)], _Tooltip.prototype, \"range\", 2);\n__decorateClass([Validate(TEXT_WRAP)], _Tooltip.prototype, \"wrapping\", 2);\nvar Tooltip = _Tooltip;\n\n// packages/ag-charts-community/src/chart/caption.ts\nvar Caption = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.id = createId(this);\n    this.node = new Text().setProperties({\n      textAlign: \"center\",\n      pointerEvents: 1 /* None */\n    });\n    this.enabled = false;\n    this.textAlign = \"center\";\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.wrapping = \"always\";\n    this.truncated = false;\n  }\n  registerInteraction(moduleCtx) {\n    return moduleCtx.interactionManager.addListener(\"hover\", event => this.handleMouseMove(moduleCtx, event));\n  }\n  computeTextWrap(containerWidth, containerHeight) {\n    var _a, _b;\n    const {\n      text,\n      wrapping\n    } = this;\n    const maxWidth = Math.min((_a = this.maxWidth) != null ? _a : Infinity, containerWidth);\n    const maxHeight = (_b = this.maxHeight) != null ? _b : containerHeight;\n    if (!isFinite(maxWidth) && !isFinite(maxHeight)) {\n      this.node.text = text;\n      return;\n    }\n    const {\n      text: wrappedText,\n      truncated\n    } = Text.wrap(text != null ? text : \"\", maxWidth, maxHeight, this, wrapping);\n    this.node.text = wrappedText;\n    this.truncated = truncated;\n  }\n  handleMouseMove(moduleCtx, event) {\n    if (!this.enabled) {\n      return;\n    }\n    const bbox = this.node.computeBBox();\n    const {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY\n    } = event;\n    const pointerInsideCaption = this.node.visible && bbox.containsPoint(offsetX, offsetY);\n    if (!pointerInsideCaption) {\n      moduleCtx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    event.consume();\n    if (!this.truncated) {\n      moduleCtx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    moduleCtx.tooltipManager.updateTooltip(this.id, {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY,\n      event,\n      showArrow: false,\n      addCustomClass: false\n    }, toTooltipHtml({\n      content: this.text\n    }));\n  }\n};\nCaption.SMALL_PADDING = 10;\nCaption.LARGE_PADDING = 20;\n__decorateClass([Validate(BOOLEAN)], Caption.prototype, \"enabled\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n}), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"text\", 2);\n__decorateClass([Validate(TEXT_ALIGN, {\n  optional: true\n}), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"textAlign\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n}), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n}), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING), ProxyPropertyOnWrite(\"node\")], Caption.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n}), ProxyPropertyOnWrite(\"node\", \"fill\")], Caption.prototype, \"color\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Caption.prototype, \"spacing\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Caption.prototype, \"lineHeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Caption.prototype, \"maxWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Caption.prototype, \"maxHeight\", 2);\n__decorateClass([Validate(TEXT_WRAP)], Caption.prototype, \"wrapping\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisTitle.ts\nvar AxisTitle = class {\n  constructor() {\n    this.enabled = false;\n    this.spacing = Caption.SMALL_PADDING;\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.wrapping = \"always\";\n  }\n};\n__decorateClass([Validate(BOOLEAN)], AxisTitle.prototype, \"enabled\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], AxisTitle.prototype, \"text\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], AxisTitle.prototype, \"spacing\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], AxisTitle.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], AxisTitle.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisTitle.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], AxisTitle.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], AxisTitle.prototype, \"color\", 2);\n__decorateClass([Validate(TEXT_WRAP)], AxisTitle.prototype, \"wrapping\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], AxisTitle.prototype, \"formatter\", 2);\n\n// packages/ag-charts-community/src/chart/chartOptions.ts\nvar JSON_APPLY_PLUGINS = {\n  constructors: {},\n  constructedArrays: /* @__PURE__ */new WeakMap()\n};\nfunction assignJsonApplyConstructedArray(array, ctor) {\n  var _a;\n  (_a = JSON_APPLY_PLUGINS.constructedArrays) == null ? void 0 : _a.set(array, ctor);\n}\nvar JSON_APPLY_OPTIONS = {\n  constructors: {\n    \"axes[].title\": AxisTitle\n  },\n  allowedTypes: {\n    \"legend.pagination.marker.shape\": [\"primitive\", \"function\"],\n    \"axis[].tick.count\": [\"primitive\", \"class-instance\"]\n  }\n};\nfunction getJsonApplyOptions(ctx) {\n  class CaptionWithContext extends Caption {\n    constructor() {\n      super();\n      this.registerInteraction(ctx);\n    }\n  }\n  return {\n    constructors: __spreadValues(__spreadProps(__spreadValues({}, JSON_APPLY_OPTIONS.constructors), {\n      title: CaptionWithContext,\n      subtitle: CaptionWithContext,\n      footnote: CaptionWithContext\n    }), JSON_APPLY_PLUGINS.constructors),\n    constructedArrays: JSON_APPLY_PLUGINS.constructedArrays,\n    allowedTypes: __spreadValues({}, JSON_APPLY_OPTIONS.allowedTypes)\n  };\n}\n\n// packages/ag-charts-community/src/scale/continuousScale.ts\nvar _ContinuousScale = class _ContinuousScale {\n  constructor(domain, range3) {\n    this.invalid = true;\n    this.nice = false;\n    this.interval = void 0;\n    this.tickCount = _ContinuousScale.defaultTickCount;\n    this.minTickCount = 0;\n    this.maxTickCount = Infinity;\n    this.niceDomain = [];\n    this.defaultClampMode = \"raw\";\n    this.domain = domain;\n    this.range = range3;\n  }\n  static is(value) {\n    return value instanceof _ContinuousScale;\n  }\n  transform(x) {\n    return x;\n  }\n  transformInvert(x) {\n    return x;\n  }\n  calcBandwidth(smallestInterval = 1) {\n    const domain = this.getDomain();\n    const maxRange = Math.max(...this.range);\n    const intervals = Math.abs(domain[1] - domain[0]) / smallestInterval + 1;\n    const maxBands = Math.floor(maxRange);\n    const bands = Math.min(intervals, maxBands);\n    return maxRange / Math.max(1, bands);\n  }\n  fromDomain(d) {\n    if (typeof d === \"number\") {\n      return d;\n    } else if (d instanceof Date) {\n      return d.getTime();\n    }\n    return NaN;\n  }\n  getDomain() {\n    if (this.nice) {\n      this.refresh();\n      if (this.niceDomain.length) {\n        return this.niceDomain;\n      }\n    }\n    return this.domain;\n  }\n  convert(x, opts) {\n    var _a;\n    const clampMode = (_a = opts == null ? void 0 : opts.clampMode) != null ? _a : this.defaultClampMode;\n    if (!this.domain || this.domain.length < 2) {\n      return NaN;\n    }\n    this.refresh();\n    const domain = this.getDomain().map(d => this.transform(d));\n    const [d0, d1] = domain;\n    const {\n      range: range3\n    } = this;\n    const [r0, r1] = range3;\n    x = this.transform(x);\n    if (clampMode === \"clamped\") {\n      const start = Math.min(this.fromDomain(d0), this.fromDomain(d1));\n      const stop = Math.max(this.fromDomain(d0), this.fromDomain(d1));\n      if (this.fromDomain(x) < start) {\n        return r0;\n      } else if (this.fromDomain(x) > stop) {\n        return r1;\n      }\n    }\n    if (d0 === d1) {\n      return (r0 + r1) / 2;\n    } else if (x === d0) {\n      return r0;\n    } else if (x === d1) {\n      return r1;\n    }\n    return r0 + (this.fromDomain(x) - this.fromDomain(d0)) / (this.fromDomain(d1) - this.fromDomain(d0)) * (r1 - r0);\n  }\n  invert(x) {\n    this.refresh();\n    const domain = this.getDomain().map(d2 => this.transform(d2));\n    const [d0, d1] = domain;\n    const {\n      range: range3\n    } = this;\n    const [r0, r1] = range3;\n    const isReversed = r0 > r1;\n    const rMin = isReversed ? r1 : r0;\n    const rMax = isReversed ? r0 : r1;\n    let d;\n    if (x < rMin) {\n      return isReversed ? d1 : d0;\n    } else if (x > rMax) {\n      return isReversed ? d0 : d1;\n    } else if (r0 === r1) {\n      d = this.toDomain((this.fromDomain(d0) + this.fromDomain(d1)) / 2);\n    } else {\n      d = this.toDomain(this.fromDomain(d0) + (x - r0) / (r1 - r0) * (this.fromDomain(d1) - this.fromDomain(d0)));\n    }\n    return this.transformInvert(d);\n  }\n  refresh() {\n    if (!this.invalid) return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n  getPixelRange() {\n    const range3 = this.range.slice().sort((a, b) => a - b);\n    return range3[1] - range3[0];\n  }\n  isDenseInterval({\n    start,\n    stop,\n    interval,\n    count: count2\n  }) {\n    const domain = stop - start;\n    const availableRange = this.getPixelRange();\n    const step = typeof interval === \"number\" ? interval : 1;\n    count2 != null ? count2 : count2 = domain / step;\n    if (count2 >= availableRange) {\n      Logger.warn(`the configured interval results in more than 1 item per pixel, ignoring. Supply a larger interval or omit this configuration`);\n      return true;\n    }\n    return false;\n  }\n};\n_ContinuousScale.defaultTickCount = 5;\n_ContinuousScale.defaultMaxTickCount = 6;\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"domain\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"range\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"nice\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"interval\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"tickCount\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"minTickCount\", 2);\n__decorateClass([Invalidating], _ContinuousScale.prototype, \"maxTickCount\", 2);\nvar ContinuousScale = _ContinuousScale;\n\n// packages/ag-charts-community/src/util/compare.ts\nfunction ascendingStringNumberUndefined(a, b) {\n  let diff2 = 0;\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    diff2 = a - b;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    diff2 = a.localeCompare(b);\n  } else if (a == null && b == null) {} else if (a == null) {\n    diff2 = -1;\n  } else if (b == null) {\n    diff2 = 1;\n  } else {\n    diff2 = String(a).localeCompare(String(b));\n  }\n  return diff2;\n}\nfunction compoundAscending(a, b, comparator) {\n  const toLiteral = v => {\n    if (typeof v === \"function\") {\n      return v();\n    }\n    return v;\n  };\n  for (const idx in a) {\n    const diff2 = comparator(toLiteral(a[idx]), toLiteral(b[idx]));\n    if (diff2 !== 0) {\n      return diff2;\n    }\n  }\n  return 0;\n}\n\n// packages/ag-charts-community/src/scene/group.ts\nvar _Group = class _Group extends Node {\n  constructor(opts) {\n    var _a;\n    super({\n      isVirtual: opts == null ? void 0 : opts.isVirtual\n    });\n    this.opts = opts;\n    this.opacity = 1;\n    this.lastBBox = void 0;\n    const {\n      zIndex,\n      zIndexSubOrder\n    } = opts != null ? opts : {};\n    this.isContainerNode = true;\n    if (zIndex !== void 0) {\n      this.zIndex = zIndex;\n    }\n    if (zIndexSubOrder !== void 0) {\n      this.zIndexSubOrder = zIndexSubOrder;\n    }\n    this.name = (_a = this.opts) == null ? void 0 : _a.name;\n  }\n  zIndexChanged() {\n    var _a;\n    if (this.layer) {\n      (_a = this._layerManager) == null ? void 0 : _a.moveLayer(this.layer, this.zIndex, this.zIndexSubOrder);\n    }\n  }\n  isLayer() {\n    return this.layer != null;\n  }\n  _setLayerManager(scene) {\n    var _a, _b;\n    if (this._layerManager && this.layer) {\n      this._layerManager.removeLayer(this.layer);\n      this.layer = void 0;\n    }\n    if (this.layer) {\n      throw new Error(\"AG Charts - unable to deregister scene rendering layer!\");\n    }\n    super._setLayerManager(scene);\n    if (scene && ((_a = this.opts) == null ? void 0 : _a.layer)) {\n      const {\n        zIndex,\n        zIndexSubOrder,\n        name\n      } = (_b = this.opts) != null ? _b : {};\n      const getComputedOpacity = () => this.getComputedOpacity();\n      const getVisibility = () => this.getVisibility();\n      this.layer = scene.addLayer({\n        zIndex,\n        zIndexSubOrder,\n        name,\n        getComputedOpacity,\n        getVisibility\n      });\n    }\n  }\n  getComputedOpacity() {\n    let opacity = 1;\n    let node = this;\n    do {\n      if (node instanceof _Group) {\n        opacity *= node.opacity;\n      }\n    } while (node = node.parent);\n    return opacity;\n  }\n  getVisibility() {\n    let node = this;\n    let visible = this.visible;\n    while (node = node.parent) {\n      if (node.visible) {\n        continue;\n      }\n      visible = node.visible;\n    }\n    return visible;\n  }\n  visibilityChanged() {\n    if (this.layer) {\n      this.layer.enabled = this.visible;\n    }\n  }\n  markDirty(source, type = 1 /* TRIVIAL */) {\n    if (this.isVirtual) {\n      super.markDirty(source, type);\n      return;\n    }\n    let parentType = type;\n    if (type < 2 /* MINOR */ || this.layer != null) {\n      parentType = 1 /* TRIVIAL */;\n    }\n    super.markDirty(source, type, parentType);\n  }\n  // We consider a group to be boundless, thus any point belongs to it.\n  containsPoint(_x, _y) {\n    return true;\n  }\n  computeBBox() {\n    this.computeTransformMatrix();\n    return _Group.computeBBox(this.children);\n  }\n  computeTransformedBBox() {\n    return this.computeBBox();\n  }\n  render(renderCtx) {\n    var _a, _b;\n    const {\n      opts: {\n        name = void 0\n      } = {},\n      _debug: debug2 = () => {}\n    } = this;\n    const {\n      dirty,\n      dirtyZIndex,\n      layer,\n      children,\n      clipRect,\n      dirtyTransform\n    } = this;\n    let {\n      ctx,\n      forceRender,\n      clipBBox\n    } = renderCtx;\n    const {\n      resized,\n      stats\n    } = renderCtx;\n    const canvasCtxTransform = ctx.getTransform();\n    const isDirty = dirty >= 2 /* MINOR */ || dirtyZIndex || resized;\n    let isChildDirty = isDirty;\n    let isChildLayerDirty = false;\n    for (const child of children) {\n      isChildDirty || (isChildDirty = child.layerManager == null && child.dirty >= 1 /* TRIVIAL */);\n      isChildLayerDirty || (isChildLayerDirty = child.layerManager != null && child.dirty >= 1 /* TRIVIAL */);\n      if (isChildDirty) {\n        break;\n      }\n    }\n    if (name) {\n      debug2({\n        name,\n        group: this,\n        isDirty,\n        isChildDirty,\n        dirtyTransform,\n        renderCtx,\n        forceRender\n      });\n    }\n    if (dirtyTransform) {\n      forceRender = \"dirtyTransform\";\n    } else if (layer) {\n      const currentBBox = this.computeBBox();\n      if (this.lastBBox === void 0 || !this.lastBBox.equals(currentBBox)) {\n        forceRender = \"dirtyTransform\";\n        this.lastBBox = currentBBox;\n      }\n    }\n    if (!isDirty && !isChildDirty && !isChildLayerDirty && !forceRender) {\n      if (name && stats) {\n        debug2({\n          name,\n          result: \"skipping\",\n          renderCtx,\n          counts: this.nodeCount,\n          group: this\n        });\n      }\n      if (layer && stats) {\n        stats.layersSkipped++;\n        stats.nodesSkipped += this.nodeCount.count;\n      }\n      this.markClean({\n        recursive: false\n      });\n      return;\n    }\n    const groupVisible = this.visible;\n    if (layer) {\n      ctx = layer.context;\n      ctx.save();\n      ctx.resetTransform();\n      if (forceRender !== \"dirtyTransform\") {\n        forceRender = isChildDirty || dirtyZIndex;\n      }\n      if (forceRender) layer.clear();\n      if (clipBBox) {\n        const {\n          width,\n          height,\n          x,\n          y\n        } = clipBBox;\n        debug2(() => ({\n          name,\n          clipBBox,\n          ctxTransform: ctx.getTransform(),\n          renderCtx,\n          group: this\n        }));\n        this.clipCtx(ctx, x, y, width, height);\n      }\n      ctx.setTransform(canvasCtxTransform);\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    if (clipRect) {\n      const {\n        x,\n        y,\n        width,\n        height\n      } = clipRect;\n      ctx.save();\n      debug2(() => ({\n        name,\n        clipRect,\n        ctxTransform: ctx.getTransform(),\n        renderCtx,\n        group: this\n      }));\n      this.clipCtx(ctx, x, y, width, height);\n      clipBBox = this.matrix.transformBBox(clipRect);\n    }\n    const hasVirtualChildren = this.hasVirtualChildren();\n    if (dirtyZIndex) {\n      this.sortChildren(children);\n      if (forceRender !== \"dirtyTransform\") forceRender = true;\n    } else if (hasVirtualChildren) {\n      this.sortChildren(children);\n    }\n    const renderContextChanged = forceRender !== renderCtx.forceRender || clipBBox !== renderCtx.clipBBox || ctx !== renderCtx.ctx;\n    const childRenderContext = renderContextChanged ? __spreadProps(__spreadValues({}, renderCtx), {\n      ctx,\n      forceRender,\n      clipBBox\n    }) : renderCtx;\n    let skipped = 0;\n    for (const child of children) {\n      if (!child.visible || !groupVisible) {\n        child.markClean();\n        if (stats) skipped += child.nodeCount.count;\n        continue;\n      }\n      if (!forceRender && child.dirty === 0 /* NONE */) {\n        if (stats) skipped += child.nodeCount.count;\n        continue;\n      }\n      ctx.save();\n      child.render(childRenderContext);\n      ctx.restore();\n    }\n    if (stats) stats.nodesSkipped += skipped;\n    super.render(renderCtx);\n    if (clipRect) {\n      ctx.restore();\n    }\n    if (hasVirtualChildren) {\n      for (const child of this.virtualChildren) {\n        child.markClean({\n          recursive: \"virtual\"\n        });\n      }\n    }\n    if (layer) {\n      if (stats) stats.layersRendered++;\n      ctx.restore();\n      if (forceRender) layer.snapshot();\n      (_b = (_a = layer.context).verifyDepthZero) == null ? void 0 : _b.call(_a);\n    }\n    if (name && stats) {\n      debug2({\n        name,\n        result: \"rendered\",\n        skipped,\n        renderCtx,\n        counts: this.nodeCount,\n        group: this\n      });\n    }\n  }\n  sortChildren(children) {\n    this.dirtyZIndex = false;\n    children.sort((a, b) => {\n      var _a, _b;\n      return compoundAscending([a.zIndex, ...((_a = a.zIndexSubOrder) != null ? _a : [void 0, void 0]), a.serialNumber], [b.zIndex, ...((_b = b.zIndexSubOrder) != null ? _b : [void 0, void 0]), b.serialNumber], ascendingStringNumberUndefined);\n    });\n  }\n  clipCtx(ctx, x, y, width, height) {\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  static computeBBox(nodes) {\n    let left = Infinity;\n    let right = -Infinity;\n    let top = Infinity;\n    let bottom = -Infinity;\n    nodes.forEach(n => {\n      if (!n.visible) {\n        return;\n      }\n      const bbox = n.computeTransformedBBox();\n      if (!bbox) {\n        return;\n      }\n      const x = bbox.x;\n      const y = bbox.y;\n      if (x < left) {\n        left = x;\n      }\n      if (y < top) {\n        top = y;\n      }\n      if (x + bbox.width > right) {\n        right = x + bbox.width;\n      }\n      if (y + bbox.height > bottom) {\n        bottom = y + bbox.height;\n      }\n    });\n    return new BBox(left, top, right - left, bottom - top);\n  }\n  /**\n   * Transforms bbox given in the canvas coordinate space to bbox in this group's coordinate space and\n   * sets this group's clipRect to the transformed bbox.\n   * @param bbox clipRect bbox in the canvas coordinate space.\n   */\n  setClipRectInGroupCoordinateSpace(bbox) {\n    this.clipRect = bbox ? this.transformBBox(bbox) : void 0;\n  }\n};\n_Group.className = \"Group\";\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */,\n  convertor: v => Math.min(1, Math.max(0, v))\n})], _Group.prototype, \"opacity\", 2);\nvar Group = _Group;\n\n// packages/ag-charts-community/src/scene/shape/range.ts\nvar Range = class extends Shape {\n  constructor(opts = {}) {\n    super(opts);\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.startLine = false;\n    this.endLine = false;\n    this.isRange = false;\n    this.restoreOwnStyles();\n  }\n  computeBBox() {\n    return new BBox(this.x1, this.y1, this.x2 - this.x1, this.y2 - this.y1);\n  }\n  isPointInPath(_x, _y) {\n    return false;\n  }\n  render(renderCtx) {\n    var _a;\n    const {\n      ctx,\n      forceRender,\n      stats\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    let {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this;\n    x1 = this.align(x1);\n    y1 = this.align(y1);\n    x2 = this.align(x2);\n    y2 = this.align(y2);\n    const {\n      fill,\n      opacity,\n      isRange\n    } = this;\n    const fillActive = !!(isRange && fill);\n    if (fillActive) {\n      const {\n        fillOpacity\n      } = this;\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = opacity * fillOpacity;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y1);\n      ctx.lineTo(x2, y2);\n      ctx.lineTo(x1, y2);\n      ctx.closePath();\n      ctx.fill();\n    }\n    const {\n      stroke,\n      strokeWidth,\n      startLine,\n      endLine\n    } = this;\n    const strokeActive = !!((startLine || endLine) && stroke && strokeWidth);\n    if (strokeActive) {\n      const {\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        lineCap,\n        lineJoin\n      } = this;\n      ctx.strokeStyle = stroke;\n      ctx.globalAlpha = opacity * strokeOpacity;\n      ctx.lineWidth = strokeWidth;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      ctx.beginPath();\n      if (startLine) {\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n      }\n      if (endLine) {\n        ctx.moveTo(x2, y2);\n        ctx.lineTo(x1, y2);\n      }\n      ctx.stroke();\n    }\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nRange.className = \"Range\";\nRange.defaultStyles = __spreadProps(__spreadValues({}, Shape.defaultStyles), {\n  strokeWidth: 1\n});\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"x1\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"y1\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"x2\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"y2\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"startLine\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"endLine\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 2 /* MINOR */\n})], Range.prototype, \"isRange\", 2);\n\n// packages/ag-charts-community/src/chart/label.ts\nvar Label = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.color = \"#464646\";\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n  }\n  getFont() {\n    return getFont(this);\n  }\n};\n__decorateClass([Validate(BOOLEAN)], Label.prototype, \"enabled\", 2);\n__decorateClass([Validate(COLOR_STRING)], Label.prototype, \"color\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], Label.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], Label.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Label.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], Label.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], Label.prototype, \"formatter\", 2);\nfunction calculateLabelRotation(opts) {\n  const {\n    parallelFlipRotation = 0,\n    regularFlipRotation = 0\n  } = opts;\n  const configuredRotation = opts.rotation ? normalizeAngle360(toRadians(opts.rotation)) : 0;\n  const parallelFlipFlag = !configuredRotation && parallelFlipRotation >= 0 && parallelFlipRotation <= Math.PI ? -1 : 1;\n  const regularFlipFlag = !configuredRotation && regularFlipRotation >= 0 && regularFlipRotation <= Math.PI ? -1 : 1;\n  let defaultRotation = 0;\n  if (opts.parallel) {\n    defaultRotation = parallelFlipFlag * Math.PI / 2;\n  } else if (regularFlipFlag === -1) {\n    defaultRotation = Math.PI;\n  }\n  return {\n    configuredRotation,\n    defaultRotation,\n    parallelFlipFlag,\n    regularFlipFlag\n  };\n}\nfunction getLabelSpacing(minSpacing, rotated) {\n  if (!isNaN(minSpacing)) {\n    return minSpacing;\n  }\n  return rotated ? 0 : 10;\n}\nfunction getTextBaseline(parallel, labelRotation, sideFlag, parallelFlipFlag) {\n  if (parallel && !labelRotation) {\n    return sideFlag * parallelFlipFlag === -1 ? \"hanging\" : \"bottom\";\n  }\n  return \"middle\";\n}\nfunction getTextAlign(parallel, labelRotation, labelAutoRotation, sideFlag, regularFlipFlag) {\n  const labelRotated = labelRotation > 0 && labelRotation <= Math.PI;\n  const labelAutoRotated = labelAutoRotation > 0 && labelAutoRotation <= Math.PI;\n  const alignFlag = labelRotated || labelAutoRotated ? -1 : 1;\n  if (parallel) {\n    if (labelRotation || labelAutoRotation) {\n      if (sideFlag * alignFlag === -1) {\n        return \"end\";\n      }\n    } else {\n      return \"center\";\n    }\n  } else if (sideFlag * regularFlipFlag === -1) {\n    return \"end\";\n  }\n  return \"start\";\n}\nfunction calculateLabelBBox(text, bbox, labelX, labelY, labelMatrix) {\n  const {\n    width,\n    height\n  } = bbox;\n  const translatedBBox = new BBox(labelX, labelY, 0, 0);\n  labelMatrix.transformBBox(translatedBBox, bbox);\n  const {\n    x = 0,\n    y = 0\n  } = bbox;\n  bbox.width = width;\n  bbox.height = height;\n  return {\n    point: {\n      x,\n      y,\n      size: 0\n    },\n    label: {\n      width,\n      height,\n      text\n    }\n  };\n}\n\n// packages/ag-charts-community/src/chart/layers.ts\nvar Layers = /* @__PURE__ */(Layers2 => {\n  Layers2[Layers2[\"SERIES_BACKGROUND_ZINDEX\"] = 0] = \"SERIES_BACKGROUND_ZINDEX\";\n  Layers2[Layers2[\"AXIS_GRID_ZINDEX\"] = 1] = \"AXIS_GRID_ZINDEX\";\n  Layers2[Layers2[\"AXIS_ZINDEX\"] = 2] = \"AXIS_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSLINE_RANGE_ZINDEX\"] = 3] = \"SERIES_CROSSLINE_RANGE_ZINDEX\";\n  Layers2[Layers2[\"SERIES_LAYER_ZINDEX\"] = 4] = \"SERIES_LAYER_ZINDEX\";\n  Layers2[Layers2[\"AXIS_FOREGROUND_ZINDEX\"] = 5] = \"AXIS_FOREGROUND_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSHAIR_ZINDEX\"] = 6] = \"SERIES_CROSSHAIR_ZINDEX\";\n  Layers2[Layers2[\"SERIES_LABEL_ZINDEX\"] = 7] = \"SERIES_LABEL_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSLINE_LINE_ZINDEX\"] = 8] = \"SERIES_CROSSLINE_LINE_ZINDEX\";\n  Layers2[Layers2[\"LEGEND_ZINDEX\"] = 9] = \"LEGEND_ZINDEX\";\n  return Layers2;\n})(Layers || {});\n\n// packages/ag-charts-community/src/integrated-charts-scene.ts\nvar integrated_charts_scene_exports = {};\n__export(integrated_charts_scene_exports, {\n  Arc: () => Arc,\n  BBox: () => BBox,\n  BandScale: () => BandScale,\n  Caption: () => Caption,\n  Circle: () => Circle,\n  ContinuousScale: () => ContinuousScale,\n  Diamond: () => Diamond,\n  DropShadow: () => DropShadow,\n  Group: () => Group,\n  HdpiCanvas: () => HdpiCanvas,\n  Image: () => Image,\n  Label: () => Label,\n  Line: () => Line,\n  LinearGradientFill: () => LinearGradientFill,\n  LinearScale: () => LinearScale,\n  Marker: () => Marker,\n  Node: () => Node,\n  Path: () => Path,\n  Path2D: () => Path2D,\n  PointerEvents: () => PointerEvents,\n  Rect: () => Rect,\n  RedrawType: () => RedrawType,\n  Scene: () => Scene,\n  SceneChangeDetection: () => SceneChangeDetection,\n  ScenePathChangeDetection: () => ScenePathChangeDetection,\n  Sector: () => Sector,\n  Selection: () => Selection,\n  Shape: () => Shape,\n  Square: () => Square,\n  Text: () => Text,\n  Tooltip: () => Tooltip,\n  Triangle: () => Triangle,\n  easing: () => easing_exports,\n  getFont: () => getFont,\n  getMarker: () => getMarker,\n  motion: () => motion,\n  nearestSquared: () => nearestSquared,\n  nearestSquaredInContainer: () => nearestSquaredInContainer,\n  toRadians: () => toRadians,\n  toTooltipHtml: () => toTooltipHtml\n});\n\n// packages/ag-charts-community/src/motion/fromToMotion.ts\nvar fromToMotion_exports = {};\n__export(fromToMotion_exports, {\n  FROM_TO_MIXINS: () => FROM_TO_MIXINS,\n  NODE_UPDATE_PHASES: () => NODE_UPDATE_PHASES,\n  fromToMotion: () => fromToMotion,\n  staticFromToMotion: () => staticFromToMotion\n});\n\n// packages/ag-charts-community/src/util/zip.ts\nfunction zipObject(keys, values) {\n  const zipped = {};\n  if (Array.isArray(values)) {\n    for (let i = 0; i < keys.length; i++) {\n      zipped[`${keys[i]}`] = values[i];\n    }\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      zipped[`${keys[i]}`] = values;\n    }\n  }\n  return zipped;\n}\n\n// packages/ag-charts-community/src/interpolate.ts\nfunction interpolateNumber(a, b) {\n  return d => Number(a) * (1 - d) + Number(b) * d;\n}\nfunction interpolateColor(a, b) {\n  if (typeof a === \"string\") {\n    try {\n      a = Color.fromString(a);\n    } catch (e) {\n      a = Color.fromArray([0, 0, 0]);\n    }\n  }\n  if (typeof b === \"string\") {\n    try {\n      b = Color.fromString(b);\n    } catch (e) {\n      b = Color.fromArray([0, 0, 0]);\n    }\n  }\n  const red = interpolateNumber(a.r, b.r);\n  const green = interpolateNumber(a.g, b.g);\n  const blue = interpolateNumber(a.b, b.b);\n  const alpha = interpolateNumber(a.a, b.a);\n  return d => Color.fromArray([red(d), green(d), blue(d), alpha(d)]).toRgbaString();\n}\n\n// packages/ag-charts-community/src/motion/easing.ts\nvar easing_exports = {};\n__export(easing_exports, {\n  easeIn: () => easeIn,\n  easeInOut: () => easeInOut,\n  easeInOutQuad: () => easeInOutQuad,\n  easeInQuad: () => easeInQuad,\n  easeOut: () => easeOut,\n  easeOutQuad: () => easeOutQuad,\n  inverseEaseOut: () => inverseEaseOut,\n  linear: () => linear\n});\nvar linear = n => n;\nvar easeIn = n => 1 - Math.cos(n * Math.PI / 2);\nvar easeOut = n => Math.sin(n * Math.PI / 2);\nvar easeInOut = n => -(Math.cos(n * Math.PI) - 1) / 2;\nvar easeInQuad = n => n * n;\nvar easeOutQuad = n => 1 - __pow(1 - n, 2);\nvar easeInOutQuad = n => n < 0.5 ? 2 * n * n : 1 - __pow(-2 * n + 2, 2) / 2;\nvar inverseEaseOut = x => 2 * Math.asin(x) / Math.PI;\n\n// packages/ag-charts-community/src/motion/animation.ts\nvar QUICK_TRANSITION = 0.2;\nvar INITIAL_LOAD = {\n  animationDuration: 1,\n  animationDelay: 0\n};\nvar REMOVE_PHASE = {\n  animationDuration: 0.25,\n  animationDelay: 0\n};\nvar UPDATE_PHASE = {\n  animationDuration: 0.5,\n  animationDelay: 0.25\n};\nvar ADD_PHASE = {\n  animationDuration: 0.25,\n  animationDelay: 0.75\n};\nvar LABEL_PHASE = {\n  animationDuration: QUICK_TRANSITION,\n  animationDelay: 1\n};\nvar RepeatType = /* @__PURE__ */(RepeatType2 => {\n  RepeatType2[\"Loop\"] = \"loop\";\n  RepeatType2[\"Reverse\"] = \"reverse\";\n  return RepeatType2;\n})(RepeatType || {});\nfunction isNodeArray(array) {\n  return array.every(n => n instanceof Node);\n}\nfunction deconstructSelectionsOrNodes(selectionsOrNodes) {\n  return isNodeArray(selectionsOrNodes) ? {\n    nodes: selectionsOrNodes,\n    selections: []\n  } : {\n    nodes: [],\n    selections: selectionsOrNodes\n  };\n}\nvar Animation = class {\n  constructor(opts) {\n    this.elapsed = 0;\n    this.iteration = 0;\n    this.isPlaying = false;\n    this.isReverse = false;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n    this.id = opts.id;\n    this.groupId = opts.groupId;\n    this.autoplay = (_a = opts.autoplay) != null ? _a : true;\n    this.delay = (_b = opts.delay) != null ? _b : 0;\n    this.duration = (_c = opts.duration) != null ? _c : 1e3;\n    this.ease = (_d = opts.ease) != null ? _d : linear;\n    this.repeat = (_e = opts.repeat) != null ? _e : 0;\n    this.repeatType = (_f = opts.repeatType) != null ? _f : \"loop\" /* Loop */;\n    this.onComplete = opts.onComplete;\n    this.onPlay = opts.onPlay;\n    this.onStop = opts.onStop;\n    this.onRepeat = opts.onRepeat;\n    this.onUpdate = opts.onUpdate;\n    this.interpolate = this.createInterpolator(opts.from, opts.to);\n    if (opts.skip === true) {\n      (_g = this.onUpdate) == null ? void 0 : _g.call(this, opts.to, false, this);\n      (_h = this.onStop) == null ? void 0 : _h.call(this, this);\n      (_i = this.onComplete) == null ? void 0 : _i.call(this, this);\n    } else if (this.autoplay) {\n      this.play();\n      (_j = this.onUpdate) == null ? void 0 : _j.call(this, opts.from, true, this);\n    }\n  }\n  play() {\n    var _a;\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      (_a = this.onPlay) == null ? void 0 : _a.call(this, this);\n    }\n    return this;\n  }\n  pause() {\n    if (this.isPlaying) {\n      this.isPlaying = false;\n    }\n    return this;\n  }\n  stop() {\n    var _a;\n    if (this.isPlaying) {\n      this.isPlaying = false;\n      (_a = this.onStop) == null ? void 0 : _a.call(this, this);\n    }\n    return this;\n  }\n  reset(opts) {\n    const deltaState = this.interpolate(this.isReverse ? 1 - this.delta : this.delta);\n    this.interpolate = this.createInterpolator(deltaState, opts.to);\n    this.elapsed = 0;\n    this.iteration = 0;\n    if (typeof opts.delay === \"number\") {\n      this.delay = opts.delay;\n    }\n    if (typeof opts.duration === \"number\") {\n      this.duration = opts.duration;\n    }\n    if (typeof opts.ease === \"function\") {\n      this.ease = opts.ease;\n    }\n    return this;\n  }\n  update(time) {\n    var _a, _b, _c;\n    this.elapsed += time;\n    if (this.elapsed <= this.delay) {\n      return this;\n    }\n    const value = this.interpolate(this.isReverse ? 1 - this.delta : this.delta);\n    (_a = this.onUpdate) == null ? void 0 : _a.call(this, value, false, this);\n    if (this.elapsed - this.delay >= this.duration) {\n      if (this.iteration < this.repeat) {\n        this.iteration++;\n        this.elapsed = (this.elapsed - this.delay) % this.duration + this.delay;\n        if (this.repeatType === \"reverse\" /* Reverse */) {\n          this.isReverse = !this.isReverse;\n        }\n        (_b = this.onRepeat) == null ? void 0 : _b.call(this, this);\n      } else {\n        this.stop();\n        (_c = this.onComplete) == null ? void 0 : _c.call(this, this);\n      }\n    }\n    return this;\n  }\n  get delta() {\n    return this.ease(clamp2(0, (this.elapsed - this.delay) / this.duration, 1));\n  }\n  createInterpolator(from, to) {\n    if (typeof to !== \"object\") {\n      return this.interpolateValue(from, to);\n    }\n    const interpolatorEntries = [];\n    for (const key in to) {\n      const interpolator = this.interpolateValue(from[key], to[key]);\n      if (interpolator != null) {\n        interpolatorEntries.push([key, interpolator]);\n      }\n    }\n    return d => {\n      const result = {};\n      for (const [key, interpolator] of interpolatorEntries) {\n        result[key] = interpolator(d);\n      }\n      return result;\n    };\n  }\n  interpolateValue(a, b) {\n    if (a === void 0 || b === void 0) {\n      return void 0;\n    }\n    try {\n      switch (typeof a) {\n        case \"number\":\n          return interpolateNumber(a, b);\n        case \"string\":\n          return interpolateColor(a, b);\n      }\n    } catch (e) {}\n    throw new Error(`Unable to interpolate values: ${a}, ${b}`);\n  }\n};\n\n// packages/ag-charts-community/src/motion/fromToMotion.ts\nvar NODE_UPDATE_PHASES = [\"removed\", \"updated\", \"added\"];\nvar FROM_TO_MIXINS = {\n  added: ADD_PHASE,\n  updated: UPDATE_PHASE,\n  removed: REMOVE_PHASE,\n  unknown: INITIAL_LOAD\n};\nfunction fromToMotion(groupId, subId, animationManager, selectionsOrNodes, fns, getDatumId, diff2) {\n  const {\n    defaultDuration\n  } = animationManager;\n  const {\n    fromFn,\n    toFn,\n    intermediateFn\n  } = fns;\n  const {\n    nodes,\n    selections\n  } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  const ids = {\n    added: {},\n    removed: {}\n  };\n  if (getDatumId && diff2) {\n    ids.added = zipObject(diff2.added, true);\n    ids.removed = zipObject(diff2.removed, true);\n  }\n  const processNodes = (liveNodes, nodes2) => {\n    var _c, _d;\n    let prevFromProps;\n    let liveNodeIndex = 0;\n    let nodeIndex = 0;\n    for (const node of nodes2) {\n      const isLive = liveNodes[liveNodeIndex] === node;\n      const ctx = {\n        last: nodeIndex >= nodes2.length - 1,\n        lastLive: liveNodeIndex >= liveNodes.length - 1,\n        prev: nodes2[nodeIndex - 1],\n        prevFromProps,\n        prevLive: liveNodes[liveNodeIndex - 1],\n        next: nodes2[nodeIndex + 1],\n        nextLive: liveNodes[liveNodeIndex + (isLive ? 1 : 0)]\n      };\n      const animationId = `${groupId}_${subId}_${node.id}`;\n      animationManager.stopByAnimationId(animationId);\n      let status = \"unknown\";\n      if (!isLive) {\n        status = \"removed\";\n      } else if (getDatumId && diff2) {\n        status = calculateStatus(node, node.datum, getDatumId, ids);\n      }\n      const _a = fromFn(node, node.datum, status, ctx),\n        {\n          animationDelay: delay,\n          animationDuration: duration,\n          start = {},\n          finish = {}\n        } = _a,\n        from = __objRest(_a, [\"animationDelay\", \"animationDuration\", \"start\", \"finish\"]);\n      const _b = toFn(node, node.datum, status, ctx),\n        {\n          animationDelay: toDelay,\n          animationDuration: toDuration,\n          start: toStart = {},\n          finish: toFinish = {}\n        } = _b,\n        to = __objRest(_b, [\"animationDelay\", \"animationDuration\", \"start\", \"finish\"]);\n      animationManager.animate({\n        id: animationId,\n        groupId,\n        from,\n        to,\n        ease: easeOut,\n        onPlay: () => {\n          node.setProperties(__spreadValues(__spreadValues({}, start), toStart));\n        },\n        onUpdate(props) {\n          node.setProperties(props);\n          if (intermediateFn) {\n            node.setProperties(intermediateFn(node, node.datum, status, ctx));\n          }\n        },\n        onStop: () => {\n          node.setProperties(__spreadValues(__spreadValues(__spreadValues({}, to), finish), toFinish));\n        },\n        duration: ((_c = duration != null ? duration : toDuration) != null ? _c : 1) * defaultDuration,\n        delay: ((_d = delay != null ? delay : toDelay) != null ? _d : 0) * defaultDuration\n      });\n      if (isLive) {\n        liveNodeIndex++;\n      }\n      nodeIndex++;\n      prevFromProps = from;\n    }\n  };\n  let selectionIndex = 0;\n  for (const selection of selections) {\n    const nodes2 = selection.nodes();\n    const liveNodes = nodes2.filter(n => !selection.isGarbage(n));\n    processNodes(liveNodes, nodes2);\n    animationManager.animate({\n      id: `${groupId}_${subId}_selection_${selectionIndex}`,\n      groupId,\n      from: 0,\n      to: 1,\n      ease: easeOut,\n      onStop() {\n        selection.cleanup();\n      }\n    });\n    selectionIndex++;\n  }\n  processNodes(nodes, nodes);\n}\nfunction staticFromToMotion(groupId, subId, animationManager, selectionsOrNodes, from, to, extraOpts = {}) {\n  const {\n    nodes,\n    selections\n  } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  const {\n    animationDelay = 0,\n    animationDuration = 1,\n    start = {},\n    finish = {}\n  } = extraOpts;\n  const {\n    defaultDuration\n  } = animationManager;\n  animationManager.animate({\n    id: `${groupId}_${subId}`,\n    groupId,\n    from,\n    to,\n    ease: easeOut,\n    onPlay: () => {\n      for (const node of nodes) {\n        node.setProperties(start);\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(start);\n        }\n      }\n    },\n    onUpdate(props) {\n      for (const node of nodes) {\n        node.setProperties(props);\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(props);\n        }\n      }\n    },\n    onStop: () => {\n      for (const node of nodes) {\n        node.setProperties(__spreadValues(__spreadValues({}, to), finish));\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(__spreadValues(__spreadValues({}, to), finish));\n        }\n      }\n    },\n    duration: animationDuration * defaultDuration,\n    delay: animationDelay * defaultDuration\n  });\n}\nfunction calculateStatus(node, datum, getDatumId, ids) {\n  const id = getDatumId(node, datum);\n  if (ids.added[id]) {\n    return \"added\";\n  } else if (ids.removed[id]) {\n    return \"removed\";\n  }\n  return \"updated\";\n}\n\n// packages/ag-charts-community/src/motion/resetMotion.ts\nvar resetMotion_exports = {};\n__export(resetMotion_exports, {\n  resetMotion: () => resetMotion\n});\nfunction resetMotion(selectionsOrNodes, propsFn) {\n  const {\n    nodes,\n    selections\n  } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  for (const selection of selections) {\n    for (const node of selection.nodes()) {\n      const from = propsFn(node, node.datum);\n      node.setProperties(from);\n    }\n    selection.cleanup();\n  }\n  for (const node of nodes) {\n    const from = propsFn(node, node.datum);\n    node.setProperties(from);\n  }\n}\n\n// packages/ag-charts-community/src/scene/dropShadow.ts\nvar DropShadow = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.color = \"rgba(0, 0, 0, 0.5)\";\n    this.xOffset = 0;\n    this.yOffset = 0;\n    this.blur = 5;\n  }\n};\n__decorateClass([Validate(BOOLEAN), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], DropShadow.prototype, \"enabled\", 2);\n__decorateClass([Validate(COLOR_STRING), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], DropShadow.prototype, \"color\", 2);\n__decorateClass([Validate(NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], DropShadow.prototype, \"xOffset\", 2);\n__decorateClass([Validate(NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], DropShadow.prototype, \"yOffset\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], DropShadow.prototype, \"blur\", 2);\n\n// packages/ag-charts-community/src/scene/canvas/hdpiOffscreenCanvas.ts\nvar HdpiOffscreenCanvas = class {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  constructor({\n    width = 600,\n    height = 300,\n    overrideDevicePixelRatio\n  }) {\n    this.enabled = true;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    this.canvas = new OffscreenCanvas(width, height);\n    this.realContext = this.canvas.getContext(\"2d\");\n    this.imageSource = this.canvas.transferToImageBitmap();\n    this.context = this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  static isSupported() {\n    return typeof OffscreenCanvas !== \"undefined\" && OffscreenCanvas.prototype.transferToImageBitmap != null;\n  }\n  snapshot() {\n    this.imageSource.close();\n    this.imageSource = this.canvas.transferToImageBitmap();\n  }\n  destroy() {\n    this.imageSource.close();\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.context.clearRect(0, 0, 0, 0);\n  }\n  clear() {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  }\n  get pixelRatio() {\n    return this._pixelRatio;\n  }\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  setPixelRatio(ratio) {\n    let pixelRatio = ratio != null ? ratio : window.devicePixelRatio;\n    if (hasConstrainedCanvasMemory()) {\n      pixelRatio = 1;\n    }\n    this._pixelRatio = pixelRatio;\n    return HdpiCanvas.overrideScale(this.realContext, pixelRatio);\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  resize(width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    const {\n      canvas,\n      context,\n      pixelRatio\n    } = this;\n    canvas.width = Math.round(width * pixelRatio);\n    canvas.height = Math.round(height * pixelRatio);\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  }\n};\n\n// packages/ag-charts-community/src/scene/scene.ts\nvar advancedCompositeIdentifier = \"adv-composite\";\nvar domCompositeIdentifier = \"dom-composite\";\nvar Scene = class {\n  constructor(opts) {\n    this.id = createId(this);\n    this.layers = [];\n    this._nextZIndex = 0;\n    this._nextLayerId = 0;\n    this._dirty = false;\n    this._root = null;\n    this.debug = Debug.create(true, \"scene\" /* SCENE */);\n    var _a;\n    const {\n      document: document2,\n      window: window2,\n      mode = (_a = windowValue(\"agChartsSceneRenderModel\")) != null ? _a : advancedCompositeIdentifier,\n      width,\n      height,\n      overrideDevicePixelRatio = void 0\n    } = opts;\n    this.overrideDevicePixelRatio = overrideDevicePixelRatio;\n    this.opts = {\n      document: document2,\n      window: window2,\n      mode\n    };\n    this.canvas = new HdpiCanvas({\n      document: document2,\n      window: window2,\n      width,\n      height,\n      overrideDevicePixelRatio\n    });\n  }\n  set container(value) {\n    this.canvas.container = value;\n  }\n  get container() {\n    return this.canvas.container;\n  }\n  download(fileName, fileFormat) {\n    this.canvas.download(fileName, fileFormat);\n  }\n  getDataURL(type) {\n    return this.canvas.getDataURL(type);\n  }\n  get width() {\n    return this.pendingSize ? this.pendingSize[0] : this.canvas.width;\n  }\n  get height() {\n    return this.pendingSize ? this.pendingSize[1] : this.canvas.height;\n  }\n  resize(width, height) {\n    width = Math.round(width);\n    height = Math.round(height);\n    const lessThanZero = width <= 0 || height <= 0;\n    const nan = isNaN(width) || isNaN(height);\n    const unchanged = width === this.width && height === this.height;\n    if (unchanged || nan || lessThanZero) {\n      return false;\n    }\n    this.pendingSize = [width, height];\n    this.markDirty();\n    return true;\n  }\n  addLayer(opts) {\n    var _a;\n    const {\n      mode\n    } = this.opts;\n    const layeredModes = [\"composite\", domCompositeIdentifier, advancedCompositeIdentifier];\n    if (!layeredModes.includes(mode)) {\n      return void 0;\n    }\n    const {\n      zIndex = this._nextZIndex++,\n      name,\n      zIndexSubOrder,\n      getComputedOpacity,\n      getVisibility\n    } = opts;\n    const {\n      width,\n      height,\n      overrideDevicePixelRatio\n    } = this;\n    const domLayer = mode === domCompositeIdentifier;\n    const advLayer = mode === advancedCompositeIdentifier;\n    const canvas = !advLayer || !HdpiOffscreenCanvas.isSupported() ? new HdpiCanvas({\n      document: this.opts.document,\n      window: this.opts.window,\n      width,\n      height,\n      domLayer,\n      zIndex,\n      name,\n      overrideDevicePixelRatio\n    }) : new HdpiOffscreenCanvas({\n      width,\n      height,\n      overrideDevicePixelRatio\n    });\n    const newLayer = {\n      id: this._nextLayerId++,\n      name,\n      zIndex,\n      zIndexSubOrder,\n      canvas,\n      getComputedOpacity,\n      getVisibility\n    };\n    if (zIndex >= this._nextZIndex) {\n      this._nextZIndex = zIndex + 1;\n    }\n    this.layers.push(newLayer);\n    this.sortLayers();\n    if (domLayer) {\n      const domCanvases = this.layers.map(v => v.canvas).filter(v => v instanceof HdpiCanvas);\n      const newLayerIndex = domCanvases.findIndex(v => v === canvas);\n      const lastLayer = (_a = domCanvases[newLayerIndex - 1]) != null ? _a : this.canvas;\n      lastLayer.element.insertAdjacentElement(\"afterend\", canvas.element);\n    }\n    this.debug(\"Scene.addLayer() - layers\", this.layers);\n    return newLayer.canvas;\n  }\n  removeLayer(canvas) {\n    const index = this.layers.findIndex(l => l.canvas === canvas);\n    if (index >= 0) {\n      this.layers.splice(index, 1);\n      canvas.destroy();\n      this.markDirty();\n      this.debug(\"Scene.removeLayer() -  layers\", this.layers);\n    }\n  }\n  moveLayer(canvas, newZIndex, newZIndexSubOrder) {\n    const layer = this.layers.find(l => l.canvas === canvas);\n    if (layer) {\n      layer.zIndex = newZIndex;\n      layer.zIndexSubOrder = newZIndexSubOrder;\n      this.sortLayers();\n      this.markDirty();\n      this.debug(\"Scene.moveLayer() -  layers\", this.layers);\n    }\n  }\n  sortLayers() {\n    this.layers.sort((a, b) => {\n      var _a, _b;\n      return compoundAscending([a.zIndex, ...((_a = a.zIndexSubOrder) != null ? _a : [void 0, void 0]), a.id], [b.zIndex, ...((_b = b.zIndexSubOrder) != null ? _b : [void 0, void 0]), b.id], ascendingStringNumberUndefined);\n    });\n  }\n  markDirty() {\n    this._dirty = true;\n  }\n  get dirty() {\n    return this._dirty;\n  }\n  set root(node) {\n    var _a;\n    if (node === this._root) {\n      return;\n    }\n    (_a = this._root) == null ? void 0 : _a._setLayerManager();\n    this._root = node;\n    if (node) {\n      node._setLayerManager({\n        addLayer: opts => this.addLayer(opts),\n        moveLayer: (...opts) => this.moveLayer(...opts),\n        removeLayer: (...opts) => this.removeLayer(...opts),\n        markDirty: () => this.markDirty(),\n        canvas: this.canvas,\n        debug: Debug.create(\"scene\" /* SCENE */)\n      });\n    }\n    this.markDirty();\n  }\n  get root() {\n    return this._root;\n  }\n  /** Alternative to destroy() that preserves re-usable resources. */\n  strip() {\n    const {\n      layers\n    } = this;\n    for (const layer of layers) {\n      layer.canvas.destroy();\n      delete layer[\"canvas\"];\n    }\n    layers.splice(0, layers.length);\n    this.root = null;\n    this._dirty = false;\n    this.canvas.context.resetTransform();\n  }\n  destroy() {\n    this.container = void 0;\n    this.strip();\n    this.canvas.destroy();\n    Object.assign(this, {\n      canvas: void 0,\n      ctx: void 0\n    });\n  }\n  render(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const {\n        debugSplitTimes = {\n          start: performance.now()\n        },\n        extraDebugStats = {}\n      } = opts != null ? opts : {};\n      const {\n        canvas,\n        canvas: {\n          context: ctx\n        },\n        root,\n        layers,\n        pendingSize,\n        opts: {\n          mode\n        }\n      } = this;\n      if (pendingSize) {\n        this.canvas.resize(...pendingSize);\n        this.layers.forEach(layer => layer.canvas.resize(...pendingSize));\n        this.pendingSize = void 0;\n      }\n      if (root && !root.visible) {\n        this._dirty = false;\n        return;\n      }\n      if (root && !this.dirty) {\n        this.debug(\"Scene.render() - no-op\", {\n          redrawType: RedrawType[root.dirty],\n          tree: this.buildTree(root)\n        });\n        this.debugStats(debugSplitTimes, ctx, void 0, extraDebugStats);\n        return;\n      }\n      const renderCtx = {\n        ctx,\n        devicePixelRatio: (_a = this.canvas.pixelRatio) != null ? _a : 1,\n        forceRender: true,\n        resized: !!pendingSize,\n        debugNodes: {}\n      };\n      if (Debug.check(\"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */)) {\n        renderCtx.stats = {\n          layersRendered: 0,\n          layersSkipped: 0,\n          nodesRendered: 0,\n          nodesSkipped: 0\n        };\n      }\n      let canvasCleared = false;\n      if (!root || root.dirty >= 1 /* TRIVIAL */) {\n        canvasCleared = true;\n        canvas.clear();\n      }\n      if (root) {\n        const {\n          dirtyTree,\n          paths\n        } = this.buildDirtyTree(root);\n        Debug.create(\"scene:dirtyTree\" /* SCENE_DIRTY_TREE */)(\"Scene.render() - dirtyTree\", {\n          dirtyTree,\n          paths\n        });\n      }\n      if (root && canvasCleared) {\n        this.debug(\"Scene.render() - before\", {\n          redrawType: RedrawType[root.dirty],\n          canvasCleared,\n          tree: this.buildTree(root)\n        });\n        if (root.visible) {\n          ctx.save();\n          root.render(renderCtx);\n          ctx.restore();\n        }\n      }\n      debugSplitTimes[\"\\u270D\\uFE0F\"] = performance.now();\n      if (mode !== domCompositeIdentifier && layers.length > 0 && canvasCleared) {\n        this.sortLayers();\n        ctx.save();\n        ctx.setTransform(1 / canvas.pixelRatio, 0, 0, 1 / canvas.pixelRatio, 0, 0);\n        layers.forEach(({\n          canvas: {\n            imageSource,\n            enabled\n          },\n          getComputedOpacity,\n          getVisibility\n        }) => {\n          if (!enabled || !getVisibility()) {\n            return;\n          }\n          ctx.globalAlpha = getComputedOpacity();\n          ctx.drawImage(imageSource, 0, 0);\n        });\n        ctx.restore();\n        debugSplitTimes[\"\\u26D9\"] = performance.now();\n      }\n      (_b = ctx.verifyDepthZero) == null ? void 0 : _b.call(ctx);\n      this._dirty = false;\n      this.debugStats(debugSplitTimes, ctx, renderCtx.stats, extraDebugStats);\n      this.debugSceneNodeHighlight(ctx, renderCtx.debugNodes);\n      if (root) {\n        this.debug(\"Scene.render() - after\", {\n          redrawType: RedrawType[root.dirty],\n          canvasCleared,\n          tree: this.buildTree(root)\n        });\n      }\n    });\n  }\n  debugStats(debugSplitTimes, ctx, renderCtxStats, extraDebugStats = {}) {\n    if (Debug.check(\"scene:stats\" /* SCENE_STATS */, \"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */)) {\n      const end = performance.now();\n      const start = debugSplitTimes[\"start\"];\n      debugSplitTimes[\"end\"] = performance.now();\n      const pct = (rendered, skipped) => {\n        const total = rendered + skipped;\n        return `${rendered} / ${total} (${Math.round(100 * rendered / total)}%)`;\n      };\n      const time = (name, start2, end2) => {\n        return `${name}: ${Math.round((end2 - start2) * 100) / 100}ms`;\n      };\n      const {\n        layersRendered = 0,\n        layersSkipped = 0,\n        nodesRendered = 0,\n        nodesSkipped = 0\n      } = renderCtxStats != null ? renderCtxStats : {};\n      let lastSplit = 0;\n      const splits = Object.entries(debugSplitTimes).filter(([n]) => n !== \"end\").map(([n, t], i) => {\n        const result = i > 0 ? time(n, lastSplit, t) : null;\n        lastSplit = t;\n        return result;\n      }).filter(v => v != null).join(\" + \");\n      const extras = Object.entries(extraDebugStats).map(([k, v]) => `${k}: ${v}`).join(\" ; \");\n      const detailedStats = Debug.check(\"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */);\n      const stats = [`${time(\"\\u23F1\\uFE0F\", start, end)} (${splits})`, `${extras}`, `Layers: ${detailedStats ? pct(layersRendered, layersSkipped) : this.layers.length}`, detailedStats ? `Nodes: ${pct(nodesRendered, nodesSkipped)}` : null].filter(v => v != null);\n      const statsSize = stats.map(t => [t, HdpiCanvas.getTextSize(t, ctx.font)]);\n      const width = Math.max(...statsSize.map(([, {\n        width: width2\n      }]) => width2));\n      const height = statsSize.reduce((total, [, {\n        height: height2\n      }]) => total + height2, 0);\n      ctx.save();\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.fillStyle = \"black\";\n      let y = 0;\n      for (const [stat, size] of statsSize) {\n        y += size.height;\n        ctx.fillText(stat, 2, y);\n      }\n      ctx.restore();\n    }\n  }\n  debugSceneNodeHighlight(ctx, debugNodes) {\n    var _a;\n    const regexpPredicate = matcher => n => {\n      if (matcher.test(n.id)) {\n        return true;\n      }\n      return n instanceof Group && n.name != null && matcher.test(n.name);\n    };\n    const stringPredicate = match => n => {\n      if (match === n.id) {\n        return true;\n      }\n      return n instanceof Group && n.name != null && match === n.name;\n    };\n    const sceneNodeHighlight = toArray(windowValue(\"agChartsSceneDebug\")).flatMap(name => name === \"layout\" ? [\"seriesRoot\", \"legend\", \"root\", /.*Axis-\\d+-axis.*/] : name);\n    for (const next of sceneNodeHighlight) {\n      if (typeof next === \"string\" && debugNodes[next] != null) continue;\n      const predicate = typeof next === \"string\" ? stringPredicate(next) : regexpPredicate(next);\n      const nodes = (_a = this.root) == null ? void 0 : _a.findNodes(predicate);\n      if (!nodes || nodes.length === 0) {\n        Logger.log(`Scene.render() - no debugging node with id [${next}] in scene graph.`);\n        continue;\n      }\n      for (const node of nodes) {\n        if (node instanceof Group && node.name) {\n          debugNodes[node.name] = node;\n        } else {\n          debugNodes[node.id] = node;\n        }\n      }\n    }\n    ctx.save();\n    for (const [name, node] of Object.entries(debugNodes)) {\n      const bbox = node.computeTransformedBBox();\n      if (!bbox) {\n        Logger.log(`Scene.render() - no bbox for debugged node [${name}].`);\n        continue;\n      }\n      ctx.globalAlpha = 0.8;\n      ctx.strokeStyle = \"red\";\n      ctx.lineWidth = 1;\n      ctx.strokeRect(bbox.x, bbox.y, bbox.width, bbox.height);\n      ctx.fillStyle = \"red\";\n      ctx.strokeStyle = \"white\";\n      ctx.font = \"16px sans-serif\";\n      ctx.textBaseline = \"top\";\n      ctx.textAlign = \"left\";\n      ctx.lineWidth = 2;\n      ctx.strokeText(name, bbox.x, bbox.y, bbox.width);\n      ctx.fillText(name, bbox.x, bbox.y, bbox.width);\n    }\n    ctx.restore();\n  }\n  buildTree(node) {\n    var _a, _b;\n    const name = (_a = node instanceof Group ? node.name : null) != null ? _a : node.id;\n    return __spreadValues(__spreadValues({\n      name,\n      node,\n      dirty: RedrawType[node.dirty]\n    }, ((_b = node.parent) == null ? void 0 : _b.isVirtual) ? {\n      virtualParentDirty: RedrawType[node.parent.dirty],\n      virtualParent: node.parent\n    } : {}), node.children.map(c => this.buildTree(c)).reduce((result, childTree) => {\n      let {\n        name: treeNodeName\n      } = childTree;\n      const {\n        node: {\n          visible,\n          opacity,\n          zIndex,\n          zIndexSubOrder\n        },\n        node: childNode,\n        virtualParent\n      } = childTree;\n      if (!visible || opacity <= 0) {\n        treeNodeName = `(${treeNodeName})`;\n      }\n      if (childNode instanceof Group && childNode.isLayer()) {\n        treeNodeName = `*${treeNodeName}*`;\n      }\n      const key = [`${treeNodeName != null ? treeNodeName : \"<unknown>\"}`, `z: ${zIndex}`, zIndexSubOrder && `zo: ${zIndexSubOrder.map(v => typeof v === \"function\" ? `${v()} (fn)` : v).join(\" / \")}`, virtualParent && `(virtual parent)`].filter(v => !!v).join(\" \");\n      let selectedKey = key;\n      let index = 1;\n      while (result[selectedKey] != null && index < 100) {\n        selectedKey = `${key} (${index++})`;\n      }\n      result[selectedKey] = childTree;\n      return result;\n    }, {}));\n  }\n  buildDirtyTree(node) {\n    var _a;\n    if (node.dirty === 0 /* NONE */) {\n      return {\n        dirtyTree: {},\n        paths: []\n      };\n    }\n    const childrenDirtyTree = node.children.map(c => this.buildDirtyTree(c)).filter(c => c.paths.length > 0);\n    const name = (_a = node instanceof Group ? node.name : null) != null ? _a : node.id;\n    const paths = childrenDirtyTree.length === 0 ? [name] : childrenDirtyTree.map(c => c.paths).reduce((r, p) => r.concat(p), []).map(p => `${name}.${p}`);\n    return {\n      dirtyTree: __spreadValues({\n        name,\n        node,\n        dirty: RedrawType[node.dirty]\n      }, childrenDirtyTree.map(c => c.dirtyTree).filter(t => t.dirty !== void 0).reduce((result, childTree) => {\n        var _a2;\n        result[(_a2 = childTree.name) != null ? _a2 : \"<unknown>\"] = childTree;\n        return result;\n      }, {})),\n      paths\n    };\n  }\n};\nScene.className = \"Scene\";\n\n// packages/ag-charts-community/src/scene/selection.ts\nvar Selection = class _Selection {\n  constructor(parentNode, classOrFactory, autoCleanup = true) {\n    this.parentNode = parentNode;\n    this.autoCleanup = autoCleanup;\n    this.garbageBin = /* @__PURE__ */new Set();\n    this._nodesMap = /* @__PURE__ */new Map();\n    this._nodes = [];\n    this.data = [];\n    this.debug = Debug.create(true, \"scene\", \"scene:selections\");\n    this.nodeFactory = Object.prototype.isPrototypeOf.call(Node, classOrFactory) ? () => new classOrFactory() : classOrFactory;\n  }\n  static select(parent, classOrFactory, garbageCollection = true) {\n    return new _Selection(parent, classOrFactory, garbageCollection);\n  }\n  static selectAll(parent, predicate) {\n    const results = [];\n    const traverse = node => {\n      if (predicate(node)) {\n        results.push(node);\n      }\n      node.children.forEach(traverse);\n    };\n    traverse(parent);\n    return results;\n  }\n  static selectByClass(node, Class) {\n    return _Selection.selectAll(node, node2 => node2 instanceof Class);\n  }\n  static selectByTag(node, tag) {\n    return _Selection.selectAll(node, node2 => node2.tag === tag);\n  }\n  createNode(datum, initializer, idx) {\n    const node = this.nodeFactory(datum);\n    node.datum = datum;\n    initializer == null ? void 0 : initializer(node);\n    if (idx != null) {\n      this._nodes.splice(idx, 0, node);\n    } else {\n      this._nodes.push(node);\n    }\n    this.parentNode.appendChild(node);\n    return node;\n  }\n  /**\n   * Update the data in a selection. If an `getDatumId()` function is provided, maintain a list of ids related to\n   * the nodes. Otherwise, take the more efficient route of simply creating and destroying nodes at the end\n   * of the array.\n   */\n  update(data, initializer, getDatumId) {\n    if (this.garbageBin.size > 0) {\n      this.debug(`Selection - update() called with pending garbage: ${data}`);\n    }\n    if (getDatumId) {\n      const dataMap = new Map(data.map((datum, idx) => [getDatumId(datum), [datum, idx]]));\n      for (const [node, datumId] of this._nodesMap.entries()) {\n        if (dataMap.has(datumId)) {\n          const [newDatum] = dataMap.get(datumId);\n          node.datum = newDatum;\n          this.garbageBin.delete(node);\n          dataMap.delete(datumId);\n        } else {\n          this.garbageBin.add(node);\n        }\n      }\n      for (const [datumId, [datum, idx]] of dataMap.entries()) {\n        this._nodesMap.set(this.createNode(datum, initializer, idx), datumId);\n      }\n    } else {\n      const maxLength = Math.max(data.length, this.data.length);\n      for (let i = 0; i < maxLength; i++) {\n        if (i >= data.length) {\n          this.garbageBin.add(this._nodes[i]);\n        } else if (i >= this._nodes.length) {\n          this.createNode(data[i], initializer);\n        } else {\n          this._nodes[i].datum = data[i];\n          this.garbageBin.delete(this._nodes[i]);\n        }\n      }\n    }\n    this.data = data.slice();\n    if (this.autoCleanup) {\n      this.cleanup();\n    }\n    return this;\n  }\n  cleanup() {\n    if (this.garbageBin.size === 0) {\n      return this;\n    }\n    this._nodes = this._nodes.filter(node => {\n      if (this.garbageBin.has(node)) {\n        this._nodesMap.delete(node);\n        this.garbageBin.delete(node);\n        this.parentNode.removeChild(node);\n        return false;\n      }\n      return true;\n    });\n    return this;\n  }\n  clear() {\n    this.update([]);\n    return this;\n  }\n  isGarbage(node) {\n    return this.garbageBin.has(node);\n  }\n  hasGarbage() {\n    return this.garbageBin.size > 0;\n  }\n  each(iterate) {\n    this._nodes.forEach((node, i) => iterate(node, node.datum, i));\n    return this;\n  }\n  *[Symbol.iterator]() {\n    for (let index = 0; index < this._nodes.length; index++) {\n      const node = this._nodes[index];\n      const datum = this._nodes[index].datum;\n      yield {\n        node,\n        datum,\n        index\n      };\n    }\n  }\n  select(predicate) {\n    return _Selection.selectAll(this.parentNode, predicate);\n  }\n  selectByClass(Class) {\n    return _Selection.selectByClass(this.parentNode, Class);\n  }\n  selectByTag(tag) {\n    return _Selection.selectByTag(this.parentNode, tag);\n  }\n  nodes() {\n    return this._nodes;\n  }\n};\n\n// packages/ag-charts-community/src/scene/polyRoots.ts\nfunction linearRoot(a, b) {\n  const t = -b / a;\n  return a !== 0 && t >= 0 && t <= 1 ? [t] : [];\n}\nfunction quadraticRoots(a, b, c) {\n  if (a === 0) {\n    return linearRoot(b, c);\n  }\n  const D = b * b - 4 * a * c;\n  const roots = [];\n  if (D === 0) {\n    const t = -b / (2 * a);\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n  } else if (D > 0) {\n    const rD = Math.sqrt(D);\n    const t1 = (-b - rD) / (2 * a);\n    const t2 = (-b + rD) / (2 * a);\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n  }\n  return roots;\n}\nfunction cubicRoots(a, b, c, d) {\n  if (a === 0) {\n    return quadraticRoots(b, c, d);\n  }\n  const A = b / a;\n  const B = c / a;\n  const C = d / a;\n  const Q = (3 * B - A * A) / 9;\n  const R = (9 * A * B - 27 * C - 2 * A * A * A) / 54;\n  const D = Q * Q * Q + R * R;\n  const third = 1 / 3;\n  const roots = [];\n  if (D >= 0) {\n    const rD = Math.sqrt(D);\n    const S = Math.sign(R + rD) * Math.pow(Math.abs(R + rD), third);\n    const T = Math.sign(R - rD) * Math.pow(Math.abs(R - rD), third);\n    const Im = Math.abs(Math.sqrt(3) * (S - T) / 2);\n    const t = -third * A + (S + T);\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n    if (Im === 0) {\n      const t2 = -third * A - (S + T) / 2;\n      if (t2 >= 0 && t2 <= 1) {\n        roots.push(t2);\n      }\n    }\n  } else {\n    const theta = Math.acos(R / Math.sqrt(-Q * Q * Q));\n    const thirdA = third * A;\n    const twoSqrtQ = 2 * Math.sqrt(-Q);\n    const t1 = twoSqrtQ * Math.cos(third * theta) - thirdA;\n    const t2 = twoSqrtQ * Math.cos(third * (theta + 2 * Math.PI)) - thirdA;\n    const t3 = twoSqrtQ * Math.cos(third * (theta + 4 * Math.PI)) - thirdA;\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n    if (t3 >= 0 && t3 <= 1) {\n      roots.push(t3);\n    }\n  }\n  return roots;\n}\n\n// packages/ag-charts-community/src/scene/intersection.ts\nfunction segmentIntersection(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n  const d = (ax2 - ax1) * (by2 - by1) - (ay2 - ay1) * (bx2 - bx1);\n  if (d === 0) {\n    return null;\n  }\n  const ua = ((bx2 - bx1) * (ay1 - by1) - (ax1 - bx1) * (by2 - by1)) / d;\n  const ub = ((ax2 - ax1) * (ay1 - by1) - (ay2 - ay1) * (ax1 - bx1)) / d;\n  if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n    return {\n      x: ax1 + ua * (ax2 - ax1),\n      y: ay1 + ua * (ay2 - ay1)\n    };\n  }\n  return null;\n}\nfunction cubicSegmentIntersections(px1, py1, px2, py2, px3, py3, px4, py4, x1, y1, x2, y2) {\n  const intersections = [];\n  const A = y1 - y2;\n  const B = x2 - x1;\n  const C = x1 * (y2 - y1) - y1 * (x2 - x1);\n  const bx = bezierCoefficients(px1, px2, px3, px4);\n  const by = bezierCoefficients(py1, py2, py3, py4);\n  const a = A * bx[0] + B * by[0];\n  const b = A * bx[1] + B * by[1];\n  const c = A * bx[2] + B * by[2];\n  const d = A * bx[3] + B * by[3] + C;\n  const roots = cubicRoots(a, b, c, d);\n  for (const t of roots) {\n    const tt = t * t;\n    const ttt = t * tt;\n    const x = bx[0] * ttt + bx[1] * tt + bx[2] * t + bx[3];\n    const y = by[0] * ttt + by[1] * tt + by[2] * t + by[3];\n    let s;\n    if (x1 !== x2) {\n      s = (x - x1) / (x2 - x1);\n    } else {\n      s = (y - y1) / (y2 - y1);\n    }\n    if (s >= 0 && s <= 1) {\n      intersections.push({\n        x,\n        y\n      });\n    }\n  }\n  return intersections;\n}\nfunction bezierCoefficients(P1, P2, P3, P4) {\n  return [\n  // Bézier expressed as matrix operations:\n  -P1 + 3 * P2 - 3 * P3 + P4,\n  //                 |-1  3 -3  1| |P1|\n  3 * P1 - 6 * P2 + 3 * P3,\n  //   [t^3 t^2 t 1] | 3 -6  3  0| |P2|\n  -3 * P1 + 3 * P2,\n  //                 |-3  3  0  0| |P3|\n  P1\n  //                 | 1  0  0  0| |P4|\n  ];\n}\nfunction arcIntersections(cx, cy, r, startAngle, endAngle, counterClockwise, x1, y1, x2, y2) {\n  const k = (y2 - y1) / (x2 - x1);\n  const y0 = y1 - k * x1;\n  const a = Math.pow(k, 2) + 1;\n  const b = 2 * (k * (y0 - cy) - cx);\n  const c = Math.pow(cx, 2) + Math.pow(y0 - cy, 2) - Math.pow(r, 2);\n  const d = Math.pow(b, 2) - 4 * a * c;\n  if (d < 0) {\n    return [];\n  }\n  const i1x = (-b + Math.sqrt(d)) / 2 / a;\n  const i2x = (-b - Math.sqrt(d)) / 2 / a;\n  const intersections = [];\n  [i1x, i2x].forEach(x => {\n    const isXInsideLine = x >= Math.min(x1, x2) && x <= Math.max(x1, x2);\n    if (!isXInsideLine) {\n      return;\n    }\n    const y = k * x + y0;\n    const a1 = normalizeAngle360(startAngle);\n    let a2 = normalizeAngle360(endAngle);\n    let a3 = normalizeAngle360(Math.atan2(y, x));\n    if (a2 <= a1) {\n      a2 += 2 * Math.PI;\n    }\n    if (a3 < a1) {\n      a3 += 2 * Math.PI;\n    }\n    if (counterClockwise !== (a3 >= a1 && a3 <= a2)) {\n      intersections.push({\n        x,\n        y\n      });\n    }\n  });\n  return intersections;\n}\n\n// packages/ag-charts-community/src/scene/path2D.ts\nvar Path2D = class {\n  constructor() {\n    this.previousCommands = [];\n    this.previousParams = [];\n    this.previousClosedPath = false;\n    this.commands = [];\n    this.params = [];\n    this._closedPath = false;\n  }\n  isDirty() {\n    if (this._closedPath !== this.previousClosedPath) {\n      return true;\n    }\n    if (this.previousCommands.length !== this.commands.length) {\n      return true;\n    }\n    if (this.previousParams.length !== this.params.length) {\n      return true;\n    }\n    for (let i = 0; i < this.commands.length; i++) {\n      if (this.commands[i] !== this.previousCommands[i]) {\n        return true;\n      }\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i] !== this.previousParams[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  draw(ctx) {\n    const commands = this.commands;\n    const params = this.params;\n    let j = 0;\n    ctx.beginPath();\n    for (const command of commands) {\n      switch (command) {\n        case 0 /* Move */:\n          ctx.moveTo(params[j++], params[j++]);\n          break;\n        case 1 /* Line */:\n          ctx.lineTo(params[j++], params[j++]);\n          break;\n        case 3 /* Curve */:\n          ctx.bezierCurveTo(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++]);\n          break;\n        case 2 /* Arc */:\n          ctx.arc(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++] === 1);\n          break;\n        case 4 /* ClosePath */:\n          ctx.closePath();\n          break;\n      }\n    }\n    if (commands.length === 0) {\n      ctx.closePath();\n    }\n  }\n  moveTo(x, y) {\n    if (this.xy) {\n      this.xy[0] = x;\n      this.xy[1] = y;\n    } else {\n      this.xy = [x, y];\n    }\n    this.commands.push(0 /* Move */);\n    this.params.push(x, y);\n  }\n  lineTo(x, y) {\n    if (this.xy) {\n      this.commands.push(1 /* Line */);\n      this.params.push(x, y);\n      this.xy[0] = x;\n      this.xy[1] = y;\n    } else {\n      this.moveTo(x, y);\n    }\n  }\n  rect(x, y, width, height) {\n    this.moveTo(x, y);\n    this.lineTo(x + width, y);\n    this.lineTo(x + width, y + height);\n    this.lineTo(x, y + height);\n    this.closePath();\n  }\n  roundRect(x, y, width, height, radii) {\n    radii = Math.min(radii, width / 2, height / 2);\n    this.moveTo(x, y + radii);\n    this.arc(x + radii, y + radii, radii, Math.PI, 3 * Math.PI / 2);\n    this.lineTo(x + radii, y);\n    this.lineTo(x + width - radii, y);\n    this.arc(x + width - radii, y + radii, radii, 3 * Math.PI / 2, 2 * Math.PI);\n    this.lineTo(x + width, y + radii);\n    this.lineTo(x + width, y + height - radii);\n    this.arc(x + width - radii, y + height - radii, radii, 0, Math.PI / 2);\n    this.lineTo(x + width - radii, y + height);\n    this.lineTo(x + radii, y + height);\n    this.arc(x + +radii, y + height - radii, radii, Math.PI / 2, Math.PI);\n    this.lineTo(x, y + height - radii);\n    this.closePath();\n  }\n  arc(x, y, r, sAngle, eAngle, antiClockwise = false) {\n    const endX = x + r * Math.cos(eAngle);\n    const endY = y + r * Math.sin(eAngle);\n    if (this.xy) {\n      this.xy[0] = endX;\n      this.xy[1] = endY;\n    } else {\n      this.xy = [endX, endY];\n    }\n    this.commands.push(2 /* Arc */);\n    this.params.push(x, y, r, sAngle, eAngle, antiClockwise ? 1 : 0);\n  }\n  cubicCurveTo(cx1, cy1, cx2, cy2, x, y) {\n    if (!this.xy) {\n      this.moveTo(cx1, cy1);\n    }\n    this.commands.push(3 /* Curve */);\n    this.params.push(cx1, cy1, cx2, cy2, x, y);\n    if (this.xy) {\n      this.xy[0] = x;\n      this.xy[1] = y;\n    }\n  }\n  get closedPath() {\n    return this._closedPath;\n  }\n  closePath() {\n    if (this.xy) {\n      this.xy = void 0;\n      this.commands.push(4 /* ClosePath */);\n      this._closedPath = true;\n    }\n  }\n  clear({\n    trackChanges\n  } = {\n    trackChanges: false\n  }) {\n    if (trackChanges) {\n      this.previousCommands = this.commands;\n      this.previousParams = this.params;\n      this.previousClosedPath = this._closedPath;\n      this.commands = [];\n      this.params = [];\n    } else {\n      this.commands.length = 0;\n      this.params.length = 0;\n    }\n    this.xy = void 0;\n    this._closedPath = false;\n  }\n  isPointInPath(x, y) {\n    const commands = this.commands;\n    const params = this.params;\n    const cn = commands.length;\n    const ox = -1e4;\n    const oy = -1e4;\n    let sx = NaN;\n    let sy = NaN;\n    let px = 0;\n    let py = 0;\n    let intersectionCount = 0;\n    for (let ci = 0, pi = 0; ci < cn; ci++) {\n      switch (commands[ci]) {\n        case 0 /* Move */:\n          if (!isNaN(sx) && segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          px = params[pi++];\n          sx = px;\n          py = params[pi++];\n          sy = py;\n          break;\n        case 1 /* Line */:\n          if (segmentIntersection(px, py, params[pi++], params[pi++], ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          px = params[pi - 2];\n          py = params[pi - 1];\n          break;\n        case 3 /* Curve */:\n          intersectionCount += cubicSegmentIntersections(px, py, params[pi++], params[pi++], params[pi++], params[pi++], params[pi++], params[pi++], ox, oy, x, y).length;\n          px = params[pi - 2];\n          py = params[pi - 1];\n          break;\n        case 2 /* Arc */:\n          const cx = params[pi++];\n          const cy = params[pi++];\n          const r = params[pi++];\n          const startAngle = params[pi++];\n          const endAngle = params[pi++];\n          const counterClockwise = Boolean(params[pi++]);\n          intersectionCount += arcIntersections(cx, cy, r, startAngle, endAngle, counterClockwise, ox, oy, x, y).length;\n          px = cx + Math.cos(endAngle) * r;\n          py = cy + Math.sin(endAngle) * r;\n          break;\n        case 4 /* ClosePath */:\n          if (!isNaN(sx) && segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          break;\n      }\n    }\n    return intersectionCount % 2 === 1;\n  }\n  getPoints() {\n    const {\n      commands,\n      params\n    } = this;\n    const coords = [];\n    let pi = 0;\n    for (let ci = 0; ci < commands.length; ci++) {\n      switch (commands[ci]) {\n        case 0 /* Move */:\n        case 1 /* Line */:\n          coords.push({\n            x: params[pi++],\n            y: params[pi++]\n          });\n          break;\n        case 3 /* Curve */:\n          pi += 4;\n          coords.push({\n            x: params[pi++],\n            y: params[pi++]\n          });\n          break;\n        case 2 /* Arc */:\n          coords.push({\n            x: params[pi++],\n            y: params[pi++]\n          });\n          pi += 4;\n          break;\n        case 4 /* ClosePath */:\n          break;\n      }\n    }\n    return coords;\n  }\n};\n\n// packages/ag-charts-community/src/scene/shape/path.ts\nfunction ScenePathChangeDetection(opts) {\n  const {\n    redraw = 3 /* MAJOR */,\n    changeCb,\n    convertor\n  } = opts != null ? opts : {};\n  return SceneChangeDetection({\n    redraw,\n    type: \"path\",\n    convertor,\n    changeCb\n  });\n}\nvar Path = class extends Shape {\n  constructor() {\n    super(...arguments);\n    /**\n     * Declare a path to retain for later rendering and hit testing\n     * using custom Path2D class. Think of it as a TypeScript version\n     * of the native Path2D (with some differences) that works in all browsers.\n     */\n    this.path = new Path2D();\n    this.clipScalingX = 1;\n    this.clipScalingY = 1;\n    /**\n     * The path only has to be updated when certain attributes change.\n     * For example, if transform attributes (such as `translationX`)\n     * are changed, we don't have to update the path. The `dirtyPath` flag\n     * is how we keep track if the path has to be updated or not.\n     */\n    this._dirtyPath = true;\n  }\n  set dirtyPath(value) {\n    if (this._dirtyPath !== value) {\n      this._dirtyPath = value;\n      if (value) {\n        this.markDirty(this, 3 /* MAJOR */);\n      }\n    }\n  }\n  get dirtyPath() {\n    return this._dirtyPath;\n  }\n  checkPathDirty() {\n    var _a, _b, _c, _d;\n    if (this._dirtyPath) {\n      return;\n    }\n    this.dirtyPath = this.path.isDirty() || ((_b = (_a = this.fillShadow) == null ? void 0 : _a.isDirty()) != null ? _b : false) || ((_d = (_c = this.clipPath) == null ? void 0 : _c.isDirty()) != null ? _d : false);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    return this.path.closedPath && this.path.isPointInPath(point.x, point.y);\n  }\n  isDirtyPath() {\n    return false;\n  }\n  updatePath() {}\n  clip(ctx, op) {\n    const transform = ctx.getTransform();\n    const clipScale = this.clipScalingX !== 1 || this.clipScalingY !== 1;\n    if (clipScale) {\n      ctx.scale(this.clipScalingX, this.clipScalingY);\n    }\n    op();\n    if (clipScale) {\n      ctx.setTransform(transform);\n    }\n  }\n  render(renderCtx) {\n    var _a;\n    const {\n      ctx,\n      forceRender,\n      stats\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    if (this.dirtyPath || this.isDirtyPath()) {\n      this.updatePath();\n      this.dirtyPath = false;\n    }\n    if (this.clipPath && this.clipMode != null) {\n      ctx.save();\n      if (this.clipMode === \"normal\") {\n        this.clip(ctx, () => {\n          var _a2;\n          (_a2 = this.clipPath) == null ? void 0 : _a2.draw(ctx);\n          ctx.clip();\n        });\n      }\n      if (this.clipScalingX > 0 && this.clipScalingY > 0) {\n        this.path.draw(ctx);\n        this.fillStroke(ctx);\n      }\n      if (this.clipMode === \"punch-out\") {\n        this.clip(ctx, () => {\n          var _a2, _b;\n          (_a2 = this.clipPath) == null ? void 0 : _a2.draw(ctx);\n          ctx.clip();\n          const {\n            x = -1e4,\n            y = -1e4,\n            width = 2e4,\n            height = 2e4\n          } = (_b = this.computeBBox()) != null ? _b : {};\n          ctx.clearRect(x, y, width, height);\n        });\n      }\n      ctx.restore();\n    } else {\n      this.path.draw(ctx);\n      this.fillStroke(ctx);\n    }\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nPath.className = \"Path\";\n__decorateClass([ScenePathChangeDetection()], Path.prototype, \"clipPath\", 2);\n__decorateClass([ScenePathChangeDetection()], Path.prototype, \"clipMode\", 2);\n__decorateClass([ScenePathChangeDetection()], Path.prototype, \"clipScalingX\", 2);\n__decorateClass([ScenePathChangeDetection()], Path.prototype, \"clipScalingY\", 2);\n\n// packages/ag-charts-community/src/scene/shape/arc.ts\nvar Arc = class extends Path {\n  constructor() {\n    super();\n    this.centerX = 0;\n    this.centerY = 0;\n    this.radius = 10;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.counterClockwise = false;\n    this.type = 0 /* Open */;\n    this.restoreOwnStyles();\n  }\n  get fullPie() {\n    return isEqual(normalizeAngle360(this.startAngle), normalizeAngle360(this.endAngle));\n  }\n  updatePath() {\n    const path = this.path;\n    path.clear();\n    path.arc(this.centerX, this.centerY, this.radius, this.startAngle, this.endAngle, this.counterClockwise);\n    if (this.type === 1 /* Chord */) {\n      path.closePath();\n    } else if (this.type === 2 /* Round */ && !this.fullPie) {\n      path.lineTo(this.centerX, this.centerY);\n      path.closePath();\n    }\n  }\n  computeBBox() {\n    return new BBox(this.centerX - this.radius, this.centerY - this.radius, this.radius * 2, this.radius * 2);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return this.type !== 0 /* Open */ && bbox.containsPoint(point.x, point.y) && this.path.isPointInPath(point.x, point.y);\n  }\n};\nArc.className = \"Arc\";\nArc.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  lineWidth: 1,\n  fillStyle: null\n});\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"centerX\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"centerY\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"radius\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"startAngle\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"endAngle\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"counterClockwise\", 2);\n__decorateClass([ScenePathChangeDetection()], Arc.prototype, \"type\", 2);\n\n// packages/ag-charts-community/src/scene/shape/line.ts\nvar Line = class extends Shape {\n  constructor(opts = {}) {\n    super(opts);\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.restoreOwnStyles();\n  }\n  set x(value) {\n    this.x1 = value;\n    this.x2 = value;\n  }\n  set y(value) {\n    this.y1 = value;\n    this.y2 = value;\n  }\n  computeBBox() {\n    return new BBox(Math.min(this.x1, this.x2), Math.min(this.y1, this.y2), Math.abs(this.x2 - this.x1), Math.abs(this.y2 - this.y1));\n  }\n  isPointInPath(px, py) {\n    if (this.x1 === this.x2 || this.y1 === this.y2) {\n      const {\n        x,\n        y\n      } = this.transformPoint(px, py);\n      return this.computeBBox().grow(this.strokeWidth / 2).containsPoint(x, y);\n    }\n    return false;\n  }\n  render(renderCtx) {\n    var _a;\n    const {\n      ctx,\n      forceRender,\n      stats,\n      devicePixelRatio\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    let {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this;\n    if (x1 === x2) {\n      const {\n        strokeWidth\n      } = this;\n      const x = Math.round(x1 * devicePixelRatio) / devicePixelRatio + Math.trunc(strokeWidth * devicePixelRatio) % 2 / (devicePixelRatio * 2);\n      x1 = x;\n      x2 = x;\n    } else if (y1 === y2) {\n      const {\n        strokeWidth\n      } = this;\n      const y = Math.round(y1 * devicePixelRatio) / devicePixelRatio + Math.trunc(strokeWidth * devicePixelRatio) % 2 / (devicePixelRatio * 2);\n      y1 = y;\n      y2 = y;\n    }\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    this.fillStroke(ctx);\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nLine.className = \"Line\";\nLine.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  fill: void 0,\n  strokeWidth: 1\n});\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Line.prototype, \"x1\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Line.prototype, \"y1\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Line.prototype, \"x2\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Line.prototype, \"y2\", 2);\n\n// packages/ag-charts-community/src/scale/colorScale.ts\nvar convertColorStringToOklcha = v => {\n  const color = Color.fromString(v);\n  const [l, c, h] = Color.RGBtoOKLCH(color.r, color.g, color.b);\n  return {\n    l,\n    c,\n    h,\n    a: color.a\n  };\n};\nvar interpolateOklch = (x, y, d) => {\n  d = Math.min(Math.max(d, 0), 1);\n  let h;\n  let c;\n  if (Number.isNaN(x.h) && Number.isNaN(y.h)) {\n    h = 0;\n    c = 0;\n  } else if (Number.isNaN(x.h)) {\n    h = y.h;\n    c = y.c;\n  } else if (Number.isNaN(y.h)) {\n    h = x.h;\n    c = x.c;\n  } else {\n    const xH = x.h;\n    let yH = y.h;\n    const deltaH = y.h - x.h;\n    if (deltaH > 180) {\n      yH -= 360;\n    } else if (deltaH < -180) {\n      yH += 360;\n    }\n    h = xH * (1 - d) + yH * d;\n    c = x.c * (1 - d) + y.c * d;\n  }\n  const l = x.l * (1 - d) + y.l * d;\n  const a = x.a * (1 - d) + y.a * d;\n  return Color.fromOKLCH(l, c, h, a);\n};\nvar ColorScale = class {\n  constructor() {\n    this.invalid = true;\n    this.domain = [0, 1];\n    this.range = [\"red\", \"blue\"];\n    this.parsedRange = this.range.map(convertColorStringToOklcha);\n  }\n  update() {\n    const {\n      domain,\n      range: range3\n    } = this;\n    if (domain.length < 2) {\n      Logger.warnOnce(\"`colorDomain` should have at least 2 values.\");\n      if (domain.length === 0) {\n        domain.push(0, 1);\n      } else if (domain.length === 1) {\n        domain.push(domain[0] + 1);\n      }\n    }\n    for (let i = 1; i < domain.length; i++) {\n      const a = domain[i - 1];\n      const b = domain[i];\n      if (a >= b) {\n        Logger.warnOnce(\"`colorDomain` values should be supplied in ascending order.\");\n        domain.sort((a2, b2) => a2 - b2);\n        break;\n      }\n    }\n    if (range3.length < domain.length) {\n      for (let i = range3.length; i < domain.length; i++) {\n        range3.push(range3.length > 0 ? range3[0] : \"black\");\n      }\n    }\n    this.parsedRange = this.range.map(convertColorStringToOklcha);\n  }\n  convert(x) {\n    this.refresh();\n    const {\n      domain,\n      range: range3,\n      parsedRange\n    } = this;\n    const d0 = domain[0];\n    const d1 = domain[domain.length - 1];\n    const r0 = range3[0];\n    const r1 = range3[range3.length - 1];\n    if (x <= d0) {\n      return r0;\n    }\n    if (x >= d1) {\n      return r1;\n    }\n    let index;\n    let q;\n    if (domain.length === 2) {\n      const t = (x - d0) / (d1 - d0);\n      const step = 1 / (range3.length - 1);\n      index = range3.length <= 2 ? 0 : Math.min(Math.floor(t * (range3.length - 1)), range3.length - 2);\n      q = (t - index * step) / step;\n    } else {\n      for (index = 0; index < domain.length - 2; index++) {\n        if (x < domain[index + 1]) {\n          break;\n        }\n      }\n      const a = domain[index];\n      const b = domain[index + 1];\n      q = (x - a) / (b - a);\n    }\n    const c0 = parsedRange[index];\n    const c1 = parsedRange[index + 1];\n    return interpolateOklch(c0, c1, q).toRgbaString();\n  }\n  refresh() {\n    if (!this.invalid) return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n};\n__decorateClass([Invalidating], ColorScale.prototype, \"domain\", 2);\n__decorateClass([Invalidating], ColorScale.prototype, \"range\", 2);\n\n// packages/ag-charts-community/src/scene/shape/linearGradientFill.ts\nvar LinearGradientFill = class extends Shape {\n  constructor() {\n    super(...arguments);\n    this.direction = \"to-right\";\n    this.stops = void 0;\n    this._mask = void 0;\n  }\n  get mask() {\n    return this._mask;\n  }\n  set mask(newMask) {\n    if (this._mask != null) {\n      this.removeChild(this._mask);\n    }\n    if (newMask != null) {\n      this.appendChild(newMask);\n    }\n    this._mask = newMask;\n  }\n  isPointInPath(x, y) {\n    var _a, _b;\n    return (_b = (_a = this.mask) == null ? void 0 : _a.isPointInPath(x, y)) != null ? _b : false;\n  }\n  computeBBox() {\n    var _a;\n    return (_a = this.mask) == null ? void 0 : _a.computeBBox();\n  }\n  render(renderCtx) {\n    const {\n      mask,\n      stops\n    } = this;\n    const {\n      ctx,\n      devicePixelRatio\n    } = renderCtx;\n    const pixelLength = 1 / devicePixelRatio;\n    const maskBbox = mask == null ? void 0 : mask.computeTransformedBBox();\n    if (mask == null || stops == null || maskBbox == null) return;\n    if (mask.dirtyPath) {\n      mask.updatePath();\n      mask.dirtyPath = false;\n    }\n    ctx.save();\n    ctx.beginPath();\n    mask.path.draw(ctx);\n    ctx.clip();\n    ctx.resetTransform();\n    const x0 = Math.floor(maskBbox.x);\n    const x1 = Math.ceil(maskBbox.x + maskBbox.width);\n    const y0 = Math.floor(maskBbox.y);\n    const y1 = Math.ceil(maskBbox.y + maskBbox.height);\n    const colorScale = new ColorScale();\n    const [i0, i1] = this.direction === \"to-right\" ? [x0, x1] : [y0, y1];\n    colorScale.domain = stops.map((_, index) => {\n      return i0 + (i1 - i0) * index / (stops.length - 1);\n    });\n    colorScale.range = stops;\n    colorScale.update();\n    if (this.direction === \"to-right\") {\n      const height = y1 - y0;\n      for (let x = x0; x <= x1; x += pixelLength) {\n        ctx.fillStyle = colorScale.convert(x);\n        ctx.fillRect(x, y0, pixelLength, height);\n      }\n    } else {\n      const width = x1 - x0;\n      for (let y = y0; y <= y1; y += pixelLength) {\n        ctx.fillStyle = colorScale.convert(y);\n        ctx.fillRect(x0, y, width, pixelLength);\n      }\n    }\n    ctx.restore();\n  }\n};\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], LinearGradientFill.prototype, \"direction\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], LinearGradientFill.prototype, \"stops\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], LinearGradientFill.prototype, \"_mask\", 2);\n\n// packages/ag-charts-community/src/scene/shape/rect.ts\nvar epsilon = 1e-6;\nvar cornerEdges = (leadingEdge, trailingEdge, leadingInset, trailingInset, cornerRadius) => {\n  let leadingClipped = false;\n  let trailingClipped = false;\n  let leading0 = trailingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(leadingInset, 2), 0));\n  let leading1 = 0;\n  let trailing0 = 0;\n  let trailing1 = leadingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(trailingInset, 2), 0));\n  if (leading0 > leadingEdge) {\n    leadingClipped = true;\n    leading0 = leadingEdge;\n    leading1 = leadingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(trailingInset - leadingEdge, 2)));\n  } else if (leading0 < epsilon) {\n    leading0 = 0;\n  }\n  if (trailing1 > trailingEdge) {\n    trailingClipped = true;\n    trailing0 = trailingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(leadingInset - trailingEdge, 2)));\n    trailing1 = trailingEdge;\n  } else if (trailing1 < epsilon) {\n    trailing1 = 0;\n  }\n  return {\n    leading0,\n    leading1,\n    trailing0,\n    trailing1,\n    leadingClipped,\n    trailingClipped\n  };\n};\nvar drawCorner = (path, {\n  x0,\n  y0,\n  x1,\n  y1,\n  cx,\n  cy\n}, cornerRadius, move) => {\n  if (move) {\n    path.moveTo(x0, y0);\n  }\n  if (x0 !== x1 || y0 !== y1) {\n    const r0 = Math.atan2(y0 - cy, x0 - cx);\n    const r1 = Math.atan2(y1 - cy, x1 - cx);\n    path.arc(cx, cy, cornerRadius, r0, r1);\n  } else {\n    path.lineTo(x0, y0);\n  }\n};\nvar insetCornerRadiusRect = (path, x, y, width, height, cornerRadii, cornerRadiusBbox) => {\n  let {\n    topLeft: topLeftCornerRadius,\n    topRight: topRightCornerRadius,\n    bottomRight: bottomRightCornerRadius,\n    bottomLeft: bottomLeftCornerRadius\n  } = cornerRadii;\n  const maxVerticalCornerRadius = Math.max(topLeftCornerRadius + bottomLeftCornerRadius, topRightCornerRadius + bottomRightCornerRadius);\n  const maxHorizontalCornerRadius = Math.max(topLeftCornerRadius + topRightCornerRadius, bottomLeftCornerRadius + bottomRightCornerRadius);\n  if (maxVerticalCornerRadius <= 0 && maxHorizontalCornerRadius <= 0) {\n    path.rect(x, y, width, height);\n    return;\n  } else if (cornerRadiusBbox == null && topLeftCornerRadius === topRightCornerRadius && topLeftCornerRadius === bottomRightCornerRadius && topLeftCornerRadius === bottomLeftCornerRadius) {\n    path.roundRect(x, y, width, height, topLeftCornerRadius);\n    return;\n  }\n  if (width < 0) {\n    x += width;\n    width = Math.abs(width);\n  }\n  if (height < 0) {\n    y += height;\n    height = Math.abs(height);\n  }\n  if (cornerRadiusBbox != null) {\n    const x0 = Math.max(x, cornerRadiusBbox.x);\n    const x1 = Math.min(x + width, cornerRadiusBbox.x + cornerRadiusBbox.width);\n    const y0 = Math.max(y, cornerRadiusBbox.y);\n    const y1 = Math.min(y + height, cornerRadiusBbox.y + cornerRadiusBbox.height);\n    x = x0;\n    y = y0;\n    width = x1 - x0;\n    height = y1 - y0;\n  }\n  if (width <= 0 || height <= 0) return;\n  cornerRadiusBbox != null ? cornerRadiusBbox : cornerRadiusBbox = new BBox(x, y, width, height);\n  const borderScale = Math.max(maxVerticalCornerRadius / cornerRadiusBbox.height, maxHorizontalCornerRadius / cornerRadiusBbox.width, 1);\n  if (borderScale > 1) {\n    topLeftCornerRadius /= borderScale;\n    topRightCornerRadius /= borderScale;\n    bottomRightCornerRadius /= borderScale;\n    bottomLeftCornerRadius /= borderScale;\n  }\n  let drawTopLeftCorner = true;\n  let drawTopRightCorner = true;\n  let drawBottomRightCorner = true;\n  let drawBottomLeftCorner = true;\n  let topLeftCorner;\n  let topRightCorner;\n  let bottomRightCorner;\n  let bottomLeftCorner;\n  if (drawTopLeftCorner) {\n    const nodes = cornerEdges(height, width, Math.max(cornerRadiusBbox.x + topLeftCornerRadius - x, 0), Math.max(cornerRadiusBbox.y + topLeftCornerRadius - y, 0), topLeftCornerRadius);\n    if (nodes.leadingClipped) drawBottomLeftCorner = false;\n    if (nodes.trailingClipped) drawTopRightCorner = false;\n    const x0 = Math.max(x + nodes.leading1, x);\n    const y0 = Math.max(y + nodes.leading0, y);\n    const x1 = Math.max(x + nodes.trailing1, x);\n    const y1 = Math.max(y + nodes.trailing0, y);\n    const cx = cornerRadiusBbox.x + topLeftCornerRadius;\n    const cy = cornerRadiusBbox.y + topLeftCornerRadius;\n    topLeftCorner = {\n      x0,\n      y0,\n      x1,\n      y1,\n      cx,\n      cy\n    };\n  }\n  if (drawTopRightCorner) {\n    const nodes = cornerEdges(width, height, Math.max(cornerRadiusBbox.y + topRightCornerRadius - y, 0), Math.max(x + width - (cornerRadiusBbox.x + cornerRadiusBbox.width - topRightCornerRadius), 0), topRightCornerRadius);\n    if (nodes.leadingClipped) drawTopLeftCorner = false;\n    if (nodes.trailingClipped) drawBottomRightCorner = false;\n    const x0 = Math.min(x + width - nodes.leading0, x + width);\n    const y0 = Math.max(y + nodes.leading1, y);\n    const x1 = Math.min(x + width - nodes.trailing0, x + width);\n    const y1 = Math.max(y + nodes.trailing1, y);\n    const cx = cornerRadiusBbox.x + cornerRadiusBbox.width - topRightCornerRadius;\n    const cy = cornerRadiusBbox.y + topRightCornerRadius;\n    topRightCorner = {\n      x0,\n      y0,\n      x1,\n      y1,\n      cx,\n      cy\n    };\n  }\n  if (drawBottomRightCorner) {\n    const nodes = cornerEdges(height, width, Math.max(x + width - (cornerRadiusBbox.x + cornerRadiusBbox.width - bottomRightCornerRadius), 0), Math.max(y + height - (cornerRadiusBbox.y + cornerRadiusBbox.height - bottomRightCornerRadius), 0), bottomRightCornerRadius);\n    if (nodes.leadingClipped) drawTopRightCorner = false;\n    if (nodes.trailingClipped) drawBottomLeftCorner = false;\n    const x0 = Math.min(x + width - nodes.leading1, x + width);\n    const y0 = Math.min(y + height - nodes.leading0, y + height);\n    const x1 = Math.min(x + width - nodes.trailing1, x + width);\n    const y1 = Math.min(y + height - nodes.trailing0, y + height);\n    const cx = cornerRadiusBbox.x + cornerRadiusBbox.width - bottomRightCornerRadius;\n    const cy = cornerRadiusBbox.y + cornerRadiusBbox.height - bottomRightCornerRadius;\n    bottomRightCorner = {\n      x0,\n      y0,\n      x1,\n      y1,\n      cx,\n      cy\n    };\n  }\n  if (drawBottomLeftCorner) {\n    const nodes = cornerEdges(width, height, Math.max(y + height - (cornerRadiusBbox.y + cornerRadiusBbox.height - bottomLeftCornerRadius), 0), Math.max(cornerRadiusBbox.x + bottomLeftCornerRadius - x, 0), bottomLeftCornerRadius);\n    if (nodes.leadingClipped) drawBottomRightCorner = false;\n    if (nodes.trailingClipped) drawTopLeftCorner = false;\n    const x0 = Math.max(x + nodes.leading0, x);\n    const y0 = Math.min(y + height - nodes.leading1, y + height);\n    const x1 = Math.max(x + nodes.trailing0, x);\n    const y1 = Math.min(y + height - nodes.trailing1, y + height);\n    const cx = cornerRadiusBbox.x + bottomLeftCornerRadius;\n    const cy = cornerRadiusBbox.y + cornerRadiusBbox.height - bottomLeftCornerRadius;\n    bottomLeftCorner = {\n      x0,\n      y0,\n      x1,\n      y1,\n      cx,\n      cy\n    };\n  }\n  let didMove = false;\n  if (drawTopLeftCorner && topLeftCorner != null) {\n    drawCorner(path, topLeftCorner, topLeftCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawTopRightCorner && topRightCorner != null) {\n    drawCorner(path, topRightCorner, topRightCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawBottomRightCorner && bottomRightCorner != null) {\n    drawCorner(path, bottomRightCorner, bottomRightCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawBottomLeftCorner && bottomLeftCorner != null) {\n    drawCorner(path, bottomLeftCorner, bottomLeftCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  path.closePath();\n};\nvar Rect = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.borderPath = new Path2D();\n    this.x = 0;\n    this.y = 0;\n    this.width = 10;\n    this.height = 10;\n    this.topLeftCornerRadius = 0;\n    this.topRightCornerRadius = 0;\n    this.bottomRightCornerRadius = 0;\n    this.bottomLeftCornerRadius = 0;\n    this.cornerRadiusBbox = void 0;\n    this.crisp = false;\n    this.lastUpdatePathStrokeWidth = Shape.defaultStyles.strokeWidth;\n    this.effectiveStrokeWidth = Shape.defaultStyles.strokeWidth;\n    /**\n     * When the rectangle's width or height is less than a pixel\n     * and crisp mode is on, the rectangle will still fit into the pixel,\n     * but will be less opaque to make an effect of holding less space.\n     */\n    this.microPixelEffectOpacity = 1;\n  }\n  set cornerRadius(cornerRadius) {\n    this.topLeftCornerRadius = cornerRadius;\n    this.topRightCornerRadius = cornerRadius;\n    this.bottomRightCornerRadius = cornerRadius;\n    this.bottomLeftCornerRadius = cornerRadius;\n  }\n  isDirtyPath() {\n    var _a;\n    if (this.lastUpdatePathStrokeWidth !== this.strokeWidth) {\n      return true;\n    }\n    return !!(this.path.isDirty() || this.borderPath.isDirty() || ((_a = this.clipPath) == null ? void 0 : _a.isDirty()));\n  }\n  updatePath() {\n    var _a, _b, _c;\n    const {\n      path,\n      borderPath,\n      crisp,\n      topLeftCornerRadius,\n      topRightCornerRadius,\n      bottomRightCornerRadius,\n      bottomLeftCornerRadius\n    } = this;\n    let {\n      x,\n      y,\n      width: w,\n      height: h,\n      strokeWidth,\n      cornerRadiusBbox\n    } = this;\n    const pixelRatio = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas.pixelRatio) != null ? _b : 1;\n    const pixelSize = 1 / pixelRatio;\n    let microPixelEffectOpacity = 1;\n    path.clear({\n      trackChanges: true\n    });\n    borderPath.clear({\n      trackChanges: true\n    });\n    if (crisp) {\n      if (w <= pixelSize) {\n        microPixelEffectOpacity *= w / pixelSize;\n      }\n      if (h <= pixelSize) {\n        microPixelEffectOpacity *= h / pixelSize;\n      }\n      w = this.align(x, w);\n      h = this.align(y, h);\n      x = this.align(x);\n      y = this.align(y);\n      cornerRadiusBbox = cornerRadiusBbox != null ? new BBox(this.align(cornerRadiusBbox.x), this.align(cornerRadiusBbox.y), this.align(cornerRadiusBbox.x, cornerRadiusBbox.width), this.align(cornerRadiusBbox.y, cornerRadiusBbox.height)) : void 0;\n    }\n    if (strokeWidth) {\n      if (w < pixelSize) {\n        const lx = x + pixelSize / 2;\n        borderPath.moveTo(lx, y);\n        borderPath.lineTo(lx, y + h);\n        strokeWidth = pixelSize;\n        this.borderClipPath = void 0;\n      } else if (h < pixelSize) {\n        const ly = y + pixelSize / 2;\n        borderPath.moveTo(x, ly);\n        borderPath.lineTo(x + w, ly);\n        strokeWidth = pixelSize;\n        this.borderClipPath = void 0;\n      } else if (strokeWidth < w && strokeWidth < h) {\n        const halfStrokeWidth = strokeWidth / 2;\n        x += halfStrokeWidth;\n        y += halfStrokeWidth;\n        w -= strokeWidth;\n        h -= strokeWidth;\n        const adjustedCornerRadiusBbox = cornerRadiusBbox == null ? void 0 : cornerRadiusBbox.clone().shrink(halfStrokeWidth);\n        const cornerRadii = {\n          topLeft: topLeftCornerRadius > 0 ? topLeftCornerRadius - strokeWidth : 0,\n          topRight: topRightCornerRadius > 0 ? topRightCornerRadius - strokeWidth : 0,\n          bottomRight: bottomRightCornerRadius > 0 ? bottomRightCornerRadius - strokeWidth : 0,\n          bottomLeft: bottomLeftCornerRadius > 0 ? bottomLeftCornerRadius - strokeWidth : 0\n        };\n        this.borderClipPath = void 0;\n        insetCornerRadiusRect(path, x, y, w, h, cornerRadii, adjustedCornerRadiusBbox);\n        insetCornerRadiusRect(borderPath, x, y, w, h, cornerRadii, adjustedCornerRadiusBbox);\n      } else {\n        this.borderClipPath = (_c = this.borderClipPath) != null ? _c : new Path2D();\n        this.borderClipPath.clear({\n          trackChanges: true\n        });\n        this.borderClipPath.rect(x, y, w, h);\n        borderPath.rect(x, y, w, h);\n      }\n    } else {\n      const cornerRadii = {\n        topLeft: topLeftCornerRadius,\n        topRight: topRightCornerRadius,\n        bottomRight: bottomRightCornerRadius,\n        bottomLeft: bottomLeftCornerRadius\n      };\n      this.borderClipPath = void 0;\n      insetCornerRadiusRect(path, x, y, w, h, cornerRadii, cornerRadiusBbox);\n    }\n    this.effectiveStrokeWidth = strokeWidth;\n    this.lastUpdatePathStrokeWidth = strokeWidth;\n    this.microPixelEffectOpacity = microPixelEffectOpacity;\n  }\n  computeBBox() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    return new BBox(x, y, width, height);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox.containsPoint(point.x, point.y);\n  }\n  applyFillAlpha(ctx) {\n    const {\n      fillOpacity,\n      microPixelEffectOpacity,\n      opacity\n    } = this;\n    const {\n      globalAlpha\n    } = ctx;\n    ctx.globalAlpha = globalAlpha * opacity * fillOpacity * microPixelEffectOpacity;\n  }\n  renderStroke(ctx) {\n    const {\n      stroke,\n      effectiveStrokeWidth,\n      borderPath,\n      borderClipPath,\n      opacity,\n      microPixelEffectOpacity\n    } = this;\n    const borderActive = !!stroke && !!effectiveStrokeWidth;\n    if (borderActive) {\n      const {\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        lineCap,\n        lineJoin\n      } = this;\n      if (borderClipPath) {\n        borderClipPath.draw(ctx);\n        ctx.clip();\n      }\n      borderPath.draw(ctx);\n      const {\n        globalAlpha\n      } = ctx;\n      ctx.strokeStyle = stroke;\n      ctx.globalAlpha = globalAlpha * opacity * strokeOpacity * microPixelEffectOpacity;\n      ctx.lineWidth = effectiveStrokeWidth;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      ctx.stroke();\n      ctx.globalAlpha = globalAlpha;\n    }\n  }\n};\nRect.className = \"Rect\";\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"x\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"y\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"width\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"height\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"topLeftCornerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"topRightCornerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"bottomRightCornerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"bottomLeftCornerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"cornerRadiusBbox\", 2);\n__decorateClass([ScenePathChangeDetection()], Rect.prototype, \"crisp\", 2);\n\n// packages/ag-charts-community/src/util/sector.ts\nfunction isPointInSector(x, y, sector) {\n  const radius = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n  const {\n    innerRadius,\n    outerRadius\n  } = sector;\n  if (sector.startAngle === sector.endAngle || radius < Math.min(innerRadius, outerRadius) || radius > Math.max(innerRadius, outerRadius)) {\n    return false;\n  }\n  const startAngle = normalizeAngle180(sector.startAngle);\n  const endAngle = normalizeAngle180(sector.endAngle);\n  const angle = Math.atan2(y, x);\n  return startAngle < endAngle ? angle <= endAngle && angle >= startAngle : angle <= endAngle && angle >= -Math.PI || angle >= startAngle && angle <= Math.PI;\n}\nfunction lineCollidesSector(line, sector) {\n  const {\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius\n  } = sector;\n  const outerStart = {\n    x: outerRadius * Math.cos(startAngle),\n    y: outerRadius * Math.sin(startAngle)\n  };\n  const outerEnd = {\n    x: outerRadius * Math.cos(endAngle),\n    y: outerRadius * Math.sin(endAngle)\n  };\n  const innerStart = innerRadius === 0 ? {\n    x: 0,\n    y: 0\n  } : {\n    x: innerRadius * Math.cos(startAngle),\n    y: innerRadius * Math.sin(startAngle)\n  };\n  const innerEnd = innerRadius === 0 ? {\n    x: 0,\n    y: 0\n  } : {\n    x: innerRadius * Math.cos(endAngle),\n    y: innerRadius * Math.sin(endAngle)\n  };\n  return segmentIntersection(line.start.x, line.start.y, line.end.x, line.end.y, outerStart.x, outerStart.y, innerStart.x, innerStart.y) != null || segmentIntersection(line.start.x, line.start.y, line.end.x, line.end.y, outerEnd.x, outerEnd.y, innerEnd.x, innerEnd.y) != null || arcIntersections(0, 0, outerRadius, startAngle, endAngle, true, line.start.x, line.start.y, line.end.x, line.end.y).length > 0;\n}\nfunction boxCollidesSector(box, sector) {\n  const topLeft = {\n    x: box.x,\n    y: box.y\n  };\n  const topRight = {\n    x: box.x + box.width,\n    y: box.y\n  };\n  const bottomLeft = {\n    x: box.x,\n    y: box.y + box.height\n  };\n  const bottomRight = {\n    x: box.x + box.width,\n    y: box.y + box.height\n  };\n  return lineCollidesSector({\n    start: topLeft,\n    end: topRight\n  }, sector) || lineCollidesSector({\n    start: bottomLeft,\n    end: bottomRight\n  }, sector);\n}\n\n// packages/ag-charts-community/src/scene/shape/sector.ts\nvar Sector = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.centerX = 0;\n    this.centerY = 0;\n    this.innerRadius = 10;\n    this.outerRadius = 20;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.angleOffset = 0;\n    this.inset = 0;\n  }\n  computeBBox() {\n    const radius = this.outerRadius;\n    return new BBox(this.centerX - radius, this.centerY - radius, radius * 2, radius * 2);\n  }\n  updatePath() {\n    const path = this.path;\n    const {\n      angleOffset,\n      inset\n    } = this;\n    const startAngle = this.startAngle + angleOffset;\n    const endAngle = this.endAngle + angleOffset;\n    const sweep = startAngle <= endAngle ? endAngle - startAngle : Math.PI * 2 - (startAngle - endAngle);\n    const innerRadius = Math.max(Math.min(this.innerRadius, this.outerRadius) + inset, 0);\n    const outerRadius = Math.max(Math.max(this.innerRadius, this.outerRadius) - inset, 0);\n    const fullPie = sweep >= 2 * Math.PI;\n    const centerX = this.centerX;\n    const centerY = this.centerY;\n    path.clear();\n    if (fullPie) {\n      path.arc(centerX, centerY, outerRadius, startAngle, endAngle);\n      if (innerRadius > inset) {\n        path.moveTo(centerX + innerRadius * Math.cos(endAngle), centerY + innerRadius * Math.sin(endAngle));\n        path.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      }\n    } else {\n      const innerAngleOffset = innerRadius > 0 ? inset / innerRadius : 0;\n      const outerAngleOffset = outerRadius > 0 ? inset / outerRadius : 0;\n      const outerAngleExceeded = sweep < 2 * outerAngleOffset;\n      if (outerAngleExceeded) return;\n      const innerAngleExceeded = innerRadius <= inset || sweep < 2 * innerAngleOffset;\n      if (innerAngleExceeded) {\n        const x = sweep < Math.PI * 0.5 ? inset * (1 + Math.cos(sweep)) / Math.sin(sweep) : NaN;\n        let r;\n        if (x > 0 && x < outerRadius) {\n          r = Math.max(Math.hypot(inset, x), innerRadius);\n        } else {\n          r = innerRadius;\n        }\n        const midAngle = startAngle + sweep * 0.5;\n        path.moveTo(centerX + r * Math.cos(midAngle), centerY + r * Math.sin(midAngle));\n      } else {\n        path.moveTo(centerX + innerRadius * Math.cos(startAngle + innerAngleOffset), centerY + innerRadius * Math.sin(startAngle + innerAngleOffset));\n      }\n      path.arc(centerX, centerY, outerRadius, startAngle + outerAngleOffset, endAngle - outerAngleOffset);\n      if (innerAngleExceeded) {} else if (innerRadius > 0) {\n        path.arc(centerX, centerY, innerRadius, endAngle - innerAngleOffset, startAngle + innerAngleOffset, true);\n      } else {\n        path.lineTo(centerX, centerY);\n      }\n    }\n    path.closePath();\n    this.dirtyPath = false;\n  }\n  isPointInPath(x, y) {\n    const {\n      angleOffset\n    } = this;\n    const startAngle = this.startAngle + angleOffset;\n    const endAngle = this.endAngle + angleOffset;\n    const innerRadius = Math.min(this.innerRadius, this.outerRadius);\n    const outerRadius = Math.max(this.innerRadius, this.outerRadius);\n    const point = this.transformPoint(x, y);\n    return isPointInSector(point.x, point.y, {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    });\n  }\n};\nSector.className = \"Sector\";\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"centerX\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"centerY\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"innerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"outerRadius\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"startAngle\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"endAngle\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"angleOffset\", 2);\n__decorateClass([ScenePathChangeDetection()], Sector.prototype, \"inset\", 2);\n\n// packages/ag-charts-community/src/util/numberFormat.ts\nvar group = content => `(${content})`;\nvar optionalGroup = content => `${group(content)}?`;\nvar nonCapturingGroup = content => optionalGroup(`?:${content}`);\nvar formatRegEx = (() => {\n  const fill = \".\";\n  const align = \"[<>=^]\";\n  const sign = \"[+\\\\-( ]\";\n  const symbol = \"[$\\u20AC\\xA3\\xA5\\u20A3\\u20B9#]\";\n  const zero = \"0\";\n  const width = \"\\\\d+\";\n  const comma = \",\";\n  const precision = \"\\\\d+\";\n  const tilde = \"~\";\n  const type = \"[%a-z]\";\n  return new RegExp([\"^\", nonCapturingGroup(`${optionalGroup(fill)}${group(align)}`), optionalGroup(sign), optionalGroup(symbol), optionalGroup(zero), optionalGroup(width), optionalGroup(comma), nonCapturingGroup(`\\\\.${group(precision)}`), optionalGroup(tilde), optionalGroup(type), \"$\"].join(\"\"), \"i\");\n})();\nvar surroundedRegEx = (() => {\n  const prefix = \".*?\";\n  const content = \".+?\";\n  const suffix = \".*?\";\n  return new RegExp([\"^\", group(prefix), `#\\\\{${group(content)}\\\\}`, group(suffix), \"$\"].join(\"\"));\n})();\nfunction parseFormatter(formatter) {\n  let prefix;\n  let suffix;\n  const surrounded = surroundedRegEx.exec(formatter);\n  if (surrounded) {\n    [, prefix, formatter, suffix] = surrounded;\n  }\n  const match = formatRegEx.exec(formatter);\n  if (!match) {\n    throw new Error(`The number formatter is invalid: ${formatter}`);\n  }\n  const [, fill, align, sign, symbol, zero, width, comma, precision, trim, type] = match;\n  return {\n    fill,\n    align,\n    sign,\n    symbol,\n    zero,\n    width: parseInt(width),\n    comma,\n    precision: parseInt(precision),\n    trim: Boolean(trim),\n    type,\n    prefix,\n    suffix\n  };\n}\nfunction format(formatter) {\n  const options = typeof formatter === \"string\" ? parseFormatter(formatter) : formatter;\n  const {\n    fill,\n    align,\n    sign = \"-\",\n    symbol,\n    zero,\n    width,\n    comma,\n    type,\n    prefix = \"\",\n    suffix = \"\",\n    precision\n  } = options;\n  let {\n    trim\n  } = options;\n  const precisionIsNaN = precision === void 0 || isNaN(precision);\n  let formatBody;\n  if (!type) {\n    formatBody = decimalTypes[\"g\"];\n    trim = true;\n  } else if (type in decimalTypes && type in integerTypes) {\n    formatBody = precisionIsNaN ? integerTypes[type] : decimalTypes[type];\n  } else if (type in decimalTypes) {\n    formatBody = decimalTypes[type];\n  } else if (type in integerTypes) {\n    formatBody = integerTypes[type];\n  } else {\n    throw new Error(`The number formatter type is invalid: ${type}`);\n  }\n  let formatterPrecision;\n  if (precision == null || precisionIsNaN) {\n    formatterPrecision = type ? 6 : 12;\n  } else {\n    formatterPrecision = precision;\n  }\n  return n => {\n    let result = formatBody(n, formatterPrecision);\n    if (trim) {\n      result = removeTrailingZeros(result);\n    }\n    if (comma) {\n      result = insertSeparator(result, comma);\n    }\n    result = addSign(n, result, sign);\n    if (symbol && symbol !== \"#\") {\n      result = `${symbol}${result}`;\n    }\n    if (symbol === \"#\" && type === \"x\") {\n      result = `0x${result}`;\n    }\n    if (type === \"s\") {\n      result = `${result}${getSIPrefix(n)}`;\n    }\n    if (type === \"%\" || type === \"p\") {\n      result = `${result}%`;\n    }\n    if (width != null && !isNaN(width)) {\n      result = addPadding(result, width, fill != null ? fill : zero, align);\n    }\n    result = `${prefix}${result}${suffix}`;\n    return result;\n  };\n}\nvar absFloor = n => Math.floor(Math.abs(n));\nvar integerTypes = {\n  b: n => absFloor(n).toString(2),\n  c: n => String.fromCharCode(n),\n  d: n => Math.round(Math.abs(n)).toFixed(0),\n  o: n => absFloor(n).toString(8),\n  x: n => absFloor(n).toString(16),\n  X: n => integerTypes.x(n).toUpperCase(),\n  n: n => integerTypes.d(n),\n  \"%\": n => `${absFloor(n * 100).toFixed(0)}`\n};\nvar decimalTypes = {\n  e: (n, f) => Math.abs(n).toExponential(f),\n  E: (n, f) => decimalTypes.e(n, f).toUpperCase(),\n  f: (n, f) => Math.abs(n).toFixed(f),\n  F: (n, f) => decimalTypes.f(n, f).toUpperCase(),\n  g: (n, f) => {\n    if (n === 0) {\n      return \"0\";\n    }\n    const a = Math.abs(n);\n    const p = Math.floor(Math.log10(a));\n    if (p >= -4 && p < f) {\n      return a.toFixed(f - 1 - p);\n    }\n    return a.toExponential(f - 1);\n  },\n  G: (n, f) => decimalTypes.g(n, f).toUpperCase(),\n  n: (n, f) => decimalTypes.g(n, f),\n  p: (n, f) => decimalTypes.r(n * 100, f),\n  r: (n, f) => {\n    if (n === 0) {\n      return \"0\";\n    }\n    const a = Math.abs(n);\n    const p = Math.floor(Math.log10(a));\n    const q = p - (f - 1);\n    if (q <= 0) {\n      return a.toFixed(-q);\n    }\n    const x = Math.pow(10, q);\n    return (Math.round(a / x) * x).toFixed();\n  },\n  s: (n, f) => {\n    const p = getSIPrefixPower(n);\n    return decimalTypes.r(n / Math.pow(10, p), f);\n  },\n  \"%\": (n, f) => decimalTypes.f(n * 100, f)\n};\nfunction removeTrailingZeros(numString) {\n  return numString.replace(/\\.0+$/, \"\").replace(/(\\.[1-9])0+$/, \"$1\");\n}\nfunction insertSeparator(numString, separator) {\n  let dotIndex = numString.indexOf(\".\");\n  if (dotIndex < 0) {\n    dotIndex = numString.length;\n  }\n  const integerChars = numString.substring(0, dotIndex).split(\"\");\n  const fractionalPart = numString.substring(dotIndex);\n  for (let i = integerChars.length - 3; i > 0; i -= 3) {\n    integerChars.splice(i, 0, separator);\n  }\n  return `${integerChars.join(\"\")}${fractionalPart}`;\n}\nfunction getSIPrefix(n) {\n  return siPrefixes[getSIPrefixPower(n)];\n}\nfunction getSIPrefixPower(n) {\n  const power = Math.log10(Math.abs(n));\n  const p = Math.floor(power / 3) * 3;\n  return Math.max(minSIPrefix, Math.min(maxSIPrefix, p));\n}\nvar minSIPrefix = -24;\nvar maxSIPrefix = 24;\nvar siPrefixes = {\n  [minSIPrefix]: \"y\",\n  [-21]: \"z\",\n  [-18]: \"a\",\n  [-15]: \"f\",\n  [-12]: \"p\",\n  [-9]: \"n\",\n  [-6]: \"\\xB5\",\n  [-3]: \"m\",\n  [0]: \"\",\n  [3]: \"k\",\n  [6]: \"M\",\n  [9]: \"G\",\n  [12]: \"T\",\n  [15]: \"P\",\n  [18]: \"E\",\n  [21]: \"Z\",\n  [maxSIPrefix]: \"Y\"\n};\nvar minusSign = \"\\u2212\";\nfunction addSign(num, numString, signType = \"\") {\n  if (signType === \"(\") {\n    return num >= 0 ? numString : `(${numString})`;\n  }\n  const plusSign = signType === \"+\" ? \"+\" : \"\";\n  return `${num >= 0 ? plusSign : minusSign}${numString}`;\n}\nfunction addPadding(numString, width, fill = \" \", align = \">\") {\n  let result = numString;\n  if (align === \">\" || !align) {\n    result = result.padStart(width, fill);\n  } else if (align === \"<\") {\n    result = result.padEnd(width, fill);\n  } else if (align === \"^\") {\n    const padWidth = Math.max(0, width - result.length);\n    const padLeft = Math.ceil(padWidth / 2);\n    const padRight = Math.floor(padWidth / 2);\n    result = result.padStart(padLeft + result.length, fill);\n    result = result.padEnd(padRight + result.length, fill);\n  }\n  return result;\n}\nfunction tickFormat(ticks, formatter) {\n  const options = parseFormatter(formatter != null ? formatter : \",f\");\n  const {\n    precision\n  } = options;\n  if (precision == null || isNaN(precision)) {\n    if (options.type === \"f\" || options.type === \"%\") {\n      options.precision = Math.max(...ticks.map(x => {\n        if (typeof x !== \"number\" || x === 0) {\n          return 0;\n        }\n        const l = Math.floor(Math.log10(Math.abs(x)));\n        const digits = options.type ? 6 : 12;\n        const exp = x.toExponential(digits - 1).replace(/\\.?0+e/, \"e\");\n        const dotIndex = exp.indexOf(\".\");\n        if (dotIndex < 0) {\n          return l >= 0 ? 0 : -l;\n        }\n        const s = exp.indexOf(\"e\") - dotIndex;\n        return Math.max(0, s - l - 1);\n      }));\n    } else if (!options.type || options.type in decimalTypes) {\n      options.precision = Math.max(...ticks.map(x => {\n        if (typeof x !== \"number\") {\n          return 0;\n        }\n        const exp = x.toExponential((options.type ? 6 : 12) - 1).replace(/\\.?0+e/, \"e\");\n        return exp.substring(0, exp.indexOf(\"e\")).replace(\".\", \"\").length;\n      }));\n    }\n  }\n  const f = format(options);\n  return n => f(Number(n));\n}\n\n// packages/ag-charts-community/src/util/ticks.ts\nvar createNumericTicks = (fractionDigits, takingValues = []) => Object.assign(takingValues, {\n  fractionDigits\n});\nfunction ticks_default(start, stop, count2, minCount, maxCount) {\n  if (count2 < 2) {\n    return range(start, stop, stop - start);\n  }\n  const step = tickStep(start, stop, count2, minCount, maxCount);\n  if (isNaN(step)) {\n    return createNumericTicks(0);\n  }\n  start = Math.ceil(start / step) * step;\n  stop = Math.floor(stop / step) * step;\n  return range(start, stop, step);\n}\nvar tickMultipliers = [1, 2, 5, 10];\nfunction tickStep(a, b, count2, minCount = 0, maxCount = Infinity) {\n  const extent2 = Math.abs(b - a);\n  const rawStep = extent2 / count2;\n  const power = Math.floor(Math.log10(rawStep));\n  const step = Math.pow(10, power);\n  const m = tickMultipliers.map(multiplier => {\n    const s = multiplier * step;\n    const c = Math.ceil(extent2 / s);\n    const isWithinBounds = c >= minCount && c <= maxCount;\n    const diffCount = Math.abs(c - count2);\n    return {\n      multiplier,\n      isWithinBounds,\n      diffCount\n    };\n  }).sort((a2, b2) => {\n    if (a2.isWithinBounds !== b2.isWithinBounds) {\n      return a2.isWithinBounds ? -1 : 1;\n    }\n    return a2.diffCount - b2.diffCount;\n  })[0].multiplier;\n  if (!m || isNaN(m)) {\n    return NaN;\n  }\n  return m * step;\n}\nfunction singleTickDomain(a, b) {\n  const extent2 = Math.abs(b - a);\n  const power = Math.floor(Math.log10(extent2));\n  const step = Math.pow(10, power);\n  const roundStart = a > b ? Math.ceil : Math.floor;\n  const roundStop = b < a ? Math.floor : Math.ceil;\n  return tickMultipliers.map(multiplier => {\n    const s = multiplier * step;\n    const start = roundStart(a / s) * s;\n    const end = roundStop(b / s) * s;\n    const error = 1 - extent2 / Math.abs(end - start);\n    const domain = [start, end];\n    return {\n      error,\n      domain\n    };\n  }).sort((a2, b2) => a2.error - b2.error)[0].domain;\n}\nfunction range(start, stop, step) {\n  const d0 = Math.min(start, stop);\n  const d1 = Math.max(start, stop);\n  const fractionalDigits = countFractionDigits(step);\n  const f = Math.pow(10, fractionalDigits);\n  const n = Math.ceil((d1 - d0) / step);\n  const values = createNumericTicks(fractionalDigits);\n  for (let i = 0; i <= n; i++) {\n    const value = d0 + step * i;\n    values.push(Math.round(value * f) / f);\n  }\n  return values;\n}\n\n// packages/ag-charts-community/src/scale/linearScale.ts\nvar LinearScale = class extends ContinuousScale {\n  constructor() {\n    super([0, 1], [0, 1]);\n    this.type = \"linear\";\n  }\n  toDomain(d) {\n    return d;\n  }\n  ticks() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    if (!this.domain || this.domain.length < 2 || count2 < 1 || this.domain.some(d => !isFinite(d))) {\n      return [];\n    }\n    this.refresh();\n    const [d0, d1] = this.getDomain();\n    const {\n      interval\n    } = this;\n    if (interval) {\n      const step = Math.abs(interval);\n      if (!this.isDenseInterval({\n        start: d0,\n        stop: d1,\n        interval: step\n      })) {\n        return range(d0, d1, step);\n      }\n    }\n    return ticks_default(d0, d1, count2, this.minTickCount, this.maxTickCount);\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  getTickStep(start, stop) {\n    var _a, _b;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    return (_b = this.interval) != null ? _b : tickStep(start, stop, count2, this.minTickCount, this.maxTickCount);\n  }\n  /**\n   * Extends the domain so that it starts and ends on nice round values.\n   */\n  updateNiceDomain() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    if (count2 < 1) {\n      this.niceDomain = [...this.domain];\n      return;\n    }\n    let [start, stop] = this.domain;\n    if (count2 === 1) {\n      [start, stop] = singleTickDomain(start, stop);\n    } else {\n      const roundStart = start > stop ? Math.ceil : Math.floor;\n      const roundStop = stop < start ? Math.floor : Math.ceil;\n      const maxAttempts = 4;\n      for (let i = 0; i < maxAttempts; i++) {\n        const prev0 = start;\n        const prev1 = stop;\n        const step = this.getTickStep(start, stop);\n        const [d0, d1] = this.domain;\n        if (step >= 1) {\n          start = roundStart(d0 / step) * step;\n          stop = roundStop(d1 / step) * step;\n        } else {\n          const s = 1 / step;\n          start = roundStart(d0 * s) / s;\n          stop = roundStop(d1 * s) / s;\n        }\n        if (start === prev0 && stop === prev1) {\n          break;\n        }\n      }\n    }\n    this.niceDomain = [start, stop];\n  }\n  tickFormat({\n    ticks,\n    specifier\n  }) {\n    return tickFormat(ticks != null ? ticks : this.ticks(), specifier);\n  }\n};\n\n// packages/ag-charts-community/src/chart/marker/marker.ts\nvar Marker = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.size = 12;\n  }\n  computeBBox() {\n    const {\n      x,\n      y,\n      size\n    } = this;\n    const half = size / 2;\n    return new BBox(x - half, y - half, size, size);\n  }\n  applyPath(s, moves) {\n    const {\n      path\n    } = this;\n    let {\n      x,\n      y\n    } = this;\n    path.clear();\n    for (const {\n      x: mx,\n      y: my,\n      t\n    } of moves) {\n      x += mx * s;\n      y += my * s;\n      if (t === \"move\") {\n        path.moveTo(x, y);\n      } else {\n        path.lineTo(x, y);\n      }\n    }\n    path.closePath();\n  }\n};\n__decorateClass([ScenePathChangeDetection()], Marker.prototype, \"x\", 2);\n__decorateClass([ScenePathChangeDetection()], Marker.prototype, \"y\", 2);\n__decorateClass([ScenePathChangeDetection({\n  convertor: Math.abs\n})], Marker.prototype, \"size\", 2);\n\n// packages/ag-charts-community/src/chart/marker/circle.ts\nvar Circle = class extends Marker {\n  updatePath() {\n    const {\n      x,\n      y,\n      path,\n      size\n    } = this;\n    const r = size / 2;\n    path.clear();\n    path.arc(x, y, r, 0, Math.PI * 2);\n    path.closePath();\n  }\n};\nCircle.className = \"Circle\";\n\n// packages/ag-charts-community/src/chart/marker/cross.ts\nvar _Cross = class _Cross extends Marker {\n  updatePath() {\n    const s = this.size / 4.2;\n    super.applyPath(s, _Cross.moves);\n  }\n};\n_Cross.className = \"Cross\";\n_Cross.moves = [{\n  x: -1,\n  y: 0,\n  t: \"move\"\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: 1,\n  y: -1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: -1,\n  y: 1\n}, {\n  x: -1,\n  y: -1\n}];\nvar Cross = _Cross;\n\n// packages/ag-charts-community/src/chart/marker/diamond.ts\nvar _Diamond = class _Diamond extends Marker {\n  updatePath() {\n    const s = this.size / 2;\n    super.applyPath(s, _Diamond.moves);\n  }\n};\n_Diamond.className = \"Diamond\";\n_Diamond.moves = [{\n  x: 0,\n  y: -1,\n  t: \"move\"\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: -1,\n  y: 1\n}, {\n  x: -1,\n  y: -1\n}, {\n  x: 1,\n  y: -1\n}];\nvar Diamond = _Diamond;\n\n// packages/ag-charts-community/src/chart/marker/heart.ts\nvar Heart = class extends Marker {\n  rad(degree) {\n    return degree / 180 * Math.PI;\n  }\n  updatePath() {\n    const {\n      x,\n      path,\n      size,\n      rad\n    } = this;\n    const r = size / 4;\n    const y = this.y + r / 2;\n    path.clear();\n    path.arc(x - r, y - r, r, rad(130), rad(330));\n    path.arc(x + r, y - r, r, rad(220), rad(50));\n    path.lineTo(x, y + r);\n    path.closePath();\n  }\n};\nHeart.className = \"Heart\";\n\n// packages/ag-charts-community/src/chart/marker/plus.ts\nvar _Plus = class _Plus extends Marker {\n  updatePath() {\n    const s = this.size / 3;\n    super.applyPath(s, _Plus.moves);\n  }\n};\n_Plus.className = \"Plus\";\n_Plus.moves = [{\n  x: -0.5,\n  y: -0.5,\n  t: \"move\"\n}, {\n  x: 0,\n  y: -1\n}, {\n  x: 1,\n  y: 0\n}, {\n  x: 0,\n  y: 1\n}, {\n  x: 1,\n  y: 0\n}, {\n  x: 0,\n  y: 1\n}, {\n  x: -1,\n  y: 0\n}, {\n  x: 0,\n  y: 1\n}, {\n  x: -1,\n  y: 0\n}, {\n  x: 0,\n  y: -1\n}, {\n  x: -1,\n  y: 0\n}, {\n  x: 0,\n  y: -1\n}];\nvar Plus = _Plus;\n\n// packages/ag-charts-community/src/chart/marker/square.ts\nvar Square = class extends Marker {\n  updatePath() {\n    const {\n      path,\n      x,\n      y\n    } = this;\n    const hs = this.size / 2;\n    path.clear();\n    path.moveTo(this.align(x - hs), this.align(y - hs));\n    path.lineTo(this.align(x + hs), this.align(y - hs));\n    path.lineTo(this.align(x + hs), this.align(y + hs));\n    path.lineTo(this.align(x - hs), this.align(y + hs));\n    path.closePath();\n  }\n};\nSquare.className = \"Square\";\n\n// packages/ag-charts-community/src/chart/marker/triangle.ts\nvar _Triangle = class _Triangle extends Marker {\n  updatePath() {\n    const s = this.size * 1.1;\n    super.applyPath(s, _Triangle.moves);\n  }\n};\n_Triangle.className = \"Triangle\";\n_Triangle.moves = [{\n  x: 0,\n  y: -0.48,\n  t: \"move\"\n}, {\n  x: 0.5,\n  y: 0.87\n}, {\n  x: -1,\n  y: 0\n}];\nvar Triangle = _Triangle;\n\n// packages/ag-charts-community/src/chart/marker/util.ts\nvar MARKER_SHAPES = {\n  circle: Circle,\n  cross: Cross,\n  diamond: Diamond,\n  heart: Heart,\n  plus: Plus,\n  square: Square,\n  triangle: Triangle\n};\nvar MARKER_SUPPORTED_SHAPES = Object.keys(MARKER_SHAPES);\nfunction isMarkerShape(shape) {\n  return typeof shape === \"string\" && MARKER_SUPPORTED_SHAPES.includes(shape);\n}\nfunction getMarker(shape = Square) {\n  if (isMarkerShape(shape)) {\n    return MARKER_SHAPES[shape];\n  }\n  if (typeof shape === \"function\") {\n    return shape;\n  }\n  return Square;\n}\n\n// packages/ag-charts-community/src/scene/image.ts\nvar Image = class extends Node {\n  constructor(sourceImage) {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.opacity = 1;\n    this.sourceImage = sourceImage;\n  }\n  render(renderCtx) {\n    const {\n      ctx,\n      forceRender,\n      stats\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped++;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const image = this.sourceImage;\n    ctx.globalAlpha = this.opacity;\n    ctx.drawImage(image, 0, 0, image.width, image.height, this.x, this.y, this.width, this.height);\n    super.render(renderCtx);\n  }\n};\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Image.prototype, \"x\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Image.prototype, \"y\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Image.prototype, \"width\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Image.prototype, \"height\", 2);\n__decorateClass([SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], Image.prototype, \"opacity\", 2);\n\n// packages/ag-charts-community/src/integrated-charts-scene.ts\nvar motion = __spreadValues(__spreadValues({}, fromToMotion_exports), resetMotion_exports);\n\n// packages/ag-charts-community/src/util/value.ts\nvar isString2 = v => typeof v === \"string\";\nvar isStringObject = v => !!v && Object.hasOwn(v, \"toString\") && isString2(v.toString());\nvar isDate2 = v => v instanceof Date && !isNaN(+v);\nfunction isDiscrete(value) {\n  return isString2(value) || isStringObject(value);\n}\nfunction isContinuous(value) {\n  const isNumberObject = v => !!v && Object.hasOwn(v, \"valueOf\") && isNumber2(v.valueOf());\n  const isDate3 = v => v instanceof Date && !isNaN(+v);\n  return isNumber2(value) || isNumberObject(value) || isDate3(value);\n}\nfunction checkDatum(value, isContinuousScale) {\n  if (isContinuousScale && isContinuous(value)) {\n    return value;\n  } else if (!isContinuousScale) {\n    if (!isDiscrete(value)) {\n      return String(value);\n    }\n    return value;\n  }\n  return void 0;\n}\nvar isNumber2 = v => typeof v === \"number\" && Number.isFinite(v);\n\n// packages/ag-charts-community/src/chart/crossline/crossLine.ts\nvar MATCHING_CROSSLINE_TYPE = property => {\n  return property === \"value\" ? predicateWithMessage((_, ctx) => ctx.target[\"type\"] === \"line\", ctx => ctx.target[\"type\"] === \"range\" ? `crossLine type 'range' to have a 'range' property instead of 'value'` : `crossLine property 'type' to be 'line'`) : predicateWithMessage((_, ctx) => ctx.target[\"type\"] === \"range\", ctx => ctx.target.type === \"line\" ? `crossLine type 'line' to have a 'value' property instead of 'range'` : `crossLine property 'type' to be 'range'`);\n};\nvar validateCrossLineValues = (type, value, range3, scale2) => {\n  const lineCrossLine = type === \"line\" && value !== void 0;\n  const rangeCrossLine = type === \"range\" && range3 !== void 0;\n  if (!lineCrossLine && !rangeCrossLine) {\n    return true;\n  }\n  const [start, end] = range3 != null ? range3 : [value, void 0];\n  const isContinuous2 = ContinuousScale.is(scale2);\n  const validStart = checkDatum(start, isContinuous2) != null && !isNaN(scale2.convert(start));\n  const validEnd = checkDatum(end, isContinuous2) != null && !isNaN(scale2.convert(end));\n  if (lineCrossLine && validStart || rangeCrossLine && validStart && validEnd) {\n    return true;\n  }\n  const message = [`Expecting crossLine`];\n  if (rangeCrossLine) {\n    if (!validStart) {\n      message.push(`range start ${stringify(start)}`);\n    }\n    if (!validEnd) {\n      message.push(`${!validStart ? \"and \" : \"\"}range end ${stringify(end)}`);\n    }\n  } else {\n    message.push(`value ${stringify(start)}`);\n  }\n  message.push(`to match the axis scale domain.`);\n  Logger.warnOnce(message.join(\" \"));\n  return false;\n};\n\n// packages/ag-charts-community/src/chart/crossline/crossLineLabelPosition.ts\nvar horizontalCrosslineTranslationDirections = {\n  top: {\n    xTranslationDirection: 0,\n    yTranslationDirection: -1\n  },\n  bottom: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 1\n  },\n  left: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 0\n  },\n  right: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 0\n  },\n  topLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: -1\n  },\n  topRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: -1\n  },\n  bottomLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 1\n  },\n  bottomRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 1\n  },\n  inside: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 0\n  },\n  insideLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 0\n  },\n  insideRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 0\n  },\n  insideTop: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 1\n  },\n  insideBottom: {\n    xTranslationDirection: 0,\n    yTranslationDirection: -1\n  },\n  insideTopLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 1\n  },\n  insideBottomLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: -1\n  },\n  insideTopRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 1\n  },\n  insideBottomRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: -1\n  }\n};\nvar verticalCrossLineTranslationDirections = {\n  top: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 0\n  },\n  bottom: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 0\n  },\n  left: {\n    xTranslationDirection: 0,\n    yTranslationDirection: -1\n  },\n  right: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 1\n  },\n  topLeft: {\n    xTranslationDirection: -1,\n    yTranslationDirection: -1\n  },\n  topRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 1\n  },\n  bottomLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: -1\n  },\n  bottomRight: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 1\n  },\n  inside: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 0\n  },\n  insideLeft: {\n    xTranslationDirection: 0,\n    yTranslationDirection: 1\n  },\n  insideRight: {\n    xTranslationDirection: 0,\n    yTranslationDirection: -1\n  },\n  insideTop: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 0\n  },\n  insideBottom: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 0\n  },\n  insideTopLeft: {\n    xTranslationDirection: -1,\n    yTranslationDirection: 1\n  },\n  insideBottomLeft: {\n    xTranslationDirection: 1,\n    yTranslationDirection: 1\n  },\n  insideTopRight: {\n    xTranslationDirection: -1,\n    yTranslationDirection: -1\n  },\n  insideBottomRight: {\n    xTranslationDirection: 1,\n    yTranslationDirection: -1\n  }\n};\nfunction calculateLabelTranslation({\n  yDirection,\n  padding = 0,\n  position = \"top\",\n  bbox\n}) {\n  const crossLineTranslationDirections = yDirection ? horizontalCrosslineTranslationDirections : verticalCrossLineTranslationDirections;\n  const {\n    xTranslationDirection,\n    yTranslationDirection\n  } = crossLineTranslationDirections[position];\n  const w = yDirection ? bbox.width : bbox.height;\n  const h = yDirection ? bbox.height : bbox.width;\n  const xTranslation = xTranslationDirection * (padding + w / 2);\n  const yTranslation = yTranslationDirection * (padding + h / 2);\n  return {\n    xTranslation,\n    yTranslation\n  };\n}\nfunction calculateLabelChartPadding({\n  yDirection,\n  bbox,\n  padding = 0,\n  position = \"top\"\n}) {\n  const chartPadding = {};\n  if (position.startsWith(\"inside\")) return chartPadding;\n  if (position === \"top\" && !yDirection) {\n    chartPadding.top = padding + bbox.height;\n  } else if (position === \"bottom\" && !yDirection) {\n    chartPadding.bottom = padding + bbox.height;\n  } else if (position === \"left\" && yDirection) {\n    chartPadding.left = padding + bbox.width;\n  } else if (position === \"right\" && yDirection) {\n    chartPadding.right = padding + bbox.width;\n  }\n  return chartPadding;\n}\nvar POSITION_TOP_COORDINATES = ({\n  yDirection,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xEnd / 2,\n      y: yStart\n    };\n  } else {\n    return {\n      x: xEnd,\n      y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart\n    };\n  }\n};\nvar POSITION_LEFT_COORDINATES = ({\n  yDirection,\n  xStart,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xStart,\n      y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart\n    };\n  } else {\n    return {\n      x: xEnd / 2,\n      y: yStart\n    };\n  }\n};\nvar POSITION_RIGHT_COORDINATES = ({\n  yDirection,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xEnd,\n      y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart\n    };\n  } else {\n    return {\n      x: xEnd / 2,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  }\n};\nvar POSITION_BOTTOM_COORDINATES = ({\n  yDirection,\n  xStart,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xEnd / 2,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  } else {\n    return {\n      x: xStart,\n      y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart\n    };\n  }\n};\nvar POSITION_INSIDE_COORDINATES = ({\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  return {\n    x: xEnd / 2,\n    y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart\n  };\n};\nvar POSITION_TOP_LEFT_COORDINATES = ({\n  yDirection,\n  xStart,\n  xEnd,\n  yStart\n}) => {\n  if (yDirection) {\n    return {\n      x: xStart / 2,\n      y: yStart\n    };\n  } else {\n    return {\n      x: xEnd,\n      y: yStart\n    };\n  }\n};\nvar POSITION_BOTTOM_LEFT_COORDINATES = ({\n  yDirection,\n  xStart,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xStart,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  } else {\n    return {\n      x: xStart,\n      y: yStart\n    };\n  }\n};\nvar POSITION_TOP_RIGHT_COORDINATES = ({\n  yDirection,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xEnd,\n      y: yStart\n    };\n  } else {\n    return {\n      x: xEnd,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  }\n};\nvar POSITION_BOTTOM_RIGHT_COORDINATES = ({\n  yDirection,\n  xStart,\n  xEnd,\n  yStart,\n  yEnd\n}) => {\n  if (yDirection) {\n    return {\n      x: xEnd,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  } else {\n    return {\n      x: xStart,\n      y: !isNaN(yEnd) ? yEnd : yStart\n    };\n  }\n};\nvar labelDirectionHandling = {\n  top: {\n    c: POSITION_TOP_COORDINATES\n  },\n  bottom: {\n    c: POSITION_BOTTOM_COORDINATES\n  },\n  left: {\n    c: POSITION_LEFT_COORDINATES\n  },\n  right: {\n    c: POSITION_RIGHT_COORDINATES\n  },\n  topLeft: {\n    c: POSITION_TOP_LEFT_COORDINATES\n  },\n  topRight: {\n    c: POSITION_TOP_RIGHT_COORDINATES\n  },\n  bottomLeft: {\n    c: POSITION_BOTTOM_LEFT_COORDINATES\n  },\n  bottomRight: {\n    c: POSITION_BOTTOM_RIGHT_COORDINATES\n  },\n  inside: {\n    c: POSITION_INSIDE_COORDINATES\n  },\n  insideLeft: {\n    c: POSITION_LEFT_COORDINATES\n  },\n  insideRight: {\n    c: POSITION_RIGHT_COORDINATES\n  },\n  insideTop: {\n    c: POSITION_TOP_COORDINATES\n  },\n  insideBottom: {\n    c: POSITION_BOTTOM_COORDINATES\n  },\n  insideTopLeft: {\n    c: POSITION_TOP_LEFT_COORDINATES\n  },\n  insideBottomLeft: {\n    c: POSITION_BOTTOM_LEFT_COORDINATES\n  },\n  insideTopRight: {\n    c: POSITION_TOP_RIGHT_COORDINATES\n  },\n  insideBottomRight: {\n    c: POSITION_BOTTOM_RIGHT_COORDINATES\n  }\n};\n\n// packages/ag-charts-community/src/chart/crossline/cartesianCrossLine.ts\nvar CROSSLINE_LABEL_POSITION = UNION([\"top\", \"left\", \"right\", \"bottom\", \"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\", \"inside\", \"insideLeft\", \"insideRight\", \"insideTop\", \"insideBottom\", \"insideTopLeft\", \"insideBottomLeft\", \"insideTopRight\", \"insideBottomRight\"], \"crossLine label position\");\nvar CartesianCrossLineLabel = class {\n  constructor() {\n    this.enabled = void 0;\n    this.text = void 0;\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 14;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.padding = 5;\n    this.color = \"rgba(87, 87, 87, 1)\";\n    this.position = void 0;\n    this.rotation = void 0;\n    this.parallel = void 0;\n  }\n};\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"enabled\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"text\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], CartesianCrossLineLabel.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], CartesianCrossLineLabel.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(NUMBER)], CartesianCrossLineLabel.prototype, \"padding\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"color\", 2);\n__decorateClass([Validate(CROSSLINE_LABEL_POSITION, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"position\", 2);\n__decorateClass([Validate(DEGREE, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"rotation\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], CartesianCrossLineLabel.prototype, \"parallel\", 2);\nvar _CartesianCrossLine = class _CartesianCrossLine {\n  constructor() {\n    this.id = createId(this);\n    this.enabled = void 0;\n    this.type = void 0;\n    this.range = void 0;\n    this.value = void 0;\n    this.fill = void 0;\n    this.fillOpacity = void 0;\n    this.stroke = void 0;\n    this.strokeWidth = void 0;\n    this.strokeOpacity = void 0;\n    this.lineDash = void 0;\n    this.label = new CartesianCrossLineLabel();\n    this.scale = void 0;\n    this.clippedRange = [-Infinity, Infinity];\n    this.gridLength = 0;\n    this.sideFlag = -1;\n    this.parallelFlipRotation = 0;\n    this.regularFlipRotation = 0;\n    this.direction = \"x\" /* X */;\n    this.group = new Group({\n      name: `${this.id}`,\n      layer: true,\n      zIndex: _CartesianCrossLine.LINE_LAYER_ZINDEX\n    });\n    this.labelGroup = new Group({\n      name: `${this.id}`,\n      layer: true,\n      zIndex: _CartesianCrossLine.LABEL_LAYER_ZINDEX\n    });\n    this.crossLineRange = new Range();\n    this.crossLineLabel = new Text();\n    this.labelPoint = void 0;\n    this.data = [];\n    this.startLine = false;\n    this.endLine = false;\n    this.isRange = false;\n    const {\n      group: group2,\n      labelGroup,\n      crossLineRange,\n      crossLineLabel\n    } = this;\n    group2.append(crossLineRange);\n    labelGroup.append(crossLineLabel);\n    crossLineRange.pointerEvents = 1 /* None */;\n  }\n  update(visible) {\n    const {\n      enabled,\n      data,\n      type,\n      value,\n      range: range3,\n      scale: scale2\n    } = this;\n    if (!type || !scale2 || !enabled || !visible || !validateCrossLineValues(type, value, range3, scale2) || data.length === 0) {\n      this.group.visible = false;\n      this.labelGroup.visible = false;\n      return;\n    }\n    this.group.visible = visible;\n    this.labelGroup.visible = visible;\n    this.group.zIndex = this.getZIndex(this.isRange);\n    this.updateNodes();\n  }\n  calculateLayout(visible, reversedAxis) {\n    if (!visible) {\n      return;\n    }\n    const dataCreated = this.createNodeData(reversedAxis);\n    if (!dataCreated) {\n      return;\n    }\n    const {\n      sideFlag,\n      gridLength,\n      data\n    } = this;\n    const boxes = [];\n    const x1 = 0;\n    const x2 = sideFlag * gridLength;\n    const y1 = data[0];\n    const y2 = data[1];\n    const crossLineBox = new BBox(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x1 - x2), Math.abs(y1 - y2));\n    boxes.push(crossLineBox);\n    const labelBox = this.computeLabelBBox();\n    if (labelBox) {\n      boxes.push(labelBox);\n    }\n    return BBox.merge(boxes);\n  }\n  updateNodes() {\n    this.updateRangeNode();\n    if (this.label.enabled) {\n      this.updateLabel();\n      this.positionLabel();\n    }\n  }\n  createNodeData(reversedAxis) {\n    var _a, _b, _c;\n    const {\n      scale: scale2,\n      gridLength,\n      sideFlag,\n      direction,\n      label: {\n        position = \"top\"\n      },\n      clippedRange,\n      strokeWidth = 0\n    } = this;\n    this.data = [];\n    if (!scale2) {\n      return false;\n    }\n    const bandwidth = (_a = scale2.bandwidth) != null ? _a : 0;\n    const step = (_b = scale2.step) != null ? _b : 0;\n    const padding = (reversedAxis ? -1 : 1) * (scale2 instanceof BandScale ? (step - bandwidth) / 2 : 0);\n    const [xStart, xEnd] = [0, sideFlag * gridLength];\n    let [yStart, yEnd] = this.getRange();\n    let [clampedYStart, clampedYEnd] = [Number(scale2.convert(yStart, {\n      clampMode: \"clamped\"\n    })) - padding, scale2.convert(yEnd, {\n      clampMode: \"clamped\"\n    }) + bandwidth + padding];\n    clampedYStart = clampArray(clampedYStart, clippedRange);\n    clampedYEnd = clampArray(clampedYEnd, clippedRange);\n    [yStart, yEnd] = [Number(scale2.convert(yStart)), scale2.convert(yEnd) + bandwidth];\n    const validRange = (yStart === clampedYStart || yEnd === clampedYEnd || clampedYStart !== clampedYEnd) && Math.abs(clampedYEnd - clampedYStart) > 0;\n    if (validRange && clampedYStart > clampedYEnd) {\n      [clampedYStart, clampedYEnd] = [clampedYEnd, clampedYStart];\n      [yStart, yEnd] = [yEnd, yStart];\n    }\n    if (yStart - padding >= clampedYStart) yStart -= padding;\n    if (yEnd + padding <= clampedYEnd) yEnd += padding;\n    this.isRange = validRange;\n    this.startLine = strokeWidth > 0 && yStart >= clampedYStart && yStart <= clampedYStart + padding;\n    this.endLine = strokeWidth > 0 && yEnd >= clampedYEnd - bandwidth - padding && yEnd <= clampedYEnd;\n    if (!validRange && !this.startLine && !this.endLine) {\n      return false;\n    }\n    this.data = [clampedYStart, clampedYEnd];\n    if (this.label.enabled) {\n      const yDirection = direction === \"y\" /* Y */;\n      const {\n        c = POSITION_TOP_COORDINATES\n      } = (_c = labelDirectionHandling[position]) != null ? _c : {};\n      const {\n        x: labelX,\n        y: labelY\n      } = c({\n        yDirection,\n        xStart,\n        xEnd,\n        yStart: clampedYStart,\n        yEnd: clampedYEnd\n      });\n      this.labelPoint = {\n        x: labelX,\n        y: labelY\n      };\n    }\n    return true;\n  }\n  updateRangeNode() {\n    var _a;\n    const {\n      crossLineRange,\n      sideFlag,\n      gridLength,\n      data,\n      startLine,\n      endLine,\n      isRange,\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      lineDash\n    } = this;\n    crossLineRange.x1 = 0;\n    crossLineRange.x2 = sideFlag * gridLength;\n    crossLineRange.y1 = data[0];\n    crossLineRange.y2 = data[1];\n    crossLineRange.startLine = startLine;\n    crossLineRange.endLine = endLine;\n    crossLineRange.isRange = isRange;\n    crossLineRange.fill = fill;\n    crossLineRange.fillOpacity = fillOpacity != null ? fillOpacity : 1;\n    crossLineRange.stroke = stroke;\n    crossLineRange.strokeWidth = strokeWidth != null ? strokeWidth : 1;\n    crossLineRange.strokeOpacity = (_a = this.strokeOpacity) != null ? _a : 1;\n    crossLineRange.lineDash = lineDash;\n  }\n  updateLabel() {\n    const {\n      crossLineLabel,\n      label\n    } = this;\n    if (!label.text) {\n      return;\n    }\n    crossLineLabel.fontStyle = label.fontStyle;\n    crossLineLabel.fontWeight = label.fontWeight;\n    crossLineLabel.fontSize = label.fontSize;\n    crossLineLabel.fontFamily = label.fontFamily;\n    crossLineLabel.fill = label.color;\n    crossLineLabel.text = label.text;\n  }\n  positionLabel() {\n    const {\n      crossLineLabel,\n      labelPoint: {\n        x = void 0,\n        y = void 0\n      } = {},\n      label: {\n        parallel,\n        rotation,\n        position = \"top\",\n        padding = 0\n      },\n      direction,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this;\n    if (x === void 0 || y === void 0) {\n      return;\n    }\n    const {\n      defaultRotation,\n      configuredRotation\n    } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    crossLineLabel.rotation = defaultRotation + configuredRotation;\n    crossLineLabel.textBaseline = \"middle\";\n    crossLineLabel.textAlign = \"center\";\n    const bbox = crossLineLabel.computeTransformedBBox();\n    if (!bbox) {\n      return;\n    }\n    const yDirection = direction === \"y\" /* Y */;\n    const {\n      xTranslation,\n      yTranslation\n    } = calculateLabelTranslation({\n      yDirection,\n      padding,\n      position,\n      bbox\n    });\n    crossLineLabel.translationX = x + xTranslation;\n    crossLineLabel.translationY = y + yTranslation;\n  }\n  getZIndex(isRange = false) {\n    if (isRange) {\n      return _CartesianCrossLine.RANGE_LAYER_ZINDEX;\n    }\n    return _CartesianCrossLine.LINE_LAYER_ZINDEX;\n  }\n  getRange() {\n    var _a;\n    const {\n      value,\n      range: range3,\n      scale: scale2\n    } = this;\n    const isContinuous2 = ContinuousScale.is(scale2);\n    const start = (_a = range3 == null ? void 0 : range3[0]) != null ? _a : value;\n    let end = range3 == null ? void 0 : range3[1];\n    if (!isContinuous2 && end === void 0) {\n      end = start;\n    }\n    if (isContinuous2 && start === end) {\n      end = void 0;\n    }\n    return [start, end];\n  }\n  computeLabelBBox() {\n    const {\n      label\n    } = this;\n    if (!label.enabled) {\n      return void 0;\n    }\n    const tempText = new Text();\n    tempText.fontFamily = label.fontFamily;\n    tempText.fontSize = label.fontSize;\n    tempText.fontStyle = label.fontStyle;\n    tempText.fontWeight = label.fontWeight;\n    tempText.text = label.text;\n    const {\n      labelPoint: {\n        x = void 0,\n        y = void 0\n      } = {},\n      label: {\n        parallel,\n        rotation,\n        position = \"top\",\n        padding = 0\n      },\n      direction,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this;\n    if (x === void 0 || y === void 0) {\n      return void 0;\n    }\n    const {\n      configuredRotation\n    } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    tempText.rotation = configuredRotation;\n    tempText.textBaseline = \"middle\";\n    tempText.textAlign = \"center\";\n    const bbox = tempText.computeTransformedBBox();\n    if (!bbox) {\n      return void 0;\n    }\n    const yDirection = direction === \"y\" /* Y */;\n    const {\n      xTranslation,\n      yTranslation\n    } = calculateLabelTranslation({\n      yDirection,\n      padding,\n      position,\n      bbox\n    });\n    tempText.translationX = x + xTranslation;\n    tempText.translationY = y + yTranslation;\n    return tempText.computeTransformedBBox();\n  }\n  calculatePadding(padding) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const {\n      isRange,\n      startLine,\n      endLine,\n      direction,\n      label: {\n        padding: labelPadding = 0,\n        position = \"top\"\n      }\n    } = this;\n    if (!isRange && !startLine && !endLine) {\n      return;\n    }\n    const crossLineLabelBBox = this.computeLabelBBox();\n    const labelX = crossLineLabelBBox == null ? void 0 : crossLineLabelBBox.x;\n    const labelY = crossLineLabelBBox == null ? void 0 : crossLineLabelBBox.y;\n    if (!crossLineLabelBBox || labelX == void 0 || labelY == void 0) {\n      return;\n    }\n    const chartPadding = calculateLabelChartPadding({\n      yDirection: direction === \"y\" /* Y */,\n      padding: labelPadding,\n      position,\n      bbox: crossLineLabelBBox\n    });\n    padding.left = Math.max((_a = padding.left) != null ? _a : 0, (_b = chartPadding.left) != null ? _b : 0);\n    padding.right = Math.max((_c = padding.right) != null ? _c : 0, (_d = chartPadding.right) != null ? _d : 0);\n    padding.top = Math.max((_e = padding.top) != null ? _e : 0, (_f = chartPadding.top) != null ? _f : 0);\n    padding.bottom = Math.max((_g = padding.bottom) != null ? _g : 0, (_h = chartPadding.bottom) != null ? _h : 0);\n  }\n};\n_CartesianCrossLine.LINE_LAYER_ZINDEX = 8 /* SERIES_CROSSLINE_LINE_ZINDEX */;\n_CartesianCrossLine.RANGE_LAYER_ZINDEX = 3 /* SERIES_CROSSLINE_RANGE_ZINDEX */;\n_CartesianCrossLine.LABEL_LAYER_ZINDEX = 7 /* SERIES_LABEL_ZINDEX */;\n_CartesianCrossLine.className = \"CrossLine\";\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"enabled\", 2);\n__decorateClass([Validate(UNION([\"range\", \"line\"], \"a crossLine type\"), {\n  optional: true\n})], _CartesianCrossLine.prototype, \"type\", 2);\n__decorateClass([Validate(AND(MATCHING_CROSSLINE_TYPE(\"range\"), ARRAY.restrict({\n  length: 2\n})), {\n  optional: true\n})], _CartesianCrossLine.prototype, \"range\", 2);\n__decorateClass([Validate(MATCHING_CROSSLINE_TYPE(\"value\"), {\n  optional: true\n})], _CartesianCrossLine.prototype, \"value\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"stroke\", 2);\n__decorateClass([Validate(NUMBER, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH, {\n  optional: true\n})], _CartesianCrossLine.prototype, \"lineDash\", 2);\nvar CartesianCrossLine = _CartesianCrossLine;\n\n// packages/ag-charts-community/src/module/moduleMap.ts\nvar ModuleMap = class {\n  constructor() {\n    this.moduleMap = /* @__PURE__ */new Map();\n  }\n  addModule(module, moduleFactory) {\n    if (this.moduleMap.has(module.optionsKey)) {\n      throw new Error(`AG Charts - module already initialised: ${module.optionsKey}`);\n    }\n    this.moduleMap.set(module.optionsKey, moduleFactory(module));\n  }\n  removeModule(module) {\n    var _a;\n    const moduleKey = isString(module) ? module : module.optionsKey;\n    (_a = this.moduleMap.get(moduleKey)) == null ? void 0 : _a.destroy();\n    this.moduleMap.delete(moduleKey);\n  }\n  isModuleEnabled(module) {\n    return this.moduleMap.has(isString(module) ? module : module.optionsKey);\n  }\n  getModule(module) {\n    return this.moduleMap.get(isString(module) ? module : module.optionsKey);\n  }\n  get modules() {\n    return this.moduleMap.values();\n  }\n  mapValues(callback) {\n    return Array.from(this.moduleMap.values()).map(callback);\n  }\n  destroy() {\n    for (const optionsKey of this.moduleMap.keys()) {\n      this.removeModule({\n        optionsKey\n      });\n    }\n  }\n};\n\n// packages/ag-charts-community/src/motion/states.ts\nvar StateMachine = class {\n  constructor(initialState, states, preTransitionCb) {\n    this.states = states;\n    this.preTransitionCb = preTransitionCb;\n    this.debug = Debug.create(true, \"animation\");\n    this.state = initialState;\n    this.debug(`%c${this.constructor.name} | init -> ${initialState}`, \"color: green\");\n  }\n  transition(event, data) {\n    var _a, _b;\n    const currentStateConfig = this.states[this.state];\n    const destinationTransition = currentStateConfig == null ? void 0 : currentStateConfig[event];\n    if (!destinationTransition) {\n      this.debug(`%c${this.constructor.name} | ${this.state} -> ${event} -> ${this.state}`, \"color: grey\");\n      return;\n    }\n    let destinationState = this.state;\n    if (typeof destinationTransition === \"string\") {\n      destinationState = destinationTransition;\n    } else if (typeof destinationTransition === \"object\") {\n      destinationState = destinationTransition.target;\n    }\n    this.debug(`%c${this.constructor.name} | ${this.state} -> ${event} -> ${destinationState}`, \"color: green\");\n    (_a = this.preTransitionCb) == null ? void 0 : _a.call(this, this.state, destinationState);\n    this.state = destinationState;\n    if (typeof destinationTransition === \"function\") {\n      destinationTransition(data);\n    } else if (typeof destinationTransition === \"object\") {\n      (_b = destinationTransition.action) == null ? void 0 : _b.call(destinationTransition, data);\n    }\n    return this.state;\n  }\n};\n\n// packages/ag-charts-community/src/scale/logScale.ts\nvar identity = x => x;\nvar _LogScale = class _LogScale extends ContinuousScale {\n  constructor() {\n    super([1, 10], [0, 1]);\n    this.type = \"log\";\n    this.base = 10;\n    this.baseLog = identity;\n    this.basePow = identity;\n    this.log = x => {\n      const start = Math.min(this.domain[0], this.domain[1]);\n      return start >= 0 ? this.baseLog(x) : -this.baseLog(-x);\n    };\n    this.pow = x => {\n      const start = Math.min(this.domain[0], this.domain[1]);\n      return start >= 0 ? this.basePow(x) : -this.basePow(-x);\n    };\n    this.defaultClampMode = \"clamped\";\n  }\n  toDomain(d) {\n    return d;\n  }\n  transform(x) {\n    const start = Math.min(this.domain[0], this.domain[1]);\n    return start >= 0 ? Math.log(x) : -Math.log(-x);\n  }\n  transformInvert(x) {\n    const start = Math.min(this.domain[0], this.domain[1]);\n    return start >= 0 ? Math.exp(x) : -Math.exp(-x);\n  }\n  refresh() {\n    if (this.base <= 0) {\n      this.base = 0;\n      Logger.warnOnce(\"expecting a finite Number greater than to 0\");\n    }\n    super.refresh();\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    this.updateLogFn();\n    this.updatePowFn();\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  updateLogFn() {\n    const {\n      base\n    } = this;\n    let log;\n    if (base === 10) {\n      log = Math.log10;\n    } else if (base === Math.E) {\n      log = Math.log;\n    } else if (base === 2) {\n      log = Math.log2;\n    } else {\n      const logBase = Math.log(base);\n      log = x => Math.log(x) / logBase;\n    }\n    this.baseLog = log;\n  }\n  updatePowFn() {\n    const {\n      base\n    } = this;\n    let pow;\n    if (base === 10) {\n      pow = _LogScale.pow10;\n    } else if (base === Math.E) {\n      pow = Math.exp;\n    } else {\n      pow = x => Math.pow(base, x);\n    }\n    this.basePow = pow;\n  }\n  updateNiceDomain() {\n    const [d0, d1] = this.domain;\n    const roundStart = d0 > d1 ? Math.ceil : Math.floor;\n    const roundStop = d1 < d0 ? Math.floor : Math.ceil;\n    const n0 = this.pow(roundStart(this.log(d0)));\n    const n1 = this.pow(roundStop(this.log(d1)));\n    this.niceDomain = [n0, n1];\n  }\n  static pow10(x) {\n    return x >= 0 ? Math.pow(10, x) : 1 / Math.pow(10, -x);\n  }\n  ticks() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : 10;\n    if (!this.domain || this.domain.length < 2 || count2 < 1) {\n      return [];\n    }\n    this.refresh();\n    const base = this.base;\n    const [d0, d1] = this.getDomain();\n    const start = Math.min(d0, d1);\n    const stop = Math.max(d0, d1);\n    let p0 = this.log(start);\n    let p1 = this.log(stop);\n    if (this.interval) {\n      const step = Math.abs(this.interval);\n      const absDiff = Math.abs(p1 - p0);\n      let ticks2 = range(p0, p1, Math.min(absDiff, step));\n      ticks2 = createNumericTicks(ticks2.fractionDigits, ticks2.map(x => this.pow(x)).filter(t => t >= start && t <= stop));\n      if (!this.isDenseInterval({\n        start,\n        stop,\n        interval: step,\n        count: ticks2.length\n      })) {\n        return ticks2;\n      }\n    }\n    const isBaseInteger = base % 1 === 0;\n    const isDiffLarge = p1 - p0 >= count2;\n    if (!isBaseInteger || isDiffLarge) {\n      let ticks2 = ticks_default(p0, p1, Math.min(p1 - p0, count2));\n      ticks2 = createNumericTicks(ticks2.fractionDigits, ticks2.map(x => this.pow(x)));\n      return ticks2;\n    }\n    const ticks = [];\n    const isPositive = start > 0;\n    p0 = Math.floor(p0) - 1;\n    p1 = Math.round(p1) + 1;\n    const min = Math.min(...this.range);\n    const max = Math.max(...this.range);\n    const availableSpacing = (max - min) / count2;\n    let lastTickPosition = Infinity;\n    for (let p = p0; p <= p1; p++) {\n      const nextMagnitudeTickPosition = this.convert(this.pow(p + 1));\n      for (let k = 1; k < base; k++) {\n        const q = isPositive ? k : base - k + 1;\n        const t = this.pow(p) * q;\n        const tickPosition = this.convert(t);\n        const prevSpacing = Math.abs(lastTickPosition - tickPosition);\n        const nextSpacing = Math.abs(tickPosition - nextMagnitudeTickPosition);\n        const fits = prevSpacing >= availableSpacing && nextSpacing >= availableSpacing;\n        if (t >= start && t <= stop && (k === 1 || fits)) {\n          ticks.push(t);\n          lastTickPosition = tickPosition;\n        }\n      }\n    }\n    return ticks;\n  }\n  tickFormat({\n    count: count2,\n    ticks,\n    specifier\n  }) {\n    const {\n      base\n    } = this;\n    if (specifier == null) {\n      specifier = base === 10 ? \".0e\" : \",\";\n    }\n    if (typeof specifier === \"string\") {\n      specifier = format(specifier);\n    }\n    if (count2 === Infinity) {\n      return specifier;\n    }\n    if (ticks == null) {\n      this.ticks();\n    }\n    return d => {\n      return specifier(d);\n    };\n  }\n};\n__decorateClass([Invalidating], _LogScale.prototype, \"base\", 2);\nvar LogScale = _LogScale;\n\n// packages/ag-charts-community/src/util/timeFormat.ts\nvar CONSTANTS = {\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n};\nfunction dayOfYear(date, startOfYear = new Date(date.getFullYear(), 0, 1)) {\n  const startOffset = date.getTimezoneOffset() - startOfYear.getTimezoneOffset();\n  const timeDiff = date.getTime() - startOfYear.getTime() + startOffset * 6e4;\n  const timeOneDay = 36e5 * 24;\n  return Math.floor(timeDiff / timeOneDay);\n}\nfunction weekOfYear(date, startDay) {\n  const startOfYear = new Date(date.getFullYear(), 0, 1);\n  const startOfYearDay = startOfYear.getDay();\n  const firstWeekStartOffset = (startDay - startOfYearDay + 7) % 7;\n  const startOffset = new Date(date.getFullYear(), 0, firstWeekStartOffset + 1);\n  if (startOffset <= date) {\n    return Math.floor(dayOfYear(date, startOffset) / 7) + 1;\n  }\n  return 0;\n}\nvar SUNDAY = 0;\nvar MONDAY = 1;\nvar THURSDAY = 4;\nfunction isoWeekOfYear(date, year2 = date.getFullYear()) {\n  const firstOfYear = new Date(year2, 0, 1);\n  const firstOfYearDay = firstOfYear.getDay();\n  const firstThursdayOffset = (THURSDAY - firstOfYearDay + 7) % 7;\n  const startOffset = new Date(year2, 0, firstThursdayOffset - (THURSDAY - MONDAY) + 1);\n  if (startOffset <= date) {\n    return Math.floor(dayOfYear(date, startOffset) / 7) + 1;\n  }\n  return isoWeekOfYear(date, year2 - 1);\n}\nfunction timezone(date) {\n  const offset4 = date.getTimezoneOffset();\n  const unsignedOffset = Math.abs(offset4);\n  const sign = offset4 > 0 ? \"-\" : \"+\";\n  return `${sign}${pad(Math.floor(unsignedOffset / 60), 2, \"0\")}${pad(Math.floor(unsignedOffset % 60), 2, \"0\")}`;\n}\nvar FORMATTERS = {\n  a: d => CONSTANTS.shortDays[d.getDay()],\n  A: d => CONSTANTS.days[d.getDay()],\n  b: d => CONSTANTS.shortMonths[d.getMonth()],\n  B: d => CONSTANTS.months[d.getMonth()],\n  c: \"%x, %X\",\n  d: (d, p) => pad(d.getDate(), 2, p != null ? p : \"0\"),\n  e: \"%_d\",\n  f: (d, p) => pad(d.getMilliseconds() * 1e3, 6, p != null ? p : \"0\"),\n  H: (d, p) => pad(d.getHours(), 2, p != null ? p : \"0\"),\n  I: (d, p) => {\n    const hours = d.getHours() % 12;\n    return hours === 0 ? \"12\" : pad(hours, 2, p != null ? p : \"0\");\n  },\n  j: (d, p) => pad(dayOfYear(d) + 1, 3, p != null ? p : \"0\"),\n  m: (d, p) => pad(d.getMonth() + 1, 2, p != null ? p : \"0\"),\n  M: (d, p) => pad(d.getMinutes(), 2, p != null ? p : \"0\"),\n  L: (d, p) => pad(d.getMilliseconds(), 3, p != null ? p : \"0\"),\n  p: d => d.getHours() < 12 ? \"AM\" : \"PM\",\n  Q: d => String(d.getTime()),\n  s: d => String(Math.floor(d.getTime() / 1e3)),\n  S: (d, p) => pad(d.getSeconds(), 2, p != null ? p : \"0\"),\n  u: d => {\n    let day2 = d.getDay();\n    if (day2 < 1) day2 += 7;\n    return String(day2 % 7);\n  },\n  U: (d, p) => pad(weekOfYear(d, SUNDAY), 2, p != null ? p : \"0\"),\n  V: (d, p) => pad(isoWeekOfYear(d), 2, p != null ? p : \"0\"),\n  w: (d, p) => pad(d.getDay(), 2, p != null ? p : \"0\"),\n  W: (d, p) => pad(weekOfYear(d, MONDAY), 2, p != null ? p : \"0\"),\n  x: \"%-m/%-d/%Y\",\n  X: \"%-I:%M:%S %p\",\n  y: (d, p) => pad(d.getFullYear() % 100, 2, p != null ? p : \"0\"),\n  Y: (d, p) => pad(d.getFullYear(), 4, p != null ? p : \"0\"),\n  Z: d => timezone(d),\n  \"%\": () => \"%\"\n};\nvar PADS = {\n  _: \" \",\n  \"0\": \"0\",\n  \"-\": \"\"\n};\nfunction pad(value, size, padChar) {\n  const output = String(Math.floor(value));\n  if (output.length >= size) {\n    return output;\n  }\n  return `${padChar.repeat(size - output.length)}${output}`;\n}\nfunction buildFormatter(formatString) {\n  const formatParts = [];\n  while (formatString.length > 0) {\n    let nextEscapeIdx = formatString.indexOf(\"%\");\n    if (nextEscapeIdx !== 0) {\n      const literalPart = nextEscapeIdx > 0 ? formatString.substring(0, nextEscapeIdx) : formatString;\n      formatParts.push(literalPart);\n    }\n    if (nextEscapeIdx < 0) break;\n    const maybePadSpecifier = formatString[nextEscapeIdx + 1];\n    const maybePad = PADS[maybePadSpecifier];\n    if (maybePad != null) {\n      nextEscapeIdx++;\n    }\n    const maybeFormatterSpecifier = formatString[nextEscapeIdx + 1];\n    const maybeFormatter = FORMATTERS[maybeFormatterSpecifier];\n    if (typeof maybeFormatter === \"function\") {\n      formatParts.push([maybeFormatter, maybePad]);\n    } else if (typeof maybeFormatter === \"string\") {\n      const formatter = buildFormatter(maybeFormatter);\n      formatParts.push([formatter, maybePad]);\n    } else {\n      formatParts.push(`${maybePad != null ? maybePad : \"\"}${maybeFormatterSpecifier}`);\n    }\n    formatString = formatString.substring(nextEscapeIdx + 2);\n  }\n  return dateTime => {\n    const dateTimeAsDate = typeof dateTime === \"number\" ? new Date(dateTime) : dateTime;\n    return formatParts.map(c => typeof c === \"string\" ? c : c[0](dateTimeAsDate, c[1])).join(\"\");\n  };\n}\n\n// packages/ag-charts-community/src/scale/timeScale.ts\nvar formatStrings = {\n  [0 /* MILLISECOND */]: \".%L\",\n  [1 /* SECOND */]: \":%S\",\n  [2 /* MINUTE */]: \"%I:%M\",\n  [3 /* HOUR */]: \"%I %p\",\n  [4 /* WEEK_DAY */]: \"%a\",\n  [5 /* SHORT_MONTH */]: \"%b %d\",\n  [6 /* MONTH */]: \"%B\",\n  [7 /* SHORT_YEAR */]: \"%y\",\n  [8 /* YEAR */]: \"%Y\"\n};\nfunction toNumber(x) {\n  return x instanceof Date ? x.getTime() : x;\n}\nvar TimeScale = class extends ContinuousScale {\n  constructor() {\n    super([new Date(2022, 11, 7), new Date(2022, 11, 8)], [0, 1]);\n    this.type = \"time\";\n    this.year = year_default;\n    this.month = month_default;\n    this.week = week_default;\n    this.day = day_default;\n    this.hour = hour_default;\n    this.minute = minute_default;\n    this.second = second_default;\n    this.millisecond = millisecond_default;\n    /**\n     * Array of default tick intervals in the following format:\n     *\n     *     [\n     *         interval (unit of time),\n     *         number of units (step),\n     *         the length of that number of units in milliseconds\n     *     ]\n     */\n    this.tickIntervals = [[this.second, 1, durationSecond], [this.second, 5, 5 * durationSecond], [this.second, 15, 15 * durationSecond], [this.second, 30, 30 * durationSecond], [this.minute, 1, durationMinute], [this.minute, 5, 5 * durationMinute], [this.minute, 15, 15 * durationMinute], [this.minute, 30, 30 * durationMinute], [this.hour, 1, durationHour], [this.hour, 3, 3 * durationHour], [this.hour, 6, 6 * durationHour], [this.hour, 12, 12 * durationHour], [this.day, 1, durationDay], [this.day, 2, 2 * durationDay], [this.week, 1, durationWeek], [this.week, 2, 2 * durationWeek], [this.week, 3, 3 * durationWeek], [this.month, 1, durationMonth], [this.month, 2, 2 * durationMonth], [this.month, 3, 3 * durationMonth], [this.month, 4, 4 * durationMonth], [this.month, 6, 6 * durationMonth], [this.year, 1, durationYear]];\n  }\n  toDomain(d) {\n    return new Date(d);\n  }\n  calculateDefaultTickFormat(ticks = []) {\n    let defaultTimeFormat = 8 /* YEAR */;\n    const updateFormat = format2 => {\n      if (format2 < defaultTimeFormat) {\n        defaultTimeFormat = format2;\n      }\n    };\n    for (const value of ticks) {\n      const format2 = this.getLowestGranularityFormat(value);\n      updateFormat(format2);\n    }\n    const firstTick = toNumber(ticks[0]);\n    const lastTick = toNumber(ticks[ticks.length - 1]);\n    const startYear = new Date(firstTick).getFullYear();\n    const stopYear = new Date(lastTick).getFullYear();\n    const yearChange = stopYear - startYear > 0;\n    return this.buildFormatString(defaultTimeFormat, yearChange);\n  }\n  buildFormatString(defaultTimeFormat, yearChange) {\n    let formatStringArray = [formatStrings[defaultTimeFormat]];\n    let timeEndIndex = 0;\n    const domain = this.getDomain();\n    const start = Math.min(...domain.map(toNumber));\n    const stop = Math.max(...domain.map(toNumber));\n    const extent2 = stop - start;\n    switch (defaultTimeFormat) {\n      case 1 /* SECOND */:\n        if (extent2 / durationMinute > 1) {\n          formatStringArray.push(formatStrings[2 /* MINUTE */]);\n        }\n      case 2 /* MINUTE */:\n        if (extent2 / durationHour > 1) {\n          formatStringArray.push(formatStrings[3 /* HOUR */]);\n        }\n      case 3 /* HOUR */:\n        timeEndIndex = formatStringArray.length;\n        if (extent2 / durationDay > 1) {\n          formatStringArray.push(formatStrings[4 /* WEEK_DAY */]);\n        }\n      case 4 /* WEEK_DAY */:\n        if (extent2 / durationWeek > 1 || yearChange) {\n          const weekDayIndex = formatStringArray.indexOf(formatStrings[4 /* WEEK_DAY */]);\n          if (weekDayIndex > -1) {\n            formatStringArray.splice(weekDayIndex, 1, formatStrings[5 /* SHORT_MONTH */]);\n          }\n        }\n      case 5 /* SHORT_MONTH */:\n      case 6 /* MONTH */:\n        if (extent2 / durationYear > 1 || yearChange) {\n          formatStringArray.push(formatStrings[8 /* YEAR */]);\n        }\n      default:\n        break;\n    }\n    if (timeEndIndex < formatStringArray.length) {\n      formatStringArray = [...formatStringArray.slice(0, timeEndIndex), formatStringArray.slice(timeEndIndex).join(\" \")];\n    }\n    if (timeEndIndex > 0) {\n      formatStringArray = [...formatStringArray.slice(0, timeEndIndex).reverse(), ...formatStringArray.slice(timeEndIndex)];\n      if (timeEndIndex < formatStringArray.length) {\n        formatStringArray.splice(timeEndIndex, 0, \" \");\n      }\n    }\n    return formatStringArray.join(\"\");\n  }\n  getLowestGranularityFormat(value) {\n    if (this.second.floor(value) < value) {\n      return 0 /* MILLISECOND */;\n    } else if (this.minute.floor(value) < value) {\n      return 1 /* SECOND */;\n    } else if (this.hour.floor(value) < value) {\n      return 2 /* MINUTE */;\n    } else if (this.day.floor(value) < value) {\n      return 3 /* HOUR */;\n    } else if (this.month.floor(value) < value) {\n      if (this.week.floor(value) < value) {\n        return 4 /* WEEK_DAY */;\n      }\n      return 5 /* SHORT_MONTH */;\n    } else if (this.year.floor(value) < value) {\n      return 6 /* MONTH */;\n    }\n    return 8 /* YEAR */;\n  }\n  defaultTickFormat(ticks) {\n    const formatString = this.calculateDefaultTickFormat(ticks);\n    return date => buildFormatter(formatString)(date);\n  }\n  /**\n   * @param options Tick interval options.\n   * @param options.start The start time (timestamp).\n   * @param options.stop The end time (timestamp).\n   * @param options.count Number of intervals between ticks.\n   */\n  getTickInterval({\n    start,\n    stop,\n    count: count2,\n    minCount,\n    maxCount\n  }) {\n    const {\n      tickIntervals\n    } = this;\n    let countableTimeInterval;\n    let step;\n    const tickCount = count2 != null ? count2 : ContinuousScale.defaultTickCount;\n    const target = Math.abs(stop - start) / Math.max(tickCount, 1);\n    let i = 0;\n    while (i < tickIntervals.length && target > tickIntervals[i][2]) {\n      i++;\n    }\n    if (i === 0) {\n      step = Math.max(tickStep(start, stop, tickCount, minCount, maxCount), 1);\n      countableTimeInterval = this.millisecond;\n    } else if (i === tickIntervals.length) {\n      const y0 = start / durationYear;\n      const y1 = stop / durationYear;\n      step = tickStep(y0, y1, tickCount, minCount, maxCount);\n      countableTimeInterval = this.year;\n    } else {\n      const diff0 = target - tickIntervals[i - 1][2];\n      const diff1 = tickIntervals[i][2] - target;\n      const index = diff0 < diff1 ? i - 1 : i;\n      [countableTimeInterval, step] = tickIntervals[index];\n    }\n    return countableTimeInterval.every(step);\n  }\n  invert(y) {\n    return new Date(super.invert(y));\n  }\n  /**\n   * Returns uniformly-spaced dates that represent the scale's domain.\n   */\n  ticks() {\n    if (!this.domain || this.domain.length < 2) {\n      return [];\n    }\n    this.refresh();\n    const [t0, t1] = this.getDomain().map(toNumber);\n    const start = Math.min(t0, t1);\n    const stop = Math.max(t0, t1);\n    if (this.interval !== void 0) {\n      return this.getTicksForInterval({\n        start,\n        stop\n      });\n    }\n    if (this.nice) {\n      const {\n        tickCount\n      } = this;\n      if (tickCount === 2) {\n        return this.niceDomain;\n      }\n      if (tickCount === 1) {\n        return this.niceDomain.slice(0, 1);\n      }\n    }\n    return this.getDefaultTicks({\n      start,\n      stop\n    });\n  }\n  getDefaultTicks({\n    start,\n    stop\n  }) {\n    const t = this.getTickInterval({\n      start,\n      stop,\n      count: this.tickCount,\n      minCount: this.minTickCount,\n      maxCount: this.maxTickCount\n    });\n    return t ? t.range(new Date(start), new Date(stop)) : [];\n  }\n  getTicksForInterval({\n    start,\n    stop\n  }) {\n    const {\n      interval,\n      tickIntervals\n    } = this;\n    if (!interval) {\n      return [];\n    }\n    if (interval instanceof TimeInterval) {\n      const ticks2 = interval.range(new Date(start), new Date(stop));\n      if (this.isDenseInterval({\n        start,\n        stop,\n        interval,\n        count: ticks2.length\n      })) {\n        return this.getDefaultTicks({\n          start,\n          stop\n        });\n      }\n      return ticks2;\n    }\n    const absInterval = Math.abs(interval);\n    if (this.isDenseInterval({\n      start,\n      stop,\n      interval: absInterval\n    })) {\n      return this.getDefaultTicks({\n        start,\n        stop\n      });\n    }\n    const reversedInterval = [...tickIntervals];\n    reversedInterval.reverse();\n    const timeInterval = reversedInterval.find(tickInterval => absInterval % tickInterval[2] === 0);\n    if (timeInterval) {\n      const i = timeInterval[0].every(absInterval / (timeInterval[2] / timeInterval[1]));\n      return i.range(new Date(start), new Date(stop));\n    }\n    let date = new Date(start);\n    const stopDate = new Date(stop);\n    const ticks = [];\n    while (date <= stopDate) {\n      ticks.push(date);\n      date = new Date(date);\n      date.setMilliseconds(date.getMilliseconds() + absInterval);\n    }\n    return ticks;\n  }\n  /**\n   * Returns a time format function suitable for displaying tick values.\n   * @param specifier If the specifier string is provided, this method is equivalent to\n   * the {@link TimeLocaleObject.format} method.\n   * If no specifier is provided, this method returns the default time format function.\n   */\n  tickFormat({\n    ticks,\n    specifier\n  }) {\n    return specifier == void 0 ? this.defaultTickFormat(ticks) : buildFormatter(specifier);\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  /**\n   * Extends the domain so that it starts and ends on nice round values.\n   * This method typically modifies the scale’s domain, and may only extend the bounds to the nearest round value.\n   */\n  updateNiceDomain() {\n    const maxAttempts = 4;\n    let [d0, d1] = this.domain;\n    for (let i = 0; i < maxAttempts; i++) {\n      this.updateNiceDomainIteration(d0, d1);\n      const [n0, n1] = this.niceDomain;\n      if (toNumber(d0) === toNumber(n0) && toNumber(d1) === toNumber(n1)) {\n        break;\n      }\n      d0 = n0;\n      d1 = n1;\n    }\n  }\n  updateNiceDomainIteration(d0, d1) {\n    const start = Math.min(toNumber(d0), toNumber(d1));\n    const stop = Math.max(toNumber(d0), toNumber(d1));\n    const isReversed = d0 > d1;\n    const {\n      interval\n    } = this;\n    let i;\n    if (interval instanceof TimeInterval) {\n      i = interval;\n    } else {\n      const tickCount = typeof interval === \"number\" ? (stop - start) / Math.max(interval, 1) : this.tickCount;\n      i = this.getTickInterval({\n        start,\n        stop,\n        count: tickCount,\n        minCount: this.minTickCount,\n        maxCount: this.maxTickCount\n      });\n    }\n    if (i) {\n      const intervalRange = i.range(new Date(start), new Date(stop), true);\n      const domain = isReversed ? [...intervalRange].reverse() : intervalRange;\n      const n0 = domain[0];\n      const n1 = domain[domain.length - 1];\n      this.niceDomain = [n0, n1];\n    }\n  }\n};\n\n// packages/ag-charts-community/src/sparklines-util.ts\nvar sparklines_util_exports = {};\n__export(sparklines_util_exports, {\n  Color: () => Color,\n  DELETE: () => DELETE,\n  Logger: () => Logger,\n  Padding: () => Padding,\n  angleBetween: () => angleBetween,\n  checkDatum: () => checkDatum,\n  clamp: () => clamp2,\n  clampArray: () => clampArray,\n  countFractionDigits: () => countFractionDigits,\n  createId: () => createId,\n  extent: () => extent,\n  isContinuous: () => isContinuous,\n  isDate: () => isDate2,\n  isDiscrete: () => isDiscrete,\n  isEqual: () => isEqual,\n  isNegative: () => isNegative,\n  isNumber: () => isNumber2,\n  isNumberEqual: () => isEqual,\n  isReal: () => isReal,\n  isString: () => isString2,\n  isStringObject: () => isStringObject,\n  jsonApply: () => jsonApply,\n  jsonClone: () => jsonClone,\n  jsonDiff: () => jsonDiff,\n  jsonMerge: () => jsonMerge,\n  jsonWalk: () => jsonWalk,\n  mod: () => mod,\n  normalisedExtent: () => normalisedExtent,\n  normalisedExtentWithMetadata: () => normalisedExtentWithMetadata,\n  normalizeAngle180: () => normalizeAngle180,\n  normalizeAngle360: () => normalizeAngle360,\n  normalizeAngle360Inclusive: () => normalizeAngle360Inclusive,\n  range: () => range,\n  resetIds: () => resetIds,\n  round: () => round,\n  sanitizeHtml: () => sanitizeHtml,\n  tickFormat: () => tickFormat,\n  tickStep: () => tickStep,\n  ticks: () => ticks_default,\n  toDegrees: () => toDegrees,\n  toFixed: () => toFixed,\n  toRadians: () => toRadians,\n  toReal: () => toReal,\n  zipObject: () => zipObject\n});\n\n// packages/ag-charts-community/src/util/padding.ts\nvar Padding = class {\n  constructor(top = 0, right = top, bottom = top, left = right) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  clear() {\n    this.top = this.right = this.bottom = this.left = 0;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER)], Padding.prototype, \"top\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Padding.prototype, \"right\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Padding.prototype, \"bottom\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Padding.prototype, \"left\", 2);\n\n// packages/ag-charts-community/src/util/sanitize.ts\nvar element = null;\nfunction sanitizeHtml(text) {\n  if (text == null) {\n    return void 0;\n  } else if (text === \"\") {\n    return \"\";\n  }\n  element != null ? element : element = document.createElement(\"div\");\n  element.textContent = String(text);\n  return element.innerHTML;\n}\n\n// packages/ag-charts-community/src/util/equal.ts\nfunction areArrayNumbersEqual(arrA, arrB) {\n  return arrA.length === arrB.length && arrA.every((item, i) => Number(item) === Number(arrB[i]));\n}\n\n// packages/ag-charts-community/src/util/labelPlacement.ts\nfunction circleRectOverlap(c, x, y, w, h) {\n  let edgeX = c.x;\n  if (c.x < x) {\n    edgeX = x;\n  } else if (c.x > x + w) {\n    edgeX = x + w;\n  }\n  let edgeY = c.y;\n  if (c.y < y) {\n    edgeY = y;\n  } else if (c.y > y + h) {\n    edgeY = y + h;\n  }\n  const dx = c.x - edgeX;\n  const dy = c.y - edgeY;\n  const d = Math.sqrt(dx * dx + dy * dy);\n  return d <= c.size * 0.5;\n}\nfunction rectRectOverlap(r1, x2, y2, w2, h2) {\n  const xOverlap = r1.x + r1.width > x2 && r1.x < x2 + w2;\n  const yOverlap = r1.y + r1.height > y2 && r1.y < y2 + h2;\n  return xOverlap && yOverlap;\n}\nfunction rectContainsRect(r1, r2x, r2y, r2w, r2h) {\n  return r2x + r2w < r1.x + r1.width && r2x > r1.x && r2y > r1.y && r2y + r2h < r1.y + r1.height;\n}\nfunction isPointLabelDatum(x) {\n  return x != null && typeof x.point === \"object\" && typeof x.label === \"object\";\n}\nfunction placeLabels(data, bounds, padding = 5) {\n  const result = [];\n  data = data.map(d => d.slice().sort((a, b) => b.point.size - a.point.size));\n  for (let j = 0; j < data.length; j++) {\n    const labels = result[j] = [];\n    const datum = data[j];\n    if (!((datum == null ? void 0 : datum.length) && datum[0].label)) {\n      continue;\n    }\n    for (let i = 0, ln = datum.length; i < ln; i++) {\n      const d = datum[i];\n      const l = d.label;\n      const r = d.point.size * 0.5;\n      const x = d.point.x - l.width * 0.5;\n      const y = d.point.y - r - l.height - padding;\n      const {\n        width,\n        height\n      } = l;\n      const withinBounds = !bounds || rectContainsRect(bounds, x, y, width, height);\n      if (!withinBounds) {\n        continue;\n      }\n      const overlapPoints = data.some(datum2 => datum2.some(d2 => circleRectOverlap(d2.point, x, y, width, height)));\n      if (overlapPoints) {\n        continue;\n      }\n      const overlapLabels = result.some(labels2 => labels2.some(l2 => rectRectOverlap(l2, x, y, width, height)));\n      if (overlapLabels) {\n        continue;\n      }\n      labels.push({\n        index: i,\n        text: l.text,\n        x,\n        y,\n        width,\n        height,\n        datum: d\n      });\n    }\n  }\n  return result;\n}\nfunction axisLabelsOverlap(data, padding) {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const {\n      point: {\n        x,\n        y\n      },\n      label: {\n        text\n      }\n    } = datum;\n    let {\n      label: {\n        width,\n        height\n      }\n    } = datum;\n    width += padding != null ? padding : 0;\n    height += padding != null ? padding : 0;\n    const overlapLabels = result.some(l => {\n      return rectRectOverlap(l, x, y, width, height);\n    });\n    if (overlapLabels) {\n      return true;\n    }\n    result.push({\n      index: i,\n      text,\n      x,\n      y,\n      width,\n      height,\n      datum\n    });\n  }\n  return false;\n}\n\n// packages/ag-charts-community/src/chart/axis/axisGridLine.ts\nvar GRID_STYLE_KEYS = [\"stroke\", \"lineDash\"];\nvar GRID_STYLE = ARRAY_OF(value => isObject(value) && Object.keys(value).every(key => GRID_STYLE_KEYS.includes(key)), \"objects with gridline style properties such as 'stroke' or 'lineDash'\");\nvar AxisGridLine = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.style = [{\n      stroke: void 0,\n      lineDash: []\n    }];\n  }\n};\n__decorateClass([Validate(BOOLEAN)], AxisGridLine.prototype, \"enabled\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisGridLine.prototype, \"width\", 2);\n__decorateClass([Validate(GRID_STYLE)], AxisGridLine.prototype, \"style\", 2);\n\n// packages/ag-charts-community/src/util/default.ts\nfunction Default(defaultValue, replaces = [void 0]) {\n  return addTransformToInstanceProperty((_, __, v) => {\n    if (replaces.includes(v)) {\n      return defaultValue;\n    }\n    return v;\n  });\n}\n\n// packages/ag-charts-community/src/chart/axis/axisLabel.ts\nvar AxisLabel = class {\n  constructor() {\n    this.enabled = true;\n    this.autoWrap = false;\n    this.maxWidth = void 0;\n    this.maxHeight = void 0;\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.padding = 5;\n    this.minSpacing = NaN;\n    this.color = \"rgba(87, 87, 87, 1)\";\n    this.rotation = void 0;\n    this.avoidCollisions = true;\n    this.mirrored = false;\n    this.parallel = false;\n    /**\n     * In case {@param value} is a number, the {@param fractionDigits} parameter will\n     * be provided as well. The `fractionDigits` corresponds to the number of fraction\n     * digits used by the tick step. For example, if the tick step is `0.0005`,\n     * the `fractionDigits` is 4.\n     */\n    this.formatter = void 0;\n  }\n  /**\n   * The side of the axis line to position the labels on.\n   * -1 = left (default)\n   * 1 = right\n   */\n  getSideFlag() {\n    return this.mirrored ? 1 : -1;\n  }\n  getFont() {\n    return getFont(this);\n  }\n};\n__decorateClass([Validate(BOOLEAN)], AxisLabel.prototype, \"enabled\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], AxisLabel.prototype, \"autoWrap\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], AxisLabel.prototype, \"maxWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], AxisLabel.prototype, \"maxHeight\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], AxisLabel.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], AxisLabel.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(NUMBER.restrict({\n  min: 1\n}))], AxisLabel.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], AxisLabel.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisLabel.prototype, \"padding\", 2);\n__decorateClass([Validate(NUMBER_OR_NAN), Default(NaN)], AxisLabel.prototype, \"minSpacing\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], AxisLabel.prototype, \"color\", 2);\n__decorateClass([Validate(DEGREE, {\n  optional: true\n})], AxisLabel.prototype, \"rotation\", 2);\n__decorateClass([Validate(BOOLEAN)], AxisLabel.prototype, \"avoidCollisions\", 2);\n__decorateClass([Validate(BOOLEAN)], AxisLabel.prototype, \"mirrored\", 2);\n__decorateClass([Validate(BOOLEAN)], AxisLabel.prototype, \"parallel\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], AxisLabel.prototype, \"format\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisLine.ts\nvar AxisLine = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.color = void 0;\n  }\n};\n__decorateClass([Validate(BOOLEAN)], AxisLine.prototype, \"enabled\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisLine.prototype, \"width\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], AxisLine.prototype, \"color\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisTick.ts\nvar TICK_INTERVAL = predicateWithMessage(value => isFiniteNumber(value) && value > 0 || value instanceof TimeInterval, `a non-zero positive Number value or, for a time axis, a Time Interval such as 'agCharts.time.month'`);\nvar AxisTick = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.size = 6;\n    this.color = void 0;\n    this.interval = void 0;\n    this.values = void 0;\n    this.minSpacing = NaN;\n  }\n};\n__decorateClass([Validate(BOOLEAN)], AxisTick.prototype, \"enabled\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisTick.prototype, \"width\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AxisTick.prototype, \"size\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], AxisTick.prototype, \"color\", 2);\n__decorateClass([Validate(TICK_INTERVAL, {\n  optional: true\n})], AxisTick.prototype, \"interval\", 2);\n__decorateClass([Validate(ARRAY, {\n  optional: true\n})], AxisTick.prototype, \"values\", 2);\n__decorateClass([Validate(MIN_SPACING), Default(NaN)], AxisTick.prototype, \"minSpacing\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisUtil.ts\nfunction prepareAxisAnimationContext(axis) {\n  const requestedRangeMin = Math.min(...axis.range);\n  const requestedRangeMax = Math.max(...axis.range);\n  const min = Math.floor(requestedRangeMin);\n  const max = Math.ceil(requestedRangeMax);\n  const visible = min !== max;\n  return {\n    min,\n    max,\n    visible\n  };\n}\nvar fullCircle = Math.PI * 2;\nvar halfCircle = fullCircle / 2;\nfunction normaliseEndRotation(start, end) {\n  const directDistance = Math.abs(end - start);\n  if (directDistance < halfCircle) return end;\n  if (start > end) return end + fullCircle;\n  return end - fullCircle;\n}\nfunction prepareAxisAnimationFunctions(ctx) {\n  const outOfBounds = (y, range3) => {\n    const min = range3 != null ? Math.min(...range3) : ctx.min;\n    const max = range3 != null ? Math.max(...range3) : ctx.max;\n    return y < min || y > max;\n  };\n  const calculateStatus2 = (node, datum, status) => {\n    if (status !== \"removed\" && outOfBounds(node.translationY, node.datum.range)) {\n      return \"removed\";\n    } else if (status !== \"added\" && outOfBounds(datum.translationY, datum.range)) {\n      return \"added\";\n    }\n    return status;\n  };\n  const tick = {\n    fromFn(node, datum, status) {\n      let y = node.y1 + node.translationY;\n      let opacity = node.opacity;\n      if (status === \"added\" || outOfBounds(node.datum.translationY, node.datum.range)) {\n        y = datum.translationY;\n        opacity = 0;\n      }\n      return __spreadValues({\n        y: 0,\n        translationY: y,\n        opacity\n      }, FROM_TO_MIXINS[status]);\n    },\n    toFn(_node, datum, status) {\n      const y = datum.translationY;\n      let opacity = 1;\n      if (status === \"removed\") {\n        opacity = 0;\n      }\n      return {\n        y: 0,\n        translationY: y,\n        opacity,\n        finish: {\n          // Set explicit y after animation so it's pixel aligned\n          y,\n          translationY: 0\n        }\n      };\n    },\n    intermediateFn(node, _datum, _status) {\n      return {\n        visible: !outOfBounds(node.y)\n      };\n    }\n  };\n  const label = {\n    fromFn(node, newDatum, status) {\n      var _a;\n      const datum = (_a = node.previousDatum) != null ? _a : newDatum;\n      status = calculateStatus2(node, newDatum, status);\n      const x = datum.x;\n      const y = datum.y;\n      const rotationCenterX = datum.rotationCenterX;\n      let translationY = Math.round(node.translationY);\n      let rotation = datum.rotation;\n      let opacity = node.opacity;\n      if (status === \"removed\" || outOfBounds(datum.y, datum.range)) {} else if (status === \"added\" || outOfBounds(node.datum.y, node.datum.range)) {\n        translationY = Math.round(datum.translationY);\n        opacity = 0;\n        rotation = newDatum.rotation;\n      }\n      return __spreadValues({\n        x,\n        y,\n        rotationCenterX,\n        translationY,\n        rotation,\n        opacity\n      }, FROM_TO_MIXINS[status]);\n    },\n    toFn(node, datum, status) {\n      var _a, _b;\n      const x = datum.x;\n      const y = datum.y;\n      const rotationCenterX = datum.rotationCenterX;\n      const translationY = Math.round(datum.translationY);\n      let rotation = 0;\n      let opacity = 1;\n      status = calculateStatus2(node, datum, status);\n      if (status === \"added\") {\n        opacity = 1;\n        rotation = datum.rotation;\n      } else if (status === \"removed\") {\n        opacity = 0;\n        rotation = datum.rotation;\n      } else {\n        rotation = normaliseEndRotation((_b = (_a = node.previousDatum) == null ? void 0 : _a.rotation) != null ? _b : datum.rotation, datum.rotation);\n      }\n      return {\n        x,\n        y,\n        rotationCenterX,\n        translationY,\n        rotation,\n        opacity,\n        finish: {\n          rotation: datum.rotation\n        }\n      };\n    }\n  };\n  const line = {\n    fromFn(node, datum) {\n      var _a;\n      return __spreadValues(__spreadValues({}, (_a = node.previousDatum) != null ? _a : datum), FROM_TO_MIXINS[\"updated\"]);\n    },\n    toFn(_node, datum) {\n      return __spreadValues({}, datum);\n    }\n  };\n  const group2 = {\n    fromFn(group3, _datum) {\n      const {\n        rotation,\n        translationX,\n        translationY\n      } = group3;\n      return __spreadValues({\n        rotation,\n        translationX,\n        translationY\n      }, FROM_TO_MIXINS[\"updated\"]);\n    },\n    toFn(_group, datum) {\n      const {\n        rotation,\n        translationX,\n        translationY\n      } = datum;\n      return {\n        rotation,\n        translationX,\n        translationY\n      };\n    }\n  };\n  return {\n    tick,\n    line,\n    label,\n    group: group2\n  };\n}\nfunction resetAxisGroupFn() {\n  return (_node, datum) => {\n    return {\n      rotation: datum.rotation,\n      rotationCenterX: datum.rotationCenterX,\n      rotationCenterY: datum.rotationCenterY,\n      translationX: datum.translationX,\n      translationY: datum.translationY\n    };\n  };\n}\nfunction resetAxisSelectionFn(ctx) {\n  const {\n    visible: rangeVisible,\n    min,\n    max\n  } = ctx;\n  return (_node, datum) => {\n    const y = datum.translationY;\n    const visible = rangeVisible && y >= min && y <= max;\n    return {\n      y,\n      translationY: 0,\n      opacity: 1,\n      visible\n    };\n  };\n}\nfunction resetAxisLabelSelectionFn() {\n  return (_node, datum) => {\n    return {\n      x: datum.x,\n      y: datum.y,\n      translationY: datum.translationY,\n      rotation: datum.rotation,\n      rotationCenterX: datum.rotationCenterX\n    };\n  };\n}\nfunction resetAxisLineSelectionFn() {\n  return (_node, datum) => {\n    return __spreadValues({}, datum);\n  };\n}\n\n// packages/ag-charts-community/src/chart/axis/axis.ts\nvar Tags = /* @__PURE__ */(Tags2 => {\n  Tags2[Tags2[\"TickLine\"] = 0] = \"TickLine\";\n  Tags2[Tags2[\"TickLabel\"] = 1] = \"TickLabel\";\n  Tags2[Tags2[\"GridLine\"] = 2] = \"GridLine\";\n  Tags2[Tags2[\"GridArc\"] = 3] = \"GridArc\";\n  Tags2[Tags2[\"AxisLine\"] = 4] = \"AxisLine\";\n  return Tags2;\n})(Tags || {});\nvar _Axis = class _Axis {\n  constructor(moduleCtx, scale2) {\n    this.moduleCtx = moduleCtx;\n    this.scale = scale2;\n    this.id = createId(this);\n    this.nice = true;\n    this.reverse = void 0;\n    this.dataDomain = {\n      domain: [],\n      clipped: false\n    };\n    this.keys = [];\n    this.boundSeries = [];\n    this.includeInvisibleDomains = false;\n    this.axisGroup = new Group({\n      name: `${this.id}-axis`,\n      zIndex: 2 /* AXIS_ZINDEX */\n    });\n    this.lineNode = this.axisGroup.appendChild(new Line());\n    this.tickLineGroup = this.axisGroup.appendChild(new Group({\n      name: `${this.id}-Axis-tick-lines`,\n      zIndex: 2 /* AXIS_ZINDEX */\n    }));\n    this.tickLabelGroup = this.axisGroup.appendChild(new Group({\n      name: `${this.id}-Axis-tick-labels`,\n      zIndex: 2 /* AXIS_ZINDEX */\n    }));\n    this.crossLineGroup = new Group({\n      name: `${this.id}-CrossLines`\n    });\n    this.gridGroup = new Group({\n      name: `${this.id}-Axis-grid`\n    });\n    this.gridLineGroup = this.gridGroup.appendChild(new Group({\n      name: `${this.id}-gridLines`,\n      zIndex: 1 /* AXIS_GRID_ZINDEX */\n    }));\n    this.tickLineGroupSelection = Selection.select(this.tickLineGroup, Line, false);\n    this.tickLabelGroupSelection = Selection.select(this.tickLabelGroup, Text, false);\n    this.gridLineGroupSelection = Selection.select(this.gridLineGroup, Line, false);\n    this.line = new AxisLine();\n    this.tick = this.createTick();\n    this.gridLine = new AxisGridLine();\n    this.label = this.createLabel();\n    this.defaultTickMinSpacing = _Axis.defaultTickMinSpacing;\n    this.translation = {\n      x: 0,\n      y: 0\n    };\n    this.rotation = 0;\n    // axis rotation angle in degrees\n    this.layout = {\n      label: {\n        fractionDigits: 0,\n        padding: this.label.padding,\n        format: this.label.format\n      }\n    };\n    this.destroyFns = [];\n    this.range = [0, 1];\n    this.visibleRange = [0, 1];\n    this.title = void 0;\n    this._titleCaption = new Caption();\n    /**\n     * The length of the grid. The grid is only visible in case of a non-zero value.\n     * In case {@link radialGrid} is `true`, the value is interpreted as an angle\n     * (in degrees).\n     */\n    this._gridLength = 0;\n    this.fractionDigits = 0;\n    /**\n     * The distance between the grid ticks and the axis ticks.\n     */\n    this.gridPadding = 0;\n    /**\n     * Is used to avoid collisions between axis labels and series.\n     */\n    this.seriesAreaPadding = 0;\n    this.tickGenerationResult = void 0;\n    this.maxThickness = Infinity;\n    this.moduleMap = new ModuleMap();\n    this.refreshScale();\n    this._titleCaption.registerInteraction(this.moduleCtx);\n    this._titleCaption.node.rotation = -Math.PI / 2;\n    this.axisGroup.appendChild(this._titleCaption.node);\n    this.destroyFns.push(moduleCtx.interactionManager.addListener(\"hover\", e => this.checkAxisHover(e)));\n    this.animationManager = moduleCtx.animationManager;\n    this.animationState = new StateMachine(\"empty\", {\n      empty: {\n        update: {\n          target: \"ready\",\n          action: () => this.resetSelectionNodes()\n        }\n      },\n      ready: {\n        update: data => this.animateReadyUpdate(data),\n        resize: () => this.resetSelectionNodes()\n      }\n    });\n    this._crossLines = [];\n    this.assignCrossLineArrayConstructor(this._crossLines);\n    let previousSize = void 0;\n    this.destroyFns.push(moduleCtx.layoutService.addListener(\"layout-complete\", e => {\n      if (previousSize != null && jsonDiff(e.chart, previousSize) != null) {\n        this.animationState.transition(\"resize\");\n      }\n      previousSize = __spreadValues({}, e.chart);\n    }));\n    this.destroyFns.push(moduleCtx.updateService.addListener(\"update-complete\", e => {\n      this.minRect = e.minRect;\n    }));\n  }\n  get type() {\n    var _a;\n    return (_a = this.constructor.type) != null ? _a : \"\";\n  }\n  set crossLines(value) {\n    var _a, _b;\n    (_a = this._crossLines) == null ? void 0 : _a.forEach(crossLine => this.detachCrossLine(crossLine));\n    if (value) {\n      this.assignCrossLineArrayConstructor(value);\n    }\n    this._crossLines = value;\n    (_b = this._crossLines) == null ? void 0 : _b.forEach(crossLine => {\n      this.attachCrossLine(crossLine);\n      this.initCrossLine(crossLine);\n    });\n  }\n  get crossLines() {\n    return this._crossLines;\n  }\n  attachCrossLine(crossLine) {\n    this.crossLineGroup.appendChild(crossLine.group);\n    this.crossLineGroup.appendChild(crossLine.labelGroup);\n  }\n  detachCrossLine(crossLine) {\n    this.crossLineGroup.removeChild(crossLine.group);\n    this.crossLineGroup.removeChild(crossLine.labelGroup);\n  }\n  destroy() {\n    this.moduleMap.destroy();\n    this.destroyFns.forEach(f => f());\n  }\n  refreshScale() {\n    var _a;\n    this.range = this.scale.range.slice();\n    (_a = this.crossLines) == null ? void 0 : _a.forEach(crossLine => {\n      this.initCrossLine(crossLine);\n    });\n  }\n  updateRange() {\n    var _a;\n    const {\n      range: rr,\n      visibleRange: vr,\n      scale: scale2\n    } = this;\n    const span = (rr[1] - rr[0]) / (vr[1] - vr[0]);\n    const shift = span * vr[0];\n    const start = rr[0] - shift;\n    scale2.range = [start, start + span];\n    (_a = this.crossLines) == null ? void 0 : _a.forEach(crossLine => {\n      crossLine.clippedRange = [rr[0], rr[1]];\n    });\n  }\n  setCrossLinesVisible(visible) {\n    this.crossLineGroup.visible = visible;\n  }\n  attachAxis(axisNode, gridNode) {\n    gridNode.appendChild(this.gridGroup);\n    axisNode.appendChild(this.axisGroup);\n    axisNode.appendChild(this.crossLineGroup);\n  }\n  detachAxis(axisNode, gridNode) {\n    gridNode.removeChild(this.gridGroup);\n    axisNode.removeChild(this.axisGroup);\n    axisNode.removeChild(this.crossLineGroup);\n  }\n  /**\n   * Checks if a point or an object is in range.\n   * @param x A point (or object's starting point).\n   * @param width Object's width.\n   * @param tolerance Expands the range on both ends by this amount.\n   */\n  inRange(x, width = 0, tolerance = 0) {\n    const min = Math.min(...this.range);\n    const max = Math.max(...this.range);\n    return x + width >= min - tolerance && x <= max + tolerance;\n  }\n  onLabelFormatChange(ticks, format2) {\n    const {\n      scale: scale2,\n      fractionDigits\n    } = this;\n    const logScale = scale2 instanceof LogScale;\n    const defaultLabelFormatter = !logScale && fractionDigits > 0 ? x => typeof x === \"number\" ? x.toFixed(fractionDigits) : String(x) : x => String(x);\n    if (format2 && scale2 && scale2.tickFormat) {\n      try {\n        this.labelFormatter = scale2.tickFormat({\n          ticks,\n          specifier: format2\n        });\n      } catch (e) {\n        this.labelFormatter = defaultLabelFormatter;\n        Logger.warnOnce(`the axis label format string ${format2} is invalid. No formatting will be applied`);\n      }\n    } else {\n      this.labelFormatter = defaultLabelFormatter;\n    }\n  }\n  setDomain() {\n    const {\n      scale: scale2,\n      dataDomain: {\n        domain\n      }\n    } = this;\n    scale2.domain = domain;\n  }\n  setTickInterval(interval) {\n    var _a;\n    this.scale.interval = (_a = this.tick.interval) != null ? _a : interval;\n  }\n  setTickCount(count2, minTickCount, maxTickCount) {\n    const {\n      scale: scale2\n    } = this;\n    if (!(count2 && ContinuousScale.is(scale2))) {\n      return;\n    }\n    if (typeof count2 === \"number\") {\n      scale2.tickCount = count2;\n      scale2.minTickCount = minTickCount != null ? minTickCount : 0;\n      scale2.maxTickCount = maxTickCount != null ? maxTickCount : Infinity;\n      return;\n    }\n    if (scale2 instanceof TimeScale) {\n      this.setTickInterval(count2);\n    }\n  }\n  set gridLength(value) {\n    var _a;\n    if (this._gridLength && !value || !this._gridLength && value) {\n      this.gridLineGroupSelection.clear();\n    }\n    this._gridLength = value;\n    (_a = this.crossLines) == null ? void 0 : _a.forEach(crossLine => {\n      this.initCrossLine(crossLine);\n    });\n  }\n  get gridLength() {\n    return this._gridLength;\n  }\n  createTick() {\n    return new AxisTick();\n  }\n  createLabel() {\n    return new AxisLabel();\n  }\n  checkAxisHover(event) {\n    const bbox = this.computeBBox();\n    const isInAxis = bbox.containsPoint(event.offsetX, event.offsetY);\n    if (!isInAxis) return;\n    this.moduleCtx.chartEventManager.axisHover(this.id, this.direction);\n  }\n  /**\n   * Creates/removes/updates the scene graph nodes that constitute the axis.\n   */\n  update(primaryTickCount) {\n    if (!this.tickGenerationResult) {\n      return;\n    }\n    const {\n      rotation,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    this.updatePosition();\n    const lineData = this.getAxisLineCoordinates();\n    const _a = this.tickGenerationResult,\n      {\n        tickData,\n        combinedRotation,\n        textBaseline,\n        textAlign\n      } = _a,\n      ticksResult = __objRest(_a, [\"tickData\", \"combinedRotation\", \"textBaseline\", \"textAlign\"]);\n    const previousTicks = this.tickLabelGroupSelection.nodes().map(node => node.datum.tickId);\n    this.updateSelections(lineData, tickData.ticks, {\n      combinedRotation,\n      textAlign,\n      textBaseline,\n      range: this.scale.range\n    });\n    if (this.animationManager.isSkipped()) {\n      this.resetSelectionNodes();\n    } else {\n      const diff2 = this.calculateUpdateDiff(previousTicks, tickData);\n      this.animationState.transition(\"update\", diff2);\n    }\n    this.updateAxisLine();\n    this.updateLabels();\n    this.updateVisibility();\n    this.updateGridLines(sideFlag);\n    this.updateTickLines();\n    this.updateTitle({\n      anyTickVisible: tickData.ticks.length > 0\n    });\n    this.updateCrossLines({\n      rotation,\n      parallelFlipRotation,\n      regularFlipRotation\n    });\n    this.updateLayoutState();\n    primaryTickCount = ticksResult.primaryTickCount;\n    return primaryTickCount;\n  }\n  getAxisLineCoordinates() {\n    const {\n      range: [start, end]\n    } = this;\n    const x = 0;\n    const y1 = Math.min(start, end);\n    const y2 = Math.max(start, end);\n    return {\n      x,\n      y1,\n      y2\n    };\n  }\n  getTickLineCoordinates(datum) {\n    const {\n      label\n    } = this;\n    const sideFlag = label.getSideFlag();\n    const x = sideFlag * this.getTickSize();\n    const x1 = Math.min(0, x);\n    const x2 = x1 + Math.abs(x);\n    const y = datum.translationY;\n    return {\n      x1,\n      x2,\n      y\n    };\n  }\n  getTickLabelProps(datum, params) {\n    const {\n      label\n    } = this;\n    const {\n      combinedRotation,\n      textBaseline,\n      textAlign,\n      range: range3\n    } = params;\n    const text = datum.tickLabel;\n    const sideFlag = label.getSideFlag();\n    const labelX = sideFlag * (this.getTickSize() + label.padding + this.seriesAreaPadding);\n    const visible = text !== \"\" && text != void 0;\n    return {\n      tickId: datum.tickId,\n      translationY: datum.translationY,\n      fill: label.color,\n      fontFamily: label.fontFamily,\n      fontSize: label.fontSize,\n      fontStyle: label.fontStyle,\n      fontWeight: label.fontWeight,\n      rotation: combinedRotation,\n      rotationCenterX: labelX,\n      text,\n      textAlign,\n      textBaseline,\n      visible,\n      x: labelX,\n      y: 0,\n      range: range3\n    };\n  }\n  getTickSize() {\n    return this.tick.enabled ? this.tick.size : this.createTick().size;\n  }\n  setTitleProps(caption, params) {\n    var _a;\n    const {\n      title\n    } = this;\n    if (!title) {\n      caption.enabled = false;\n      return;\n    }\n    caption.color = title.color;\n    caption.fontFamily = title.fontFamily;\n    caption.fontSize = title.fontSize;\n    caption.fontStyle = title.fontStyle;\n    caption.fontWeight = title.fontWeight;\n    caption.enabled = title.enabled;\n    caption.wrapping = title.wrapping;\n    if (title.enabled) {\n      const titleNode = caption.node;\n      const padding = ((_a = title.spacing) != null ? _a : 0) + params.spacing;\n      const sideFlag = this.label.getSideFlag();\n      const parallelFlipRotation = normalizeAngle360(this.rotation);\n      const titleRotationFlag = sideFlag === -1 && parallelFlipRotation > Math.PI && parallelFlipRotation < Math.PI * 2 ? -1 : 1;\n      const rotation = titleRotationFlag * sideFlag * Math.PI / 2;\n      const textBaseline = titleRotationFlag === 1 ? \"bottom\" : \"top\";\n      const {\n        range: range3\n      } = this;\n      const x = Math.floor(titleRotationFlag * sideFlag * (range3[0] + range3[1]) / 2);\n      const y = sideFlag === -1 ? Math.floor(titleRotationFlag * -padding) : Math.floor(-padding);\n      const {\n        callbackCache\n      } = this.moduleCtx;\n      const {\n        formatter = params2 => params2.defaultValue\n      } = title;\n      const text = callbackCache.call(formatter, this.getTitleFormatterParams());\n      titleNode.setProperties({\n        rotation,\n        text,\n        textBaseline,\n        visible: true,\n        x,\n        y\n      });\n    }\n  }\n  calculateLayout(primaryTickCount) {\n    var _b;\n    const {\n      rotation,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    const labelX = sideFlag * (this.getTickSize() + this.label.padding + this.seriesAreaPadding);\n    this.updateScale();\n    this.tickGenerationResult = this.generateTicks({\n      primaryTickCount,\n      parallelFlipRotation,\n      regularFlipRotation,\n      labelX,\n      sideFlag\n    });\n    this.updateLayoutState();\n    const _a = this.tickGenerationResult,\n      {\n        tickData,\n        combinedRotation,\n        textBaseline,\n        textAlign\n      } = _a,\n      ticksResult = __objRest(_a, [\"tickData\", \"combinedRotation\", \"textBaseline\", \"textAlign\"]);\n    const boxes = [];\n    const {\n      x,\n      y1,\n      y2\n    } = this.getAxisLineCoordinates();\n    const lineBox = new BBox(x + Math.min(sideFlag * this.seriesAreaPadding, 0), y1, this.seriesAreaPadding, y2 - y1);\n    boxes.push(lineBox);\n    const {\n      tick\n    } = this;\n    if (tick.enabled) {\n      tickData.ticks.forEach(datum => {\n        const {\n          x1,\n          x2,\n          y\n        } = this.getTickLineCoordinates(datum);\n        const tickLineBox = new BBox(x1, y, x2 - x1, 0);\n        boxes.push(tickLineBox);\n      });\n    }\n    const {\n      label\n    } = this;\n    if (label.enabled) {\n      const tempText = new Text();\n      tickData.ticks.forEach(datum => {\n        const labelProps = this.getTickLabelProps(datum, {\n          combinedRotation,\n          textAlign,\n          textBaseline,\n          range: this.scale.range\n        });\n        if (!labelProps.visible) {\n          return;\n        }\n        tempText.setProperties(__spreadProps(__spreadValues({}, labelProps), {\n          translationY: Math.round(datum.translationY)\n        }));\n        const box = tempText.computeTransformedBBox();\n        if (box) {\n          boxes.push(box);\n        }\n      });\n    }\n    const getTransformBox = bbox2 => {\n      const matrix = new Matrix();\n      const {\n        rotation: axisRotation,\n        translationX,\n        translationY,\n        rotationCenterX,\n        rotationCenterY\n      } = this.getAxisTransform();\n      Matrix.updateTransformMatrix(matrix, 1, 1, axisRotation, translationX, translationY, {\n        scalingCenterX: 0,\n        scalingCenterY: 0,\n        rotationCenterX,\n        rotationCenterY\n      });\n      return matrix.transformBBox(bbox2);\n    };\n    const {\n      title\n    } = this;\n    if (title == null ? void 0 : title.enabled) {\n      const caption = new Caption();\n      const spacing = BBox.merge(boxes).width;\n      this.setTitleProps(caption, {\n        spacing\n      });\n      const titleNode = caption.node;\n      const titleBox = titleNode.computeTransformedBBox();\n      if (titleBox) {\n        boxes.push(titleBox);\n      }\n    }\n    const bbox = BBox.merge(boxes);\n    const transformedBBox = getTransformBox(bbox);\n    const anySeriesActive = this.isAnySeriesActive();\n    (_b = this.crossLines) == null ? void 0 : _b.forEach(crossLine => {\n      var _a2;\n      crossLine.sideFlag = -sideFlag;\n      crossLine.direction = rotation === -Math.PI / 2 ? \"x\" /* X */ : \"y\" /* Y */;\n      if (crossLine instanceof CartesianCrossLine) {\n        crossLine.label.parallel = (_a2 = crossLine.label.parallel) != null ? _a2 : this.label.parallel;\n      }\n      crossLine.parallelFlipRotation = parallelFlipRotation;\n      crossLine.regularFlipRotation = regularFlipRotation;\n      crossLine.calculateLayout(anySeriesActive, this.reverse);\n    });\n    primaryTickCount = ticksResult.primaryTickCount;\n    return {\n      primaryTickCount,\n      bbox: transformedBBox\n    };\n  }\n  updateLayoutState() {\n    this.layout.label = {\n      fractionDigits: this.fractionDigits,\n      padding: this.label.padding,\n      format: this.label.format\n    };\n  }\n  updateScale() {\n    this.updateRange();\n    this.calculateDomain();\n    this.setDomain();\n    this.setTickInterval(this.tick.interval);\n    const {\n      scale: scale2,\n      nice\n    } = this;\n    if (!ContinuousScale.is(scale2)) {\n      return;\n    }\n    scale2.nice = nice;\n    scale2.update();\n  }\n  calculateRotations() {\n    const rotation = toRadians(this.rotation);\n    const parallelFlipRotation = normalizeAngle360(rotation);\n    const regularFlipRotation = normalizeAngle360(rotation - Math.PI / 2);\n    return {\n      rotation,\n      parallelFlipRotation,\n      regularFlipRotation\n    };\n  }\n  generateTicks({\n    primaryTickCount,\n    parallelFlipRotation,\n    regularFlipRotation,\n    labelX,\n    sideFlag\n  }) {\n    var _a;\n    const {\n      scale: scale2,\n      tick,\n      label: {\n        parallel,\n        rotation,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight\n      }\n    } = this;\n    const secondaryAxis = primaryTickCount !== void 0;\n    const {\n      defaultRotation,\n      configuredRotation,\n      parallelFlipFlag,\n      regularFlipFlag\n    } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    const initialRotation = configuredRotation + defaultRotation;\n    const labelMatrix = new Matrix();\n    const {\n      maxTickCount\n    } = this.estimateTickCount({\n      minSpacing: tick.minSpacing,\n      maxSpacing: (_a = tick.maxSpacing) != null ? _a : NaN\n    });\n    const continuous = ContinuousScale.is(scale2);\n    const maxIterations = !continuous || isNaN(maxTickCount) ? 10 : maxTickCount;\n    let textAlign = getTextAlign(parallel, configuredRotation, 0, sideFlag, regularFlipFlag);\n    const textBaseline = getTextBaseline(parallel, configuredRotation, sideFlag, parallelFlipFlag);\n    const textProps = {\n      fontFamily,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      textBaseline,\n      textAlign\n    };\n    let tickData = {\n      rawTicks: [],\n      ticks: [],\n      labelCount: 0\n    };\n    let index = 0;\n    let autoRotation = 0;\n    let labelOverlap = true;\n    let terminate = false;\n    while (labelOverlap && index <= maxIterations) {\n      if (terminate) {\n        break;\n      }\n      autoRotation = 0;\n      textAlign = getTextAlign(parallel, configuredRotation, 0, sideFlag, regularFlipFlag);\n      const tickStrategies = this.getTickStrategies({\n        secondaryAxis,\n        index\n      });\n      for (const strategy of tickStrategies) {\n        ({\n          tickData,\n          index,\n          autoRotation,\n          terminate\n        } = strategy({\n          index,\n          tickData,\n          textProps,\n          labelOverlap,\n          terminate,\n          primaryTickCount\n        }));\n        const rotated = configuredRotation !== 0 || autoRotation !== 0;\n        const rotation2 = initialRotation + autoRotation;\n        textAlign = getTextAlign(parallel, configuredRotation, autoRotation, sideFlag, regularFlipFlag);\n        labelOverlap = this.checkLabelOverlap(rotation2, rotated, labelMatrix, tickData.ticks, labelX, __spreadProps(__spreadValues({}, textProps), {\n          textAlign\n        }));\n      }\n    }\n    const combinedRotation = defaultRotation + configuredRotation + autoRotation;\n    if (!secondaryAxis && tickData.rawTicks.length > 0) {\n      primaryTickCount = tickData.rawTicks.length;\n    }\n    return {\n      tickData,\n      primaryTickCount,\n      combinedRotation,\n      textBaseline,\n      textAlign\n    };\n  }\n  getTickStrategies({\n    index,\n    secondaryAxis\n  }) {\n    const {\n      scale: scale2,\n      label,\n      tick\n    } = this;\n    const continuous = ContinuousScale.is(scale2);\n    const avoidLabelCollisions = label.enabled && label.avoidCollisions;\n    const filterTicks = !continuous && index !== 0 && avoidLabelCollisions;\n    const autoRotate = label.autoRotate === true && label.rotation === void 0;\n    const strategies = [];\n    let tickGenerationType;\n    if (this.tick.values) {\n      tickGenerationType = 3 /* VALUES */;\n    } else if (secondaryAxis) {\n      tickGenerationType = 1 /* CREATE_SECONDARY */;\n    } else if (filterTicks) {\n      tickGenerationType = 2 /* FILTER */;\n    } else {\n      tickGenerationType = 0 /* CREATE */;\n    }\n    const tickGenerationStrategy = ({\n      index: index2,\n      tickData,\n      primaryTickCount,\n      terminate\n    }) => this.createTickData(tickGenerationType, index2, tickData, terminate, primaryTickCount);\n    strategies.push(tickGenerationStrategy);\n    if (!continuous && !isNaN(tick.minSpacing)) {\n      const tickFilterStrategy = ({\n        index: index2,\n        tickData,\n        primaryTickCount,\n        terminate\n      }) => this.createTickData(2 /* FILTER */, index2, tickData, terminate, primaryTickCount);\n      strategies.push(tickFilterStrategy);\n    }\n    if (!avoidLabelCollisions) {\n      return strategies;\n    }\n    if (label.autoWrap) {\n      const autoWrapStrategy = ({\n        index: index2,\n        tickData,\n        textProps\n      }) => this.wrapLabels(tickData, index2, textProps);\n      strategies.push(autoWrapStrategy);\n    } else if (autoRotate) {\n      const autoRotateStrategy = ({\n        index: index2,\n        tickData,\n        labelOverlap,\n        terminate\n      }) => ({\n        index: index2,\n        tickData,\n        autoRotation: this.getAutoRotation(labelOverlap),\n        terminate\n      });\n      strategies.push(autoRotateStrategy);\n    }\n    return strategies;\n  }\n  createTickData(tickGenerationType, index, tickData, terminate, primaryTickCount) {\n    var _a;\n    const {\n      scale: scale2,\n      tick\n    } = this;\n    const {\n      maxTickCount,\n      minTickCount,\n      defaultTickCount\n    } = this.estimateTickCount({\n      minSpacing: tick.minSpacing,\n      maxSpacing: (_a = tick.maxSpacing) != null ? _a : NaN\n    });\n    const continuous = ContinuousScale.is(scale2);\n    const maxIterations = !continuous || isNaN(maxTickCount) ? 10 : maxTickCount;\n    let tickCount = continuous ? Math.max(defaultTickCount - index, minTickCount) : maxTickCount;\n    const regenerateTicks = tick.interval === void 0 && tick.values === void 0 && tickCount > minTickCount && (continuous || tickGenerationType === 2 /* FILTER */);\n    let unchanged = true;\n    while (unchanged && index <= maxIterations) {\n      const prevTicks = tickData.rawTicks;\n      tickCount = continuous ? Math.max(defaultTickCount - index, minTickCount) : maxTickCount;\n      const {\n        rawTicks,\n        ticks,\n        labelCount\n      } = this.getTicks({\n        tickGenerationType,\n        previousTicks: prevTicks,\n        tickCount,\n        minTickCount,\n        maxTickCount,\n        primaryTickCount\n      });\n      tickData.rawTicks = rawTicks;\n      tickData.ticks = ticks;\n      tickData.labelCount = labelCount;\n      unchanged = regenerateTicks ? areArrayNumbersEqual(rawTicks, prevTicks) : false;\n      index++;\n    }\n    const shouldTerminate = tick.interval !== void 0 || tick.values !== void 0;\n    terminate || (terminate = shouldTerminate);\n    return {\n      tickData,\n      index,\n      autoRotation: 0,\n      terminate\n    };\n  }\n  checkLabelOverlap(rotation, rotated, labelMatrix, tickData, labelX, textProps) {\n    Matrix.updateTransformMatrix(labelMatrix, 1, 1, rotation, 0, 0);\n    const labelData = this.createLabelData(tickData, labelX, textProps, labelMatrix);\n    const labelSpacing = getLabelSpacing(this.label.minSpacing, rotated);\n    return axisLabelsOverlap(labelData, labelSpacing);\n  }\n  createLabelData(tickData, labelX, textProps, labelMatrix) {\n    const labelData = [];\n    for (const tickDatum of tickData) {\n      const {\n        tickLabel,\n        translationY\n      } = tickDatum;\n      if (tickLabel === \"\" || tickLabel == void 0) {\n        continue;\n      }\n      const lines = splitText(tickLabel);\n      const {\n        width,\n        height\n      } = measureText(lines, labelX, translationY, textProps);\n      const bbox = new BBox(labelX, translationY, width, height);\n      const labelDatum = calculateLabelBBox(tickLabel, bbox, labelX, translationY, labelMatrix);\n      labelData.push(labelDatum);\n    }\n    return labelData;\n  }\n  getAutoRotation(labelOverlap) {\n    var _a;\n    return labelOverlap ? normalizeAngle360(toRadians((_a = this.label.autoRotateAngle) != null ? _a : 0)) : 0;\n  }\n  getTicks({\n    tickGenerationType,\n    previousTicks,\n    tickCount,\n    minTickCount,\n    maxTickCount,\n    primaryTickCount\n  }) {\n    var _a;\n    const {\n      range: range3,\n      scale: scale2,\n      visibleRange\n    } = this;\n    let rawTicks = [];\n    switch (tickGenerationType) {\n      case 3 /* VALUES */:\n        if (ContinuousScale.is(scale2)) {\n          const scaleDomain = scale2.getDomain();\n          const start2 = scale2.fromDomain(scaleDomain[0]);\n          const stop = scale2.fromDomain(scaleDomain[1]);\n          const d0 = Math.min(start2, stop);\n          const d1 = Math.max(start2, stop);\n          rawTicks = this.tick.values.filter(value => value >= d0 && value <= d1).sort((a, b) => a - b);\n        } else {\n          rawTicks = this.tick.values;\n        }\n        break;\n      case 1 /* CREATE_SECONDARY */:\n        rawTicks = this.updateSecondaryAxisTicks(primaryTickCount);\n        break;\n      case 2 /* FILTER */:\n        rawTicks = this.filterTicks(previousTicks, tickCount);\n        break;\n      default:\n        rawTicks = this.createTicks(tickCount, minTickCount, maxTickCount);\n        break;\n    }\n    this.fractionDigits = rawTicks.fractionDigits >= 0 ? rawTicks.fractionDigits : 0;\n    this.onLabelFormatChange(rawTicks, this.label.format);\n    const halfBandwidth = ((_a = scale2.bandwidth) != null ? _a : 0) / 2;\n    const ticks = [];\n    let labelCount = 0;\n    const tickIdCounts = /* @__PURE__ */new Map();\n    const start = Math.max(0, Math.floor(visibleRange[0] * rawTicks.length));\n    const end = Math.min(rawTicks.length, Math.ceil(visibleRange[1] * rawTicks.length));\n    for (let i = start; i < end; i++) {\n      const rawTick = rawTicks[i];\n      const translationY = scale2.convert(rawTick) + halfBandwidth;\n      if (range3.length > 0 && !this.inRange(translationY, 0, 1e-3)) continue;\n      const tickLabel = this.formatTick(rawTick, i);\n      let tickId = tickLabel;\n      if (tickIdCounts.has(tickId)) {\n        const count2 = tickIdCounts.get(tickId);\n        tickIdCounts.set(tickId, count2 + 1);\n        tickId = `${tickId}_${count2}`;\n      } else {\n        tickIdCounts.set(tickId, 1);\n      }\n      ticks.push({\n        tick: rawTick,\n        tickId,\n        tickLabel,\n        translationY\n      });\n      if (tickLabel === \"\" || tickLabel == void 0) {\n        continue;\n      }\n      labelCount++;\n    }\n    return {\n      rawTicks,\n      ticks,\n      labelCount\n    };\n  }\n  filterTicks(ticks, tickCount) {\n    var _a;\n    const tickSpacing = !isNaN(this.tick.minSpacing) || !isNaN((_a = this.tick.maxSpacing) != null ? _a : NaN);\n    const keepEvery = tickSpacing ? Math.ceil(ticks.length / tickCount) : 2;\n    return ticks.filter((_, i) => i % keepEvery === 0);\n  }\n  createTicks(tickCount, minTickCount, maxTickCount) {\n    var _a, _b, _c;\n    this.setTickCount(tickCount, minTickCount, maxTickCount);\n    return (_c = (_b = (_a = this.scale).ticks) == null ? void 0 : _b.call(_a)) != null ? _c : [];\n  }\n  estimateTickCount({\n    minSpacing,\n    maxSpacing\n  }) {\n    const {\n      minRect\n    } = this;\n    const rangeWithBleed = this.calculateRangeWithBleed();\n    const defaultMinSpacing = Math.max(this.defaultTickMinSpacing, rangeWithBleed / ContinuousScale.defaultMaxTickCount);\n    let clampMaxTickCount = !isNaN(maxSpacing);\n    if (isNaN(minSpacing)) {\n      minSpacing = defaultMinSpacing;\n    }\n    if (isNaN(maxSpacing)) {\n      maxSpacing = rangeWithBleed;\n    }\n    if (minSpacing > maxSpacing) {\n      if (minSpacing === defaultMinSpacing) {\n        minSpacing = maxSpacing;\n      } else {\n        maxSpacing = minSpacing;\n      }\n    }\n    const minRectDistance = minRect ? this.direction === \"x\" /* X */ ? minRect.width : minRect.height : 1;\n    clampMaxTickCount && (clampMaxTickCount = minRectDistance < defaultMinSpacing);\n    const maxTickCount = clamp2(1, Math.floor(rangeWithBleed / minSpacing), clampMaxTickCount ? Math.floor(rangeWithBleed / minRectDistance) : Infinity);\n    const minTickCount = Math.min(maxTickCount, Math.ceil(rangeWithBleed / maxSpacing));\n    const defaultTickCount = clamp2(minTickCount, ContinuousScale.defaultTickCount, maxTickCount);\n    return {\n      minTickCount,\n      maxTickCount,\n      defaultTickCount\n    };\n  }\n  updateVisibility() {\n    if (this.moduleCtx.animationManager.isSkipped()) {\n      this.resetSelectionNodes();\n    }\n    this.tickLineGroup.visible = this.tick.enabled;\n    this.gridLineGroup.visible = this.gridLine.enabled;\n    this.tickLabelGroup.visible = this.label.enabled;\n  }\n  updateCrossLines({\n    rotation,\n    parallelFlipRotation,\n    regularFlipRotation\n  }) {\n    var _a;\n    const sideFlag = this.label.getSideFlag();\n    const anySeriesActive = this.isAnySeriesActive();\n    (_a = this.crossLines) == null ? void 0 : _a.forEach(crossLine => {\n      var _a2;\n      crossLine.sideFlag = -sideFlag;\n      crossLine.direction = rotation === -Math.PI / 2 ? \"x\" /* X */ : \"y\" /* Y */;\n      if (crossLine instanceof CartesianCrossLine) {\n        crossLine.label.parallel = (_a2 = crossLine.label.parallel) != null ? _a2 : this.label.parallel;\n      }\n      crossLine.parallelFlipRotation = parallelFlipRotation;\n      crossLine.regularFlipRotation = regularFlipRotation;\n      crossLine.update(anySeriesActive);\n    });\n  }\n  updateTickLines() {\n    const {\n      tick,\n      label\n    } = this;\n    const sideFlag = label.getSideFlag();\n    this.tickLineGroupSelection.each(line => {\n      line.strokeWidth = tick.width;\n      line.stroke = tick.color;\n      line.x1 = sideFlag * this.getTickSize();\n      line.x2 = 0;\n    });\n  }\n  calculateAvailableRange() {\n    const {\n      range: range3\n    } = this;\n    const min = Math.min(...range3);\n    const max = Math.max(...range3);\n    return max - min;\n  }\n  /**\n   * Calculates the available range with an additional \"bleed\" beyond the canvas that encompasses the full axis when\n   * the visible range is only a portion of the axis.\n   */\n  calculateRangeWithBleed() {\n    const {\n      visibleRange\n    } = this;\n    const visibleScale = 1 / (visibleRange[1] - visibleRange[0]);\n    return round(this.calculateAvailableRange() * visibleScale, 2);\n  }\n  calculateDomain() {\n    if (this.linkedTo) {\n      this.dataDomain = this.linkedTo.dataDomain;\n    } else {\n      const visibleSeries = this.boundSeries.filter(s => this.includeInvisibleDomains || s.isEnabled());\n      const domains = visibleSeries.flatMap(series => series.getDomain(this.direction));\n      const {\n        domain,\n        clipped\n      } = this.normaliseDataDomain(domains);\n      this.dataDomain = {\n        domain: this.reverse ? [...domain].reverse() : domain,\n        clipped\n      };\n    }\n  }\n  getAxisTransform() {\n    return {\n      rotation: toRadians(this.rotation),\n      rotationCenterX: 0,\n      rotationCenterY: 0,\n      translationX: Math.floor(this.translation.x),\n      translationY: Math.floor(this.translation.y)\n    };\n  }\n  updatePosition() {\n    const {\n      crossLineGroup,\n      axisGroup,\n      gridGroup,\n      translation,\n      gridLineGroupSelection,\n      gridPadding,\n      gridLength\n    } = this;\n    const {\n      rotation\n    } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    const translationX = Math.floor(translation.x);\n    const translationY = Math.floor(translation.y);\n    crossLineGroup.setProperties({\n      rotation,\n      translationX,\n      translationY\n    });\n    axisGroup.datum = this.getAxisTransform();\n    gridGroup.setProperties({\n      rotation,\n      translationX,\n      translationY\n    });\n    gridLineGroupSelection.each(line => {\n      line.x1 = gridPadding;\n      line.x2 = -sideFlag * gridLength + gridPadding;\n    });\n  }\n  updateSecondaryAxisTicks(_primaryTickCount) {\n    throw new Error(\"AG Charts - unexpected call to updateSecondaryAxisTicks() - check axes configuration.\");\n  }\n  updateSelections(lineData, data, params) {\n    this.lineNode.datum = lineData;\n    this.gridLineGroupSelection.update(this.gridLength ? data : [], group2 => group2.append(new Line({\n      tag: 2 /* GridLine */\n    })), datum => datum.tickId);\n    this.tickLineGroupSelection.update(data, group2 => group2.appendChild(new Line({\n      tag: 0 /* TickLine */\n    })), datum => datum.tickId);\n    this.tickLabelGroupSelection.update(data.map(d => this.getTickLabelProps(d, params)), group2 => group2.appendChild(new Text({\n      tag: 1 /* TickLabel */\n    })), datum => datum.tickId);\n  }\n  updateAxisLine() {\n    const {\n      line\n    } = this;\n    const strokeWidth = line.enabled ? line.width : 0;\n    this.lineNode.setProperties({\n      stroke: line.color,\n      strokeWidth\n    });\n  }\n  updateGridLines(sideFlag) {\n    const {\n      gridLine: {\n        style,\n        width\n      },\n      gridPadding,\n      gridLength\n    } = this;\n    if (gridLength === 0 || style.length === 0) {\n      return;\n    }\n    this.gridLineGroupSelection.each((line, _, index) => {\n      const {\n        stroke,\n        lineDash\n      } = style[index % style.length];\n      line.setProperties({\n        x1: gridPadding,\n        x2: -sideFlag * gridLength + gridPadding,\n        fill: void 0,\n        stroke,\n        strokeWidth: width,\n        lineDash\n      });\n    });\n  }\n  updateLabels() {\n    const {\n      label\n    } = this;\n    if (!label.enabled) {\n      return;\n    }\n    this.tickLabelGroupSelection.each((node, datum) => {\n      node.setProperties(datum, [\"fill\", \"fontFamily\", \"fontSize\", \"fontStyle\", \"fontWeight\", \"text\", \"textAlign\", \"textBaseline\"]);\n    });\n  }\n  wrapLabels(tickData, index, labelProps) {\n    const {\n      parallel,\n      maxWidth,\n      maxHeight\n    } = this.label;\n    let defaultMaxWidth = this.maxThickness;\n    let defaultMaxHeight = Math.round(this.calculateAvailableRange() / tickData.labelCount);\n    if (parallel) {\n      [defaultMaxWidth, defaultMaxHeight] = [defaultMaxHeight, defaultMaxWidth];\n    }\n    tickData.ticks.forEach(tickDatum => {\n      const {\n        text\n      } = Text.wrap(tickDatum.tickLabel, maxWidth != null ? maxWidth : defaultMaxWidth, maxHeight != null ? maxHeight : defaultMaxHeight, labelProps, \"hyphenate\");\n      tickDatum.tickLabel = text;\n    });\n    return {\n      tickData,\n      index,\n      autoRotation: 0,\n      terminate: true\n    };\n  }\n  updateTitle(params) {\n    const {\n      rotation,\n      title,\n      _titleCaption,\n      lineNode,\n      tickLineGroup,\n      tickLabelGroup\n    } = this;\n    if (!title) {\n      _titleCaption.enabled = false;\n      return;\n    }\n    let spacing = 0;\n    if (title.enabled && params.anyTickVisible) {\n      const tickBBox = Group.computeBBox([tickLineGroup, tickLabelGroup, lineNode]);\n      const tickWidth = rotation === 0 ? tickBBox.width : tickBBox.height;\n      spacing += tickWidth + (!this.tickLabelGroup.visible ? this.seriesAreaPadding : 0);\n    }\n    this.setTitleProps(_titleCaption, {\n      spacing\n    });\n  }\n  // For formatting (nice rounded) tick values.\n  formatTick(datum, index) {\n    var _a, _b;\n    const {\n      label,\n      labelFormatter,\n      fractionDigits,\n      moduleCtx: {\n        callbackCache\n      }\n    } = this;\n    if (label.formatter) {\n      const value = fractionDigits > 0 ? datum : String(datum);\n      return (_a = callbackCache.call(label.formatter, {\n        value,\n        index,\n        fractionDigits,\n        formatter: labelFormatter\n      })) != null ? _a : value;\n    } else if (labelFormatter) {\n      return (_b = callbackCache.call(labelFormatter, datum)) != null ? _b : String(datum);\n    }\n    return String(datum);\n  }\n  // For formatting arbitrary values between the ticks.\n  formatDatum(datum) {\n    return String(datum);\n  }\n  computeBBox() {\n    return this.axisGroup.computeBBox();\n  }\n  initCrossLine(crossLine) {\n    crossLine.scale = this.scale;\n    crossLine.gridLength = this.gridLength;\n  }\n  isAnySeriesActive() {\n    return this.boundSeries.some(s => this.includeInvisibleDomains || s.isEnabled());\n  }\n  clipTickLines(x, y, width, height) {\n    this.tickLineGroup.setClipRectInGroupCoordinateSpace(new BBox(x, y, width, height));\n  }\n  clipGrid(x, y, width, height) {\n    this.gridGroup.setClipRectInGroupCoordinateSpace(new BBox(x, y, width, height));\n  }\n  calculatePadding(min, _max, reverse) {\n    const start = reverse ? _max : min;\n    return [Math.abs(start * 0.01), Math.abs(start * 0.01)];\n  }\n  getTitleFormatterParams() {\n    var _a;\n    const boundSeries = this.boundSeries.reduce((acc, next) => {\n      const keys = next.getKeys(this.direction);\n      const names = next.getNames(this.direction);\n      for (let idx = 0; idx < keys.length; idx++) {\n        acc.push({\n          key: keys[idx],\n          name: names[idx]\n        });\n      }\n      return acc;\n    }, []);\n    return {\n      direction: this.direction,\n      boundSeries,\n      defaultValue: (_a = this.title) == null ? void 0 : _a.text\n    };\n  }\n  normaliseDataDomain(d) {\n    return {\n      domain: d,\n      clipped: false\n    };\n  }\n  getLayoutState() {\n    return __spreadValues({\n      rect: this.computeBBox(),\n      gridPadding: this.gridPadding,\n      seriesAreaPadding: this.seriesAreaPadding,\n      tickSize: this.getTickSize()\n    }, this.layout);\n  }\n  getModuleMap() {\n    return this.moduleMap;\n  }\n  createModuleContext() {\n    var _a;\n    (_a = this.axisContext) != null ? _a : this.axisContext = this.createAxisContext();\n    return __spreadProps(__spreadValues({}, this.moduleCtx), {\n      parent: this.axisContext\n    });\n  }\n  createAxisContext() {\n    return {\n      axisId: this.id,\n      direction: this.direction,\n      continuous: ContinuousScale.is(this.scale),\n      keys: () => this.boundSeries.flatMap(s => s.getKeys(this.direction)),\n      scaleValueFormatter: specifier => {\n        var _a, _b;\n        return (_b = (_a = this.scale).tickFormat) == null ? void 0 : _b.call(_a, {\n          specifier\n        });\n      },\n      scaleBandwidth: () => {\n        var _a;\n        return (_a = this.scale.bandwidth) != null ? _a : 0;\n      },\n      scaleConvert: val => this.scale.convert(val),\n      scaleInvert: val => {\n        var _a, _b;\n        return (_b = (_a = this.scale).invert) == null ? void 0 : _b.call(_a, val);\n      }\n    };\n  }\n  animateReadyUpdate(diff2) {\n    const {\n      animationManager\n    } = this.moduleCtx;\n    const selectionCtx = prepareAxisAnimationContext(this);\n    const fns = prepareAxisAnimationFunctions(selectionCtx);\n    fromToMotion(this.id, \"axis-group\", animationManager, [this.axisGroup], fns.group);\n    fromToMotion(this.id, \"line\", animationManager, [this.lineNode], fns.line);\n    fromToMotion(this.id, \"line-paths\", animationManager, [this.gridLineGroupSelection, this.tickLineGroupSelection], fns.tick, (_, d) => d.tickId, diff2);\n    fromToMotion(this.id, \"tick-labels\", animationManager, [this.tickLabelGroupSelection], fns.label, (_, d) => d.tickId, diff2);\n  }\n  resetSelectionNodes() {\n    const {\n      gridLineGroupSelection,\n      tickLineGroupSelection,\n      tickLabelGroupSelection,\n      lineNode\n    } = this;\n    const selectionCtx = prepareAxisAnimationContext(this);\n    resetMotion([this.axisGroup], resetAxisGroupFn());\n    resetMotion([gridLineGroupSelection, tickLineGroupSelection], resetAxisSelectionFn(selectionCtx));\n    resetMotion([tickLabelGroupSelection], resetAxisLabelSelectionFn());\n    resetMotion([lineNode], resetAxisLineSelectionFn());\n  }\n  calculateUpdateDiff(previous, tickData) {\n    const added = /* @__PURE__ */new Set();\n    const removed = /* @__PURE__ */new Set();\n    const tickMap = {};\n    const tickCount = Math.max(previous.length, tickData.ticks.length);\n    for (let i = 0; i < tickCount; i++) {\n      const tickDatum = tickData.ticks[i];\n      const prev = previous[i];\n      const tick = tickDatum == null ? void 0 : tickDatum.tickId;\n      tickMap[tick != null ? tick : prev] = tickDatum;\n      if (prev === tick) {\n        continue;\n      }\n      if (removed.has(tick)) {\n        removed.delete(tick);\n      } else if (tick) {\n        added.add(tick);\n      }\n      if (added.has(prev)) {\n        added.delete(prev);\n      } else if (prev) {\n        removed.add(prev);\n      }\n    }\n    return {\n      changed: added.size > 0 || removed.size > 0,\n      added: [...added.values()],\n      removed: [...removed.values()]\n    };\n  }\n  isReversed() {\n    return !!this.reverse;\n  }\n};\n_Axis.defaultTickMinSpacing = 50;\n__decorateClass([Validate(BOOLEAN)], _Axis.prototype, \"nice\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], _Axis.prototype, \"reverse\", 2);\n__decorateClass([Validate(STRING_ARRAY)], _Axis.prototype, \"keys\", 2);\n__decorateClass([Validate(predicateWithMessage(title => typeof title == \"object\", \"Title object\"), {\n  optional: true\n})], _Axis.prototype, \"title\", 2);\nvar Axis = _Axis;\n\n// packages/ag-charts-community/src/chart/axis/cartesianAxisLabel.ts\nvar CartesianAxisLabel = class extends AxisLabel {\n  constructor() {\n    super(...arguments);\n    this.autoRotateAngle = 335;\n  }\n};\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], CartesianAxisLabel.prototype, \"autoRotate\", 2);\n__decorateClass([Validate(DEGREE)], CartesianAxisLabel.prototype, \"autoRotateAngle\", 2);\n\n// packages/ag-charts-community/src/chart/axis/cartesianAxis.ts\nvar CartesianAxis = class extends Axis {\n  constructor() {\n    super(...arguments);\n    this.thickness = 0;\n    this.position = \"left\";\n  }\n  get direction() {\n    return [\"top\", \"bottom\"].includes(this.position) ? \"x\" /* X */ : \"y\" /* Y */;\n  }\n  updateDirection() {\n    switch (this.position) {\n      case \"top\":\n        this.rotation = -90;\n        this.label.mirrored = true;\n        this.label.parallel = true;\n        break;\n      case \"right\":\n        this.rotation = 0;\n        this.label.mirrored = true;\n        this.label.parallel = false;\n        break;\n      case \"bottom\":\n        this.rotation = -90;\n        this.label.mirrored = false;\n        this.label.parallel = true;\n        break;\n      case \"left\":\n        this.rotation = 0;\n        this.label.mirrored = false;\n        this.label.parallel = false;\n        break;\n    }\n    if (this.axisContext) {\n      this.axisContext.position = this.position;\n      this.axisContext.direction = this.direction;\n    }\n  }\n  update(primaryTickCount) {\n    this.updateDirection();\n    return super.update(primaryTickCount);\n  }\n  calculateLayout(primaryTickCount) {\n    this.updateDirection();\n    return super.calculateLayout(primaryTickCount);\n  }\n  createAxisContext() {\n    return __spreadProps(__spreadValues({}, super.createAxisContext()), {\n      position: this.position\n    });\n  }\n  assignCrossLineArrayConstructor(crossLines) {\n    assignJsonApplyConstructedArray(crossLines, CartesianCrossLine);\n  }\n  createLabel() {\n    return new CartesianAxisLabel();\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER)], CartesianAxis.prototype, \"thickness\", 2);\n__decorateClass([Validate(POSITION)], CartesianAxis.prototype, \"position\", 2);\n\n// packages/ag-charts-community/src/chart/axis/categoryAxis.ts\nvar CategoryAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new BandScale());\n    this._paddingOverrideEnabled = false;\n    this.groupPaddingInner = 0.1;\n    this.includeInvisibleDomains = true;\n  }\n  set paddingInner(value) {\n    this._paddingOverrideEnabled = true;\n    this.scale.paddingInner = value;\n  }\n  get paddingInner() {\n    this._paddingOverrideEnabled = true;\n    return this.scale.paddingInner;\n  }\n  set paddingOuter(value) {\n    this.scale.paddingOuter = value;\n  }\n  get paddingOuter() {\n    return this.scale.paddingOuter;\n  }\n  normaliseDataDomain(d) {\n    const domain = [];\n    const uniqueValues = /* @__PURE__ */new Set();\n    for (const v of d) {\n      const key = v instanceof Date ? v.getTime() : v;\n      if (!uniqueValues.has(key)) {\n        uniqueValues.add(key);\n        domain.push(v);\n      }\n    }\n    return {\n      domain,\n      clipped: false\n    };\n  }\n  calculateDomain() {\n    if (!this._paddingOverrideEnabled) {\n      const paddings = this.boundSeries.map(s => {\n        var _a;\n        return (_a = s.getBandScalePadding) == null ? void 0 : _a.call(s);\n      }).filter(p => p != null);\n      if (paddings.length > 0) {\n        this.scale.paddingInner = Math.min(...paddings.map(p => p.inner));\n        this.scale.paddingOuter = Math.max(...paddings.map(p => p.outer));\n      }\n    }\n    return super.calculateDomain();\n  }\n};\nCategoryAxis.className = \"CategoryAxis\";\nCategoryAxis.type = \"category\";\n__decorateClass([Validate(RATIO)], CategoryAxis.prototype, \"groupPaddingInner\", 2);\n\n// packages/ag-charts-community/src/chart/axis/tree.ts\nvar TreeNode = class {\n  // current number in sibling group (index)\n  constructor(label = \"\", parent, number = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.subtreeLeft = NaN;\n    this.subtreeRight = NaN;\n    this.screenX = 0;\n    this.screenY = 0;\n    this.children = [];\n    this.leafCount = 0;\n    this.prelim = 0;\n    this.mod = 0;\n    this.ancestor = this;\n    this.change = 0;\n    this.shift = 0;\n    this.label = label;\n    this.parent = parent;\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.number = number;\n  }\n  getLeftSibling() {\n    return this.number > 0 && this.parent ? this.parent.children[this.number - 1] : void 0;\n  }\n  getLeftmostSibling() {\n    return this.number > 0 && this.parent ? this.parent.children[0] : void 0;\n  }\n  // traverse the left contour of a subtree, return the successor of v on this contour\n  nextLeft() {\n    return this.children ? this.children[0] : this.thread;\n  }\n  // traverse the right contour of a subtree, return the successor of v on this contour\n  nextRight() {\n    return this.children ? this.children[this.children.length - 1] : this.thread;\n  }\n  getSiblings() {\n    return this.parent ? this.parent.children.filter((_, i) => i !== this.number) : [];\n  }\n};\nfunction ticksToTree(ticks, pad2 = true) {\n  const root = new TreeNode();\n  let depth = 0;\n  if (pad2) {\n    ticks.forEach(tick => depth = Math.max(depth, tick.labels.length));\n  }\n  ticks.forEach(tick => {\n    if (pad2) {\n      while (tick.labels.length < depth) {\n        tick.labels.unshift(\"\");\n      }\n    }\n    insertTick(root, tick);\n  });\n  return root;\n}\nfunction insertTick(root, tick) {\n  const pathParts = tick.labels.slice().reverse();\n  const lastPartIndex = pathParts.length - 1;\n  pathParts.forEach((pathPart, partIndex) => {\n    const children = root.children;\n    const existingNode = children.find(child => child.label === pathPart);\n    const isNotLeaf = partIndex !== lastPartIndex;\n    if (existingNode && isNotLeaf) {\n      root = existingNode;\n    } else {\n      const node = new TreeNode(pathPart, root);\n      node.number = children.length;\n      children.push(node);\n      if (isNotLeaf) {\n        root = node;\n      }\n    }\n  });\n}\nfunction moveSubtree(wm, wp, shift) {\n  const subtrees = wp.number - wm.number;\n  const ratio = shift / subtrees;\n  wp.change -= ratio;\n  wp.shift += shift;\n  wm.change += ratio;\n  wp.prelim += shift;\n  wp.mod += shift;\n}\nfunction ancestor(vim, v, defaultAncestor) {\n  return v.getSiblings().indexOf(vim.ancestor) >= 0 ? vim.ancestor : defaultAncestor;\n}\nfunction executeShifts(v) {\n  const children = v.children;\n  if (children) {\n    let shift = 0;\n    let change = 0;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const w = children[i];\n      w.prelim += shift;\n      w.mod += shift;\n      change += w.change;\n      shift += w.shift + change;\n    }\n  }\n}\nfunction apportion(v, defaultAncestor, distance) {\n  const w = v.getLeftSibling();\n  if (w) {\n    let vop = v;\n    let vip = v;\n    let vim = w;\n    let vom = vip.getLeftmostSibling();\n    let sip = vip.mod;\n    let sop = vop.mod;\n    let sim = vim.mod;\n    let som = vom.mod;\n    while (vim.nextRight() && vip.nextLeft()) {\n      vim = vim.nextRight();\n      vip = vip.nextLeft();\n      vom = vom.nextLeft();\n      vop = vop.nextRight();\n      vop.ancestor = v;\n      const shift = vim.prelim + sim - (vip.prelim + sip) + distance;\n      if (shift > 0) {\n        moveSubtree(ancestor(vim, v, defaultAncestor), v, shift);\n        sip += shift;\n        sop += shift;\n      }\n      sim += vim.mod;\n      sip += vip.mod;\n      som += vom.mod;\n      sop += vop.mod;\n    }\n    if (vim.nextRight() && !vop.nextRight()) {\n      vop.thread = vim.nextRight();\n      vop.mod += sim - sop;\n    } else {\n      if (vip.nextLeft() && !vom.nextLeft()) {\n        vom.thread = vip.nextLeft();\n        vom.mod += sip - som;\n      }\n      defaultAncestor = v;\n    }\n  }\n  return defaultAncestor;\n}\nfunction firstWalk(node, distance) {\n  const children = node.children;\n  if (children.length) {\n    let defaultAncestor = children[0];\n    children.forEach(child => {\n      firstWalk(child, distance);\n      defaultAncestor = apportion(child, defaultAncestor, distance);\n    });\n    executeShifts(node);\n    const midpoint = (children[0].prelim + children[children.length - 1].prelim) / 2;\n    const leftSibling = node.getLeftSibling();\n    if (leftSibling) {\n      node.prelim = leftSibling.prelim + distance;\n      node.mod = node.prelim - midpoint;\n    } else {\n      node.prelim = midpoint;\n    }\n  } else {\n    const leftSibling = node.getLeftSibling();\n    node.prelim = leftSibling ? leftSibling.prelim + distance : 0;\n  }\n}\nvar Dimensions = class {\n  constructor() {\n    this.top = Infinity;\n    this.right = -Infinity;\n    this.bottom = -Infinity;\n    this.left = Infinity;\n  }\n  update(node, xy) {\n    const {\n      x,\n      y\n    } = xy(node);\n    if (x > this.right) {\n      this.right = x;\n    }\n    if (x < this.left) {\n      this.left = x;\n    }\n    if (y > this.bottom) {\n      this.bottom = y;\n    }\n    if (y < this.top) {\n      this.top = y;\n    }\n  }\n};\nfunction secondWalk(v, m, layout) {\n  v.x = v.prelim + m;\n  v.y = v.depth;\n  layout.update(v);\n  v.children.forEach(w => secondWalk(w, m + v.mod, layout));\n}\nfunction thirdWalk(v) {\n  const children = v.children;\n  let leafCount = 0;\n  children.forEach(w => {\n    thirdWalk(w);\n    if (w.children.length) {\n      leafCount += w.leafCount;\n    } else {\n      leafCount++;\n    }\n  });\n  v.leafCount = leafCount;\n  if (children.length) {\n    v.subtreeLeft = children[0].subtreeLeft;\n    v.subtreeRight = children[v.children.length - 1].subtreeRight;\n    v.x = (v.subtreeLeft + v.subtreeRight) / 2;\n  } else {\n    v.subtreeLeft = v.x;\n    v.subtreeRight = v.x;\n  }\n}\nfunction treeLayout(root) {\n  const layout = new TreeLayout();\n  firstWalk(root, 1);\n  secondWalk(root, -root.prelim, layout);\n  thirdWalk(root);\n  return layout;\n}\nvar TreeLayout = class {\n  constructor() {\n    this.dimensions = new Dimensions();\n    this.leafCount = 0;\n    this.nodes = [];\n    // One might want to process leaf nodes separately from the rest of the tree.\n    // For example, position labels corresponding to leafs vertically, rather than horizontally.\n    this.leafNodes = [];\n    this.nonLeafNodes = [];\n    this.depth = 0;\n  }\n  update(node) {\n    this.dimensions.update(node, node2 => ({\n      x: node2.x,\n      y: node2.y\n    }));\n    if (!node.children.length) {\n      this.leafCount++;\n      this.leafNodes.push(node);\n    } else {\n      this.nonLeafNodes.push(node);\n    }\n    if (node.depth > this.depth) {\n      this.depth = node.depth;\n    }\n    this.nodes.push(node);\n  }\n  resize(width, height, shiftX = 0, shiftY = 0, flipX = false) {\n    const xSteps = this.leafCount - 1;\n    const ySteps = this.depth;\n    const dimensions = this.dimensions;\n    let scalingX = 1;\n    let scalingY = 1;\n    if (width > 0 && xSteps) {\n      const existingSpacingX = (dimensions.right - dimensions.left) / xSteps;\n      const desiredSpacingX = width / xSteps;\n      scalingX = desiredSpacingX / existingSpacingX;\n      if (flipX) {\n        scalingX = -scalingX;\n      }\n    }\n    if (height > 0 && ySteps) {\n      const existingSpacingY = (dimensions.bottom - dimensions.top) / ySteps;\n      const desiredSpacingY = height / ySteps;\n      scalingY = desiredSpacingY / existingSpacingY;\n    }\n    const screenDimensions = new Dimensions();\n    this.nodes.forEach(node => {\n      node.screenX = node.x * scalingX;\n      node.screenY = node.y * scalingY;\n      screenDimensions.update(node, node2 => ({\n        x: node2.screenX,\n        y: node2.screenY\n      }));\n    });\n    const offsetX = -screenDimensions.left;\n    const offsetY = -screenDimensions.top;\n    this.nodes.forEach(node => {\n      node.screenX += offsetX + shiftX;\n      node.screenY += offsetY + shiftY;\n    });\n  }\n};\n\n// packages/ag-charts-community/src/chart/axis/groupedCategoryAxis.ts\nvar GroupedCategoryAxisLabel = class extends AxisLabel {\n  constructor() {\n    super(...arguments);\n    this.grid = false;\n  }\n};\n__decorateClass([Validate(BOOLEAN)], GroupedCategoryAxisLabel.prototype, \"grid\", 2);\nvar GroupedCategoryAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new BandScale());\n    // Label scale (labels are positioned between ticks, tick count = label count + 1).\n    // We don't call is `labelScale` for consistency with other axes.\n    this.tickScale = new BandScale();\n    this.line = new AxisLine();\n    this.label = new GroupedCategoryAxisLabel();\n    this.labelColor = \"rgba(87, 87, 87, 1)\";\n    this.includeInvisibleDomains = true;\n    const {\n      tickLineGroup,\n      tickLabelGroup,\n      gridLineGroup,\n      tickScale,\n      scale: scale2\n    } = this;\n    scale2.paddingOuter = 0.1;\n    scale2.paddingInner = scale2.paddingOuter * 2;\n    this.range = scale2.range.slice();\n    this.refreshScale();\n    tickScale.paddingInner = 1;\n    tickScale.paddingOuter = 0;\n    this.gridLineSelection = Selection.select(gridLineGroup, Line);\n    this.axisLineSelection = Selection.select(tickLineGroup, Line);\n    this.separatorSelection = Selection.select(tickLineGroup, Line);\n    this.labelSelection = Selection.select(tickLabelGroup, Text);\n  }\n  updateRange() {\n    const {\n      range: rr,\n      visibleRange: vr,\n      scale: scale2\n    } = this;\n    const span = (rr[1] - rr[0]) / (vr[1] - vr[0]);\n    const shift = span * vr[0];\n    const start = rr[0] - shift;\n    this.tickScale.range = scale2.range = [start, start + span];\n    this.resizeTickTree();\n  }\n  resizeTickTree() {\n    var _a;\n    const s = this.scale;\n    const range3 = s.domain.length ? [s.convert(s.domain[0]), s.convert(s.domain[s.domain.length - 1])] : s.range;\n    const layout = this.tickTreeLayout;\n    const lineHeight = this.lineHeight;\n    if (layout) {\n      layout.resize(Math.abs(range3[1] - range3[0]), layout.depth * lineHeight, (Math.min(range3[0], range3[1]) || 0) + ((_a = s.bandwidth) != null ? _a : 0) / 2, -layout.depth * lineHeight, range3[1] - range3[0] < 0);\n    }\n  }\n  get lineHeight() {\n    return this.label.fontSize * 1.5;\n  }\n  /**\n   * The length of the grid. The grid is only visible in case of a non-zero value.\n   */\n  set gridLength(value) {\n    if (this._gridLength && !value || !this._gridLength && value) {\n      this.gridLineSelection.clear();\n      this.labelSelection.clear();\n    }\n    this._gridLength = value;\n  }\n  get gridLength() {\n    return this._gridLength;\n  }\n  calculateDomain() {\n    var _a;\n    const {\n      direction\n    } = this;\n    const domains = [];\n    let isNumericX;\n    this.boundSeries.filter(s => s.visible).forEach(series => {\n      if (direction === \"x\" /* X */) {\n        if (isNumericX === void 0) {\n          const domain2 = series.getDomain(direction);\n          domains.push(domain2);\n          isNumericX = typeof domain2[0] === \"number\";\n        } else if (isNumericX) {\n          domains.push(series.getDomain(direction));\n        }\n      } else {\n        domains.push(series.getDomain(direction));\n      }\n    });\n    const domain = new Array().concat(...domains);\n    const domainExtent = (_a = extent(domain)) != null ? _a : domain;\n    const values = this.reverse ? [...domainExtent].reverse() : domainExtent;\n    const {\n      domain: normalisedDataDomain,\n      clipped\n    } = this.normaliseDataDomain(values);\n    this.dataDomain = {\n      domain: normalisedDataDomain,\n      clipped\n    };\n    this.scale.domain = normalisedDataDomain;\n  }\n  normaliseDataDomain(d) {\n    const values = d.filter((s, i, arr) => arr.indexOf(s) === i);\n    const tickTree = ticksToTree(values);\n    this.tickTreeLayout = treeLayout(tickTree);\n    const tickScaleDomain = values.slice();\n    tickScaleDomain.push(\"\");\n    this.tickScale.domain = tickScaleDomain;\n    this.resizeTickTree();\n    return {\n      domain: values,\n      clipped: false\n    };\n  }\n  /**\n   * Creates/removes/updates the scene graph nodes that constitute the axis.\n   * Supposed to be called _manually_ after changing _any_ of the axis properties.\n   * This allows to bulk set axis properties before updating the nodes.\n   * The node changes made by this method are rendered on the next animation frame.\n   * We could schedule this method call automatically on the next animation frame\n   * when any of the axis properties change (the way we do when properties of scene graph's\n   * nodes change), but this will mean that we first wait for the next animation\n   * frame to make changes to the nodes of the axis, then wait for another animation\n   * frame to render those changes. It's nice to have everything update automatically,\n   * but this extra level of async indirection will not just introduce an unwanted delay,\n   * it will also make it harder to reason about the program.\n   */\n  update() {\n    if (!this.computedLayout) {\n      return;\n    }\n    this.updatePosition();\n    this.updateTitleCaption();\n    this.updateCategoryLabels();\n    this.updateSeparators();\n    this.updateAxisLines();\n    this.updateCategoryGridLines();\n    this.resetSelectionNodes();\n    return void 0;\n  }\n  updateTitleCaption() {\n    const {\n      _titleCaption\n    } = this;\n    _titleCaption.node.visible = false;\n  }\n  updateCategoryLabels() {\n    if (!this.computedLayout) return;\n    const {\n      tickLabelLayout\n    } = this.computedLayout;\n    const labelSelection = this.labelSelection.update(tickLabelLayout);\n    labelSelection.each((node, datum) => {\n      node.setProperties(datum);\n    });\n  }\n  updateSeparators() {\n    if (!this.computedLayout) return;\n    const {\n      separatorLayout\n    } = this.computedLayout;\n    const {\n      range: range3\n    } = this;\n    const epsilon2 = 1e-7;\n    const separatorSelection = this.separatorSelection.update(separatorLayout);\n    separatorSelection.each((line, datum) => {\n      line.x1 = datum.x1;\n      line.x2 = datum.x2;\n      line.y1 = datum.y;\n      line.y2 = datum.y;\n      line.visible = datum.y >= range3[0] - epsilon2 && datum.y <= range3[1] + epsilon2;\n      line.stroke = this.tick.color;\n      line.fill = void 0;\n      line.strokeWidth = 1;\n    });\n  }\n  updateAxisLines() {\n    if (!this.computedLayout) return;\n    const {\n      axisLineLayout\n    } = this.computedLayout;\n    const axisLineSelection = this.axisLineSelection.update(axisLineLayout);\n    axisLineSelection.each((line, datum) => {\n      line.setProperties(__spreadProps(__spreadValues({}, datum), {\n        stroke: this.line.color,\n        strokeWidth: this.line.width\n      }));\n      line.x1 = datum.x;\n      line.x2 = datum.x;\n      line.y1 = datum.y1;\n      line.y2 = datum.y2;\n      line.strokeWidth = this.line.width;\n      line.stroke = this.line.color;\n    });\n  }\n  updateCategoryGridLines() {\n    const {\n      gridLength,\n      gridLine,\n      label,\n      range: range3,\n      tickScale\n    } = this;\n    const ticks = tickScale.ticks();\n    const sideFlag = label.getSideFlag();\n    const gridSelection = this.gridLineSelection.update(gridLength ? ticks : []);\n    if (gridLength) {\n      const {\n        width,\n        style\n      } = gridLine;\n      const styleCount = style.length;\n      gridSelection.each((line, datum, index) => {\n        const y = Math.round(tickScale.convert(datum));\n        line.x1 = 0;\n        line.x2 = -sideFlag * gridLength;\n        line.y1 = y;\n        line.y2 = y;\n        line.visible = y >= range3[0] && y <= range3[1];\n        const {\n          stroke,\n          lineDash\n        } = style[index % styleCount];\n        line.stroke = stroke;\n        line.strokeWidth = width;\n        line.lineDash = lineDash;\n        line.fill = void 0;\n      });\n    }\n  }\n  computeLayout() {\n    this.updateDirection();\n    this.calculateDomain();\n    this.updateRange();\n    const {\n      scale: scale2,\n      label,\n      label: {\n        parallel\n      },\n      moduleCtx: {\n        callbackCache\n      },\n      range: range3,\n      title,\n      title: {\n        formatter = p => p.defaultValue\n      } = {}\n    } = this;\n    const rangeStart = scale2.range[0];\n    const rangeEnd = scale2.range[1];\n    const rangeLength = Math.abs(rangeEnd - rangeStart);\n    const bandwidth = rangeLength / scale2.domain.length || 0;\n    const rotation = toRadians(this.rotation);\n    const isHorizontal = Math.abs(Math.cos(rotation)) < 1e-8;\n    const sideFlag = label.getSideFlag();\n    const lineHeight = this.lineHeight;\n    const tickTreeLayout = this.tickTreeLayout;\n    const labels = scale2.ticks();\n    const treeLabels = tickTreeLayout ? tickTreeLayout.nodes : [];\n    const isLabelTree = tickTreeLayout ? tickTreeLayout.depth > 1 : false;\n    const {\n      defaultRotation,\n      configuredRotation,\n      parallelFlipFlag\n    } = calculateLabelRotation({\n      rotation: label.rotation,\n      parallel,\n      regularFlipRotation: normalizeAngle360(rotation - Math.PI / 2),\n      parallelFlipRotation: normalizeAngle360(rotation)\n    });\n    const tickLabelLayout = [];\n    const copyLabelProps = node => {\n      return {\n        fill: node.fill,\n        fontFamily: node.fontFamily,\n        fontSize: node.fontSize,\n        fontStyle: node.fontStyle,\n        fontWeight: node.fontWeight,\n        rotation: node.rotation,\n        rotationCenterX: node.rotationCenterX,\n        rotationCenterY: node.rotationCenterY,\n        text: node.text,\n        textAlign: node.textAlign,\n        textBaseline: node.textBaseline,\n        translationX: node.translationX,\n        translationY: node.translationY,\n        visible: node.visible,\n        x: node.x,\n        y: node.y\n      };\n    };\n    const labelBBoxes = /* @__PURE__ */new Map();\n    let maxLeafLabelWidth = 0;\n    const tempText = new Text();\n    const setLabelProps = (datum, index) => {\n      var _a;\n      tempText.setProperties({\n        fill: label.color,\n        fontFamily: label.fontFamily,\n        fontSize: label.fontSize,\n        fontStyle: label.fontStyle,\n        fontWeight: label.fontWeight,\n        textAlign: \"center\",\n        textBaseline: parallelFlipFlag === -1 ? \"bottom\" : \"hanging\",\n        translationX: datum.screenY - label.fontSize * 0.25,\n        translationY: datum.screenX\n      });\n      if (index === 0) {\n        const isCaptionEnabled = (title == null ? void 0 : title.enabled) && labels.length > 0;\n        if (!isCaptionEnabled) {\n          return false;\n        }\n        const text = callbackCache.call(formatter, this.getTitleFormatterParams());\n        tempText.setProperties({\n          fill: title.color,\n          fontFamily: title.fontFamily,\n          fontSize: title.fontSize,\n          fontStyle: title.fontStyle,\n          fontWeight: title.fontWeight,\n          text,\n          textBaseline: \"hanging\",\n          translationX: datum.screenY - label.fontSize * 0.25,\n          translationY: datum.screenX\n        });\n      } else {\n        const isInRange = datum.screenX >= range3[0] && datum.screenX <= range3[1];\n        if (!isInRange) {\n          return false;\n        }\n        if (label.formatter) {\n          tempText.text = (_a = callbackCache.call(label.formatter, {\n            value: String(datum.label),\n            index\n          })) != null ? _a : String(datum.label);\n        } else {\n          tempText.text = String(datum.label);\n        }\n      }\n      return true;\n    };\n    treeLabels.forEach((datum, index) => {\n      const isVisible = setLabelProps(datum, index);\n      if (isVisible) {\n        const bbox2 = tempText.computeTransformedBBox();\n        if (bbox2) {\n          labelBBoxes.set(index, bbox2);\n          const isLeaf = !datum.children.length;\n          if (isLeaf && bbox2.width > maxLeafLabelWidth) {\n            maxLeafLabelWidth = bbox2.width;\n          }\n        }\n      }\n    });\n    const labelX = sideFlag * label.padding;\n    const labelGrid = this.label.grid;\n    const separatorData = [];\n    treeLabels.forEach((datum, index) => {\n      let visible = setLabelProps(datum, index);\n      const id = index;\n      tempText.x = labelX;\n      tempText.rotationCenterX = labelX;\n      const isLeaf = !datum.children.length;\n      if (isLeaf) {\n        tempText.rotation = configuredRotation;\n        tempText.textAlign = \"end\";\n        tempText.textBaseline = \"middle\";\n        const bbox2 = labelBBoxes.get(id);\n        if (bbox2 && bbox2.height > bandwidth) {\n          visible = false;\n          labelBBoxes.delete(id);\n        }\n      } else {\n        tempText.translationX -= maxLeafLabelWidth - lineHeight + this.label.padding;\n        const availableRange = datum.leafCount * bandwidth;\n        const bbox2 = labelBBoxes.get(id);\n        if (bbox2 && bbox2.width > availableRange) {\n          visible = false;\n          labelBBoxes.delete(id);\n        } else if (isHorizontal) {\n          tempText.rotation = defaultRotation;\n        } else {\n          tempText.rotation = -Math.PI / 2;\n        }\n      }\n      if (datum.parent && isLabelTree) {\n        const y = isLeaf ? datum.screenX - bandwidth / 2 : datum.screenX - datum.leafCount * bandwidth / 2;\n        if (isLeaf) {\n          if (datum.number !== datum.children.length - 1 || labelGrid) {\n            separatorData.push({\n              y,\n              x1: 0,\n              x2: -maxLeafLabelWidth - this.label.padding * 2\n            });\n          }\n        } else {\n          const x = -maxLeafLabelWidth - this.label.padding * 2 + datum.screenY;\n          separatorData.push({\n            y,\n            x1: x + lineHeight,\n            x2: x\n          });\n        }\n      }\n      let props;\n      if (visible) {\n        const bbox2 = tempText.computeTransformedBBox();\n        if (bbox2) {\n          labelBBoxes.set(index, bbox2);\n        }\n        props = __spreadProps(__spreadValues({}, copyLabelProps(tempText)), {\n          visible\n        });\n      } else {\n        labelBBoxes.delete(index);\n        props = {\n          visible\n        };\n      }\n      tickLabelLayout.push(props);\n    });\n    let minX = 0;\n    separatorData.forEach(d => minX = Math.min(minX, d.x2));\n    separatorData.push({\n      y: Math.max(rangeStart, rangeEnd),\n      x1: 0,\n      x2: minX\n    });\n    const separatorLayout = [];\n    const separatorBoxes = [];\n    const epsilon2 = 1e-7;\n    separatorData.forEach(datum => {\n      if (datum.y >= range3[0] - epsilon2 && datum.y <= range3[1] + epsilon2) {\n        const {\n          x1,\n          x2,\n          y\n        } = datum;\n        const separatorBox = new BBox(Math.min(x1, x2), y, Math.abs(x1 - x2), 0);\n        separatorBoxes.push(separatorBox);\n        separatorLayout.push({\n          x1,\n          x2,\n          y\n        });\n      }\n    });\n    const axisLineLayout = [];\n    const axisLineBoxes = [];\n    const lineCount = tickTreeLayout ? tickTreeLayout.depth + 1 : 1;\n    for (let i = 0; i < lineCount; i++) {\n      const visible = labels.length > 0 && (i === 0 || labelGrid && isLabelTree);\n      const x = i > 0 ? -maxLeafLabelWidth - this.label.padding * 2 - (i - 1) * lineHeight : 0;\n      const lineBox = new BBox(x, Math.min(...range3), 0, Math.abs(range3[1] - range3[0]));\n      axisLineBoxes.push(lineBox);\n      axisLineLayout.push({\n        x,\n        y1: range3[0],\n        y2: range3[1],\n        visible\n      });\n    }\n    const getTransformBox = bbox2 => {\n      const matrix = new Matrix();\n      const {\n        rotation: axisRotation,\n        translationX,\n        translationY,\n        rotationCenterX,\n        rotationCenterY\n      } = this.getAxisTransform();\n      Matrix.updateTransformMatrix(matrix, 1, 1, axisRotation, translationX, translationY, {\n        scalingCenterX: 0,\n        scalingCenterY: 0,\n        rotationCenterX,\n        rotationCenterY\n      });\n      return matrix.transformBBox(bbox2);\n    };\n    const bbox = BBox.merge([...labelBBoxes.values(), ...separatorBoxes, ...axisLineBoxes]);\n    const transformedBBox = getTransformBox(bbox);\n    return {\n      bbox: transformedBBox,\n      tickLabelLayout,\n      separatorLayout,\n      axisLineLayout\n    };\n  }\n  calculateLayout() {\n    const {\n      axisLineLayout,\n      separatorLayout,\n      tickLabelLayout,\n      bbox\n    } = this.computeLayout();\n    this.computedLayout = {\n      axisLineLayout,\n      separatorLayout,\n      tickLabelLayout\n    };\n    return {\n      bbox,\n      primaryTickCount: void 0\n    };\n  }\n};\nGroupedCategoryAxis.className = \"GroupedCategoryAxis\";\nGroupedCategoryAxis.type = \"grouped-category\";\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], GroupedCategoryAxis.prototype, \"labelColor\", 2);\n\n// packages/ag-charts-community/src/util/async.ts\nfunction sleep(sleepTimeoutMs) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(void 0), sleepTimeoutMs);\n  });\n}\n\n// packages/ag-charts-community/src/util/callbackCache.ts\nvar CallbackCache = class {\n  constructor() {\n    this.cache = /* @__PURE__ */new WeakMap();\n  }\n  call(fn, ...params) {\n    let serialisedParams;\n    let paramCache = this.cache.get(fn);\n    const invoke = () => {\n      try {\n        const result = fn(...params);\n        if (paramCache && serialisedParams != null) {\n          paramCache.set(serialisedParams, result);\n        }\n        return result;\n      } catch (e) {\n        Logger.warnOnce(`User callback errored, ignoring`, e);\n        return void 0;\n      }\n    };\n    try {\n      serialisedParams = JSON.stringify(params);\n    } catch (e) {\n      return invoke();\n    }\n    if (paramCache == null) {\n      paramCache = /* @__PURE__ */new Map();\n      this.cache.set(fn, paramCache);\n    }\n    if (!paramCache.has(serialisedParams)) {\n      return invoke();\n    }\n    return paramCache.get(serialisedParams);\n  }\n  invalidateCache() {\n    this.cache = /* @__PURE__ */new WeakMap();\n  }\n};\n\n// packages/ag-charts-community/src/util/mutex.ts\nvar Mutex = class {\n  constructor() {\n    this.available = true;\n    this.acquireQueue = [];\n  }\n  acquire(cb) {\n    return new Promise(resolve => {\n      this.acquireQueue.push([cb, resolve]);\n      if (this.available) {\n        this.dispatchNext();\n      }\n    });\n  }\n  acquireImmediately(cb) {\n    return __async(this, null, function* () {\n      if (!this.available) {\n        return false;\n      }\n      yield this.acquire(cb);\n      return true;\n    });\n  }\n  waitForClearAcquireQueue() {\n    return __async(this, null, function* () {\n      return this.acquire(() => __async(this, null, function* () {\n        return void 0;\n      }));\n    });\n  }\n  dispatchNext() {\n    return __async(this, null, function* () {\n      var _a, _b;\n      this.available = false;\n      let [next, done] = (_a = this.acquireQueue.shift()) != null ? _a : [];\n      while (next) {\n        try {\n          yield next();\n          done == null ? void 0 : done();\n        } catch (error) {\n          Logger.error(\"mutex callback error\", error);\n          done == null ? void 0 : done();\n        }\n        [next, done] = (_b = this.acquireQueue.shift()) != null ? _b : [];\n      }\n      this.available = true;\n    });\n  }\n};\n\n// packages/ag-charts-community/src/util/observable.ts\nvar Observable = class {\n  constructor() {\n    this.eventListeners = /* @__PURE__ */new Map();\n  }\n  addEventListener(eventType, listener) {\n    if (typeof listener !== \"function\") {\n      throw new Error(\"AG Charts - listener must be a Function\");\n    }\n    const eventTypeListeners = this.eventListeners.get(eventType);\n    if (eventTypeListeners) {\n      eventTypeListeners.add(listener);\n    } else {\n      this.eventListeners.set(eventType, /* @__PURE__ */new Set([listener]));\n    }\n  }\n  removeEventListener(type, listener) {\n    var _a;\n    (_a = this.eventListeners.get(type)) == null ? void 0 : _a.delete(listener);\n    if (this.eventListeners.size === 0) {\n      this.eventListeners.delete(type);\n    }\n  }\n  hasEventListener(type) {\n    return this.eventListeners.has(type);\n  }\n  clearEventListeners() {\n    this.eventListeners.clear();\n  }\n  fireEvent(event) {\n    var _a;\n    (_a = this.eventListeners.get(event.type)) == null ? void 0 : _a.forEach(listener => listener(event));\n  }\n};\n\n// packages/ag-charts-community/src/util/render.ts\nfunction debouncedAnimationFrame(cb) {\n  return buildScheduler((cb2, _delayMs) => requestAnimationFrame(cb2), cb);\n}\nfunction debouncedCallback(cb) {\n  return buildScheduler((cb2, delayMs = 0) => setTimeout(cb2, delayMs), cb);\n}\nfunction buildScheduler(scheduleFn, cb) {\n  let scheduleCount = 0;\n  let promiseRunning = false;\n  let awaitingPromise;\n  let awaitingDone;\n  const busy = () => {\n    return promiseRunning;\n  };\n  const done = () => {\n    promiseRunning = false;\n    awaitingDone == null ? void 0 : awaitingDone();\n    awaitingDone = void 0;\n    awaitingPromise = void 0;\n    if (scheduleCount > 0) {\n      scheduleFn(scheduleCb);\n    }\n  };\n  const scheduleCb = () => {\n    const count2 = scheduleCount;\n    scheduleCount = 0;\n    promiseRunning = true;\n    const maybePromise = cb({\n      count: count2\n    });\n    if (!maybePromise) {\n      done();\n      return;\n    }\n    maybePromise.then(done).catch(done);\n  };\n  return {\n    schedule(delayMs) {\n      if (scheduleCount === 0 && !busy()) {\n        scheduleFn(scheduleCb, delayMs);\n      }\n      scheduleCount++;\n    },\n    await() {\n      return __async(this, null, function* () {\n        if (!busy()) {\n          return;\n        }\n        if (awaitingPromise == null) {\n          awaitingPromise = new Promise(resolve => {\n            awaitingDone = resolve;\n          });\n        }\n        while (busy()) {\n          yield awaitingPromise;\n        }\n      });\n    }\n  };\n}\n\n// packages/ag-charts-community/src/util/sizeMonitor.ts\nvar SizeMonitor = class {\n  static init(document2) {\n    var _a;\n    if (typeof ResizeObserver !== \"undefined\") {\n      this.resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          const {\n            width,\n            height\n          } = entry.contentRect;\n          this.checkSize(this.elements.get(entry.target), entry.target, width, height);\n        }\n      });\n    } else {\n      const step = () => {\n        this.elements.forEach((entry, element2) => {\n          this.checkClientSize(element2, entry);\n        });\n      };\n      this.pollerHandler = (_a = document2.defaultView) == null ? void 0 : _a.setInterval(step, 100);\n    }\n    this.ownerDocument = document2;\n    this.ready = true;\n    this.documentReady = document2.readyState !== \"loading\";\n    if (this.documentReady) return;\n    this.readyEventFn = () => {\n      const newState = document2.readyState !== \"loading\";\n      const oldState = this.documentReady;\n      this.documentReady = newState;\n      if (!newState) return;\n      if (newState === oldState) return;\n      for (const [el, cb] of this.queuedObserveRequests) {\n        this.observe(el, cb);\n      }\n      this.queuedObserveRequests.length = 0;\n    };\n    document2.addEventListener(\"DOMContentLoaded\", this.readyEventFn);\n  }\n  static destroy() {\n    var _a, _b;\n    if (this.pollerHandler != null) {\n      clearInterval(this.pollerHandler);\n      this.pollerHandler = void 0;\n    }\n    if (this.readyEventFn) {\n      (_a = this.ownerDocument) == null ? void 0 : _a.removeEventListener(\"DOMContentLoaded\", this.readyEventFn);\n      this.readyEventFn = void 0;\n    }\n    (_b = this.resizeObserver) == null ? void 0 : _b.disconnect();\n    this.resizeObserver = void 0;\n    this.ready = false;\n    this.ownerDocument = void 0;\n  }\n  static checkSize(entry, element2, width, height) {\n    if (!entry) return;\n    if (!entry.size || width !== entry.size.width || height !== entry.size.height) {\n      entry.size = {\n        width,\n        height\n      };\n      entry.cb(entry.size, element2);\n    }\n  }\n  // Only a single callback is supported.\n  static observe(element2, cb) {\n    if (!this.ready) {\n      this.init(element2.ownerDocument);\n    }\n    if (!this.documentReady) {\n      this.queuedObserveRequests.push([element2, cb]);\n      return;\n    }\n    this.unobserve(element2, false);\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(element2);\n    }\n    this.elements.set(element2, {\n      cb\n    });\n  }\n  static unobserve(element2, cleanup = true) {\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(element2);\n    }\n    this.elements.delete(element2);\n    this.queuedObserveRequests = this.queuedObserveRequests.filter(([el]) => el === element2);\n    if (cleanup && this.elements.size === 0) {\n      this.destroy();\n    }\n  }\n  static checkClientSize(element2, entry) {\n    var _a, _b;\n    const width = (_a = element2.clientWidth) != null ? _a : 0;\n    const height = (_b = element2.clientHeight) != null ? _b : 0;\n    this.checkSize(entry, element2, width, height);\n  }\n};\nSizeMonitor.elements = /* @__PURE__ */new Map();\nSizeMonitor.ready = false;\nSizeMonitor.documentReady = false;\nSizeMonitor.queuedObserveRequests = [];\n\n// packages/ag-charts-community/src/chart/chartHighlight.ts\nvar ChartHighlight = class {\n  constructor() {\n    this.range = \"tooltip\";\n  }\n};\n__decorateClass([Validate(UNION([\"tooltip\", \"node\"], \"a range\"))], ChartHighlight.prototype, \"range\", 2);\n\n// packages/ag-charts-community/src/chart/chartUpdateType.ts\nvar ChartUpdateType = /* @__PURE__ */(ChartUpdateType2 => {\n  ChartUpdateType2[ChartUpdateType2[\"FULL\"] = 0] = \"FULL\";\n  ChartUpdateType2[ChartUpdateType2[\"PROCESS_DATA\"] = 1] = \"PROCESS_DATA\";\n  ChartUpdateType2[ChartUpdateType2[\"PERFORM_LAYOUT\"] = 2] = \"PERFORM_LAYOUT\";\n  ChartUpdateType2[ChartUpdateType2[\"SERIES_UPDATE\"] = 3] = \"SERIES_UPDATE\";\n  ChartUpdateType2[ChartUpdateType2[\"TOOLTIP_RECALCULATION\"] = 4] = \"TOOLTIP_RECALCULATION\";\n  ChartUpdateType2[ChartUpdateType2[\"SCENE_RENDER\"] = 5] = \"SCENE_RENDER\";\n  ChartUpdateType2[ChartUpdateType2[\"NONE\"] = 6] = \"NONE\";\n  return ChartUpdateType2;\n})(ChartUpdateType || {});\n\n// packages/ag-charts-community/src/chart/data/dataDomain.ts\nvar DataDomain = class {\n  constructor(type) {\n    this.type = type;\n    this.continuousDomain = [Infinity, -Infinity];\n    this.discreteDomain = /* @__PURE__ */new Set();\n  }\n  extend(val) {\n    if (this.type === \"discrete\") {\n      this.discreteDomain.add(val);\n    } else if (this.type === \"continuous\") {\n      if (this.continuousDomain[0] > val) {\n        this.continuousDomain[0] = val;\n      }\n      if (this.continuousDomain[1] < val) {\n        this.continuousDomain[1] = val;\n      }\n    }\n  }\n  getDomain() {\n    if (this.type === \"discrete\") {\n      return this.discreteDomain;\n    } else if (this.type === \"continuous\") {\n      return this.continuousDomain;\n    }\n    throw new Error(\"AG Charts - Unsupported data domain type: \" + this.type);\n  }\n};\n\n// packages/ag-charts-community/src/chart/data/utilFunctions.ts\nfunction extendDomain(values, domain = [Infinity, -Infinity]) {\n  for (const value of values) {\n    if (typeof value !== \"number\") {\n      continue;\n    }\n    if (value < domain[0]) {\n      domain[0] = value;\n    }\n    if (value > domain[1]) {\n      domain[1] = value;\n    }\n  }\n  return domain;\n}\n\n// packages/ag-charts-community/src/chart/data/dataModel.ts\nfunction toKeyString(keys) {\n  return keys.map(v => {\n    if (v == null) {\n      return v;\n    } else if (typeof v === \"number\" || typeof v === \"string\" || typeof v === \"boolean\") {\n      return v;\n    } else if (typeof v === \"object\") {\n      return JSON.stringify(v);\n    }\n    return v;\n  }).join(\"-\");\n}\nfunction round2(val) {\n  const accuracy = 1e4;\n  if (Number.isInteger(val)) {\n    return val;\n  } else if (Math.abs(val) > accuracy) {\n    return Math.trunc(val);\n  }\n  return Math.round(val * accuracy) / accuracy;\n}\nfunction fixNumericExtentInternal(extent2) {\n  if (extent2 === void 0) {\n    return [];\n  }\n  let [min, max] = extent2;\n  min = +min;\n  max = +max;\n  if (min === 0 && max === 0) {\n    return [0, 1];\n  }\n  if (min === Infinity && max === -Infinity) {\n    return [];\n  }\n  if (min === Infinity) {\n    min = 0;\n  }\n  if (max === -Infinity) {\n    max = 0;\n  }\n  if (!(isNumber2(min) && isNumber2(max))) {\n    return [];\n  }\n  return [min, max];\n}\nfunction fixNumericExtent(extent2, axis) {\n  var _a;\n  const fixedExtent = fixNumericExtentInternal(extent2);\n  if (fixedExtent.length === 0) {\n    return fixedExtent;\n  }\n  let [min, max] = fixedExtent;\n  if (min === max) {\n    const [paddingMin, paddingMax] = (_a = axis == null ? void 0 : axis.calculatePadding(min, max, axis.isReversed())) != null ? _a : [1, 1];\n    min -= paddingMin;\n    max += paddingMax;\n  }\n  return [min, max];\n}\nvar INVALID_VALUE = Symbol(\"invalid\");\nvar DataModel = class {\n  constructor(opts) {\n    const {\n      props,\n      mode = \"standalone\"\n    } = opts;\n    this.mode = mode;\n    let keys = true;\n    for (const next of props) {\n      if (next.type === \"key\" && !keys) {\n        throw new Error(\"AG Charts - internal config error: keys must come before values.\");\n      }\n      if (next.type === \"value\" && keys) {\n        keys = false;\n      }\n    }\n    this.opts = __spreadValues({\n      dataVisible: true\n    }, opts);\n    this.keys = props.filter(def => def.type === \"key\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index,\n      missing: 0\n    }));\n    this.values = props.filter(def => def.type === \"value\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index,\n      missing: 0\n    }));\n    this.aggregates = props.filter(def => def.type === \"aggregate\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index\n    }));\n    this.groupProcessors = props.filter(def => def.type === \"group-value-processor\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index\n    }));\n    this.propertyProcessors = props.filter(def => def.type === \"property-value-processor\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index\n    }));\n    this.reducers = props.filter(def => def.type === \"reducer\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index\n    }));\n    this.processors = props.filter(def => def.type === \"processor\").map((def, index) => __spreadProps(__spreadValues({}, def), {\n      index\n    }));\n    for (const def of this.values) {\n      if (def.property == null) {\n        throw new Error(`AG Charts - internal config error: no properties specified for value definitions: ${JSON.stringify(def)}`);\n      }\n    }\n    const verifyMatchGroupId = ({\n      matchGroupIds\n    }) => {\n      for (const matchGroupId of matchGroupIds != null ? matchGroupIds : []) {\n        if (!this.values.some(def => def.groupId === matchGroupId)) {\n          throw new Error(`AG Charts - internal config error: matchGroupIds properties must match defined groups (${matchGroupId}).`);\n        }\n      }\n    };\n    const verifyMatchIds = ({\n      matchIds\n    }) => {\n      for (const matchId of matchIds != null ? matchIds : []) {\n        if (!this.values.some(def => {\n          var _a;\n          return (_a = def.ids) == null ? void 0 : _a.some(([scope, id]) => scope === matchId[0] && id === matchId[1]);\n        })) {\n          throw new Error(`AG Charts - internal config error: matchGroupIds properties must match defined groups (${matchId}).`);\n        }\n      }\n    };\n    for (const def of [...this.groupProcessors, ...this.aggregates]) {\n      verifyMatchIds(def);\n      verifyMatchGroupId(def);\n    }\n  }\n  resolveProcessedDataIndexById(scope, searchId) {\n    var _a;\n    const {\n      index,\n      def\n    } = (_a = this.resolveProcessedDataDefById(scope, searchId)) != null ? _a : {};\n    return {\n      index,\n      def\n    };\n  }\n  resolveProcessedDataIndicesById(scope, searchId) {\n    return this.resolveProcessedDataDefsById(scope, searchId).map(({\n      index,\n      def\n    }) => ({\n      index,\n      def\n    }));\n  }\n  resolveProcessedDataDefById(scope, searchId) {\n    return this.resolveProcessedDataDefsById(scope, searchId)[0];\n  }\n  resolveProcessedDataDefsByIds(scope, searchIds) {\n    const defs = [];\n    for (const searchId of searchIds) {\n      defs.push([searchId, this.resolveProcessedDataDefsById(scope, searchId)]);\n    }\n    return defs;\n  }\n  resolveProcessedDataDefsValues(defs, {\n    keys,\n    values\n  }) {\n    const result = {};\n    for (const [searchId, [{\n      index,\n      def\n    }]] of defs) {\n      const processedData = def.type === \"key\" ? keys : values;\n      result[searchId] = processedData[index];\n    }\n    return result;\n  }\n  resolveProcessedDataDefsById(searchScope, searchId) {\n    const {\n      keys,\n      values,\n      aggregates,\n      groupProcessors,\n      reducers\n    } = this;\n    const match = prop => {\n      const {\n        ids,\n        scopes\n      } = prop;\n      if (ids == null) return false;\n      if (searchScope != null && !(scopes == null ? void 0 : scopes.some(scope => scope === searchScope.id))) return false;\n      return ids.some(([scope, id]) => scope === searchScope.id && (typeof searchId === \"string\" ? id === searchId : searchId.test(id)));\n    };\n    const allDefs = [keys, values, aggregates, groupProcessors, reducers];\n    const result = [];\n    for (const defs of allDefs) {\n      result.push(...defs.filter(match).map(def => ({\n        index: def.index,\n        def\n      })));\n    }\n    if (result.length > 0) {\n      return result;\n    }\n    throw new Error(`AG Charts - didn't find property definition for [${searchId}, ${searchScope.id}]`);\n  }\n  getDomain(scope, searchId, type = \"value\", processedData) {\n    var _a, _b, _c, _d;\n    let matches;\n    try {\n      matches = this.resolveProcessedDataIndicesById(scope, searchId);\n    } catch (e) {\n      if (typeof searchId !== \"string\" && /didn't find property definition/.test(e.message)) return [];\n      throw e;\n    }\n    let domainProp;\n    switch (type) {\n      case \"key\":\n        domainProp = \"keys\";\n        break;\n      case \"value\":\n        domainProp = \"values\";\n        break;\n      case \"aggregate\":\n        domainProp = \"aggValues\";\n        break;\n      case \"group-value-processor\":\n        domainProp = \"groups\";\n        break;\n      default:\n        return [];\n    }\n    const firstMatch = (_b = (_a = processedData.domain[domainProp]) == null ? void 0 : _a[matches[0].index]) != null ? _b : [];\n    if (matches.length === 1) {\n      return firstMatch;\n    }\n    const result = [...firstMatch];\n    for (const idx of matches.slice(1)) {\n      extendDomain((_d = (_c = processedData.domain[domainProp]) == null ? void 0 : _c[idx.index]) != null ? _d : [], result);\n    }\n    return result;\n  }\n  processData(data, sources) {\n    const {\n      opts: {\n        groupByKeys,\n        groupByFn\n      },\n      aggregates,\n      groupProcessors,\n      reducers,\n      processors,\n      propertyProcessors\n    } = this;\n    const start = performance.now();\n    for (const def of [...this.keys, ...this.values]) {\n      def.missing = 0;\n    }\n    if (groupByKeys && this.keys.length === 0) {\n      return void 0;\n    }\n    let processedData = this.extractData(data, sources);\n    if (groupByKeys) {\n      processedData = this.groupData(processedData);\n    } else if (groupByFn) {\n      processedData = this.groupData(processedData, groupByFn(processedData));\n    }\n    if (groupProcessors.length > 0) {\n      this.postProcessGroups(processedData);\n    }\n    if (aggregates.length > 0) {\n      this.aggregateData(processedData);\n    }\n    if (propertyProcessors.length > 0) {\n      this.postProcessProperties(processedData);\n    }\n    if (reducers.length > 0) {\n      this.reduceData(processedData);\n    }\n    if (processors.length > 0) {\n      this.postProcessData(processedData);\n    }\n    for (const def of [...this.keys, ...this.values]) {\n      if (data.length > 0 && def.missing >= data.length) {\n        Logger.warnOnce(`the key '${def.property}' was not found in any data element.`);\n      }\n    }\n    const end = performance.now();\n    processedData.time = end - start;\n    if (Debug.check(true, \"data-model\")) {\n      logProcessedData(processedData);\n    }\n    return processedData;\n  }\n  valueGroupIdxLookup({\n    matchGroupIds,\n    matchIds\n  }) {\n    return this.values.map((def, index) => ({\n      def,\n      index\n    })).filter(({\n      def\n    }) => {\n      if (matchGroupIds && (def.groupId == null || !matchGroupIds.includes(def.groupId))) {\n        return false;\n      }\n      if (!matchIds) return true;\n      if (def.ids == null) return false;\n      return matchIds.some(([matchScope, matchId]) => {\n        var _a;\n        return (_a = def.ids) == null ? void 0 : _a.some(([defScope, defId]) => defScope === matchScope && defId === matchId);\n      });\n    }).map(({\n      index\n    }) => index);\n  }\n  valueIdxLookup(scopes, prop) {\n    const noScopesToMatch = scopes == null || scopes.length === 0;\n    const scopeMatch = compareTo => {\n      const anyScope = compareTo == null;\n      if (anyScope) return true;\n      const noScopes = compareTo == null || compareTo.length === 0;\n      if (noScopesToMatch === noScopes) return true;\n      return compareTo == null ? void 0 : compareTo.some(s => scopes.includes(s));\n    };\n    const propId = typeof prop === \"string\" ? prop : prop.id;\n    const idMatch = ([scope, id]) => {\n      return scopeMatch([scope]) && id === propId;\n    };\n    const result = this.values.findIndex(def => {\n      var _a;\n      return scopeMatch(def.scopes) && (((_a = def.ids) == null ? void 0 : _a.some(id => idMatch(id))) || def.property === propId || def.id === propId);\n    });\n    if (result >= 0) {\n      return result;\n    }\n    throw new Error(`AG Charts - configuration error, unknown property ${JSON.stringify(prop)} in scope(s) ${JSON.stringify(scopes)}`);\n  }\n  extractData(data, sources) {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      keys: keyDefs,\n      values: valueDefs,\n      opts: {\n        dataVisible\n      }\n    } = this;\n    const {\n      dataDomain,\n      processValue,\n      scopes,\n      allScopesHaveSameDefs\n    } = this.initDataDomainProcessor();\n    const resultData = new Array(dataVisible ? data.length : 0);\n    let resultDataIdx = 0;\n    let partialValidDataCount = 0;\n    for (const [datumIdx, datum] of data.entries()) {\n      const sourceDatums = {};\n      const validScopes = scopes.size > 0 ? new Set(scopes) : void 0;\n      const keys = dataVisible ? new Array(keyDefs.length) : void 0;\n      let keyIdx = 0;\n      let key;\n      for (const def of keyDefs) {\n        key = processValue(def, datum, key);\n        if (key === INVALID_VALUE) break;\n        if (keys) {\n          keys[keyIdx++] = key;\n        }\n      }\n      if (key === INVALID_VALUE) continue;\n      const values = dataVisible && valueDefs.length > 0 ? new Array(valueDefs.length) : void 0;\n      let value;\n      const sourcesById = {};\n      for (const source of sources != null ? sources : []) {\n        sourcesById[source.id] = source;\n      }\n      for (const [valueDefIdx, def] of valueDefs.entries()) {\n        for (const scope of (_a = def.scopes) != null ? _a : scopes) {\n          const source = sourcesById[scope];\n          const valueDatum = (_b = source == null ? void 0 : source.data[datumIdx]) != null ? _b : datum;\n          value = processValue(def, valueDatum, value);\n          if (value === INVALID_VALUE || !values) continue;\n          if (source !== void 0) {\n            (_d = sourceDatums[_c = source.id]) != null ? _d : sourceDatums[_c] = {};\n            sourceDatums[source.id][def.property] = value;\n          }\n          if (def.useScopedValues) {\n            (_e = values[valueDefIdx]) != null ? _e : values[valueDefIdx] = {};\n            values[valueDefIdx][scope] = value;\n          } else {\n            values[valueDefIdx] = value;\n          }\n        }\n        if (value === INVALID_VALUE) {\n          if (allScopesHaveSameDefs) break;\n          for (const scope of (_f = def.scopes) != null ? _f : scopes) {\n            validScopes == null ? void 0 : validScopes.delete(scope);\n          }\n          if ((validScopes == null ? void 0 : validScopes.size) === 0) break;\n        }\n      }\n      if (value === INVALID_VALUE && allScopesHaveSameDefs) continue;\n      if ((validScopes == null ? void 0 : validScopes.size) === 0) continue;\n      if (dataVisible) {\n        const result = {\n          datum: __spreadValues(__spreadValues({}, datum), sourceDatums),\n          keys,\n          values\n        };\n        if (!allScopesHaveSameDefs && validScopes && validScopes.size < scopes.size) {\n          partialValidDataCount++;\n          result.validScopes = [...validScopes];\n        }\n        resultData[resultDataIdx++] = result;\n      }\n    }\n    resultData.length = resultDataIdx;\n    const propertyDomain = def => {\n      const result = dataDomain.get(def).getDomain();\n      if (Array.isArray(result) && result[0] > result[1]) {\n        return [];\n      }\n      return [...result];\n    };\n    return {\n      type: \"ungrouped\",\n      input: {\n        count: data.length\n      },\n      data: resultData,\n      domain: {\n        keys: keyDefs.map(def => propertyDomain(def)),\n        values: valueDefs.map(def => propertyDomain(def))\n      },\n      defs: {\n        allScopesHaveSameDefs,\n        keys: keyDefs,\n        values: valueDefs\n      },\n      partialValidDataCount,\n      time: 0\n    };\n  }\n  groupData(data, groupingFn) {\n    var _a, _b, _c, _d;\n    const processedData = /* @__PURE__ */new Map();\n    for (const dataEntry of data.data) {\n      const {\n        keys,\n        values,\n        datum,\n        validScopes\n      } = dataEntry;\n      const group2 = groupingFn ? groupingFn(dataEntry) : keys;\n      const groupStr = toKeyString(group2);\n      if (processedData.has(groupStr)) {\n        const existingData = processedData.get(groupStr);\n        existingData.values.push(values);\n        existingData.datum.push(datum);\n        if (validScopes != null) {\n          for (let index = 0; index < ((_b = (_a = existingData.validScopes) == null ? void 0 : _a.length) != null ? _b : 0); index++) {\n            const scope = (_c = existingData.validScopes) == null ? void 0 : _c[index];\n            if (validScopes.some(s => s === scope)) continue;\n            (_d = existingData.validScopes) == null ? void 0 : _d.splice(index, 1);\n          }\n        }\n      } else {\n        processedData.set(groupStr, {\n          keys: group2,\n          values: [values],\n          datum: [datum],\n          validScopes\n        });\n      }\n    }\n    const resultData = new Array(processedData.size);\n    const resultGroups = new Array(processedData.size);\n    let dataIndex = 0;\n    for (const [, {\n      keys,\n      values,\n      datum,\n      validScopes\n    }] of processedData.entries()) {\n      if ((validScopes == null ? void 0 : validScopes.length) === 0) continue;\n      resultGroups[dataIndex] = keys;\n      resultData[dataIndex++] = {\n        keys,\n        values,\n        datum,\n        validScopes\n      };\n    }\n    return __spreadProps(__spreadValues({}, data), {\n      type: \"grouped\",\n      data: resultData,\n      domain: __spreadProps(__spreadValues({}, data.domain), {\n        groups: resultGroups\n      })\n    });\n  }\n  aggregateData(processedData) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const {\n      aggregates: aggDefs\n    } = this;\n    if (!aggDefs) return;\n    const resultAggValues = aggDefs.map(() => [Infinity, -Infinity]);\n    const resultAggValueIndices = aggDefs.map(def => this.valueGroupIdxLookup(def));\n    const resultAggFns = aggDefs.map(def => def.aggregateFunction);\n    const resultGroupAggFns = aggDefs.map(def => def.groupAggregateFunction);\n    const resultFinalFns = aggDefs.map(def => def.finalFunction);\n    for (const group2 of processedData.data) {\n      let {\n        values\n      } = group2;\n      const {\n        validScopes\n      } = group2;\n      (_a = group2.aggValues) != null ? _a : group2.aggValues = new Array(resultAggValueIndices.length);\n      if (processedData.type === \"ungrouped\") {\n        values = [values];\n      }\n      let resultIdx = 0;\n      for (const indices of resultAggValueIndices) {\n        const scopeValid = (_b = validScopes == null ? void 0 : validScopes.some(s => {\n          var _a2;\n          return (_a2 = aggDefs[resultIdx].matchScopes) == null ? void 0 : _a2.some(as => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          resultIdx++;\n          continue;\n        }\n        let groupAggValues = (_d = (_c = resultGroupAggFns[resultIdx]) == null ? void 0 : _c.call(resultGroupAggFns)) != null ? _d : extendDomain([]);\n        for (const distinctValues of values) {\n          const valuesToAgg = indices.map(valueIdx => distinctValues[valueIdx]);\n          const valuesAgg = resultAggFns[resultIdx](valuesToAgg, group2.keys);\n          if (valuesAgg) {\n            groupAggValues = (_f = (_e = resultGroupAggFns[resultIdx]) == null ? void 0 : _e.call(resultGroupAggFns, valuesAgg, groupAggValues)) != null ? _f : extendDomain(valuesAgg, groupAggValues);\n          }\n        }\n        const finalValues = ((_h = (_g = resultFinalFns[resultIdx]) == null ? void 0 : _g.call(resultFinalFns, groupAggValues)) != null ? _h : groupAggValues).map(v => round2(v));\n        extendDomain(finalValues, resultAggValues[resultIdx]);\n        group2.aggValues[resultIdx++] = finalValues;\n      }\n    }\n    processedData.domain.aggValues = resultAggValues;\n  }\n  postProcessGroups(processedData) {\n    var _a, _b, _c, _d, _e;\n    const {\n      groupProcessors\n    } = this;\n    if (!groupProcessors) return;\n    const affectedIndices = /* @__PURE__ */new Set();\n    const updatedDomains = /* @__PURE__ */new Map();\n    const groupProcessorIndices = /* @__PURE__ */new Map();\n    const groupProcessorInitFns = /* @__PURE__ */new Map();\n    for (const processor of groupProcessors) {\n      const indices = this.valueGroupIdxLookup(processor);\n      groupProcessorIndices.set(processor, indices);\n      groupProcessorInitFns.set(processor, processor.adjust());\n      for (const idx of indices) {\n        const valueDef = this.values[idx];\n        affectedIndices.add(idx);\n        updatedDomains.set(idx, new DataDomain(valueDef.valueType === \"category\" ? \"discrete\" : \"continuous\"));\n      }\n    }\n    const updateDomains = values => {\n      var _a2;\n      for (const valueIndex of affectedIndices) {\n        (_a2 = updatedDomains.get(valueIndex)) == null ? void 0 : _a2.extend(values[valueIndex]);\n      }\n    };\n    for (const group2 of processedData.data) {\n      for (const processor of groupProcessors) {\n        const scopeValid = (_b = (_a = group2.validScopes) == null ? void 0 : _a.some(s => {\n          var _a2;\n          return (_a2 = processor.matchScopes) == null ? void 0 : _a2.some(as => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          continue;\n        }\n        const valueIndexes = (_c = groupProcessorIndices.get(processor)) != null ? _c : [];\n        const adjustFn = (_e = (_d = groupProcessorInitFns.get(processor)) == null ? void 0 : _d()) != null ? _e : () => void 0;\n        if (processedData.type === \"grouped\") {\n          for (const values of group2.values) {\n            if (values) {\n              adjustFn(values, valueIndexes);\n            }\n          }\n          continue;\n        }\n        if (group2.values) {\n          adjustFn(group2.values, valueIndexes);\n        }\n      }\n      if (processedData.type === \"grouped\") {\n        for (const values of group2.values) {\n          updateDomains(values);\n        }\n      } else {\n        updateDomains(group2.values);\n      }\n    }\n    for (const [idx, dataDomain] of updatedDomains) {\n      processedData.domain.values[idx] = [...dataDomain.getDomain()];\n    }\n  }\n  postProcessProperties(processedData) {\n    const {\n      propertyProcessors\n    } = this;\n    if (!propertyProcessors) return;\n    for (const {\n      adjust,\n      property,\n      scopes\n    } of propertyProcessors) {\n      adjust()(processedData, this.valueIdxLookup(scopes != null ? scopes : [], property));\n    }\n  }\n  reduceData(processedData) {\n    var _a, _b, _c;\n    const {\n      reducers: reducerDefs\n    } = this;\n    const scopes = reducerDefs.map(def => def.scopes);\n    const reducers = reducerDefs.map(def => def.reducer());\n    const accValues = reducerDefs.map(def => def.initialValue);\n    for (const group2 of processedData.data) {\n      let reducerIndex = 0;\n      for (const reducer of reducers) {\n        const scopeValid = (_b = (_a = group2.validScopes) == null ? void 0 : _a.some(s => {\n          var _a2;\n          return (_a2 = scopes[reducerIndex]) == null ? void 0 : _a2.some(as => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          reducerIndex++;\n          continue;\n        }\n        accValues[reducerIndex] = reducer(accValues[reducerIndex], group2);\n        reducerIndex++;\n      }\n    }\n    for (let accIdx = 0; accIdx < accValues.length; accIdx++) {\n      (_c = processedData.reduced) != null ? _c : processedData.reduced = {};\n      processedData.reduced[reducerDefs[accIdx].property] = accValues[accIdx];\n    }\n  }\n  postProcessData(processedData) {\n    var _a;\n    const {\n      processors: processorDefs\n    } = this;\n    for (const def of processorDefs) {\n      (_a = processedData.reduced) != null ? _a : processedData.reduced = {};\n      processedData.reduced[def.property] = def.calculate(processedData);\n    }\n  }\n  initDataDomainProcessor() {\n    var _a;\n    const {\n      keys: keyDefs,\n      values: valueDefs\n    } = this;\n    const scopes = /* @__PURE__ */new Set();\n    for (const valueDef of valueDefs) {\n      for (const scope of (_a = valueDef.scopes) != null ? _a : []) {\n        scopes.add(scope);\n      }\n    }\n    const scopesCount = scopes.size;\n    const dataDomain = /* @__PURE__ */new Map();\n    const processorFns = /* @__PURE__ */new Map();\n    let allScopesHaveSameDefs = true;\n    const initDataDomainKey = (key, type, updateDataDomain = dataDomain) => {\n      var _a2;\n      if (type === \"category\") {\n        updateDataDomain.set(key, new DataDomain(\"discrete\"));\n      } else {\n        updateDataDomain.set(key, new DataDomain(\"continuous\"));\n        allScopesHaveSameDefs && (allScopesHaveSameDefs = ((_a2 = key.scopes) != null ? _a2 : []).length === scopesCount);\n      }\n    };\n    const initDataDomain = () => {\n      keyDefs.forEach(def => initDataDomainKey(def, def.valueType));\n      valueDefs.forEach(def => initDataDomainKey(def, def.valueType));\n    };\n    initDataDomain();\n    const accessors = this.buildAccessors(...keyDefs, ...valueDefs);\n    const processValue = (def, datum, previousDatum) => {\n      var _a2, _b, _c, _d;\n      const hasAccessor = (def.property in accessors);\n      let valueInDatum = false;\n      let value;\n      if (hasAccessor) {\n        try {\n          value = accessors[def.property](datum);\n        } catch (error) {}\n        valueInDatum = value !== void 0;\n      } else {\n        valueInDatum = def.property in datum;\n        value = valueInDatum ? datum[def.property] : def.missingValue;\n      }\n      if (def.forceValue != null) {\n        const valueNegative = valueInDatum && isNegative(value);\n        value = valueNegative ? -1 * def.forceValue : def.forceValue;\n        valueInDatum = true;\n      }\n      const missingValueDef = (\"missingValue\" in def);\n      if (!valueInDatum && !missingValueDef) {\n        def.missing++;\n      }\n      if (!dataDomain.has(def)) {\n        initDataDomain();\n      }\n      if (valueInDatum) {\n        const valid = (_b = (_a2 = def.validation) == null ? void 0 : _a2.call(def, value, datum)) != null ? _b : true;\n        if (!valid) {\n          if (\"invalidValue\" in def) {\n            value = def.invalidValue;\n          } else {\n            if (this.mode !== \"integrated\") {\n              Logger.warnOnce(`invalid value of type [${typeof value}] ignored:`, `[${value}]`);\n            }\n            return INVALID_VALUE;\n          }\n        }\n      }\n      if (def.processor) {\n        if (!processorFns.has(def)) {\n          processorFns.set(def, def.processor());\n        }\n        value = (_c = processorFns.get(def)) == null ? void 0 : _c(value, previousDatum !== INVALID_VALUE ? previousDatum : void 0);\n      }\n      (_d = dataDomain.get(def)) == null ? void 0 : _d.extend(value);\n      return value;\n    };\n    return {\n      dataDomain,\n      processValue,\n      initDataDomain,\n      scopes,\n      allScopesHaveSameDefs\n    };\n  }\n  buildAccessors(...defs) {\n    const result = {};\n    if (this.mode === \"integrated\") return result;\n    for (const def of defs) {\n      const isPath = def.property.indexOf(\".\") >= 0 || def.property.indexOf(\"[\") >= 0;\n      if (!isPath) continue;\n      let fnBody;\n      if (def.property.startsWith(\"[\")) {\n        fnBody = `return datum${def.property};`;\n      } else {\n        fnBody = `return datum.${def.property};`;\n      }\n      result[def.property] = new Function(\"datum\", fnBody);\n    }\n    return result;\n  }\n};\nfunction logProcessedData(processedData) {\n  var _a, _b;\n  const logValues = (name, data) => {\n    if (data.length > 0) {\n      Logger.log(`DataModel.processData() - ${name}`);\n      Logger.table(data);\n    }\n  };\n  Logger.log(\"DataModel.processData() - processedData\", processedData);\n  logValues(\"Key Domains\", processedData.domain.keys);\n  logValues(\"Group Domains\", (_a = processedData.domain.groups) != null ? _a : []);\n  logValues(\"Value Domains\", processedData.domain.values);\n  logValues(\"Aggregate Domains\", (_b = processedData.domain.aggValues) != null ? _b : []);\n  if (processedData.type === \"grouped\") {\n    const flattenedValues = processedData.data.reduce((acc, next) => {\n      var _a2, _b2;\n      const keys = (_a2 = next.keys) != null ? _a2 : [];\n      const aggValues = (_b2 = next.aggValues) != null ? _b2 : [];\n      const skipKeys = next.keys.map(() => void 0);\n      const skipAggValues = aggValues == null ? void 0 : aggValues.map(() => void 0);\n      acc.push(...next.values.map((v, i) => [...(i === 0 ? keys : skipKeys), ...(v != null ? v : []), ...(i == 0 ? aggValues : skipAggValues)]));\n      return acc;\n    }, []);\n    logValues(\"Values\", flattenedValues);\n  } else {\n    const flattenedValues = processedData.data.reduce((acc, next) => {\n      var _a2;\n      const aggValues = (_a2 = next.aggValues) != null ? _a2 : [];\n      acc.push([...next.keys, ...next.values, ...aggValues]);\n      return acc;\n    }, []);\n    logValues(\"Values\", flattenedValues);\n  }\n}\n\n// packages/ag-charts-community/src/chart/data/dataController.ts\nvar DataController = class {\n  constructor(mode) {\n    this.mode = mode;\n    this.debug = Debug.create(true, \"data-model\");\n    this.requested = [];\n    this.status = \"setup\";\n  }\n  request(id, data, opts) {\n    return __async(this, null, function* () {\n      if (this.status !== \"setup\") throw new Error(`AG Charts - data request after data setup phase.`);\n      return new Promise((resolve, reject) => {\n        this.requested.push({\n          id,\n          opts,\n          data,\n          resultCb: resolve,\n          reject\n        });\n      });\n    });\n  }\n  execute() {\n    return __async(this, null, function* () {\n      if (this.status !== \"setup\") throw new Error(`AG Charts - data request after data setup phase.`);\n      this.status = \"executed\";\n      this.debug(\"DataController.execute() - requested\", this.requested);\n      const {\n        valid,\n        invalid\n      } = this.validateRequests(this.requested);\n      this.debug(\"DataController.execute() - validated\", valid);\n      const merged = this.mergeRequested(valid);\n      this.debug(\"DataController.execute() - merged\", merged);\n      const debugMode = Debug.check(true, \"data-model\");\n      if (debugMode) {\n        window.processedData = [];\n      }\n      const multipleSources = valid.some(v => v.data != null);\n      for (const {\n        opts,\n        data,\n        resultCbs,\n        rejects,\n        ids\n      } of merged) {\n        const needsValueExtraction = multipleSources || opts.props.some(p => {\n          var _a;\n          if (p.type !== \"value\" && p.type !== \"key\") return false;\n          return (_a = p.useScopedValues) != null ? _a : false;\n        });\n        try {\n          const dataModel = new DataModel(__spreadProps(__spreadValues({}, opts), {\n            mode: this.mode\n          }));\n          const processedData = dataModel.processData(data, valid);\n          if (debugMode) {\n            window.processedData.push(processedData);\n          }\n          if (processedData && processedData.partialValidDataCount === 0) {\n            resultCbs.forEach((cb, requestIdx) => {\n              const id = ids[requestIdx];\n              let requestProcessedData = processedData;\n              if (needsValueExtraction) {\n                requestProcessedData = this.extractScopedData(id, processedData);\n              }\n              cb({\n                dataModel,\n                processedData: requestProcessedData\n              });\n            });\n          } else if (processedData) {\n            this.splitResult(dataModel, processedData, ids, resultCbs);\n          } else {\n            rejects.forEach(cb => cb(new Error(`AG Charts - no processed data generated`)));\n          }\n        } catch (error) {\n          rejects.forEach(cb => cb(error));\n        }\n      }\n      invalid.forEach(({\n        error,\n        reject\n      }) => reject(error));\n    });\n  }\n  extractScopedData(id, processedData) {\n    const extractDatum = datum => {\n      if (Array.isArray(datum)) {\n        return datum.map(extractDatum);\n      }\n      return __spreadValues(__spreadValues({}, datum), datum[id]);\n    };\n    const extractValues = values => {\n      var _a;\n      if (Array.isArray(values)) {\n        return values.map(extractValues);\n      }\n      return (_a = values == null ? void 0 : values[id]) != null ? _a : values;\n    };\n    return __spreadProps(__spreadValues({}, processedData), {\n      data: processedData.data.map(datum => __spreadProps(__spreadValues({}, datum), {\n        datum: extractDatum(datum.datum),\n        values: datum.values.map(extractValues)\n      }))\n    });\n  }\n  validateRequests(requested) {\n    const valid = [];\n    const invalid = [];\n    for (const [index, request] of requested.entries()) {\n      if (index > 0 && request.data.length !== requested[0].data.length && request.opts.groupByData === false) {\n        invalid.push(__spreadProps(__spreadValues({}, request), {\n          error: new Error(\"all series[].data arrays must be of the same length and have matching keys.\")\n        }));\n      } else {\n        valid.push(request);\n      }\n    }\n    return {\n      valid,\n      invalid\n    };\n  }\n  mergeRequested(requested) {\n    const grouped = [];\n    const keys = props => {\n      return props.filter(p => p.type === \"key\").map(p => p.property).join(\";\");\n    };\n    const groupMatch = ({\n      opts,\n      data\n    }) => gr => {\n      return (opts.groupByData === false || gr[0].data === data) && gr[0].opts.groupByKeys === opts.groupByKeys && gr[0].opts.dataVisible === opts.dataVisible && gr[0].opts.groupByFn === opts.groupByFn && keys(gr[0].opts.props) === keys(opts.props);\n    };\n    const propMatch = prop => existing => {\n      var _a;\n      if (existing.type !== prop.type) return false;\n      const diff2 = (_a = jsonDiff(existing, prop)) != null ? _a : {};\n      delete diff2[\"scopes\"];\n      delete diff2[\"id\"];\n      delete diff2[\"ids\"];\n      if (\"useScopedValues\" in diff2) {\n        delete diff2[\"useScopedValues\"];\n      }\n      return Object.keys(diff2).length === 0;\n    };\n    const updateKeyValueOpts = prop => {\n      var _a;\n      if (prop.type !== \"key\" && prop.type !== \"value\") return;\n      const uniqueScopes = new Set((_a = prop.scopes) != null ? _a : []);\n      prop.useScopedValues = uniqueScopes.size > 1;\n    };\n    const mergeOpts = opts => {\n      return __spreadProps(__spreadValues({}, opts[0]), {\n        props: opts.reduce((result, next) => {\n          var _a, _b, _c, _d, _e, _f;\n          for (const prop of next.props) {\n            if (prop.id != null) {\n              (_a = prop.ids) != null ? _a : prop.ids = [];\n              (_b = prop.scopes) == null ? void 0 : _b.forEach(scope => {\n                var _a2;\n                return (_a2 = prop.ids) == null ? void 0 : _a2.push([scope, prop.id]);\n              });\n            }\n            const match = result.find(propMatch(prop));\n            if (!match) {\n              updateKeyValueOpts(prop);\n              result.push(prop);\n              continue;\n            }\n            (_c = match.scopes) != null ? _c : match.scopes = [];\n            match.scopes.push(...((_d = prop.scopes) != null ? _d : []));\n            updateKeyValueOpts(prop);\n            if (match.type !== \"key\" && match.type !== \"value\") continue;\n            (_f = match.ids) == null ? void 0 : _f.push(...((_e = prop.ids) != null ? _e : []));\n          }\n          return result;\n        }, [])\n      });\n    };\n    const merge = props => {\n      return {\n        ids: props.map(({\n          id\n        }) => id),\n        resultCbs: props.map(({\n          resultCb\n        }) => resultCb),\n        rejects: props.map(({\n          reject\n        }) => reject),\n        data: props[0].data,\n        opts: mergeOpts(props.map(({\n          opts\n        }) => opts))\n      };\n    };\n    for (const request of requested) {\n      const match = grouped.find(groupMatch(request));\n      if (match) {\n        match.push(request);\n      } else {\n        grouped.push([request]);\n      }\n    }\n    return grouped.map(merge);\n  }\n  splitResult(dataModel, processedData, scopes, resultCbs) {\n    for (let index = 0; index < scopes.length; index++) {\n      const scope = scopes[index];\n      const resultCb = resultCbs[index];\n      resultCb({\n        dataModel,\n        processedData: __spreadProps(__spreadValues({}, processedData), {\n          data: processedData.data.filter(({\n            validScopes\n          }) => {\n            return validScopes == null || validScopes.some(s => s === scope);\n          })\n        })\n      });\n    }\n  }\n};\n\n// packages/ag-charts-community/src/util/listeners.ts\nvar Listeners = class {\n  constructor() {\n    this.registeredListeners = /* @__PURE__ */new Map();\n  }\n  addListener(eventType, handler, meta) {\n    const record = {\n      symbol: Symbol(eventType),\n      handler,\n      meta\n    };\n    if (this.registeredListeners.has(eventType)) {\n      this.registeredListeners.get(eventType).push(record);\n    } else {\n      this.registeredListeners.set(eventType, [record]);\n    }\n    return () => this.removeListener(record.symbol);\n  }\n  removeListener(eventSymbol) {\n    for (const [type, listeners] of this.registeredListeners.entries()) {\n      const matchIndex = listeners.findIndex(listener => listener.symbol === eventSymbol);\n      if (matchIndex >= 0) {\n        listeners.splice(matchIndex, 1);\n        if (listeners.length === 0) {\n          this.registeredListeners.delete(type);\n        }\n        break;\n      }\n    }\n  }\n  dispatch(eventType, ...params) {\n    for (const listener of this.getListenersByType(eventType)) {\n      try {\n        listener.handler(...params);\n      } catch (e) {\n        Logger.errorOnce(e);\n      }\n    }\n  }\n  dispatchWrapHandlers(eventType, wrapFn, ...params) {\n    for (const listener of this.getListenersByType(eventType)) {\n      try {\n        wrapFn(listener.handler, listener.meta, ...params);\n      } catch (e) {\n        Logger.errorOnce(e);\n      }\n    }\n  }\n  getListenersByType(eventType) {\n    var _a;\n    return (_a = this.registeredListeners.get(eventType)) != null ? _a : [];\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/baseManager.ts\nvar BaseManager = class {\n  constructor() {\n    this.listeners = new Listeners();\n  }\n  addListener(type, handler, meta) {\n    return this.listeners.addListener(type, handler, meta);\n  }\n  removeListener(listenerSymbol) {\n    this.listeners.removeListener(listenerSymbol);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/animationManager.ts\nvar DEBUG_SELECTORS = [true, \"animation\"];\nvar AnimationManager = class extends BaseManager {\n  constructor(interactionManager, chartUpdateMutex) {\n    super();\n    this.interactionManager = interactionManager;\n    this.chartUpdateMutex = chartUpdateMutex;\n    this.defaultDuration = 1e3;\n    this.batch = new AnimationBatch();\n    this.debug = Debug.create(...DEBUG_SELECTORS);\n    this.isPlaying = false;\n    this.requestId = null;\n    this.skipAnimations = false;\n  }\n  /**\n   * Create an animation to tween a value between the `from` and `to` properties. If an animation already exists\n   * with the same `id`, immediately stop it.\n   */\n  animate(_a) {\n    var _b = _a,\n      {\n        disableInteractions = true,\n        immutable = true\n      } = _b,\n      opts = __objRest(_b, [\"disableInteractions\", \"immutable\"]);\n    var _a2, _b2;\n    const {\n      batch\n    } = this;\n    try {\n      if (opts.id != null && batch.controllers.has(opts.id)) {\n        if (!immutable) {\n          return batch.controllers.get(opts.id).reset(opts);\n        }\n        batch.controllers.get(opts.id).stop();\n        this.debug(`Skipping animation batch due to update of existing animation: ${opts.id}`);\n        this.batch.skip();\n      }\n    } catch (error) {\n      this.failsafeOnError(error);\n      return;\n    }\n    const id = (_a2 = opts.id) != null ? _a2 : Math.random().toString();\n    const skip = this.isSkipped();\n    if (skip) {\n      this.debug(\"AnimationManager - skipping animation\");\n    }\n    return new Animation(__spreadProps(__spreadValues({}, opts), {\n      id,\n      skip,\n      autoplay: this.isPlaying ? opts.autoplay : false,\n      duration: (_b2 = opts.duration) != null ? _b2 : this.defaultDuration,\n      onPlay: controller => {\n        var _a3;\n        batch.controllers.set(id, controller);\n        this.requestAnimation();\n        if (disableInteractions) {\n          this.interactionManager.pause(\"animation\");\n        }\n        (_a3 = opts.onPlay) == null ? void 0 : _a3.call(controller, controller);\n      },\n      onStop: controller => {\n        var _a3;\n        batch.controllers.delete(id);\n        if (disableInteractions) {\n          this.interactionManager.resume(\"animation\");\n        }\n        (_a3 = opts.onStop) == null ? void 0 : _a3.call(controller, controller);\n      }\n    }));\n  }\n  play() {\n    if (this.isPlaying) {\n      return;\n    }\n    this.isPlaying = true;\n    this.debug(\"AnimationManager.play()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.play();\n      } catch (error) {\n        this.failsafeOnError(error);\n      }\n    }\n    this.requestAnimation();\n  }\n  pause() {\n    if (!this.isPlaying) {\n      return;\n    }\n    this.isPlaying = false;\n    this.cancelAnimation();\n    this.debug(\"AnimationManager.pause()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.pause();\n      } catch (error) {\n        this.failsafeOnError(error);\n      }\n    }\n  }\n  stop() {\n    this.isPlaying = false;\n    this.cancelAnimation();\n    this.debug(\"AnimationManager.stop()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.stop();\n      } catch (error) {\n        this.failsafeOnError(error, false);\n      }\n    }\n  }\n  stopByAnimationId(id) {\n    var _a;\n    try {\n      if (id != null && this.batch.controllers.has(id)) {\n        (_a = this.batch.controllers.get(id)) == null ? void 0 : _a.stop();\n      }\n    } catch (error) {\n      this.failsafeOnError(error);\n      return;\n    }\n  }\n  stopByAnimationGroupId(id) {\n    for (const controller of this.batch.controllers.values()) {\n      if (controller.groupId === id) {\n        this.stopByAnimationId(controller.id);\n      }\n    }\n  }\n  reset() {\n    if (this.isPlaying) {\n      this.stop();\n      this.play();\n    } else {\n      this.stop();\n    }\n  }\n  skip(skip = true) {\n    this.skipAnimations = skip;\n  }\n  isSkipped() {\n    return this.skipAnimations || this.batch.isSkipped();\n  }\n  isActive() {\n    return this.isPlaying && this.batch.isActive();\n  }\n  skipCurrentBatch() {\n    if (Debug.check(...DEBUG_SELECTORS)) {\n      this.debug(`AnimationManager - skipCurrentBatch()`, {\n        stack: new Error().stack\n      });\n    }\n    this.batch.skip();\n  }\n  /** Mocking point for tests to guarantee that animation updates happen. */\n  isSkippingFrames() {\n    return true;\n  }\n  /** Mocking point for tests to capture requestAnimationFrame callbacks. */\n  scheduleAnimationFrame(cb) {\n    this.requestId = requestAnimationFrame(cb);\n  }\n  requestAnimation() {\n    if (!this.batch.isActive() || this.requestId !== null) return;\n    let prevTime;\n    const onAnimationFrame = time => __async(this, null, function* () {\n      const executeAnimationFrame = () => __async(this, null, function* () {\n        const deltaTime = time - (prevTime != null ? prevTime : time);\n        prevTime = time;\n        this.debug(\"AnimationManager - onAnimationFrame()\", {\n          controllersCount: this.batch.controllers.size\n        });\n        for (const controller of this.batch.controllers.values()) {\n          try {\n            controller.update(deltaTime);\n          } catch (error) {\n            this.failsafeOnError(error);\n          }\n        }\n        this.listeners.dispatch(\"animation-frame\", {\n          type: \"animation-frame\",\n          deltaMs: deltaTime\n        });\n      });\n      if (this.isSkippingFrames()) {\n        yield this.chartUpdateMutex.acquireImmediately(executeAnimationFrame);\n      } else {\n        yield this.chartUpdateMutex.acquire(executeAnimationFrame);\n      }\n      if (this.batch.isActive()) {\n        this.scheduleAnimationFrame(onAnimationFrame);\n      }\n    });\n    this.scheduleAnimationFrame(onAnimationFrame);\n  }\n  cancelAnimation() {\n    if (this.requestId === null) return;\n    cancelAnimationFrame(this.requestId);\n    this.requestId = null;\n    this.startBatch();\n  }\n  failsafeOnError(error, cancelAnimation = true) {\n    Logger.error(\"Error during animation, skipping animations\", error);\n    if (cancelAnimation) {\n      this.cancelAnimation();\n    }\n  }\n  startBatch(skipAnimations) {\n    this.debug(`AnimationManager - startBatch() with skipAnimations=${skipAnimations}.`);\n    this.reset();\n    this.batch.destroy();\n    this.batch = new AnimationBatch();\n    if (skipAnimations === true) {\n      this.batch.skip();\n    }\n  }\n  endBatch() {\n    this.debug(`AnimationManager - endBatch() with ${this.batch.controllers.size} animations; skipped: ${this.batch.isSkipped()}.`);\n    if (this.batch.isSkipped() && !this.batch.isActive()) {\n      this.batch.skip(false);\n    }\n  }\n};\nvar AnimationBatch = class {\n  constructor() {\n    this.controllers = /* @__PURE__ */new Map();\n    this.skipAnimations = false;\n  }\n  // private phase?: 'initial-load' | 'remove' | 'update' | 'add';\n  isActive() {\n    return this.controllers.size > 0;\n  }\n  skip(skip = true) {\n    if (this.skipAnimations === false && skip === true) {\n      for (const controller of this.controllers.values()) {\n        controller.stop();\n      }\n      this.controllers.clear();\n    }\n    this.skipAnimations = skip;\n  }\n  isSkipped() {\n    return this.skipAnimations;\n  }\n  destroy() {}\n};\n\n// packages/ag-charts-community/src/chart/interaction/chartEventManager.ts\nvar ChartEventManager = class extends BaseManager {\n  legendItemClick(series, itemId, enabled, legendItemName) {\n    const event = {\n      type: \"legend-item-click\",\n      series,\n      itemId,\n      enabled,\n      legendItemName\n    };\n    this.listeners.dispatch(\"legend-item-click\", event);\n  }\n  legendItemDoubleClick(series, itemId, enabled, numVisibleItems, legendItemName) {\n    const event = {\n      type: \"legend-item-double-click\",\n      series,\n      itemId,\n      enabled,\n      legendItemName,\n      numVisibleItems\n    };\n    this.listeners.dispatch(\"legend-item-double-click\", event);\n  }\n  axisHover(axisId, direction) {\n    const event = {\n      type: \"axis-hover\",\n      axisId,\n      direction\n    };\n    this.listeners.dispatch(\"axis-hover\", event);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/cursorManager.ts\nvar CursorManager = class {\n  constructor(element2) {\n    this.states = {};\n    this.element = element2;\n  }\n  updateCursor(callerId, style) {\n    delete this.states[callerId];\n    if (style != null) {\n      this.states[callerId] = {\n        style\n      };\n    }\n    this.applyStates();\n  }\n  applyStates() {\n    let styleToApply = \"default\";\n    Object.entries(this.states).reverse().slice(0, 1).forEach(([_, {\n      style\n    }]) => styleToApply = style);\n    this.element.style.cursor = styleToApply;\n  }\n  getCursor() {\n    return this.element.style.cursor;\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/highlightManager.ts\nvar HighlightManager = class extends BaseManager {\n  constructor() {\n    super(...arguments);\n    this.highlightStates = /* @__PURE__ */new Map();\n    this.pickedStates = /* @__PURE__ */new Map();\n  }\n  updateHighlight(callerId, highlightedDatum) {\n    this.highlightStates.delete(callerId);\n    if (highlightedDatum != null) {\n      this.highlightStates.set(callerId, highlightedDatum);\n    }\n    this.applyHighlightStates();\n  }\n  getActiveHighlight() {\n    return this.activeHighlight;\n  }\n  updatePicked(callerId, clickableDatum) {\n    this.pickedStates.delete(callerId);\n    if (clickableDatum != null) {\n      this.pickedStates.set(callerId, clickableDatum);\n    }\n    this.applyPickedStates();\n  }\n  getActivePicked() {\n    return this.activePicked;\n  }\n  applyHighlightStates() {\n    const {\n      activeHighlight: previousHighlight\n    } = this;\n    this.activeHighlight = Array.from(this.highlightStates.values()).pop();\n    if (!this.isEqual(this.activeHighlight, previousHighlight)) {\n      this.listeners.dispatch(\"highlight-change\", {\n        type: \"highlight-change\",\n        currentHighlight: this.activeHighlight,\n        previousHighlight\n      });\n    }\n  }\n  applyPickedStates() {\n    this.activePicked = Array.from(this.pickedStates.values()).pop();\n  }\n  isEqual(a, b) {\n    return a === b || (a == null ? void 0 : a.series) === (b == null ? void 0 : b.series) && (a == null ? void 0 : a.itemId) === (b == null ? void 0 : b.itemId) && (a == null ? void 0 : a.datum) === (b == null ? void 0 : b.datum);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/interactionManager.ts\nvar WINDOW_EVENT_HANDLERS = [\"pagehide\", \"mousemove\", \"mouseup\"];\nvar EVENT_HANDLERS = [\"click\", \"dblclick\", \"contextmenu\", \"mousedown\", \"mouseout\", \"mouseenter\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\", \"wheel\"];\nvar CSS = `\n.ag-chart-wrapper {\n    touch-action: none;\n}\n`;\nvar _InteractionManager = class _InteractionManager extends BaseManager {\n  constructor(element2, document2, window2) {\n    super();\n    this.eventHandler = event => this.processEvent(event);\n    this.mouseDown = false;\n    this.touchDown = false;\n    this.pausers = {\n      animation: 0,\n      \"context-menu\": 0\n    };\n    this.rootElement = document2.body;\n    this.element = element2;\n    this.window = window2;\n    for (const type of EVENT_HANDLERS) {\n      if (type.startsWith(\"touch\")) {\n        element2.addEventListener(type, this.eventHandler, {\n          passive: true\n        });\n      } else if (type === \"wheel\") {\n        element2.addEventListener(type, this.eventHandler, {\n          passive: false\n        });\n      } else {\n        element2.addEventListener(type, this.eventHandler);\n      }\n    }\n    for (const type of WINDOW_EVENT_HANDLERS) {\n      this.window.addEventListener(type, this.eventHandler);\n    }\n    if (!_InteractionManager.interactionDocuments.includes(document2)) {\n      injectStyle(document2, CSS);\n      _InteractionManager.interactionDocuments.push(document2);\n    }\n  }\n  destroy() {\n    for (const type of WINDOW_EVENT_HANDLERS) {\n      this.window.removeEventListener(type, this.eventHandler);\n    }\n    for (const type of EVENT_HANDLERS) {\n      this.element.removeEventListener(type, this.eventHandler);\n    }\n  }\n  resume(pauseType) {\n    this.pausers[pauseType]--;\n  }\n  pause(pauseType) {\n    this.pausers[pauseType]++;\n  }\n  processEvent(event) {\n    const types = this.decideInteractionEventTypes(event);\n    if (types.length > 0) {\n      this.dispatchEvent(event, types).catch(e => Logger.errorOnce(e));\n    }\n  }\n  dispatchEvent(event, types) {\n    return __async(this, null, function* () {\n      const coords = this.calculateCoordinates(event);\n      if (coords == null) {\n        return;\n      }\n      const pauses = Object.entries(this.pausers).filter(([, count2]) => count2 > 0).map(([pause]) => pause);\n      for (const type of types) {\n        this.listeners.dispatchWrapHandlers(type, (handler, meta, interactionEvent) => {\n          var _a;\n          if (pauses.length > 0 && !((_a = meta == null ? void 0 : meta.bypassPause) == null ? void 0 : _a.some(p => pauses.includes(p)))) {\n            return;\n          }\n          if (!interactionEvent.consumed) {\n            handler(interactionEvent);\n          }\n        }, this.buildEvent(__spreadValues({\n          type,\n          event,\n          pauses\n        }, coords)));\n      }\n    });\n  }\n  decideInteractionEventTypes(event) {\n    const dragStart = \"drag-start\";\n    switch (event.type) {\n      case \"click\":\n        return [\"click\"];\n      case \"dblclick\":\n        return [\"dblclick\"];\n      case \"contextmenu\":\n        return [\"contextmenu\"];\n      case \"mousedown\":\n        this.mouseDown = true;\n        this.dragStartElement = event.target;\n        return [dragStart];\n      case \"touchstart\":\n        this.touchDown = true;\n        this.dragStartElement = event.target;\n        return [dragStart];\n      case \"touchmove\":\n      case \"mousemove\":\n        if (!this.mouseDown && !this.touchDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        return this.mouseDown || this.touchDown ? [\"drag\"] : [\"hover\"];\n      case \"mouseup\":\n        if (!this.mouseDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        this.mouseDown = false;\n        this.dragStartElement = void 0;\n        return [\"drag-end\"];\n      case \"touchend\":\n        if (!this.touchDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        this.touchDown = false;\n        this.dragStartElement = void 0;\n        return [\"drag-end\"];\n      case \"mouseout\":\n      case \"touchcancel\":\n        return [\"leave\"];\n      case \"mouseenter\":\n        const mouseButtonDown = event instanceof MouseEvent && (event.buttons & 1) === 1;\n        if (this.mouseDown !== mouseButtonDown) {\n          this.mouseDown = mouseButtonDown;\n          return [mouseButtonDown ? dragStart : \"drag-end\"];\n        }\n        return [];\n      case \"pagehide\":\n        return [\"page-left\"];\n      case \"wheel\":\n        return [\"wheel\"];\n    }\n    return [];\n  }\n  isEventOverElement(event) {\n    var _a;\n    return event.target === this.element || ((_a = event.target) == null ? void 0 : _a.parentElement) === this.element;\n  }\n  calculateCoordinates(event) {\n    var _a;\n    if (event instanceof MouseEvent) {\n      const {\n        clientX,\n        clientY,\n        pageX,\n        pageY,\n        offsetX,\n        offsetY\n      } = event;\n      return this.fixOffsets(event, {\n        clientX,\n        clientY,\n        pageX,\n        pageY,\n        offsetX,\n        offsetY\n      });\n    } else if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\n      const lastTouch = (_a = event.touches[0]) != null ? _a : event.changedTouches[0];\n      const {\n        clientX,\n        clientY,\n        pageX,\n        pageY\n      } = lastTouch;\n      return __spreadProps(__spreadValues({}, _InteractionManager.NULL_COORDS), {\n        clientX,\n        clientY,\n        pageX,\n        pageY\n      });\n    } else if (event instanceof PageTransitionEvent) {\n      if (event.persisted) {\n        return;\n      }\n      return _InteractionManager.NULL_COORDS;\n    }\n  }\n  fixOffsets(event, coords) {\n    const offsets = el => {\n      let x = 0;\n      let y = 0;\n      while (el) {\n        x += el.offsetLeft;\n        y += el.offsetTop;\n        el = el.offsetParent;\n      }\n      return {\n        x,\n        y\n      };\n    };\n    if (this.dragStartElement != null && event.target !== this.dragStartElement) {\n      const offsetDragStart = offsets(this.dragStartElement);\n      const offsetEvent = offsets(event.target);\n      coords.offsetX -= offsetDragStart.x - offsetEvent.x;\n      coords.offsetY -= offsetDragStart.y - offsetEvent.y;\n    }\n    return coords;\n  }\n  buildEvent(opts) {\n    const {\n      type,\n      event,\n      clientX,\n      clientY,\n      pauses\n    } = opts;\n    let {\n      offsetX,\n      offsetY,\n      pageX,\n      pageY\n    } = opts;\n    if (!isNumber2(offsetX) || !isNumber2(offsetY)) {\n      const rect = this.element.getBoundingClientRect();\n      offsetX = clientX - rect.left;\n      offsetY = clientY - rect.top;\n    }\n    if (!isNumber2(pageX) || !isNumber2(pageY)) {\n      const pageRect = this.rootElement.getBoundingClientRect();\n      pageX = clientX - pageRect.left;\n      pageY = clientY - pageRect.top;\n    }\n    const builtEvent = {\n      type,\n      offsetX,\n      offsetY,\n      pageX,\n      pageY,\n      sourceEvent: event,\n      consumed: false,\n      pauses,\n      consume() {\n        builtEvent.consumed = true;\n      }\n    };\n    return builtEvent;\n  }\n};\n_InteractionManager.interactionDocuments = [];\n_InteractionManager.NULL_COORDS = {\n  clientX: -Infinity,\n  clientY: -Infinity,\n  pageX: -Infinity,\n  pageY: -Infinity,\n  offsetX: -Infinity,\n  offsetY: -Infinity\n};\nvar InteractionManager = _InteractionManager;\n\n// packages/ag-charts-community/src/chart/interaction/tooltipManager.ts\nvar TooltipManager = class {\n  constructor(tooltip, interactionManager) {\n    this.states = {};\n    this.exclusiveAreas = {};\n    this.destroyFns = [];\n    this.tooltip = tooltip;\n    this.destroyFns.push(interactionManager.addListener(\"hover\", e => this.checkExclusiveRects(e)));\n  }\n  getRange() {\n    return this.tooltip.range;\n  }\n  updateTooltip(callerId, meta, content) {\n    var _a;\n    if (content == null) {\n      content = (_a = this.states[callerId]) == null ? void 0 : _a.content;\n    }\n    this.states[callerId] = {\n      content,\n      meta\n    };\n    this.applyStates();\n  }\n  updateExclusiveRect(callerId, area2) {\n    if (area2) {\n      this.exclusiveAreas[callerId] = area2;\n    } else {\n      delete this.exclusiveAreas[callerId];\n    }\n  }\n  removeTooltip(callerId) {\n    delete this.states[callerId];\n    this.applyStates();\n  }\n  getTooltipMeta(callerId) {\n    var _a;\n    return (_a = this.states[callerId]) == null ? void 0 : _a.meta;\n  }\n  destroy() {\n    for (const destroyFn of this.destroyFns) {\n      destroyFn();\n    }\n  }\n  checkExclusiveRects(e) {\n    let newAppliedExclusiveArea;\n    for (const [entryId, area2] of Object.entries(this.exclusiveAreas)) {\n      if (!area2.containsPoint(e.offsetX, e.offsetY)) {\n        continue;\n      }\n      newAppliedExclusiveArea = entryId;\n      break;\n    }\n    if (newAppliedExclusiveArea === this.appliedExclusiveArea) {\n      return;\n    }\n    this.appliedExclusiveArea = newAppliedExclusiveArea;\n    this.applyStates();\n  }\n  applyStates() {\n    var _a;\n    const ids = this.appliedExclusiveArea ? [this.appliedExclusiveArea] : Object.keys(this.states);\n    let contentToApply;\n    let metaToApply;\n    ids.reverse();\n    ids.slice(0, 1).forEach(id => {\n      var _a2;\n      const {\n        content,\n        meta\n      } = (_a2 = this.states[id]) != null ? _a2 : {};\n      contentToApply = content;\n      metaToApply = meta;\n    });\n    if (metaToApply === void 0 || contentToApply === void 0) {\n      this.appliedState = void 0;\n      this.tooltip.toggle(false);\n      return;\n    }\n    if (((_a = this.appliedState) == null ? void 0 : _a.content) === contentToApply) {\n      const renderInstantly = this.tooltip.isVisible();\n      this.tooltip.show(metaToApply, void 0, renderInstantly);\n    } else {\n      this.tooltip.show(metaToApply, contentToApply);\n    }\n    this.appliedState = {\n      content: contentToApply,\n      meta: metaToApply\n    };\n  }\n  static makeTooltipMeta(event, canvas, datum, window2) {\n    var _a, _b, _c, _d;\n    const {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY\n    } = event;\n    const {\n      tooltip\n    } = datum.series.properties;\n    const position = {\n      xOffset: tooltip.position.xOffset,\n      yOffset: tooltip.position.yOffset\n    };\n    const meta = {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY,\n      event,\n      showArrow: tooltip.showArrow,\n      position\n    };\n    const refPoint = (_b = (_a = datum.yBar) == null ? void 0 : _a.upperPoint) != null ? _b : datum.midPoint;\n    if (tooltip.position.type === \"node\" && refPoint) {\n      const {\n        x,\n        y\n      } = refPoint;\n      const point = datum.series.contentGroup.inverseTransformPoint(x, y);\n      const canvasRect = canvas.element.getBoundingClientRect();\n      return __spreadProps(__spreadValues({}, meta), {\n        pageX: Math.round(canvasRect.left + window2.scrollX + point.x),\n        pageY: Math.round(canvasRect.top + window2.scrollY + point.y),\n        offsetX: Math.round(point.x),\n        offsetY: Math.round(point.y)\n      });\n    }\n    meta.enableInteraction = (_d = (_c = tooltip.interaction) == null ? void 0 : _c.enabled) != null ? _d : false;\n    return meta;\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/zoomManager.ts\nvar ZoomManager = class extends BaseManager {\n  constructor() {\n    super(...arguments);\n    this.axes = {};\n  }\n  updateAxes(axes) {\n    var _a;\n    const removedAxes = new Set(Object.keys(this.axes));\n    axes.forEach(axis => {\n      var _a2, _b, _c;\n      removedAxes.delete(axis.id);\n      (_c = (_a2 = this.axes)[_b = axis.id]) != null ? _c : _a2[_b] = new AxisZoomManager(axis);\n    });\n    removedAxes.forEach(axisId => {\n      delete this.axes[axisId];\n    });\n    if ((_a = this.initialZoom) == null ? void 0 : _a.newZoom) {\n      this.updateZoom(this.initialZoom.callerId, this.initialZoom.newZoom);\n    }\n    this.initialZoom = void 0;\n  }\n  updateZoom(callerId, newZoom) {\n    if (Object.keys(this.axes).length === 0) {\n      this.initialZoom = {\n        callerId,\n        newZoom\n      };\n      return;\n    }\n    Object.values(this.axes).forEach(axis => {\n      axis.updateZoom(callerId, newZoom == null ? void 0 : newZoom[axis.getDirection()]);\n    });\n    this.applyStates();\n  }\n  updateAxisZoom(callerId, axisId, newZoom) {\n    var _a;\n    (_a = this.axes[axisId]) == null ? void 0 : _a.updateZoom(callerId, newZoom);\n    this.applyStates();\n  }\n  getZoom() {\n    let x;\n    let y;\n    Object.values(this.axes).forEach(axis => {\n      if (axis.getDirection() === \"x\" /* X */) {\n        x = axis.getZoom();\n      } else if (axis.getDirection() === \"y\" /* Y */) {\n        y = axis.getZoom();\n      }\n    });\n    if (x || y) {\n      return {\n        x,\n        y\n      };\n    }\n  }\n  getAxisZoom(axisId) {\n    var _a;\n    return (_a = this.axes[axisId]) == null ? void 0 : _a.getZoom();\n  }\n  getAxisZooms() {\n    const axes = {};\n    for (const [axisId, axis] of Object.entries(this.axes)) {\n      axes[axisId] = {\n        direction: axis.getDirection(),\n        zoom: axis.getZoom()\n      };\n    }\n    return axes;\n  }\n  applyStates() {\n    const changed = Object.values(this.axes).map(axis => axis.applyStates()).some(Boolean);\n    if (!changed) {\n      return;\n    }\n    const currentZoom = this.getZoom();\n    const axes = {};\n    for (const [axisId, axis] of Object.entries(this.axes)) {\n      axes[axisId] = axis.getZoom();\n    }\n    this.listeners.dispatch(\"zoom-change\", __spreadProps(__spreadValues({\n      type: \"zoom-change\"\n    }, currentZoom != null ? currentZoom : {}), {\n      axes\n    }));\n  }\n};\nvar AxisZoomManager = class {\n  constructor(axis) {\n    this.states = {};\n    this.axis = axis;\n    const [min = 0, max = 1] = axis.visibleRange;\n    this.currentZoom = {\n      min,\n      max\n    };\n    this.states[\"__initial__\"] = this.currentZoom;\n  }\n  getDirection() {\n    return this.axis.direction;\n  }\n  updateZoom(callerId, newZoom) {\n    delete this.states[callerId];\n    if (newZoom != null) {\n      this.states[callerId] = __spreadValues({}, newZoom);\n    }\n  }\n  getZoom() {\n    return this.currentZoom;\n  }\n  applyStates() {\n    var _a, _b;\n    const prevZoom = this.currentZoom;\n    const last = Object.keys(this.states)[Object.keys(this.states).length - 1];\n    this.currentZoom = __spreadValues({}, this.states[last]);\n    return (prevZoom == null ? void 0 : prevZoom.min) !== ((_a = this.currentZoom) == null ? void 0 : _a.min) || (prevZoom == null ? void 0 : prevZoom.max) !== ((_b = this.currentZoom) == null ? void 0 : _b.max);\n  }\n};\n\n// packages/ag-charts-community/src/chart/layout/layoutService.ts\nvar LayoutService = class extends Listeners {\n  constructor() {\n    super(...arguments);\n    this.layoutComplete = \"layout-complete\";\n  }\n  addListener(eventType, handler) {\n    if (this.isLayoutStage(eventType) || this.isLayoutComplete(eventType)) {\n      return super.addListener(eventType, handler);\n    }\n    throw new Error(`AG Charts - unsupported listener type: ${eventType}`);\n  }\n  dispatchPerformLayout(stage, ctx) {\n    if (this.isLayoutStage(stage)) {\n      return this.getListenersByType(stage).reduce((result, listener) => {\n        try {\n          return listener.handler(result);\n        } catch (e) {\n          Logger.errorOnce(e);\n          return result;\n        }\n      }, ctx);\n    }\n    return ctx;\n  }\n  dispatchLayoutComplete(event) {\n    this.dispatch(this.layoutComplete, event);\n  }\n  isLayoutStage(eventType) {\n    return eventType !== this.layoutComplete;\n  }\n  isLayoutComplete(eventType) {\n    return eventType === this.layoutComplete;\n  }\n};\n\n// packages/ag-charts-community/src/chart/gridLayout.ts\nfunction gridLayout({\n  orientation,\n  bboxes,\n  maxHeight,\n  maxWidth,\n  itemPaddingY = 0,\n  itemPaddingX = 0,\n  forceResult = false\n}) {\n  const horizontal = orientation === \"horizontal\";\n  const primary = {\n    max: horizontal ? maxWidth : maxHeight,\n    fn: horizontal ? b => b.width : b => b.height,\n    padding: horizontal ? itemPaddingX : itemPaddingY\n  };\n  const secondary = {\n    max: !horizontal ? maxWidth : maxHeight,\n    fn: !horizontal ? b => b.width : b => b.height,\n    padding: !horizontal ? itemPaddingX : itemPaddingY\n  };\n  let processedBBoxCount = 0;\n  const rawPages = [];\n  while (processedBBoxCount < bboxes.length) {\n    const unprocessedBBoxes = bboxes.slice(processedBBoxCount);\n    const result = processBBoxes(unprocessedBBoxes, processedBBoxCount, primary, secondary, forceResult);\n    if (!result) {\n      return;\n    }\n    processedBBoxCount += result.processedBBoxCount;\n    rawPages.push(result.pageIndices);\n  }\n  return buildPages(rawPages, orientation, bboxes, itemPaddingY, itemPaddingX);\n}\nfunction processBBoxes(bboxes, indexOffset, primary, secondary, forceResult) {\n  const minGuess = 1;\n  let startingGuess = estimateStartingGuess(bboxes, primary);\n  if (startingGuess < minGuess) {\n    if (!forceResult) {\n      return void 0;\n    }\n    startingGuess = minGuess;\n  }\n  for (let guess = startingGuess; guess >= minGuess; guess--) {\n    const pageIndices = calculatePage(bboxes, indexOffset, guess, primary, secondary, forceResult);\n    if (pageIndices == null && guess <= minGuess) {\n      return void 0;\n    }\n    if (pageIndices == null) {\n      continue;\n    }\n    if (typeof pageIndices === \"number\") {\n      if (pageIndices <= minGuess) {\n        return void 0;\n      }\n      guess = pageIndices < guess && pageIndices > minGuess ? pageIndices : guess;\n      continue;\n    }\n    const processedBBoxCount = pageIndices.length * pageIndices[0].length;\n    return {\n      processedBBoxCount,\n      pageIndices\n    };\n  }\n}\nfunction calculatePage(bboxes, indexOffset, primaryCount, primary, secondary, forceResult) {\n  var _a;\n  const result = [];\n  let sumSecondary = 0;\n  let currentMaxSecondary = 0;\n  let currentPrimaryIndices = [];\n  const maxPrimaryValues = [];\n  for (let bboxIndex = 0; bboxIndex < bboxes.length; bboxIndex++) {\n    const primaryValueIdx = (bboxIndex + primaryCount) % primaryCount;\n    if (primaryValueIdx === 0) {\n      sumSecondary += currentMaxSecondary;\n      currentMaxSecondary = 0;\n      if (currentPrimaryIndices.length > 0) {\n        result.push(currentPrimaryIndices);\n      }\n      currentPrimaryIndices = [];\n    }\n    const primaryValue = primary.fn(bboxes[bboxIndex]) + primary.padding;\n    maxPrimaryValues[primaryValueIdx] = Math.max((_a = maxPrimaryValues[primaryValueIdx]) != null ? _a : 0, primaryValue);\n    currentMaxSecondary = Math.max(currentMaxSecondary, secondary.fn(bboxes[bboxIndex]) + secondary.padding);\n    const currentSecondaryDimension = sumSecondary + currentMaxSecondary;\n    const returnResult = !forceResult || result.length > 0;\n    if (currentSecondaryDimension > secondary.max && returnResult) {\n      currentPrimaryIndices = [];\n      break;\n    }\n    const sumPrimary = maxPrimaryValues.reduce((sum2, next) => sum2 + next, 0);\n    if (sumPrimary > primary.max && !forceResult) {\n      if (maxPrimaryValues.length < primaryCount) {\n        return maxPrimaryValues.length;\n      }\n      return void 0;\n    }\n    currentPrimaryIndices.push(bboxIndex + indexOffset);\n  }\n  if (currentPrimaryIndices.length > 0) {\n    result.push(currentPrimaryIndices);\n  }\n  return result.length > 0 ? result : void 0;\n}\nfunction buildPages(rawPages, orientation, bboxes, itemPaddingY, itemPaddingX) {\n  let maxPageWidth = 0;\n  let maxPageHeight = 0;\n  const pages = rawPages.map(indices => {\n    if (orientation === \"horizontal\") {\n      indices = transpose(indices);\n    }\n    let endIndex = 0;\n    const columns = indices.map(colIndices => {\n      const colBBoxes = colIndices.map(bboxIndex => {\n        endIndex = Math.max(bboxIndex, endIndex);\n        return bboxes[bboxIndex];\n      });\n      let columnHeight = 0;\n      let columnWidth = 0;\n      colBBoxes.forEach(bbox => {\n        columnHeight += bbox.height + itemPaddingY;\n        columnWidth = Math.max(columnWidth, bbox.width + itemPaddingX);\n      });\n      return {\n        indices: colIndices,\n        bboxes: colBBoxes,\n        columnHeight: Math.ceil(columnHeight),\n        columnWidth: Math.ceil(columnWidth)\n      };\n    });\n    let pageWidth = 0;\n    let pageHeight = 0;\n    columns.forEach(column => {\n      pageWidth += column.columnWidth;\n      pageHeight = Math.max(pageHeight, column.columnHeight);\n    });\n    maxPageWidth = Math.max(pageWidth, maxPageWidth);\n    maxPageHeight = Math.max(pageHeight, maxPageHeight);\n    return {\n      columns,\n      startIndex: indices[0][0],\n      endIndex,\n      pageWidth,\n      pageHeight\n    };\n  });\n  return {\n    pages,\n    maxPageWidth,\n    maxPageHeight\n  };\n}\nfunction transpose(data) {\n  const result = [];\n  for (const _ of data[0]) {\n    result.push([]);\n  }\n  data.forEach((innerData, dataIdx) => {\n    innerData.forEach((item, itemIdx) => {\n      result[itemIdx][dataIdx] = item;\n    });\n  });\n  return result;\n}\nfunction estimateStartingGuess(bboxes, primary) {\n  const n = bboxes.length;\n  let primarySum = 0;\n  for (let bboxIndex = 0; bboxIndex < n; bboxIndex++) {\n    primarySum += primary.fn(bboxes[bboxIndex]) + primary.padding;\n    if (primarySum > primary.max) {\n      const ratio = n / bboxIndex;\n      if (ratio < 2) {\n        return Math.ceil(n / 2);\n      }\n      return bboxIndex;\n    }\n  }\n  return n;\n}\n\n// packages/ag-charts-community/src/chart/markerLabel.ts\nvar MarkerLabel = class extends Group {\n  constructor() {\n    super({\n      name: \"markerLabelGroup\"\n    });\n    this.label = new Text();\n    this.line = new Line();\n    this._marker = new Square();\n    this._markerSize = 15;\n    this._spacing = 8;\n    const {\n      marker,\n      label,\n      line\n    } = this;\n    label.textBaseline = \"middle\";\n    label.fontSize = 12;\n    label.fontFamily = \"Verdana, sans-serif\";\n    label.fill = \"black\";\n    label.y = HdpiCanvas.has.textMetrics ? 1 : 0;\n    this.append([line, marker, label]);\n    this.update();\n  }\n  set marker(value) {\n    if (this._marker !== value) {\n      this.removeChild(this._marker);\n      this._marker = value;\n      this.appendChild(value);\n      this.update();\n    }\n  }\n  get marker() {\n    return this._marker;\n  }\n  set markerSize(value) {\n    if (this._markerSize !== value) {\n      this._markerSize = value;\n      this.update();\n    }\n  }\n  get markerSize() {\n    return this._markerSize;\n  }\n  set spacing(value) {\n    if (this._spacing !== value) {\n      this._spacing = value;\n      this.update();\n    }\n  }\n  get spacing() {\n    return this._spacing;\n  }\n  setSeriesStrokeOffset(xOff) {\n    const offset4 = this.marker.size / 2 + xOff;\n    this.line.x1 = -offset4;\n    this.line.x2 = offset4;\n    this.line.y1 = 0;\n    this.line.y2 = 0;\n    this.line.markDirtyTransform();\n    this.update();\n  }\n  update() {\n    this.marker.size = this.markerSize;\n    const lineEnd = this.line.visible ? this.line.x2 : -Infinity;\n    const markerEnd = this.markerSize / 2;\n    this.label.x = Math.max(lineEnd, markerEnd) + this.spacing;\n  }\n  render(renderCtx) {\n    this.marker.opacity = this.opacity;\n    this.label.opacity = this.opacity;\n    this.line.opacity = this.opacity;\n    super.render(renderCtx);\n  }\n};\nMarkerLabel.className = \"MarkerLabel\";\n__decorateClass([ProxyPropertyOnWrite(\"label\")], MarkerLabel.prototype, \"text\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"label\")], MarkerLabel.prototype, \"fontStyle\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"label\")], MarkerLabel.prototype, \"fontWeight\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"label\")], MarkerLabel.prototype, \"fontSize\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"label\")], MarkerLabel.prototype, \"fontFamily\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"label\", \"fill\")], MarkerLabel.prototype, \"color\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"fill\")], MarkerLabel.prototype, \"markerFill\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"stroke\")], MarkerLabel.prototype, \"markerStroke\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"strokeWidth\")], MarkerLabel.prototype, \"markerStrokeWidth\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"fillOpacity\")], MarkerLabel.prototype, \"markerFillOpacity\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"strokeOpacity\")], MarkerLabel.prototype, \"markerStrokeOpacity\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"marker\", \"visible\")], MarkerLabel.prototype, \"markerVisible\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"line\", \"stroke\")], MarkerLabel.prototype, \"lineStroke\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"line\", \"strokeWidth\")], MarkerLabel.prototype, \"lineStrokeWidth\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"line\", \"strokeOpacity\")], MarkerLabel.prototype, \"lineStrokeOpacity\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"line\", \"lineDash\")], MarkerLabel.prototype, \"lineLineDash\", 2);\n__decorateClass([ProxyPropertyOnWrite(\"line\", \"visible\")], MarkerLabel.prototype, \"lineVisible\", 2);\n\n// packages/ag-charts-community/src/chart/pagination/pagination.ts\nvar PaginationLabel = class {\n  constructor() {\n    this.color = \"black\";\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n  }\n};\n__decorateClass([Validate(COLOR_STRING)], PaginationLabel.prototype, \"color\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], PaginationLabel.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], PaginationLabel.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PaginationLabel.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], PaginationLabel.prototype, \"fontFamily\", 2);\nvar PaginationMarkerStyle = class {\n  constructor() {\n    this.size = 15;\n    this.fill = void 0;\n    this.fillOpacity = void 0;\n    this.stroke = void 0;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER)], PaginationMarkerStyle.prototype, \"size\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], PaginationMarkerStyle.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], PaginationMarkerStyle.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], PaginationMarkerStyle.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PaginationMarkerStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO)], PaginationMarkerStyle.prototype, \"strokeOpacity\", 2);\nvar PaginationMarker = class {\n  constructor(parent) {\n    this.parent = parent;\n    this.shape = Triangle;\n    this.size = 15;\n    this.padding = 8;\n  }\n};\n__decorateClass([ActionOnSet({\n  changeValue() {\n    if (this.parent.marker === this) {\n      this.parent.onMarkerShapeChange();\n    }\n  }\n})], PaginationMarker.prototype, \"shape\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PaginationMarker.prototype, \"size\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PaginationMarker.prototype, \"padding\", 2);\nvar Pagination = class {\n  constructor(chartUpdateCallback, pageUpdateCallback, interactionManager, cursorManager) {\n    this.chartUpdateCallback = chartUpdateCallback;\n    this.pageUpdateCallback = pageUpdateCallback;\n    this.interactionManager = interactionManager;\n    this.cursorManager = cursorManager;\n    this.id = createId(this);\n    this.group = new Group({\n      name: \"pagination\"\n    });\n    this.labelNode = new Text();\n    this.marker = new PaginationMarker(this);\n    this.activeStyle = new PaginationMarkerStyle();\n    this.inactiveStyle = new PaginationMarkerStyle();\n    this.highlightStyle = new PaginationMarkerStyle();\n    this.label = new PaginationLabel();\n    this.totalPages = 0;\n    this.currentPage = 0;\n    this.translationX = 0;\n    this.translationY = 0;\n    this.nextButtonDisabled = false;\n    this.previousButtonDisabled = false;\n    this._visible = true;\n    this._enabled = true;\n    this._orientation = \"vertical\";\n    this._nextButton = new Triangle();\n    this._previousButton = new Triangle();\n    const {\n      labelNode\n    } = this;\n    labelNode.textBaseline = \"middle\";\n    labelNode.fontSize = 12;\n    labelNode.fontFamily = \"Verdana, sans-serif\";\n    labelNode.fill = \"black\";\n    labelNode.y = HdpiCanvas.has.textMetrics ? 1 : 0;\n    this.group.append([this.nextButton, this.previousButton, labelNode]);\n    this.interactionManager.addListener(\"click\", event => this.onPaginationClick(event));\n    this.interactionManager.addListener(\"hover\", event => this.onPaginationMouseMove(event));\n    this.update();\n    this.updateMarkers();\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    this.updateGroupVisibility();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  updateGroupVisibility() {\n    this.group.visible = this.enabled && this.visible;\n  }\n  set orientation(value) {\n    this._orientation = value;\n    switch (value) {\n      case \"horizontal\":\n        {\n          this.previousButton.rotation = -Math.PI / 2;\n          this.nextButton.rotation = Math.PI / 2;\n          break;\n        }\n      case \"vertical\":\n      default:\n        {\n          this.previousButton.rotation = 0;\n          this.nextButton.rotation = Math.PI;\n        }\n    }\n  }\n  get orientation() {\n    return this._orientation;\n  }\n  set nextButton(value) {\n    if (this._nextButton !== value) {\n      this.group.removeChild(this._nextButton);\n      this._nextButton = value;\n      this.group.appendChild(value);\n    }\n  }\n  get nextButton() {\n    return this._nextButton;\n  }\n  set previousButton(value) {\n    if (this._previousButton !== value) {\n      this.group.removeChild(this._previousButton);\n      this._previousButton = value;\n      this.group.appendChild(value);\n    }\n  }\n  get previousButton() {\n    return this._previousButton;\n  }\n  update() {\n    this.updateLabel();\n    this.updatePositions();\n    this.enableOrDisableButtons();\n  }\n  updatePositions() {\n    this.group.translationX = this.translationX;\n    this.group.translationY = this.translationY;\n    this.updateLabelPosition();\n    this.updateNextButtonPosition();\n  }\n  updateLabelPosition() {\n    const {\n      size: markerSize,\n      padding: markerPadding\n    } = this.marker;\n    this.nextButton.size = markerSize;\n    this.previousButton.size = markerSize;\n    this.labelNode.x = markerSize / 2 + markerPadding;\n  }\n  updateNextButtonPosition() {\n    const labelBBox = this.labelNode.computeBBox();\n    this.nextButton.translationX = labelBBox.x + labelBBox.width + this.marker.size / 2 + this.marker.padding;\n  }\n  updateLabel() {\n    const {\n      currentPage,\n      totalPages: pages,\n      labelNode,\n      label: {\n        color,\n        fontStyle,\n        fontWeight,\n        fontSize,\n        fontFamily\n      }\n    } = this;\n    labelNode.text = `${currentPage + 1} / ${pages}`;\n    labelNode.fill = color;\n    labelNode.fontStyle = fontStyle;\n    labelNode.fontWeight = fontWeight;\n    labelNode.fontSize = fontSize;\n    labelNode.fontFamily = fontFamily;\n  }\n  updateMarkers() {\n    const {\n      nextButton,\n      previousButton,\n      nextButtonDisabled,\n      previousButtonDisabled,\n      activeStyle,\n      inactiveStyle,\n      highlightStyle,\n      highlightActive\n    } = this;\n    const buttonStyle = (button, disabled) => {\n      if (disabled) {\n        return inactiveStyle;\n      } else if (button === highlightActive) {\n        return highlightStyle;\n      }\n      return activeStyle;\n    };\n    this.updateMarker(nextButton, buttonStyle(\"next\", nextButtonDisabled));\n    this.updateMarker(previousButton, buttonStyle(\"previous\", previousButtonDisabled));\n  }\n  updateMarker(marker, style) {\n    var _a;\n    const {\n      size\n    } = this.marker;\n    marker.size = size;\n    marker.fill = style.fill;\n    marker.fillOpacity = (_a = style.fillOpacity) != null ? _a : 1;\n    marker.stroke = style.stroke;\n    marker.strokeWidth = style.strokeWidth;\n    marker.strokeOpacity = style.strokeOpacity;\n  }\n  enableOrDisableButtons() {\n    const {\n      currentPage,\n      totalPages\n    } = this;\n    const zeroPagesToDisplay = totalPages === 0;\n    const onLastPage = currentPage === totalPages - 1;\n    const onFirstPage = currentPage === 0;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.previousButtonDisabled = onFirstPage || zeroPagesToDisplay;\n  }\n  nextButtonContainsPoint(offsetX, offsetY) {\n    return !this.nextButtonDisabled && this.nextButton.containsPoint(offsetX, offsetY);\n  }\n  previousButtonContainsPoint(offsetX, offsetY) {\n    return !this.previousButtonDisabled && this.previousButton.containsPoint(offsetX, offsetY);\n  }\n  onPaginationClick(event) {\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    if (this.nextButtonContainsPoint(offsetX, offsetY)) {\n      this.incrementPage();\n      this.onPaginationChanged();\n      event.consume();\n    } else if (this.previousButtonContainsPoint(offsetX, offsetY)) {\n      this.decrementPage();\n      this.onPaginationChanged();\n      event.consume();\n    }\n  }\n  onPaginationMouseMove(event) {\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    if (this.nextButtonContainsPoint(offsetX, offsetY)) {\n      this.cursorManager.updateCursor(this.id, \"pointer\");\n      this.highlightActive = \"next\";\n    } else if (this.previousButtonContainsPoint(offsetX, offsetY)) {\n      this.cursorManager.updateCursor(this.id, \"pointer\");\n      this.highlightActive = \"previous\";\n    } else {\n      this.cursorManager.updateCursor(this.id);\n      this.highlightActive = void 0;\n    }\n    this.updateMarkers();\n    this.chartUpdateCallback(5 /* SCENE_RENDER */);\n  }\n  onPaginationChanged() {\n    this.pageUpdateCallback(this.currentPage);\n  }\n  incrementPage() {\n    this.currentPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n  }\n  decrementPage() {\n    this.currentPage = Math.max(this.currentPage - 1, 0);\n  }\n  onMarkerShapeChange() {\n    const Marker2 = getMarker(this.marker.shape || Triangle);\n    this.previousButton = new Marker2();\n    this.nextButton = new Marker2();\n    this.updatePositions();\n    this.updateMarkers();\n    this.chartUpdateCallback(5 /* SCENE_RENDER */);\n  }\n  attachPagination(node) {\n    node.append(this.group);\n  }\n  computeBBox() {\n    return this.group.computeBBox();\n  }\n};\nPagination.className = \"Pagination\";\n\n// packages/ag-charts-community/src/chart/legend.ts\nvar LegendLabel = class {\n  constructor() {\n    this.maxLength = void 0;\n    this.color = \"black\";\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.formatter = void 0;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], LegendLabel.prototype, \"maxLength\", 2);\n__decorateClass([Validate(COLOR_STRING)], LegendLabel.prototype, \"color\", 2);\n__decorateClass([Validate(FONT_STYLE, {\n  optional: true\n})], LegendLabel.prototype, \"fontStyle\", 2);\n__decorateClass([Validate(FONT_WEIGHT, {\n  optional: true\n})], LegendLabel.prototype, \"fontWeight\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LegendLabel.prototype, \"fontSize\", 2);\n__decorateClass([Validate(STRING)], LegendLabel.prototype, \"fontFamily\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], LegendLabel.prototype, \"formatter\", 2);\nvar LegendMarker = class {\n  constructor() {\n    this.size = 15;\n    /**\n     * If the marker type is set, the legend will always use that marker type for all its items,\n     * regardless of the type that comes from the `data`.\n     */\n    this._shape = void 0;\n    this.padding = 8;\n    this.strokeWidth = void 0;\n    this.enabled = true;\n  }\n  set shape(value) {\n    var _a;\n    this._shape = value;\n    (_a = this.parent) == null ? void 0 : _a.onMarkerShapeChange();\n  }\n  get shape() {\n    return this._shape;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER)], LegendMarker.prototype, \"size\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LegendMarker.prototype, \"padding\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], LegendMarker.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], LegendMarker.prototype, \"enabled\", 2);\nvar LegendLine = class {\n  constructor() {\n    this.strokeWidth = void 0;\n    this.length = void 0;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], LegendLine.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], LegendLine.prototype, \"length\", 2);\nvar LegendItem = class {\n  constructor() {\n    this.marker = new LegendMarker();\n    this.label = new LegendLabel();\n    this.line = new LegendLine();\n    this.maxWidth = void 0;\n    this.paddingX = 16;\n    this.paddingY = 8;\n    this.toggleSeriesVisible = true;\n    this.showSeriesStroke = false;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], LegendItem.prototype, \"maxWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LegendItem.prototype, \"paddingX\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LegendItem.prototype, \"paddingY\", 2);\n__decorateClass([Validate(BOOLEAN)], LegendItem.prototype, \"toggleSeriesVisible\", 2);\n__decorateClass([Validate(BOOLEAN)], LegendItem.prototype, \"showSeriesStroke\", 2);\nvar LegendListeners = class {\n  constructor() {\n    this.legendItemClick = void 0;\n    this.legendItemDoubleClick = void 0;\n  }\n};\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], LegendListeners.prototype, \"legendItemClick\", 2);\nvar Legend = class {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.id = createId(this);\n    this.group = new Group({\n      name: \"legend\",\n      layer: true,\n      zIndex: 9 /* LEGEND_ZINDEX */\n    });\n    this.itemSelection = Selection.select(this.group, MarkerLabel);\n    this.oldSize = [0, 0];\n    this.pages = [];\n    this.maxPageSize = [0, 0];\n    /** Item index to track on re-pagination, so current page updates appropriately. */\n    this.paginationTrackingIndex = 0;\n    this.item = new LegendItem();\n    this.listeners = new LegendListeners();\n    this.truncatedItems = /* @__PURE__ */new Set();\n    this._data = [];\n    this._enabled = true;\n    this.position = \"bottom\";\n    this.maxWidth = void 0;\n    this.maxHeight = void 0;\n    this.reverseOrder = void 0;\n    this.preventHidingAll = void 0;\n    this.destroyFns = [];\n    this.spacing = 20;\n    this.characterWidths = /* @__PURE__ */new Map();\n    this.size = [0, 0];\n    this._visible = true;\n    this.item.marker.parent = this;\n    this.pagination = new Pagination(type => ctx.updateService.update(type), page => this.updatePageNumber(page), ctx.interactionManager, ctx.cursorManager);\n    this.pagination.attachPagination(this.group);\n    this.item.marker.parent = this;\n    const bypass = {\n      bypassPause: [\"animation\"]\n    };\n    this.destroyFns.push(ctx.interactionManager.addListener(\"click\", e => this.checkLegendClick(e), bypass), ctx.interactionManager.addListener(\"dblclick\", e => this.checkLegendDoubleClick(e), bypass), ctx.interactionManager.addListener(\"hover\", e => this.handleLegendMouseMove(e)), ctx.layoutService.addListener(\"start-layout\", e => this.positionLegend(e.shrinkRect)), () => this.detachLegend());\n  }\n  set data(value) {\n    this._data = value;\n    this.updateGroupVisibility();\n  }\n  get data() {\n    return this._data;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    this.updateGroupVisibility();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  getOrientation() {\n    if (this.orientation !== void 0) {\n      return this.orientation;\n    }\n    switch (this.position) {\n      case \"right\":\n      case \"left\":\n        return \"vertical\";\n      case \"bottom\":\n      case \"top\":\n        return \"horizontal\";\n    }\n  }\n  destroy() {\n    this.destroyFns.forEach(f => f());\n  }\n  onMarkerShapeChange() {\n    this.itemSelection.clear();\n    this.group.markDirty(this.group, 2 /* MINOR */);\n  }\n  getCharacterWidths(font) {\n    const {\n      characterWidths\n    } = this;\n    if (characterWidths.has(font)) {\n      return characterWidths.get(font);\n    }\n    const cw = {\n      \"...\": HdpiCanvas.getTextSize(\"...\", font).width\n    };\n    characterWidths.set(font, cw);\n    return cw;\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  updateGroupVisibility() {\n    this.group.visible = this.enabled && this.visible && this.data.length > 0;\n  }\n  attachLegend(node) {\n    node.append(this.group);\n  }\n  detachLegend() {\n    var _a;\n    (_a = this.group.parent) == null ? void 0 : _a.removeChild(this.group);\n  }\n  getItemLabel(datum) {\n    const {\n      ctx: {\n        callbackCache\n      }\n    } = this;\n    const {\n      formatter\n    } = this.item.label;\n    if (formatter) {\n      return callbackCache.call(formatter, {\n        itemId: datum.itemId,\n        value: datum.label.text,\n        seriesId: datum.seriesId\n      });\n    }\n    return datum.label.text;\n  }\n  /**\n   * The method is given the desired size of the legend, which only serves as a hint.\n   * The vertically oriented legend will take as much horizontal space as needed, but will\n   * respect the height constraints, and the horizontal legend will take as much vertical\n   * space as needed in an attempt not to exceed the given width.\n   * After the layout is done, the {@link size} will contain the actual size of the legend.\n   * If the actual size is not the same as the previous actual size, the legend will fire\n   * the 'layoutChange' event to communicate that another layout is needed, and the above\n   * process should be repeated.\n   * @param width\n   * @param height\n   */\n  performLayout(width, height) {\n    const {\n      paddingX,\n      paddingY,\n      label,\n      maxWidth,\n      marker: {\n        size: markerSize,\n        padding: markerPadding,\n        shape: markerShape\n      },\n      label: {\n        maxLength = Infinity,\n        fontStyle,\n        fontWeight,\n        fontSize,\n        fontFamily\n      },\n      line: itemLine,\n      showSeriesStroke\n    } = this.item;\n    const data = [...this.data];\n    if (this.reverseOrder) {\n      data.reverse();\n    }\n    this.itemSelection.update(data);\n    const bboxes = [];\n    const font = getFont(label);\n    const itemMaxWidthPercentage = 0.8;\n    const maxItemWidth = maxWidth != null ? maxWidth : width * itemMaxWidthPercentage;\n    const paddedMarkerWidth = markerSize + markerPadding + paddingX;\n    this.itemSelection.each((markerLabel, datum) => {\n      var _a, _b, _c;\n      const Marker2 = getMarker(markerShape != null ? markerShape : datum.marker.shape);\n      const markerEnabled = (_a = datum.marker.enabled) != null ? _a : this.item.marker.enabled;\n      if (!(markerLabel.marker && markerLabel.marker instanceof Marker2)) {\n        markerLabel.marker = new Marker2();\n      }\n      markerLabel.markerSize = markerSize;\n      markerLabel.spacing = markerPadding;\n      markerLabel.fontStyle = fontStyle;\n      markerLabel.fontWeight = fontWeight;\n      markerLabel.fontSize = fontSize;\n      markerLabel.fontFamily = fontFamily;\n      const id = (_b = datum.itemId) != null ? _b : datum.id;\n      const labelText = this.getItemLabel(datum);\n      const text = (labelText != null ? labelText : \"<unknown>\").replace(/\\r?\\n/g, \" \");\n      markerLabel.text = this.truncate(text, maxLength, maxItemWidth, paddedMarkerWidth, font, id);\n      if (showSeriesStroke && datum.line !== void 0) {\n        markerLabel.lineVisible = true;\n        markerLabel.markerVisible = markerEnabled;\n        markerLabel.setSeriesStrokeOffset((_c = itemLine.length) != null ? _c : 5);\n      } else {\n        markerLabel.lineVisible = false;\n        markerLabel.markerVisible = true;\n      }\n      bboxes.push(markerLabel.computeBBox());\n    });\n    width = Math.max(1, width);\n    height = Math.max(1, height);\n    if (!isFinite(width)) {\n      return false;\n    }\n    const size = this.size;\n    const oldSize = this.oldSize;\n    size[0] = width;\n    size[1] = height;\n    if (size[0] !== oldSize[0] || size[1] !== oldSize[1]) {\n      oldSize[0] = size[0];\n      oldSize[1] = size[1];\n    }\n    const {\n      pages,\n      maxPageHeight,\n      maxPageWidth\n    } = this.updatePagination(bboxes, width, height);\n    this.pages = pages;\n    this.maxPageSize = [maxPageWidth - paddingX, maxPageHeight - paddingY];\n    const pageNumber = this.pagination.currentPage;\n    const page = this.pages[pageNumber];\n    if (this.pages.length < 1 || !page) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n    this.updatePositions(pageNumber);\n    this.update();\n  }\n  truncate(text, maxCharLength, maxItemWidth, paddedMarkerWidth, font, id) {\n    const ellipsis2 = `...`;\n    const textChars = text.split(\"\");\n    let addEllipsis = false;\n    if (text.length > maxCharLength) {\n      text = `${text.substring(0, maxCharLength)}`;\n      addEllipsis = true;\n    }\n    const labelWidth = Math.floor(paddedMarkerWidth + HdpiCanvas.getTextSize(text, font).width);\n    if (labelWidth > maxItemWidth) {\n      let truncatedText = \"\";\n      const characterWidths = this.getCharacterWidths(font);\n      let cumulativeWidth = paddedMarkerWidth + characterWidths[ellipsis2];\n      for (const char of textChars) {\n        if (!characterWidths[char]) {\n          characterWidths[char] = HdpiCanvas.getTextSize(char, font).width;\n        }\n        cumulativeWidth += characterWidths[char];\n        if (cumulativeWidth > maxItemWidth) {\n          break;\n        }\n        truncatedText += char;\n      }\n      text = truncatedText;\n      addEllipsis = true;\n    }\n    if (addEllipsis) {\n      text += ellipsis2;\n      this.truncatedItems.add(id);\n    } else {\n      this.truncatedItems.delete(id);\n    }\n    return text;\n  }\n  updatePagination(bboxes, width, height) {\n    const orientation = this.getOrientation();\n    const trackingIndex = Math.min(this.paginationTrackingIndex, bboxes.length);\n    this.pagination.orientation = orientation;\n    this.pagination.translationX = 0;\n    this.pagination.translationY = 0;\n    const {\n      pages,\n      maxPageHeight,\n      maxPageWidth,\n      paginationBBox,\n      paginationVertical\n    } = this.calculatePagination(bboxes, width, height);\n    const newCurrentPage = pages.findIndex(p => p.endIndex >= trackingIndex);\n    this.pagination.currentPage = Math.min(Math.max(newCurrentPage, 0), pages.length - 1);\n    const {\n      paddingX: itemPaddingX,\n      paddingY: itemPaddingY\n    } = this.item;\n    const paginationComponentPadding = 8;\n    const legendItemsWidth = maxPageWidth - itemPaddingX;\n    const legendItemsHeight = maxPageHeight - itemPaddingY;\n    let paginationX = 0;\n    let paginationY = -paginationBBox.y - this.item.marker.size / 2;\n    if (paginationVertical) {\n      paginationY += legendItemsHeight + paginationComponentPadding;\n    } else {\n      paginationX += -paginationBBox.x + legendItemsWidth + paginationComponentPadding;\n      paginationY += (legendItemsHeight - paginationBBox.height) / 2;\n    }\n    this.pagination.translationX = paginationX;\n    this.pagination.translationY = paginationY;\n    this.pagination.update();\n    this.pagination.updateMarkers();\n    return {\n      maxPageHeight,\n      maxPageWidth,\n      pages\n    };\n  }\n  calculatePagination(bboxes, width, height) {\n    var _a, _b, _c;\n    const {\n      paddingX: itemPaddingX,\n      paddingY: itemPaddingY\n    } = this.item;\n    const orientation = this.getOrientation();\n    const paginationVertical = [\"left\", \"right\"].includes(this.position);\n    let paginationBBox = this.pagination.computeBBox();\n    let lastPassPaginationBBox = new BBox(0, 0, 0, 0);\n    let pages = [];\n    let maxPageWidth = 0;\n    let maxPageHeight = 0;\n    let count2 = 0;\n    const stableOutput = lastPassPaginationBBox2 => {\n      const {\n        width: width2,\n        height: height2\n      } = lastPassPaginationBBox2;\n      return width2 === paginationBBox.width && height2 === paginationBBox.height;\n    };\n    const forceResult = this.maxWidth !== void 0 || this.maxHeight !== void 0;\n    do {\n      if (count2++ > 10) {\n        Logger.warn(\"unable to find stable legend layout.\");\n        break;\n      }\n      paginationBBox = lastPassPaginationBBox;\n      const maxWidth = width - (paginationVertical ? 0 : paginationBBox.width);\n      const maxHeight = height - (paginationVertical ? paginationBBox.height : 0);\n      const layout = gridLayout({\n        orientation,\n        bboxes,\n        maxHeight,\n        maxWidth,\n        itemPaddingY,\n        itemPaddingX,\n        forceResult\n      });\n      pages = (_a = layout == null ? void 0 : layout.pages) != null ? _a : [];\n      maxPageWidth = (_b = layout == null ? void 0 : layout.maxPageWidth) != null ? _b : 0;\n      maxPageHeight = (_c = layout == null ? void 0 : layout.maxPageHeight) != null ? _c : 0;\n      const totalPages = pages.length;\n      this.pagination.visible = totalPages > 1;\n      this.pagination.totalPages = totalPages;\n      this.pagination.update();\n      lastPassPaginationBBox = this.pagination.computeBBox();\n      if (!this.pagination.visible) {\n        break;\n      }\n    } while (!stableOutput(lastPassPaginationBBox));\n    return {\n      maxPageWidth,\n      maxPageHeight,\n      pages,\n      paginationBBox,\n      paginationVertical\n    };\n  }\n  updatePositions(pageNumber = 0) {\n    const {\n      item: {\n        paddingY\n      },\n      itemSelection,\n      pages\n    } = this;\n    if (pages.length < 1 || !pages[pageNumber]) {\n      return;\n    }\n    const {\n      columns,\n      startIndex: visibleStart,\n      endIndex: visibleEnd\n    } = pages[pageNumber];\n    let x = 0;\n    let y = 0;\n    const columnCount = columns.length;\n    const rowCount = columns[0].indices.length;\n    const horizontal = this.getOrientation() === \"horizontal\";\n    const itemHeight = columns[0].bboxes[0].height + paddingY;\n    const rowSumColumnWidths = [];\n    itemSelection.each((markerLabel, _, i) => {\n      var _a, _b;\n      if (i < visibleStart || i > visibleEnd) {\n        markerLabel.visible = false;\n        return;\n      }\n      const pageIndex = i - visibleStart;\n      let columnIndex = 0;\n      let rowIndex = 0;\n      if (horizontal) {\n        columnIndex = pageIndex % columnCount;\n        rowIndex = Math.floor(pageIndex / columnCount);\n      } else {\n        columnIndex = Math.floor(pageIndex / rowCount);\n        rowIndex = pageIndex % rowCount;\n      }\n      markerLabel.visible = true;\n      const column = columns[columnIndex];\n      if (!column) {\n        return;\n      }\n      y = itemHeight * rowIndex;\n      x = (_a = rowSumColumnWidths[rowIndex]) != null ? _a : 0;\n      rowSumColumnWidths[rowIndex] = ((_b = rowSumColumnWidths[rowIndex]) != null ? _b : 0) + column.columnWidth;\n      markerLabel.translationX = Math.floor(x);\n      markerLabel.translationY = Math.floor(y);\n    });\n  }\n  updatePageNumber(pageNumber) {\n    const {\n      pages\n    } = this;\n    const {\n      startIndex,\n      endIndex\n    } = pages[pageNumber];\n    if (startIndex === 0) {\n      this.paginationTrackingIndex = 0;\n    } else if (pageNumber === pages.length - 1) {\n      this.paginationTrackingIndex = endIndex;\n    } else {\n      this.paginationTrackingIndex = Math.floor((startIndex + endIndex) / 2);\n    }\n    this.pagination.update();\n    this.pagination.updateMarkers();\n    this.updatePositions(pageNumber);\n    this.ctx.updateService.update(5 /* SCENE_RENDER */);\n  }\n  update() {\n    const {\n      label: {\n        color\n      },\n      marker: itemMarker,\n      line: itemLine,\n      showSeriesStroke\n    } = this.item;\n    this.itemSelection.each((markerLabel, datum) => {\n      var _a, _b;\n      const marker = datum.marker;\n      markerLabel.markerFill = marker.fill;\n      markerLabel.markerStroke = marker.stroke;\n      markerLabel.markerStrokeWidth = (_a = itemMarker.strokeWidth) != null ? _a : Math.min(2, marker.strokeWidth);\n      markerLabel.markerFillOpacity = marker.fillOpacity;\n      markerLabel.markerStrokeOpacity = marker.strokeOpacity;\n      markerLabel.opacity = datum.enabled ? 1 : 0.5;\n      markerLabel.color = color;\n      const {\n        line\n      } = datum;\n      if (showSeriesStroke && line !== void 0) {\n        markerLabel.lineStroke = line.stroke;\n        markerLabel.lineStrokeOpacity = line.strokeOpacity;\n        markerLabel.lineStrokeWidth = (_b = itemLine.strokeWidth) != null ? _b : Math.min(2, line.strokeWidth);\n        markerLabel.lineLineDash = line.lineDash;\n      }\n    });\n  }\n  getDatumForPoint(x, y) {\n    const visibleChildBBoxes = [];\n    const closestLeftTop = {\n      dist: Infinity,\n      datum: void 0\n    };\n    for (const child of this.group.children) {\n      if (!child.visible) continue;\n      if (!(child instanceof MarkerLabel)) continue;\n      const childBBox = child.computeBBox();\n      childBBox.grow(this.item.paddingX / 2, \"horizontal\");\n      childBBox.grow(this.item.paddingY / 2, \"vertical\");\n      if (childBBox.containsPoint(x, y)) {\n        return child.datum;\n      }\n      const distX = x - childBBox.x - this.item.paddingX / 2;\n      const distY = y - childBBox.y - this.item.paddingY / 2;\n      const dist = __pow(distX, 2) + __pow(distY, 2);\n      const toTheLeftTop = distX >= 0 && distY >= 0;\n      if (toTheLeftTop && dist < closestLeftTop.dist) {\n        closestLeftTop.dist = dist;\n        closestLeftTop.datum = child.datum;\n      }\n      visibleChildBBoxes.push(childBBox);\n    }\n    const pageBBox = BBox.merge(visibleChildBBoxes);\n    if (!pageBBox.containsPoint(x, y)) {\n      return void 0;\n    }\n    return closestLeftTop.datum;\n  }\n  computeBBox() {\n    return this.group.computeBBox();\n  }\n  computePagedBBox() {\n    const actualBBox = this.group.computeBBox();\n    if (this.pages.length <= 1) {\n      return actualBBox;\n    }\n    const [maxPageWidth, maxPageHeight] = this.maxPageSize;\n    actualBBox.height = Math.max(maxPageHeight, actualBBox.height);\n    actualBBox.width = Math.max(maxPageWidth, actualBBox.width);\n    return actualBBox;\n  }\n  checkLegendClick(event) {\n    const {\n      listeners: {\n        legendItemClick\n      },\n      ctx: {\n        chartService,\n        highlightManager\n      },\n      item: {\n        toggleSeriesVisible\n      },\n      preventHidingAll\n    } = this;\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    const legendBBox = this.computeBBox();\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    if (!pointerInsideLegend || !datum) {\n      return;\n    }\n    const {\n      id,\n      itemId,\n      enabled\n    } = datum;\n    const series = chartService.series.find(s => s.id === id);\n    if (!series) {\n      return;\n    }\n    event.consume();\n    let newEnabled = enabled;\n    if (toggleSeriesVisible) {\n      newEnabled = !enabled;\n      if (preventHidingAll && !newEnabled) {\n        const numVisibleItems = chartService.series.flatMap(series2 => series2.getLegendData(\"category\")).filter(datum2 => datum2.enabled).length;\n        if (numVisibleItems < 2) {\n          newEnabled = true;\n        }\n      }\n      this.ctx.chartEventManager.legendItemClick(series, itemId, newEnabled, datum.legendItemName);\n    }\n    if (!newEnabled) {\n      highlightManager.updateHighlight(this.id);\n    } else {\n      highlightManager.updateHighlight(this.id, {\n        series,\n        itemId,\n        datum: void 0\n      });\n    }\n    this.ctx.updateService.update(1 /* PROCESS_DATA */, {\n      forceNodeDataRefresh: true\n    });\n    legendItemClick == null ? void 0 : legendItemClick({\n      type: \"click\",\n      enabled: newEnabled,\n      itemId,\n      seriesId: series.id\n    });\n  }\n  checkLegendDoubleClick(event) {\n    var _a;\n    const {\n      listeners: {\n        legendItemDoubleClick\n      },\n      ctx: {\n        chartService\n      },\n      item: {\n        toggleSeriesVisible\n      }\n    } = this;\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    if (chartService.mode === \"integrated\") {\n      return;\n    }\n    const legendBBox = this.computeBBox();\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    if (!pointerInsideLegend || !datum) {\n      return;\n    }\n    const {\n      id,\n      itemId,\n      seriesId\n    } = datum;\n    const series = chartService.series.find(s => s.id === id);\n    if (!series) {\n      return;\n    }\n    event.consume();\n    if (toggleSeriesVisible) {\n      const legendData = chartService.series.flatMap(series2 => series2.getLegendData(\"category\"));\n      const numVisibleItems = legendData.filter(datum2 => datum2.enabled).length;\n      const clickedItem = legendData.find(d => d.itemId === itemId && d.seriesId === seriesId);\n      this.ctx.chartEventManager.legendItemDoubleClick(series, itemId, (_a = clickedItem == null ? void 0 : clickedItem.enabled) != null ? _a : false, numVisibleItems, clickedItem == null ? void 0 : clickedItem.legendItemName);\n    }\n    this.ctx.updateService.update(1 /* PROCESS_DATA */, {\n      forceNodeDataRefresh: true\n    });\n    legendItemDoubleClick == null ? void 0 : legendItemDoubleClick({\n      type: \"dblclick\",\n      enabled: true,\n      itemId,\n      seriesId: series.id\n    });\n  }\n  handleLegendMouseMove(event) {\n    var _a;\n    const {\n      enabled,\n      item: {\n        toggleSeriesVisible\n      },\n      listeners\n    } = this;\n    if (!enabled) {\n      return;\n    }\n    const legendBBox = this.computeBBox();\n    const {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY\n    } = event;\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    if (!pointerInsideLegend) {\n      this.ctx.cursorManager.updateCursor(this.id);\n      this.ctx.highlightManager.updateHighlight(this.id);\n      this.ctx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    event.consume();\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    const pointerOverLegendDatum = pointerInsideLegend && datum !== void 0;\n    if (!pointerOverLegendDatum) {\n      this.ctx.cursorManager.updateCursor(this.id);\n      this.ctx.highlightManager.updateHighlight(this.id);\n      return;\n    }\n    const series = datum ? this.ctx.chartService.series.find(series2 => series2.id === (datum == null ? void 0 : datum.id)) : void 0;\n    if (datum && this.truncatedItems.has((_a = datum.itemId) != null ? _a : datum.id)) {\n      this.ctx.tooltipManager.updateTooltip(this.id, {\n        pageX,\n        pageY,\n        offsetX,\n        offsetY,\n        event,\n        showArrow: false,\n        addCustomClass: false\n      }, toTooltipHtml({\n        content: this.getItemLabel(datum)\n      }));\n    } else {\n      this.ctx.tooltipManager.removeTooltip(this.id);\n    }\n    if (toggleSeriesVisible || listeners.legendItemClick != null || listeners.legendItemDoubleClick != null) {\n      this.ctx.cursorManager.updateCursor(this.id, \"pointer\");\n    }\n    if ((datum == null ? void 0 : datum.enabled) && series) {\n      this.ctx.highlightManager.updateHighlight(this.id, {\n        series,\n        itemId: datum == null ? void 0 : datum.itemId,\n        datum: void 0\n      });\n    } else {\n      this.ctx.highlightManager.updateHighlight(this.id);\n    }\n  }\n  positionLegend(shrinkRect) {\n    const newShrinkRect = shrinkRect.clone();\n    if (!this.enabled || !this.data.length) {\n      return {\n        shrinkRect: newShrinkRect\n      };\n    }\n    const [legendWidth, legendHeight] = this.calculateLegendDimensions(shrinkRect);\n    this.group.translationX = 0;\n    this.group.translationY = 0;\n    this.performLayout(legendWidth, legendHeight);\n    const legendBBox = this.computePagedBBox();\n    const calculateTranslationPerpendicularDimension = () => {\n      switch (this.position) {\n        case \"top\":\n        case \"left\":\n          return 0;\n        case \"bottom\":\n          return shrinkRect.height - legendBBox.height;\n        case \"right\":\n        default:\n          return shrinkRect.width - legendBBox.width;\n      }\n    };\n    if (this.visible) {\n      let translationX;\n      let translationY;\n      switch (this.position) {\n        case \"top\":\n        case \"bottom\":\n          translationX = (shrinkRect.width - legendBBox.width) / 2;\n          translationY = calculateTranslationPerpendicularDimension();\n          newShrinkRect.shrink(legendBBox.height, this.position);\n          break;\n        case \"left\":\n        case \"right\":\n        default:\n          translationX = calculateTranslationPerpendicularDimension();\n          translationY = (shrinkRect.height - legendBBox.height) / 2;\n          newShrinkRect.shrink(legendBBox.width, this.position);\n      }\n      this.group.translationX = Math.floor(-legendBBox.x + shrinkRect.x + translationX);\n      this.group.translationY = Math.floor(-legendBBox.y + shrinkRect.y + translationY);\n    }\n    if (this.visible && this.enabled && this.data.length) {\n      const legendPadding = this.spacing;\n      newShrinkRect.shrink(legendPadding, this.position);\n      const legendPositionedBBox = legendBBox.clone();\n      legendPositionedBBox.x += this.group.translationX;\n      legendPositionedBBox.y += this.group.translationY;\n      this.ctx.tooltipManager.updateExclusiveRect(this.id, legendPositionedBBox);\n    } else {\n      this.ctx.tooltipManager.updateExclusiveRect(this.id);\n    }\n    return {\n      shrinkRect: newShrinkRect\n    };\n  }\n  calculateLegendDimensions(shrinkRect) {\n    const {\n      width,\n      height\n    } = shrinkRect;\n    const aspectRatio = width / height;\n    const maxCoefficient = 0.5;\n    const minHeightCoefficient = 0.2;\n    const minWidthCoefficient = 0.25;\n    let legendWidth, legendHeight;\n    switch (this.position) {\n      case \"top\":\n      case \"bottom\":\n        const heightCoefficient = aspectRatio < 1 ? Math.min(maxCoefficient, minHeightCoefficient * (1 / aspectRatio)) : minHeightCoefficient;\n        legendWidth = this.maxWidth ? Math.min(this.maxWidth, width) : width;\n        legendHeight = this.maxHeight ? Math.min(this.maxHeight, height) : Math.round(height * heightCoefficient);\n        break;\n      case \"left\":\n      case \"right\":\n      default:\n        const widthCoefficient = aspectRatio > 1 ? Math.min(maxCoefficient, minWidthCoefficient * aspectRatio) : minWidthCoefficient;\n        legendWidth = this.maxWidth ? Math.min(this.maxWidth, width) : Math.round(width * widthCoefficient);\n        legendHeight = this.maxHeight ? Math.min(this.maxHeight, height) : height;\n    }\n    return [legendWidth, legendHeight];\n  }\n};\nLegend.className = \"Legend\";\n__decorateClass([Validate(BOOLEAN)], Legend.prototype, \"_enabled\", 2);\n__decorateClass([Validate(POSITION)], Legend.prototype, \"position\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Legend.prototype, \"maxWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], Legend.prototype, \"maxHeight\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], Legend.prototype, \"reverseOrder\", 2);\n__decorateClass([Validate(UNION([\"horizontal\", \"vertical\"], \"an orientation\"), {\n  optional: true\n})], Legend.prototype, \"orientation\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], Legend.prototype, \"preventHidingAll\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Legend.prototype, \"spacing\", 2);\n\n// packages/ag-charts-community/src/chart/overlay/overlay.ts\nvar Overlay = class {\n  constructor(className, parentElement) {\n    this.className = className;\n    this.parentElement = parentElement;\n  }\n  show(rect) {\n    var _a, _b;\n    if (!this.element) {\n      this.element = this.createElement(\"div\");\n      this.element.className = this.className;\n    }\n    const {\n      element: element2\n    } = this;\n    element2.style.position = \"absolute\";\n    element2.style.left = `${rect.x}px`;\n    element2.style.top = `${rect.y}px`;\n    element2.style.width = `${rect.width}px`;\n    element2.style.height = `${rect.height}px`;\n    if (this.renderer) {\n      element2.innerHTML = this.renderer();\n    } else {\n      const content = this.createElement(\"div\");\n      content.style.alignItems = \"center\";\n      content.style.boxSizing = \"border-box\";\n      content.style.display = \"flex\";\n      content.style.justifyContent = \"center\";\n      content.style.margin = \"8px\";\n      content.style.height = \"100%\";\n      content.style.font = \"12px Verdana, sans-serif\";\n      content.innerText = (_a = this.text) != null ? _a : \"No data to display\";\n      element2.replaceChildren(content);\n    }\n    (_b = this.parentElement) == null ? void 0 : _b.append(element2);\n  }\n  hide() {\n    var _a;\n    (_a = this.element) == null ? void 0 : _a.remove();\n    this.element = void 0;\n  }\n  createElement(tagName, options) {\n    return this.parentElement.ownerDocument.createElement(tagName, options);\n  }\n};\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], Overlay.prototype, \"renderer\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], Overlay.prototype, \"text\", 2);\n\n// packages/ag-charts-community/src/chart/overlay/chartOverlays.ts\nvar ChartOverlays = class {\n  constructor(parent) {\n    this.noData = new Overlay(\"ag-chart-no-data-overlay\", parent);\n    this.noVisibleSeries = new Overlay(\"ag-chart-no-visible-series\", parent);\n    this.noVisibleSeries.text = \"No visible series\";\n  }\n  destroy() {\n    this.noData.hide();\n    this.noVisibleSeries.hide();\n  }\n};\n\n// packages/ag-charts-community/src/util/object.ts\nfunction deepMerge(target, source) {\n  if (isPlainObject2(target) && isPlainObject2(source)) {\n    const result = {};\n    Object.keys(target).forEach(key => {\n      if (key in source) {\n        result[key] = deepMerge(target[key], source[key]);\n      } else {\n        result[key] = target[key];\n      }\n    });\n    Object.keys(source).forEach(key => {\n      if (!(key in target)) {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }\n  if (Array.isArray(target) && !Array.isArray(source) || isObjectLike2(target) && !isObjectLike2(source)) {\n    return target;\n  }\n  return source;\n}\nfunction isObjectLike2(value) {\n  return typeof value === \"object\" && value !== null;\n}\nfunction isObject2(value) {\n  return isObjectLike2(value) && !Array.isArray(value);\n}\nfunction isPlainObject2(x) {\n  return isObject2(x) && x.constructor === Object;\n}\nfunction mergeDefaults(...sources) {\n  var _a;\n  const target = {};\n  for (const source of sources) {\n    if (!source) continue;\n    const keys = isDecoratedObject(source) ? listDecoratedProperties(source) : Object.keys(source);\n    for (const key of keys) {\n      if (isObject2(target[key]) && isObject2(source[key])) {\n        target[key] = mergeDefaults(target[key], source[key]);\n      } else {\n        (_a = target[key]) != null ? _a : target[key] = source[key];\n      }\n    }\n  }\n  return target;\n}\nfunction partialAssign(keysToCopy, target, source) {\n  if (source === void 0) {\n    return target;\n  }\n  for (const key of keysToCopy) {\n    const value = source[key];\n    if (value !== void 0) {\n      target[key] = value;\n    }\n  }\n  return target;\n}\n\n// packages/ag-charts-community/src/chart/data/aggregateFunctions.ts\nfunction sumValues(values, accumulator = [0, 0]) {\n  for (const value of values) {\n    if (typeof value !== \"number\") {\n      continue;\n    }\n    if (value < 0) {\n      accumulator[0] += value;\n    }\n    if (value > 0) {\n      accumulator[1] += value;\n    }\n  }\n  return accumulator;\n}\nfunction sum(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: values => sumValues(values)\n  };\n  return result;\n}\nfunction groupSum(scope, id, matchGroupId) {\n  return {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    aggregateFunction: values => sumValues(values),\n    groupAggregateFunction: (next, acc = [0, 0]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      return acc;\n    }\n  };\n}\nfunction range2(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: values => extendDomain(values)\n  };\n  return result;\n}\nfunction count(scope, id) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    aggregateFunction: () => [0, 1]\n  };\n  return result;\n}\nfunction groupCount(scope, id) {\n  return {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    aggregateFunction: () => [0, 1],\n    groupAggregateFunction: (next, acc = [0, 0]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      return acc;\n    }\n  };\n}\nfunction average(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: values => sumValues(values).map(v => v / values.length)\n  };\n  return result;\n}\nfunction groupAverage(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    type: \"aggregate\",\n    aggregateFunction: values => sumValues(values),\n    groupAggregateFunction: (next, acc = [0, 0, -1]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      acc[2]++;\n      return acc;\n    },\n    finalFunction: (acc = [0, 0, 0]) => {\n      const result2 = acc[0] + acc[1];\n      if (result2 >= 0) {\n        return [0, result2 / acc[2]];\n      }\n      return [result2 / acc[2], 0];\n    }\n  };\n  return result;\n}\nfunction area(scope, id, aggFn, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    type: \"aggregate\",\n    aggregateFunction: (values, keyRange = []) => {\n      const keyWidth = keyRange[1] - keyRange[0];\n      return aggFn.aggregateFunction(values).map(v => v / keyWidth);\n    }\n  };\n  if (aggFn.groupAggregateFunction) {\n    result.groupAggregateFunction = aggFn.groupAggregateFunction;\n  }\n  return result;\n}\nfunction accumulatedValue(onlyPositive) {\n  return () => {\n    let value = 0;\n    return datum => {\n      if (typeof datum !== \"number\") return datum;\n      if (isNaN(datum)) return datum;\n      value += onlyPositive ? Math.max(0, datum) : datum;\n      return value;\n    };\n  };\n}\nfunction trailingAccumulatedValue() {\n  return () => {\n    let value = 0;\n    return datum => {\n      if (typeof datum !== \"number\") return datum;\n      if (isNaN(datum)) return datum;\n      const trailingValue2 = value;\n      value += datum;\n      return trailingValue2;\n    };\n  };\n}\n\n// packages/ag-charts-community/src/util/memo.ts\nvar memorizedFns = /* @__PURE__ */new Map();\nfunction memo(params, fnGenerator) {\n  var _a, _b, _c;\n  const serialisedParams = JSON.stringify(params, null, 0);\n  if (!memorizedFns.has(fnGenerator)) {\n    memorizedFns.set(fnGenerator, /* @__PURE__ */new Map());\n  }\n  if (!((_a = memorizedFns.get(fnGenerator)) == null ? void 0 : _a.has(serialisedParams))) {\n    (_b = memorizedFns.get(fnGenerator)) == null ? void 0 : _b.set(serialisedParams, fnGenerator(params));\n  }\n  return (_c = memorizedFns.get(fnGenerator)) == null ? void 0 : _c.get(serialisedParams);\n}\n\n// packages/ag-charts-community/src/chart/data/processors.ts\nvar SMALLEST_KEY_INTERVAL = {\n  type: \"reducer\",\n  property: \"smallestKeyInterval\",\n  initialValue: Infinity,\n  reducer: () => {\n    let prevX = NaN;\n    return (smallestSoFar = Infinity, next) => {\n      const nextX = next.keys[0];\n      const interval = Math.abs(nextX - prevX);\n      prevX = nextX;\n      if (!isNaN(interval) && interval > 0 && interval < smallestSoFar) {\n        return interval;\n      }\n      return smallestSoFar;\n    };\n  }\n};\nvar AGG_VALUES_EXTENT = {\n  type: \"processor\",\n  property: \"aggValuesExtent\",\n  calculate: processedData => {\n    var _a, _b, _c, _d;\n    const result = [...((_b = (_a = processedData.domain.aggValues) == null ? void 0 : _a[0]) != null ? _b : [0, 0])];\n    for (const [min, max] of (_d = (_c = processedData.domain.aggValues) == null ? void 0 : _c.slice(1)) != null ? _d : []) {\n      if (min < result[0]) {\n        result[0] = min;\n      }\n      if (max > result[1]) {\n        result[1] = max;\n      }\n    }\n    return result;\n  }\n};\nvar SORT_DOMAIN_GROUPS = {\n  type: \"processor\",\n  property: \"sortedGroupDomain\",\n  calculate: ({\n    domain: {\n      groups\n    }\n  }) => {\n    if (groups == null) return void 0;\n    return [...groups].sort((a, b) => {\n      for (let i = 0; i < a.length; i++) {\n        const result = a[i] - b[i];\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    });\n  }\n};\nfunction normaliseFnBuilder({\n  normaliseTo,\n  mode\n}) {\n  const normalise = (val, extent2) => {\n    const result = val * normaliseTo / extent2;\n    if (result >= 0) {\n      return Math.min(normaliseTo, result);\n    }\n    return Math.max(-normaliseTo, result);\n  };\n  return () => () => (values, valueIndexes) => {\n    const valuesExtent = [0, 0];\n    for (const valueIdx of valueIndexes) {\n      const value = values[valueIdx];\n      const valIdx = value < 0 ? 0 : 1;\n      if (mode === \"sum\") {\n        valuesExtent[valIdx] += value;\n      } else if (valIdx === 0) {\n        valuesExtent[valIdx] = Math.min(valuesExtent[valIdx], value);\n      } else {\n        valuesExtent[valIdx] = Math.max(valuesExtent[valIdx], value);\n      }\n    }\n    const extent2 = Math.max(Math.abs(valuesExtent[0]), valuesExtent[1]);\n    for (const valueIdx of valueIndexes) {\n      values[valueIdx] = normalise(values[valueIdx], extent2);\n    }\n  };\n}\nfunction normaliseGroupTo(scope, matchGroupIds, normaliseTo, mode = \"sum\") {\n  return {\n    scopes: [scope.id],\n    type: \"group-value-processor\",\n    matchGroupIds,\n    adjust: memo({\n      normaliseTo,\n      mode\n    }, normaliseFnBuilder)\n  };\n}\nfunction normalisePropertyFnBuilder({\n  normaliseTo,\n  zeroDomain,\n  rangeMin,\n  rangeMax\n}) {\n  const normaliseSpan = normaliseTo[1] - normaliseTo[0];\n  const normalise = (val, start, span) => {\n    const result = normaliseTo[0] + (val - start) / span * normaliseSpan;\n    if (span === 0) return zeroDomain;\n    if (result >= normaliseTo[1]) return normaliseTo[1];\n    if (result < normaliseTo[0]) return normaliseTo[0];\n    return result;\n  };\n  return () => (pData, pIdx) => {\n    let [start, end] = pData.domain.values[pIdx];\n    if (rangeMin != null) start = rangeMin;\n    if (rangeMax != null) end = rangeMax;\n    const span = end - start;\n    pData.domain.values[pIdx] = [normaliseTo[0], normaliseTo[1]];\n    for (const group2 of pData.data) {\n      let groupValues = group2.values;\n      if (pData.type === \"ungrouped\") {\n        groupValues = [groupValues];\n      }\n      for (const values of groupValues) {\n        values[pIdx] = normalise(values[pIdx], start, span);\n      }\n    }\n  };\n}\nfunction normalisePropertyTo(scope, property, normaliseTo, zeroDomain, rangeMin, rangeMax) {\n  return {\n    scopes: [scope.id],\n    type: \"property-value-processor\",\n    property,\n    adjust: memo({\n      normaliseTo,\n      rangeMin,\n      rangeMax,\n      zeroDomain\n    }, normalisePropertyFnBuilder)\n  };\n}\nfunction animationValidation(scope, valueKeyIds = []) {\n  return {\n    type: \"processor\",\n    scopes: [scope.id],\n    property: \"animationValidation\",\n    calculate(result) {\n      var _a;\n      const {\n        keys,\n        values\n      } = result.defs;\n      const {\n        input,\n        data\n      } = result;\n      let uniqueKeys = true;\n      let orderedKeys = true;\n      const valueKeys = [];\n      for (let k = 0; k < values.length; k++) {\n        if (!((_a = values[k].scopes) == null ? void 0 : _a.some(s => s === scope.id))) continue;\n        if (!valueKeyIds.some(v => values[k].id === v)) continue;\n        valueKeys.push([k, values[k]]);\n      }\n      const processKey = (idx, def, type) => {\n        var _a2;\n        if (def.valueType === \"category\") {\n          const keyValues = result.domain[type][idx];\n          uniqueKeys && (uniqueKeys = keyValues.length === input.count);\n          return;\n        }\n        let lastValue = (_a2 = data[0]) == null ? void 0 : _a2[type][idx];\n        for (let d = 1; (uniqueKeys || orderedKeys) && d < data.length; d++) {\n          const keyValue = data[d][type][idx];\n          orderedKeys && (orderedKeys = lastValue <= keyValue);\n          uniqueKeys && (uniqueKeys = lastValue !== keyValue);\n          lastValue = keyValue;\n        }\n      };\n      for (let k = 0; (uniqueKeys || orderedKeys) && k < keys.length; k++) {\n        processKey(k, keys[k], \"keys\");\n      }\n      for (let k = 0; (uniqueKeys || orderedKeys) && k < valueKeys.length; k++) {\n        const [idx, key] = valueKeys[k];\n        processKey(idx, key, \"values\");\n      }\n      return {\n        uniqueKeys,\n        orderedKeys\n      };\n    }\n  };\n}\nfunction buildGroupAccFn({\n  mode,\n  separateNegative\n}) {\n  return () => () => (values, valueIndexes) => {\n    const acc = [0, 0];\n    for (const valueIdx of valueIndexes) {\n      const currentVal = values[valueIdx];\n      const accIndex = isNegative(currentVal) && separateNegative ? 0 : 1;\n      if (typeof currentVal !== \"number\" || isNaN(currentVal)) continue;\n      if (mode === \"normal\") acc[accIndex] += currentVal;\n      values[valueIdx] = acc[accIndex];\n      if (mode === \"trailing\") acc[accIndex] += currentVal;\n    }\n  };\n}\nfunction buildGroupWindowAccFn({\n  mode,\n  sum: sum2\n}) {\n  return () => {\n    const lastValues = [];\n    let firstRow = true;\n    return () => {\n      return (values, valueIndexes) => {\n        let acc = 0;\n        for (const valueIdx of valueIndexes) {\n          const currentVal = values[valueIdx];\n          const lastValue = firstRow && sum2 === \"current\" ? 0 : lastValues[valueIdx];\n          lastValues[valueIdx] = currentVal;\n          const sumValue = sum2 === \"current\" ? currentVal : lastValue;\n          if (typeof currentVal !== \"number\" || isNaN(currentVal)) {\n            values[valueIdx] = acc;\n            continue;\n          }\n          if (typeof lastValue !== \"number\" || isNaN(lastValue)) {\n            values[valueIdx] = acc;\n            continue;\n          }\n          if (mode === \"normal\") acc += sumValue;\n          values[valueIdx] = acc;\n          if (mode === \"trailing\") acc += sumValue;\n        }\n        firstRow = false;\n      };\n    };\n  };\n}\nfunction accumulateGroup(scope, matchGroupId, mode, sum2, separateNegative = false) {\n  let adjust;\n  if (mode.startsWith(\"window\")) {\n    const modeParam = mode.endsWith(\"-trailing\") ? \"trailing\" : \"normal\";\n    adjust = memo({\n      mode: modeParam,\n      sum: sum2\n    }, buildGroupWindowAccFn);\n  } else {\n    adjust = memo({\n      mode,\n      separateNegative\n    }, buildGroupAccFn);\n  }\n  return {\n    scopes: [scope.id],\n    type: \"group-value-processor\",\n    matchGroupIds: [matchGroupId],\n    adjust\n  };\n}\nfunction diff(previousData, updateMovedDatums = true) {\n  return {\n    type: \"processor\",\n    property: \"diff\",\n    calculate: processedData => {\n      const diff2 = {\n        changed: false,\n        moved: [],\n        added: [],\n        updated: [],\n        removed: [],\n        addedIndices: [],\n        updatedIndices: [],\n        removedIndices: []\n      };\n      const moved = /* @__PURE__ */new Map();\n      const added = /* @__PURE__ */new Map();\n      const updated = /* @__PURE__ */new Map();\n      const removed = /* @__PURE__ */new Map();\n      const addedIndices = /* @__PURE__ */new Map();\n      const updatedIndices = /* @__PURE__ */new Map();\n      const removedIndices = /* @__PURE__ */new Map();\n      for (let i = 0; i < Math.max(previousData.data.length, processedData.data.length); i++) {\n        const prev = previousData.data[i];\n        const datum = processedData.data[i];\n        const prevId = prev ? createDatumId(prev.keys) : \"\";\n        const datumId = datum ? createDatumId(datum.keys) : \"\";\n        if (prevId === datumId) {\n          if (!arraysEqual(prev.values, datum.values)) {\n            updated.set(datumId, datum);\n            updatedIndices.set(datumId, i);\n          }\n          continue;\n        }\n        if (removed.has(datumId)) {\n          if (updateMovedDatums || !arraysEqual(removed.get(datumId).values, datum.values)) {\n            updated.set(datumId, datum);\n            updatedIndices.set(datumId, i);\n            moved.set(datumId, datum);\n          }\n          removed.delete(datumId);\n          removedIndices.delete(datumId);\n        } else if (datum) {\n          added.set(datumId, datum);\n          addedIndices.set(datumId, i);\n        }\n        if (added.has(prevId)) {\n          if (updateMovedDatums || !arraysEqual(added.get(prevId).values, prev.values)) {\n            updated.set(prevId, prev);\n            updatedIndices.set(prevId, i);\n            moved.set(prevId, prev);\n          }\n          added.delete(prevId);\n          addedIndices.delete(prevId);\n        } else if (prev) {\n          updated.delete(prevId);\n          updatedIndices.delete(prevId);\n          removed.set(prevId, prev);\n          removedIndices.set(prevId, i);\n        }\n      }\n      diff2.added = Array.from(added.keys());\n      diff2.updated = Array.from(updated.keys());\n      diff2.removed = Array.from(removed.keys());\n      diff2.moved = Array.from(moved.keys());\n      diff2.addedIndices = Array.from(addedIndices.values());\n      diff2.updatedIndices = Array.from(updatedIndices.values());\n      diff2.removedIndices = Array.from(removedIndices.values());\n      diff2.changed = diff2.added.length > 0 || diff2.updated.length > 0 || diff2.removed.length > 0;\n      return diff2;\n    }\n  };\n}\nfunction createDatumId(keys) {\n  return keys.join(\"___\");\n}\n\n// packages/ag-charts-community/src/chart/series/series.ts\nvar SeriesNodePickMode = /* @__PURE__ */(SeriesNodePickMode2 => {\n  SeriesNodePickMode2[SeriesNodePickMode2[\"EXACT_SHAPE_MATCH\"] = 0] = \"EXACT_SHAPE_MATCH\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_BY_MAIN_AXIS_FIRST\"] = 1] = \"NEAREST_BY_MAIN_AXIS_FIRST\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST\"] = 2] = \"NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_NODE\"] = 3] = \"NEAREST_NODE\";\n  return SeriesNodePickMode2;\n})(SeriesNodePickMode || {});\nfunction basicContinuousCheckDatumValidation(v) {\n  return checkDatum(v, true) != null;\n}\nfunction basicDiscreteCheckDatumValidation(v) {\n  return checkDatum(v, false) != null;\n}\nfunction keyProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadValues({\n    scopes: [scope.id],\n    property: propName,\n    type: \"key\",\n    valueType: continuous ? \"range\" : \"category\",\n    validation: continuous ? basicContinuousCheckDatumValidation : basicDiscreteCheckDatumValidation\n  }, opts);\n  return result;\n}\nfunction valueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadValues({\n    scopes: [scope.id],\n    property: propName,\n    type: \"value\",\n    valueType: continuous ? \"range\" : \"category\",\n    validation: continuous ? basicContinuousCheckDatumValidation : basicDiscreteCheckDatumValidation\n  }, opts);\n  return result;\n}\nfunction rangedValueProperty(scope, propName, opts = {}) {\n  const _a = opts,\n    {\n      min = -Infinity,\n      max = Infinity\n    } = _a,\n    defOpts = __objRest(_a, [\"min\", \"max\"]);\n  return __spreadValues({\n    scopes: [scope.id],\n    type: \"value\",\n    property: propName,\n    valueType: \"range\",\n    validation: basicContinuousCheckDatumValidation,\n    processor: () => datum => {\n      if (typeof datum !== \"number\") return datum;\n      if (isNaN(datum)) return datum;\n      return Math.min(Math.max(datum, min), max);\n    }\n  }, defOpts);\n}\nfunction trailingValueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, opts)), {\n    processor: trailingValue()\n  });\n  return result;\n}\nfunction trailingValue() {\n  return () => {\n    let value = 0;\n    return datum => {\n      const trailingValue2 = value;\n      value = datum;\n      return trailingValue2;\n    };\n  };\n}\nfunction accumulativeValueProperty(scope, propName, continuous, opts = {}) {\n  const _a = opts,\n    {\n      onlyPositive\n    } = _a,\n    defOpts = __objRest(_a, [\"onlyPositive\"]);\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, defOpts)), {\n    processor: accumulatedValue(onlyPositive)\n  });\n  return result;\n}\nfunction trailingAccumulatedValueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, opts)), {\n    processor: trailingAccumulatedValue()\n  });\n  return result;\n}\nfunction groupAccumulativeValueProperty(scope, propName, continuous, mode, sum2 = \"current\", opts) {\n  return [valueProperty(scope, propName, continuous, opts), accumulateGroup(scope, opts.groupId, mode, sum2, opts.separateNegative), ...(opts.rangeId != null ? [range2(scope, opts.rangeId, opts.groupId)] : [])];\n}\nvar SeriesNodeClickEvent = class {\n  constructor(type, event, {\n    datum\n  }, series) {\n    this.type = type;\n    this.event = event;\n    this.datum = datum;\n    this.seriesId = series.id;\n  }\n};\nvar Series = class extends Observable {\n  constructor(seriesOpts) {\n    super();\n    this.destroyFns = [];\n    this.seriesGrouping = void 0;\n    this.NodeClickEvent = SeriesNodeClickEvent;\n    this.internalId = createId(this);\n    // The group node that contains all the nodes used to render this series.\n    this.rootGroup = new Group({\n      name: \"seriesRoot\",\n      isVirtual: true\n    });\n    this.axes = {\n      [\"x\" /* X */]: void 0,\n      [\"y\" /* Y */]: void 0\n    };\n    this.directions = [\"x\" /* X */, \"y\" /* Y */];\n    // Flag to determine if we should recalculate node data.\n    this.nodeDataRefresh = true;\n    this.moduleMap = new ModuleMap();\n    this._declarationOrder = -1;\n    this.seriesListeners = new Listeners();\n    const {\n      moduleCtx,\n      useLabelLayer = false,\n      pickModes = [1 /* NEAREST_BY_MAIN_AXIS_FIRST */],\n      directionKeys = {},\n      directionNames = {},\n      contentGroupVirtual = true,\n      canHaveAxes = false\n    } = seriesOpts;\n    this.ctx = moduleCtx;\n    this.directionKeys = directionKeys;\n    this.directionNames = directionNames;\n    this.canHaveAxes = canHaveAxes;\n    this.contentGroup = this.rootGroup.appendChild(new Group({\n      name: `${this.internalId}-content`,\n      layer: !contentGroupVirtual,\n      isVirtual: contentGroupVirtual,\n      zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n      zIndexSubOrder: this.getGroupZIndexSubOrder(\"data\")\n    }));\n    this.highlightGroup = new Group({\n      name: `${this.internalId}-highlight`,\n      layer: !contentGroupVirtual,\n      isVirtual: contentGroupVirtual,\n      zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n      zIndexSubOrder: this.getGroupZIndexSubOrder(\"highlight\")\n    });\n    this.highlightNode = this.highlightGroup.appendChild(new Group({\n      name: \"highlightNode\",\n      zIndex: 0\n    }));\n    this.highlightLabel = this.highlightGroup.appendChild(new Group({\n      name: \"highlightLabel\",\n      zIndex: 10\n    }));\n    this.pickModes = pickModes;\n    this.labelGroup = this.rootGroup.appendChild(new Group({\n      name: `${this.internalId}-series-labels`,\n      layer: useLabelLayer,\n      zIndex: 7 /* SERIES_LABEL_ZINDEX */\n    }));\n    this.annotationGroup = new Group({\n      name: `${this.id}-annotation`,\n      layer: !contentGroupVirtual,\n      isVirtual: contentGroupVirtual,\n      zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n      zIndexSubOrder: this.getGroupZIndexSubOrder(\"annotation\")\n    });\n  }\n  get id() {\n    var _a, _b;\n    return (_b = (_a = this.properties) == null ? void 0 : _a.id) != null ? _b : this.internalId;\n  }\n  get type() {\n    var _a;\n    return (_a = this.constructor.type) != null ? _a : \"\";\n  }\n  set data(input) {\n    this._data = input;\n    this.onDataChange();\n  }\n  get data() {\n    var _a;\n    return (_a = this._data) != null ? _a : this._chartData;\n  }\n  set visible(value) {\n    this.properties.visible = value;\n    this.visibleChanged();\n  }\n  get visible() {\n    return this.properties.visible;\n  }\n  onDataChange() {\n    this.nodeDataRefresh = true;\n  }\n  setChartData(input) {\n    this._chartData = input;\n    if (this.data === input) {\n      this.onDataChange();\n    }\n  }\n  hasData() {\n    const {\n      data\n    } = this;\n    return data && (!Array.isArray(data) || data.length > 0);\n  }\n  onSeriesGroupingChange(prev, next) {\n    const {\n      internalId,\n      type,\n      visible,\n      rootGroup,\n      highlightGroup,\n      annotationGroup\n    } = this;\n    if (prev) {\n      this.ctx.seriesStateManager.deregisterSeries({\n        id: internalId,\n        type\n      });\n    }\n    if (next) {\n      this.ctx.seriesStateManager.registerSeries({\n        id: internalId,\n        type,\n        visible,\n        seriesGrouping: next\n      });\n    }\n    if (this.rootGroup.parent == null) return;\n    this.ctx.seriesLayerManager.changeGroup({\n      internalId,\n      type,\n      rootGroup,\n      highlightGroup,\n      annotationGroup,\n      getGroupZIndexSubOrder: type2 => this.getGroupZIndexSubOrder(type2),\n      seriesGrouping: next,\n      oldGrouping: prev\n    });\n  }\n  getBandScalePadding() {\n    return {\n      inner: 1,\n      outer: 0\n    };\n  }\n  getGroupZIndexSubOrder(type, subIndex = 0) {\n    let mainAdjust = 0;\n    switch (type) {\n      case \"data\":\n      case \"paths\":\n        break;\n      case \"labels\":\n        mainAdjust += 2e4;\n        break;\n      case \"marker\":\n        mainAdjust += 1e4;\n        break;\n      case \"highlight\":\n        subIndex += 15e3;\n        break;\n      case \"annotation\":\n        mainAdjust += 15e3;\n        break;\n    }\n    const main = () => this._declarationOrder + mainAdjust;\n    return [main, subIndex];\n  }\n  addListener(type, listener) {\n    return this.seriesListeners.addListener(type, listener);\n  }\n  dispatch(type, event) {\n    this.seriesListeners.dispatch(type, event);\n  }\n  addChartEventListeners() {\n    return;\n  }\n  destroy() {\n    this.destroyFns.forEach(f => f());\n    this.ctx.seriesStateManager.deregisterSeries(this);\n    this.ctx.seriesLayerManager.releaseGroup(this);\n  }\n  getDirectionValues(direction, properties) {\n    const resolvedDirection = this.resolveKeyDirection(direction);\n    const keys = properties == null ? void 0 : properties[resolvedDirection];\n    const values = [];\n    if (!keys) return values;\n    const addValues = (...items) => {\n      for (const value of items) {\n        if (Array.isArray(value)) {\n          addValues(...value);\n        } else if (typeof value === \"object\") {\n          addValues(...Object.values(value));\n        } else {\n          values.push(value);\n        }\n      }\n    };\n    addValues(...keys.map(key => this.properties[key]));\n    return values;\n  }\n  getKeys(direction) {\n    return this.getDirectionValues(direction, this.directionKeys);\n  }\n  getNames(direction) {\n    return this.getDirectionValues(direction, this.directionNames);\n  }\n  resolveKeyDirection(direction) {\n    return direction;\n  }\n  // The union of the series domain ('community') and series-option domains ('enterprise').\n  getDomain(direction) {\n    const seriesDomain = this.getSeriesDomain(direction);\n    const moduleDomains = this.moduleMap.mapValues(module => module.getDomain(direction));\n    return seriesDomain.concat(moduleDomains.flat());\n  }\n  // Indicate that something external changed and we should recalculate nodeData.\n  markNodeDataDirty() {\n    this.nodeDataRefresh = true;\n  }\n  visibleChanged() {\n    this.ctx.seriesStateManager.registerSeries(this);\n  }\n  getOpacity() {\n    const defaultOpacity = 1;\n    const {\n      dimOpacity = 1,\n      enabled = true\n    } = this.properties.highlightStyle.series;\n    if (!enabled || dimOpacity === defaultOpacity) {\n      return defaultOpacity;\n    }\n    switch (this.isItemIdHighlighted()) {\n      case 0 /* None */:\n      case 1 /* This */:\n        return defaultOpacity;\n      case 2 /* Other */:\n      default:\n        return dimOpacity;\n    }\n  }\n  getStrokeWidth(defaultStrokeWidth) {\n    const {\n      strokeWidth,\n      enabled = true\n    } = this.properties.highlightStyle.series;\n    if (!enabled || strokeWidth === void 0) {\n      return defaultStrokeWidth;\n    }\n    switch (this.isItemIdHighlighted()) {\n      case 1 /* This */:\n        return strokeWidth;\n      case 0 /* None */:\n      case 2 /* Other */:\n        return defaultStrokeWidth;\n    }\n  }\n  isItemIdHighlighted() {\n    var _a, _b;\n    const {\n      series\n    } = (_b = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight()) != null ? _b : {};\n    if (series == null) {\n      return 0 /* None */;\n    }\n    if (series !== this) {\n      return 2 /* Other */;\n    }\n    return 1 /* This */;\n  }\n  getModuleTooltipParams() {\n    const params = this.moduleMap.mapValues(module => module.getTooltipParams());\n    return params.reduce((total, current) => __spreadValues(__spreadValues({}, current), total), {});\n  }\n  pickNode(point, limitPickModes) {\n    const {\n      pickModes,\n      visible,\n      rootGroup\n    } = this;\n    if (!visible || !rootGroup.visible) {\n      return;\n    }\n    for (const pickMode of pickModes) {\n      if (limitPickModes && !limitPickModes.includes(pickMode)) {\n        continue;\n      }\n      let match;\n      switch (pickMode) {\n        case 0 /* EXACT_SHAPE_MATCH */:\n          match = this.pickNodeExactShape(point);\n          break;\n        case 1 /* NEAREST_BY_MAIN_AXIS_FIRST */:\n        case 2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */:\n          match = this.pickNodeMainAxisFirst(point, pickMode === 2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */);\n          break;\n        case 3 /* NEAREST_NODE */:\n          match = this.pickNodeClosestDatum(point);\n          break;\n      }\n      if (match) {\n        return {\n          pickMode,\n          match: match.datum,\n          distance: match.distance\n        };\n      }\n    }\n  }\n  pickNodeExactShape(point) {\n    const match = this.contentGroup.pickNode(point.x, point.y);\n    return match && {\n      datum: match.datum,\n      distance: 0\n    };\n  }\n  pickNodeClosestDatum(_point) {\n    throw new Error(\"AG Charts - Series.pickNodeClosestDatum() not implemented\");\n  }\n  pickNodeMainAxisFirst(_point, _requireCategoryAxis) {\n    throw new Error(\"AG Charts - Series.pickNodeMainAxisFirst() not implemented\");\n  }\n  fireNodeClickEvent(event, datum) {\n    this.fireEvent(new this.NodeClickEvent(\"nodeClick\", event, datum, this));\n  }\n  fireNodeDoubleClickEvent(event, datum) {\n    this.fireEvent(new this.NodeClickEvent(\"nodeDoubleClick\", event, datum, this));\n  }\n  toggleSeriesItem(itemId, enabled) {\n    this.visible = enabled;\n    this.nodeDataRefresh = true;\n    this.dispatch(\"visibility-changed\", {\n      itemId,\n      enabled\n    });\n  }\n  isEnabled() {\n    return this.visible;\n  }\n  getModuleMap() {\n    return this.moduleMap;\n  }\n  createModuleContext() {\n    return __spreadProps(__spreadValues({}, this.ctx), {\n      series: this\n    });\n  }\n  getLabelText(label, params, defaultFormatter = String) {\n    var _a;\n    if (label.formatter) {\n      return (_a = this.ctx.callbackCache.call(label.formatter, __spreadValues({\n        seriesId: this.id\n      }, params))) != null ? _a : defaultFormatter(params.value);\n    }\n    return defaultFormatter(params.value);\n  }\n  getMarkerStyle(marker, params, defaultStyle = marker.getStyle()) {\n    var _a, _b;\n    const defaultSize = {\n      size: (_b = (_a = params.datum.point) == null ? void 0 : _a.size) != null ? _b : 0\n    };\n    const markerStyle = mergeDefaults(defaultSize, defaultStyle);\n    if (marker.formatter) {\n      const style = this.ctx.callbackCache.call(marker.formatter, __spreadProps(__spreadValues(__spreadValues({\n        seriesId: this.id\n      }, markerStyle), params), {\n        datum: params.datum.datum\n      }));\n      return mergeDefaults(style, markerStyle);\n    }\n    return markerStyle;\n  }\n  updateMarkerStyle(markerNode, marker, params, defaultStyle = marker.getStyle(), {\n    applyTranslation = true\n  } = {}) {\n    const {\n      point\n    } = params.datum;\n    const activeStyle = this.getMarkerStyle(marker, params, defaultStyle);\n    const visible = this.visible && activeStyle.size > 0 && point && !isNaN(point.x) && !isNaN(point.y);\n    if (applyTranslation) {\n      markerNode.setProperties(__spreadProps(__spreadValues({\n        visible\n      }, activeStyle), {\n        translationX: point == null ? void 0 : point.x,\n        translationY: point == null ? void 0 : point.y\n      }));\n    } else {\n      markerNode.setProperties(__spreadValues({\n        visible\n      }, activeStyle));\n    }\n    if (typeof marker.shape === \"function\" && !markerNode.dirtyPath) {\n      markerNode.path.clear({\n        trackChanges: true\n      });\n      markerNode.updatePath();\n      markerNode.checkPathDirty();\n    }\n  }\n  getMinRect() {\n    return void 0;\n  }\n  get nodeDataDependencies() {\n    var _a;\n    return (_a = this._nodeDataDependencies) != null ? _a : {\n      seriesRectWidth: NaN,\n      seriesRectHeight: NaN\n    };\n  }\n  checkResize(newSeriesRect) {\n    const {\n      width: seriesRectWidth,\n      height: seriesRectHeight\n    } = newSeriesRect != null ? newSeriesRect : {\n      width: NaN,\n      height: NaN\n    };\n    const newNodeDataDependencies = newSeriesRect ? {\n      seriesRectWidth,\n      seriesRectHeight\n    } : void 0;\n    const resize = jsonDiff(this.nodeDataDependencies, newNodeDataDependencies) != null;\n    if (resize) {\n      this._nodeDataDependencies = newNodeDataDependencies;\n      this.markNodeDataDirty();\n    }\n    return resize;\n  }\n};\nSeries.highlightedZIndex = 1e12;\n__decorateClass([ActionOnSet({\n  changeValue: function (newVal, oldVal) {\n    this.onSeriesGroupingChange(oldVal, newVal);\n  }\n})], Series.prototype, \"seriesGrouping\", 2);\n\n// packages/ag-charts-community/src/chart/series/seriesLayerManager.ts\nvar SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION = 30;\nvar SeriesLayerManager = class {\n  constructor(rootGroup) {\n    this.groups = {};\n    this.series = {};\n    this.expectedSeriesCount = 1;\n    this.mode = \"normal\";\n    this.rootGroup = rootGroup;\n  }\n  setSeriesCount(count2) {\n    this.expectedSeriesCount = count2;\n  }\n  requestGroup(seriesConfig) {\n    var _a, _b, _c, _d;\n    const {\n      internalId,\n      type,\n      rootGroup: seriesRootGroup,\n      highlightGroup: seriesHighlightGroup,\n      annotationGroup: seriesAnnotationGroup,\n      seriesGrouping\n    } = seriesConfig;\n    const {\n      groupIndex = internalId\n    } = seriesGrouping != null ? seriesGrouping : {};\n    if (this.series[internalId] != null) {\n      throw new Error(`AG Charts - series already has an allocated layer: ${this.series[internalId]}`);\n    }\n    if (Object.keys(this.series).length === 0) {\n      this.mode = this.expectedSeriesCount >= SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION ? \"aggressive-grouping\" : \"normal\";\n    }\n    (_b = (_a = this.groups)[type]) != null ? _b : _a[type] = {};\n    const lookupIndex = this.lookupIdx(groupIndex);\n    let groupInfo = this.groups[type][lookupIndex];\n    if (!groupInfo) {\n      groupInfo = (_d = (_c = this.groups[type])[lookupIndex]) != null ? _d : _c[lookupIndex] = {\n        seriesIds: [],\n        group: this.rootGroup.appendChild(new Group({\n          name: `${type}-content`,\n          layer: true,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"data\")\n        })),\n        highlight: this.rootGroup.appendChild(new Group({\n          name: `${type}-highlight`,\n          layer: true,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"highlight\")\n        })),\n        annotation: this.rootGroup.appendChild(new Group({\n          name: `${type}-annotation`,\n          layer: true,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"annotation\")\n        }))\n      };\n    }\n    this.series[internalId] = {\n      layerState: groupInfo,\n      seriesConfig\n    };\n    groupInfo.seriesIds.push(internalId);\n    groupInfo.group.appendChild(seriesRootGroup);\n    groupInfo.highlight.appendChild(seriesHighlightGroup);\n    groupInfo.annotation.appendChild(seriesAnnotationGroup);\n    return groupInfo.group;\n  }\n  changeGroup(seriesConfig) {\n    var _a, _b;\n    const {\n      internalId,\n      seriesGrouping,\n      type,\n      rootGroup,\n      highlightGroup,\n      annotationGroup,\n      oldGrouping\n    } = seriesConfig;\n    const {\n      groupIndex = internalId\n    } = seriesGrouping != null ? seriesGrouping : {};\n    if ((_b = (_a = this.groups[type]) == null ? void 0 : _a[groupIndex]) == null ? void 0 : _b.seriesIds.includes(internalId)) {\n      return;\n    }\n    if (this.series[internalId] != null) {\n      this.releaseGroup({\n        internalId,\n        seriesGrouping: oldGrouping,\n        type,\n        rootGroup,\n        highlightGroup,\n        annotationGroup\n      });\n    }\n    this.requestGroup(seriesConfig);\n  }\n  releaseGroup(seriesConfig) {\n    var _a, _b, _c, _d, _e;\n    const {\n      internalId,\n      seriesGrouping,\n      rootGroup,\n      highlightGroup,\n      annotationGroup,\n      type\n    } = seriesConfig;\n    const {\n      groupIndex = internalId\n    } = seriesGrouping != null ? seriesGrouping : {};\n    if (this.series[internalId] == null) {\n      throw new Error(`AG Charts - series doesn't have an allocated layer: ${internalId}`);\n    }\n    const lookupIndex = this.lookupIdx(groupIndex);\n    const groupInfo = (_c = (_a = this.groups[type]) == null ? void 0 : _a[lookupIndex]) != null ? _c : (_b = this.series[internalId]) == null ? void 0 : _b.layerState;\n    if (groupInfo) {\n      groupInfo.seriesIds = groupInfo.seriesIds.filter(v => v !== internalId);\n      groupInfo.group.removeChild(rootGroup);\n      groupInfo.highlight.removeChild(highlightGroup);\n      groupInfo.annotation.removeChild(annotationGroup);\n    }\n    if ((groupInfo == null ? void 0 : groupInfo.seriesIds.length) === 0) {\n      this.rootGroup.removeChild(groupInfo.group);\n      this.rootGroup.removeChild(groupInfo.highlight);\n      this.rootGroup.removeChild(groupInfo.annotation);\n      delete this.groups[type][lookupIndex];\n      delete this.groups[type][internalId];\n    } else if ((groupInfo == null ? void 0 : groupInfo.seriesIds.length) > 0) {\n      const leadSeriesConfig = (_e = this.series[(_d = groupInfo == null ? void 0 : groupInfo.seriesIds) == null ? void 0 : _d[0]]) == null ? void 0 : _e.seriesConfig;\n      groupInfo.group.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"data\");\n      groupInfo.highlight.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"highlight\");\n      groupInfo.annotation.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"annotation\");\n    }\n    delete this.series[internalId];\n  }\n  lookupIdx(groupIndex) {\n    if (this.mode === \"normal\") {\n      return groupIndex;\n    }\n    if (typeof groupIndex === \"string\") {\n      groupIndex = Number(groupIndex.split(\"-\").slice(-1)[0]);\n      if (!groupIndex) return 0;\n    }\n    return Math.floor(Math.max(Math.min(groupIndex / this.expectedSeriesCount, 1), 0) * SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION);\n  }\n  destroy() {\n    for (const groups of Object.values(this.groups)) {\n      for (const groupInfo of Object.values(groups)) {\n        this.rootGroup.removeChild(groupInfo.group);\n        this.rootGroup.removeChild(groupInfo.highlight);\n        this.rootGroup.removeChild(groupInfo.annotation);\n      }\n    }\n    this.groups = {};\n    this.series = {};\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/seriesStateManager.ts\nvar SeriesStateManager = class {\n  constructor() {\n    this.groups = {};\n  }\n  registerSeries({\n    id,\n    seriesGrouping,\n    visible,\n    type\n  }) {\n    var _a, _b;\n    if (!seriesGrouping) return;\n    (_b = (_a = this.groups)[type]) != null ? _b : _a[type] = {};\n    this.groups[type][id] = {\n      grouping: seriesGrouping,\n      visible\n    };\n  }\n  deregisterSeries({\n    id,\n    type\n  }) {\n    if (this.groups[type]) {\n      delete this.groups[type][id];\n    }\n    if (this.groups[type] && Object.keys(this.groups[type]).length === 0) {\n      delete this.groups[type];\n    }\n  }\n  getVisiblePeerGroupIndex({\n    type,\n    seriesGrouping\n  }) {\n    var _a;\n    if (!seriesGrouping) return {\n      visibleGroupCount: 1,\n      index: 0\n    };\n    const visibleGroups = [...Object.entries((_a = this.groups[type]) != null ? _a : {}).filter(([_, entry]) => entry.visible).reduce((result, [_, next]) => {\n      if (next.visible) {\n        result.add(next.grouping.groupIndex);\n      }\n      return result;\n    }, /* @__PURE__ */new Set()).values()];\n    visibleGroups.sort((a, b) => a - b);\n    return {\n      visibleGroupCount: visibleGroups.length,\n      index: visibleGroups.indexOf(seriesGrouping.groupIndex)\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/update/baseLayoutProcessor.ts\nvar BaseLayoutProcessor = class {\n  constructor(chartLike, layoutService) {\n    this.chartLike = chartLike;\n    this.layoutService = layoutService;\n    this.destroyFns = [];\n    this.destroyFns.push(\n    // eslint-disable-next-line sonarjs/no-duplicate-string\n    this.layoutService.addListener(\"layout-complete\", e => this.layoutComplete(e)), this.layoutService.addListener(\"start-layout\", e => this.positionPadding(e.shrinkRect)), this.layoutService.addListener(\"start-layout\", e => this.positionCaptions(e.shrinkRect)));\n  }\n  destroy() {\n    this.destroyFns.forEach(cb => cb());\n  }\n  layoutComplete({\n    clipSeries,\n    series: {\n      paddedRect\n    }\n  }) {\n    const {\n      seriesArea,\n      seriesRoot\n    } = this.chartLike;\n    if (seriesArea.clip || clipSeries) {\n      seriesRoot.setClipRectInGroupCoordinateSpace(paddedRect);\n    } else {\n      seriesRoot.setClipRectInGroupCoordinateSpace();\n    }\n  }\n  positionPadding(shrinkRect) {\n    const {\n      padding\n    } = this.chartLike;\n    shrinkRect.shrink(padding.left, \"left\");\n    shrinkRect.shrink(padding.top, \"top\");\n    shrinkRect.shrink(padding.right, \"right\");\n    shrinkRect.shrink(padding.bottom, \"bottom\");\n    return {\n      shrinkRect\n    };\n  }\n  positionCaptions(shrinkRect) {\n    var _a, _b, _c, _d;\n    const {\n      title,\n      subtitle,\n      footnote\n    } = this.chartLike;\n    const newShrinkRect = shrinkRect.clone();\n    const updateCaption = caption => {\n      var _a2;\n      const defaultCaptionHeight = shrinkRect.height / 10;\n      const captionLineHeight = (_a2 = caption.lineHeight) != null ? _a2 : caption.fontSize * Text.defaultLineHeightRatio;\n      const maxWidth = shrinkRect.width;\n      const maxHeight = Math.max(captionLineHeight, defaultCaptionHeight);\n      caption.computeTextWrap(maxWidth, maxHeight);\n    };\n    const computeX = align => {\n      if (align === \"left\") {\n        return newShrinkRect.x;\n      } else if (align === \"right\") {\n        return newShrinkRect.x + newShrinkRect.width;\n      } else if (align !== \"center\") {\n        Logger.error(`invalid textAlign value: ${align}`);\n      }\n      return newShrinkRect.x + newShrinkRect.width / 2;\n    };\n    const positionTopAndShrinkBBox = (caption, spacing) => {\n      const baseY = newShrinkRect.y;\n      caption.node.x = computeX(caption.textAlign);\n      caption.node.y = baseY;\n      caption.node.textBaseline = \"top\";\n      updateCaption(caption);\n      const bbox = caption.node.computeBBox();\n      const bboxHeight = Math.ceil(bbox.y - baseY + bbox.height + spacing);\n      newShrinkRect.shrink(bboxHeight, \"top\");\n    };\n    const positionBottomAndShrinkBBox = (caption, spacing) => {\n      const baseY = newShrinkRect.y + newShrinkRect.height;\n      caption.node.x = computeX(caption.textAlign);\n      caption.node.y = baseY;\n      caption.node.textBaseline = \"bottom\";\n      updateCaption(caption);\n      const bbox = caption.node.computeBBox();\n      const bboxHeight = Math.ceil(baseY - bbox.y + spacing);\n      newShrinkRect.shrink(bboxHeight, \"bottom\");\n    };\n    if (subtitle) {\n      subtitle.node.visible = (_a = subtitle.enabled) != null ? _a : false;\n    }\n    if (title) {\n      title.node.visible = title.enabled;\n      if (title.node.visible) {\n        const defaultTitleSpacing = (subtitle == null ? void 0 : subtitle.node.visible) ? Caption.SMALL_PADDING : Caption.LARGE_PADDING;\n        const spacing = (_b = title.spacing) != null ? _b : defaultTitleSpacing;\n        positionTopAndShrinkBBox(title, spacing);\n      }\n    }\n    if (subtitle && subtitle.node.visible) {\n      positionTopAndShrinkBBox(subtitle, (_c = subtitle.spacing) != null ? _c : 0);\n    }\n    if (footnote) {\n      footnote.node.visible = footnote.enabled;\n      if (footnote.node.visible) {\n        positionBottomAndShrinkBBox(footnote, (_d = footnote.spacing) != null ? _d : 0);\n      }\n    }\n    return {\n      shrinkRect: newShrinkRect\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/updateService.ts\nvar UpdateService = class extends Listeners {\n  constructor(updateCallback) {\n    super();\n    this.updateCallback = updateCallback;\n  }\n  update(type = 0 /* FULL */, {\n    forceNodeDataRefresh = false,\n    skipAnimations = false\n  } = {}) {\n    this.updateCallback(type, {\n      forceNodeDataRefresh,\n      skipAnimations\n    });\n  }\n  dispatchUpdateComplete(minRect) {\n    const event = {\n      type: \"update-complete\",\n      minRect\n    };\n    this.dispatch(\"update-complete\", event);\n  }\n};\n\n// packages/ag-charts-community/src/chart/chart.ts\nfunction initialiseSpecialOverrides(opts) {\n  let globalWindow;\n  if (opts.window != null) {\n    globalWindow = opts.window;\n  } else if (typeof window !== \"undefined\") {\n    globalWindow = window;\n  } else if (typeof global !== \"undefined\") {\n    globalWindow = global.window;\n  } else {\n    throw new Error(\"AG Charts - unable to resolve global window\");\n  }\n  let globalDocument;\n  if (opts.document != null) {\n    globalDocument = opts.document;\n  } else if (typeof document !== \"undefined\") {\n    globalDocument = document;\n  } else if (typeof global !== \"undefined\") {\n    globalDocument = global.document;\n  } else {\n    throw new Error(\"AG Charts - unable to resolve global document\");\n  }\n  return {\n    document: globalDocument,\n    window: globalWindow,\n    overrideDevicePixelRatio: opts.overrideDevicePixelRatio,\n    sceneMode: opts.sceneMode\n  };\n}\nvar SeriesArea = class {\n  constructor() {\n    this.clip = void 0;\n    this.padding = new Padding(0);\n  }\n};\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], SeriesArea.prototype, \"clip\", 2);\nvar chartsInstances = /* @__PURE__ */new WeakMap();\nvar Chart = class extends Observable {\n  constructor(specialOverrides, resources) {\n    var _a;\n    super();\n    this.id = createId(this);\n    this.processedOptions = {};\n    this.userOptions = {};\n    this.queuedUserOptions = [];\n    this.seriesRoot = new Group({\n      name: `${this.id}-Series-root`\n    });\n    this.debug = Debug.create();\n    this.extraDebugStats = {};\n    this.container = void 0;\n    this.data = [];\n    this._firstAutoSize = true;\n    this.padding = new Padding(20);\n    this._seriesArea = new SeriesArea();\n    this.title = void 0;\n    this.subtitle = void 0;\n    this.footnote = void 0;\n    this.mode = \"standalone\";\n    this._destroyed = false;\n    this._destroyFns = [];\n    this.modules = /* @__PURE__ */new Map();\n    // TODO shouldn't be public\n    this.legends = /* @__PURE__ */new Map();\n    this.processors = [];\n    this._pendingFactoryUpdatesCount = 0;\n    this._performUpdateNoRenderCount = 0;\n    this._performUpdateType = 6 /* NONE */;\n    this._performUpdateSkipAnimations = false;\n    this.updateShortcutCount = 0;\n    this.seriesToUpdate = /* @__PURE__ */new Set();\n    this.updateMutex = new Mutex();\n    this.updateRequestors = {};\n    this.performUpdateTrigger = debouncedCallback(_0 => __async(this, [_0], function* ({\n      count: count2\n    }) {\n      if (this._destroyed) return;\n      this.updateMutex.acquire(() => __async(this, null, function* () {\n        try {\n          yield this.performUpdate(count2);\n        } catch (error) {\n          this._lastPerformUpdateError = error;\n          Logger.error(\"update error\", error);\n        }\n      }));\n    }));\n    this._axes = [];\n    this._series = [];\n    this.lastInteractionEvent = void 0;\n    this.pointerScheduler = debouncedAnimationFrame(() => {\n      if (this.lastInteractionEvent) {\n        this.handlePointer(this.lastInteractionEvent);\n      }\n      this.lastInteractionEvent = void 0;\n    });\n    this.onSeriesNodeClick = event => {\n      const seriesNodeClickEvent = __spreadProps(__spreadValues({}, event), {\n        type: \"seriesNodeClick\"\n      });\n      Object.defineProperty(seriesNodeClickEvent, \"series\", {\n        enumerable: false,\n        // Should display the deprecation warning\n        get: () => event.series\n      });\n      this.fireEvent(seriesNodeClickEvent);\n    };\n    this.onSeriesNodeDoubleClick = event => {\n      const seriesNodeDoubleClick = __spreadProps(__spreadValues({}, event), {\n        type: \"seriesNodeDoubleClick\"\n      });\n      this.fireEvent(seriesNodeDoubleClick);\n    };\n    this.specialOverrides = initialiseSpecialOverrides(specialOverrides);\n    const {\n      window: window2,\n      document: document2\n    } = this.specialOverrides;\n    const scene = resources == null ? void 0 : resources.scene;\n    const element2 = (_a = resources == null ? void 0 : resources.element) != null ? _a : document2.createElement(\"div\");\n    const container = resources == null ? void 0 : resources.container;\n    const root = new Group({\n      name: \"root\"\n    });\n    root.visible = false;\n    root.append(this.seriesRoot);\n    this.axisGridGroup = new Group({\n      name: \"Axes-Grids\",\n      layer: true,\n      zIndex: 1 /* AXIS_GRID_ZINDEX */\n    });\n    root.appendChild(this.axisGridGroup);\n    this.axisGroup = new Group({\n      name: \"Axes\",\n      layer: true,\n      zIndex: 2 /* AXIS_ZINDEX */\n    });\n    root.appendChild(this.axisGroup);\n    this.element = element2;\n    element2.classList.add(\"ag-chart-wrapper\");\n    element2.style.position = \"relative\";\n    this.scene = scene != null ? scene : new Scene(this.specialOverrides);\n    this.scene.root = root;\n    this.scene.container = element2;\n    this.autoSize = true;\n    this.chartEventManager = new ChartEventManager();\n    this.cursorManager = new CursorManager(element2);\n    this.highlightManager = new HighlightManager();\n    this.interactionManager = new InteractionManager(element2, document2, window2);\n    this.zoomManager = new ZoomManager();\n    this.layoutService = new LayoutService();\n    this.updateService = new UpdateService((type = 0 /* FULL */, {\n      forceNodeDataRefresh,\n      skipAnimations\n    }) => this.update(type, {\n      forceNodeDataRefresh,\n      skipAnimations\n    }));\n    this.seriesStateManager = new SeriesStateManager();\n    this.seriesLayerManager = new SeriesLayerManager(this.seriesRoot);\n    this.callbackCache = new CallbackCache();\n    this.animationManager = new AnimationManager(this.interactionManager, this.updateMutex);\n    this.animationManager.skip();\n    this.animationManager.play();\n    this.processors = [new BaseLayoutProcessor(this, this.layoutService)];\n    this.tooltip = new Tooltip(this.scene.canvas.element, document2, window2, document2.body);\n    this.tooltipManager = new TooltipManager(this.tooltip, this.interactionManager);\n    this.overlays = new ChartOverlays(this.element);\n    this.highlight = new ChartHighlight();\n    this.container = container;\n    SizeMonitor.observe(this.element, size => this.rawResize(size));\n    this._destroyFns.push(this.interactionManager.addListener(\"click\", event => this.onClick(event)), this.interactionManager.addListener(\"dblclick\", event => this.onDoubleClick(event)), this.interactionManager.addListener(\"hover\", event => this.onMouseMove(event)), this.interactionManager.addListener(\"leave\", event => this.onLeave(event)), this.interactionManager.addListener(\"page-left\", () => this.destroy()), this.interactionManager.addListener(\"wheel\", () => this.disablePointer()),\n    // Block redundant and interfering attempts to update the hovered element during dragging.\n    this.interactionManager.addListener(\"drag-start\", () => this.disablePointer()), this.animationManager.addListener(\"animation-frame\", _ => {\n      this.update(5 /* SCENE_RENDER */);\n    }), this.highlightManager.addListener(\"highlight-change\", event => this.changeHighlightDatum(event)), this.zoomManager.addListener(\"zoom-change\", _ => this.update(1 /* PROCESS_DATA */, {\n      forceNodeDataRefresh: true,\n      skipAnimations: true\n    })));\n    this.attachLegend(\"category\", Legend);\n    this.legend = this.legends.get(\"category\");\n  }\n  static getInstance(element2) {\n    return chartsInstances.get(element2);\n  }\n  getOptions() {\n    var _a;\n    const {\n      queuedUserOptions\n    } = this;\n    const lastUpdateOptions = (_a = queuedUserOptions[queuedUserOptions.length - 1]) != null ? _a : this.userOptions;\n    return jsonClone(lastUpdateOptions);\n  }\n  autoSizeChanged(value) {\n    const {\n      style\n    } = this.element;\n    if (value) {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      if (!this._lastAutoSize) {\n        return;\n      }\n      this.resize(void 0, void 0, \"autoSize option\");\n    } else {\n      style.display = \"inline-block\";\n      style.width = \"auto\";\n      style.height = \"auto\";\n    }\n  }\n  download(fileName, fileFormat) {\n    this.scene.download(fileName, fileFormat);\n  }\n  get seriesArea() {\n    return this._seriesArea;\n  }\n  set seriesArea(newArea) {\n    if (!newArea) {\n      this._seriesArea = new SeriesArea();\n    } else {\n      this._seriesArea = newArea;\n    }\n  }\n  get destroyed() {\n    return this._destroyed;\n  }\n  addModule(module) {\n    if (this.modules.has(module.optionsKey)) {\n      throw new Error(`AG Charts - module already initialised: ${module.optionsKey}`);\n    }\n    const moduleInstance = new module.instanceConstructor(this.getModuleContext());\n    if (module.type === \"legend\") {\n      const legend = moduleInstance;\n      this.legends.set(module.identifier, legend);\n      legend.attachLegend(this.scene.root);\n    }\n    this.modules.set(module.optionsKey, moduleInstance);\n  }\n  removeModule(module) {\n    var _a;\n    if (module.type === \"legend\") {\n      this.legends.delete(module.identifier);\n    }\n    (_a = this.modules.get(module.optionsKey)) == null ? void 0 : _a.destroy();\n    this.modules.delete(module.optionsKey);\n  }\n  attachLegend(legendType, legendConstructor) {\n    const legend = new legendConstructor(this.getModuleContext());\n    this.legends.set(legendType, legend);\n    legend.attachLegend(this.scene.root);\n  }\n  isModuleEnabled(module) {\n    return this.modules.has(module.optionsKey);\n  }\n  getModuleContext() {\n    const {\n      scene,\n      animationManager,\n      chartEventManager,\n      cursorManager,\n      highlightManager,\n      interactionManager,\n      tooltipManager,\n      zoomManager,\n      layoutService,\n      updateService,\n      seriesStateManager,\n      seriesLayerManager,\n      callbackCache,\n      specialOverrides: {\n        window: window2,\n        document: document2\n      }\n    } = this;\n    return {\n      window: window2,\n      document: document2,\n      scene,\n      animationManager,\n      chartEventManager,\n      cursorManager,\n      highlightManager,\n      interactionManager,\n      tooltipManager,\n      zoomManager,\n      chartService: this,\n      layoutService,\n      updateService,\n      seriesStateManager,\n      seriesLayerManager,\n      callbackCache\n    };\n  }\n  destroy(opts) {\n    if (this._destroyed) {\n      return;\n    }\n    const keepTransferableResources = opts == null ? void 0 : opts.keepTransferableResources;\n    let result;\n    this._performUpdateType = 6 /* NONE */;\n    this._destroyFns.forEach(fn => fn());\n    this.processors.forEach(p => p.destroy());\n    this.tooltipManager.destroy();\n    this.tooltip.destroy();\n    this.legends.forEach(legend => legend.destroy());\n    this.legends.clear();\n    this.overlays.destroy();\n    SizeMonitor.unobserve(this.element);\n    for (const {\n      instance: moduleInstance\n    } of Object.values(this.modules)) {\n      this.removeModule(moduleInstance);\n    }\n    this.interactionManager.destroy();\n    this.animationManager.stop();\n    if (keepTransferableResources) {\n      this.scene.strip();\n      result = {\n        container: this.container,\n        scene: this.scene,\n        element: this.element\n      };\n    } else {\n      this.scene.destroy();\n      this.container = void 0;\n    }\n    this.removeAllSeries();\n    this.seriesLayerManager.destroy();\n    this.axes.forEach(a => a.destroy());\n    this.axes = [];\n    this.callbackCache.invalidateCache();\n    this._destroyed = true;\n    return result;\n  }\n  disablePointer(highlightOnly = false) {\n    if (!highlightOnly) {\n      this.tooltipManager.removeTooltip(this.id);\n    }\n    this.highlightManager.updateHighlight(this.id);\n    if (this.lastInteractionEvent) {\n      this.lastInteractionEvent = void 0;\n    }\n  }\n  requestFactoryUpdate(cb) {\n    this._pendingFactoryUpdatesCount++;\n    this.updateMutex.acquire(() => __async(this, null, function* () {\n      yield cb();\n      this._pendingFactoryUpdatesCount--;\n    }));\n  }\n  get performUpdateType() {\n    return this._performUpdateType;\n  }\n  get lastPerformUpdateError() {\n    return this._lastPerformUpdateError;\n  }\n  update(type = 0 /* FULL */, opts) {\n    var _a, _b;\n    const {\n      forceNodeDataRefresh = false,\n      skipAnimations,\n      seriesToUpdate = this.series,\n      newAnimationBatch\n    } = opts != null ? opts : {};\n    if (forceNodeDataRefresh) {\n      this.series.forEach(series => series.markNodeDataDirty());\n    }\n    for (const series of seriesToUpdate) {\n      this.seriesToUpdate.add(series);\n    }\n    if (skipAnimations) {\n      this.animationManager.skipCurrentBatch();\n      this._performUpdateSkipAnimations = true;\n    }\n    if (newAnimationBatch) {\n      if (this.animationManager.isActive()) {\n        this._performUpdateSkipAnimations = true;\n      } else {\n        (_a = this._performUpdateSkipAnimations) != null ? _a : this._performUpdateSkipAnimations = false;\n      }\n    }\n    if (Debug.check(true)) {\n      let stack = (_b = new Error().stack) != null ? _b : \"<unknown>\";\n      stack = stack.replace(/\\([^)]*/g, \"\");\n      this.updateRequestors[stack] = type;\n    }\n    if (type < this._performUpdateType) {\n      this._performUpdateType = type;\n      this.performUpdateTrigger.schedule(opts == null ? void 0 : opts.backOffMs);\n    }\n  }\n  performUpdate(count2) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        _performUpdateType: performUpdateType,\n        extraDebugStats\n      } = this;\n      const seriesToUpdate = [...this.seriesToUpdate];\n      this._performUpdateType = 6 /* NONE */;\n      this.seriesToUpdate.clear();\n      if (this.updateShortcutCount === 0 && performUpdateType < 5 /* SCENE_RENDER */) {\n        this.animationManager.startBatch(this._performUpdateSkipAnimations);\n      }\n      this.debug(\"Chart.performUpdate() - start\", ChartUpdateType[performUpdateType]);\n      const splits = {\n        start: performance.now()\n      };\n      switch (performUpdateType) {\n        case 0 /* FULL */:\n        case 1 /* PROCESS_DATA */:\n          yield this.processData();\n          this.disablePointer(true);\n          splits[\"\\u{1F3ED}\"] = performance.now();\n        case 2 /* PERFORM_LAYOUT */:\n          if (this.checkUpdateShortcut(2 /* PERFORM_LAYOUT */)) break;\n          if (!this.checkFirstAutoSize(seriesToUpdate)) break;\n          yield this.processLayout();\n          splits[\"\\u2316\"] = performance.now();\n        case 3 /* SERIES_UPDATE */:\n          if (this.checkUpdateShortcut(3 /* SERIES_UPDATE */)) break;\n          const {\n            seriesRect\n          } = this;\n          const seriesUpdates = [...seriesToUpdate].map(series => series.update({\n            seriesRect\n          }));\n          yield Promise.all(seriesUpdates);\n          splits[\"\\u{1F914}\"] = performance.now();\n        case 4 /* TOOLTIP_RECALCULATION */:\n          if (this.checkUpdateShortcut(4 /* TOOLTIP_RECALCULATION */)) break;\n          const tooltipMeta = this.tooltipManager.getTooltipMeta(this.id);\n          const isHovered = ((_a = tooltipMeta == null ? void 0 : tooltipMeta.event) == null ? void 0 : _a.type) === \"hover\";\n          if (performUpdateType <= 3 /* SERIES_UPDATE */ && isHovered) {\n            this.handlePointer(tooltipMeta.event);\n          }\n          splits[\"\\u2196\"] = performance.now();\n        case 5 /* SCENE_RENDER */:\n          if (this.checkUpdateShortcut(5 /* SCENE_RENDER */)) break;\n          extraDebugStats[\"updateShortcutCount\"] = this.updateShortcutCount;\n          yield this.scene.render({\n            debugSplitTimes: splits,\n            extraDebugStats\n          });\n          this.extraDebugStats = {};\n        case 6 /* NONE */:\n          this.updateShortcutCount = 0;\n          this.updateRequestors = {};\n          this._performUpdateSkipAnimations = void 0;\n          this.animationManager.endBatch();\n      }\n      this.updateService.dispatchUpdateComplete(this.getMinRect());\n      const end = performance.now();\n      this.debug(\"Chart.performUpdate() - end\", {\n        chart: this,\n        durationMs: Math.round((end - splits[\"start\"]) * 100) / 100,\n        count: count2,\n        performUpdateType: ChartUpdateType[performUpdateType]\n      });\n    });\n  }\n  checkUpdateShortcut(checkUpdateType) {\n    const maxShortcuts = 3;\n    if (this.updateShortcutCount > maxShortcuts) {\n      Logger.warn(`exceeded the maximum number of simultaneous updates (${maxShortcuts + 1}), discarding changes and rendering`, this.updateRequestors);\n      return false;\n    }\n    if (this.performUpdateType <= checkUpdateType) {\n      this.updateShortcutCount++;\n      return true;\n    }\n    return false;\n  }\n  checkFirstAutoSize(seriesToUpdate) {\n    if (this.autoSize && !this._lastAutoSize) {\n      const count2 = this._performUpdateNoRenderCount++;\n      const backOffMs = (count2 ^ 2) * 10;\n      if (count2 < 8) {\n        this.update(2 /* PERFORM_LAYOUT */, {\n          seriesToUpdate,\n          backOffMs\n        });\n        this.debug(\"Chart.checkFirstAutoSize() - backing off until first size update\", backOffMs);\n        return false;\n      }\n      this.debug(\"Chart.checkFirstAutoSize() - timeout for first size update.\");\n    }\n    this._performUpdateNoRenderCount = 0;\n    return true;\n  }\n  set axes(values) {\n    const removedAxes = /* @__PURE__ */new Set();\n    this._axes.forEach(axis => {\n      axis.detachAxis(this.axisGroup, this.axisGridGroup);\n      removedAxes.add(axis);\n    });\n    this._axes = values.filter(a => !a.linkedTo).concat(values.filter(a => a.linkedTo));\n    this._axes.forEach(axis => {\n      axis.attachAxis(this.axisGroup, this.axisGridGroup);\n      removedAxes.delete(axis);\n    });\n    this.zoomManager.updateAxes(this._axes);\n    removedAxes.forEach(axis => axis.destroy());\n  }\n  get axes() {\n    return this._axes;\n  }\n  set series(values) {\n    this.removeAllSeries();\n    this.seriesLayerManager.setSeriesCount(values.length);\n    values.forEach(series => this.addSeries(series));\n  }\n  get series() {\n    return this._series;\n  }\n  addSeries(series) {\n    const {\n      series: allSeries\n    } = this;\n    const canAdd = allSeries.indexOf(series) < 0;\n    if (canAdd) {\n      allSeries.push(series);\n      if (series.rootGroup.parent == null) {\n        this.seriesLayerManager.requestGroup(series);\n      }\n      this.initSeries(series);\n      return true;\n    }\n    return false;\n  }\n  initSeries(series) {\n    const chart = this;\n    series.chart = {\n      get mode() {\n        return chart.mode;\n      },\n      get seriesRect() {\n        return chart.seriesRect;\n      },\n      placeLabels() {\n        return chart.placeLabels();\n      }\n    };\n    series.setChartData(this.data);\n    this.addSeriesListeners(series);\n    series.addChartEventListeners();\n  }\n  removeAllSeries() {\n    this.series.forEach(series => {\n      series.removeEventListener(\"nodeClick\", this.onSeriesNodeClick);\n      series.removeEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n      series.destroy();\n      series.chart = void 0;\n    });\n    this._series = [];\n  }\n  addSeriesListeners(series) {\n    if (this.hasEventListener(\"seriesNodeClick\")) {\n      series.addEventListener(\"nodeClick\", this.onSeriesNodeClick);\n    }\n    if (this.hasEventListener(\"seriesNodeDoubleClick\")) {\n      series.addEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n    }\n  }\n  updateAllSeriesListeners() {\n    this.series.forEach(series => {\n      series.removeEventListener(\"nodeClick\", this.onSeriesNodeClick);\n      series.removeEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n      this.addSeriesListeners(series);\n    });\n  }\n  assignSeriesToAxes() {\n    this.axes.forEach(axis => {\n      axis.boundSeries = this.series.filter(s => {\n        const seriesAxis = s.axes[axis.direction];\n        return seriesAxis === axis;\n      });\n    });\n  }\n  assignAxesToSeries() {\n    const directionToAxesMap = {};\n    this.axes.forEach(axis => {\n      var _a;\n      const direction = axis.direction;\n      const directionAxes = (_a = directionToAxesMap[direction]) != null ? _a : directionToAxesMap[direction] = [];\n      directionAxes.push(axis);\n    });\n    this.series.forEach(series => {\n      series.directions.forEach(direction => {\n        const directionAxes = directionToAxesMap[direction];\n        if (!directionAxes) {\n          Logger.warnOnce(`no available axis for direction [${direction}]; check series and axes configuration.`);\n          return;\n        }\n        const seriesKeys = series.getKeys(direction);\n        const newAxis = this.findMatchingAxis(directionAxes, seriesKeys);\n        if (!newAxis) {\n          Logger.warnOnce(`no matching axis for direction [${direction}] and keys [${seriesKeys}]; check series and axes configuration.`);\n          return;\n        }\n        series.axes[direction] = newAxis;\n      });\n    });\n  }\n  findMatchingAxis(directionAxes, directionKeys) {\n    for (const axis of directionAxes) {\n      const axisKeys = axis.keys;\n      if (!axisKeys.length) {\n        return axis;\n      }\n      if (!directionKeys) {\n        continue;\n      }\n      for (const directionKey of directionKeys) {\n        if (axisKeys.indexOf(directionKey) >= 0) {\n          return axis;\n        }\n      }\n    }\n  }\n  rawResize(size) {\n    var _a;\n    let {\n      width,\n      height\n    } = size;\n    width = Math.floor(width);\n    height = Math.floor(height);\n    if (!this.autoSize) {\n      return;\n    }\n    if (width === 0 && height === 0) {\n      return;\n    }\n    const [autoWidth = 0, authHeight = 0] = (_a = this._lastAutoSize) != null ? _a : [];\n    if (autoWidth === width && authHeight === height) {\n      return;\n    }\n    this._lastAutoSize = [width, height];\n    this.resize(void 0, void 0, \"SizeMonitor\");\n  }\n  resize(width, height, source) {\n    var _a, _b, _c, _d;\n    width != null ? width : width = (_b = this.width) != null ? _b : this.autoSize ? (_a = this._lastAutoSize) == null ? void 0 : _a[0] : this.scene.canvas.width;\n    height != null ? height : height = (_d = this.height) != null ? _d : this.autoSize ? (_c = this._lastAutoSize) == null ? void 0 : _c[1] : this.scene.canvas.height;\n    this.debug(`Chart.resize() from ${source}`, {\n      width,\n      height,\n      stack: new Error().stack\n    });\n    if (!width || !height || !Number.isFinite(width) || !Number.isFinite(height)) return;\n    if (this.scene.resize(width, height)) {\n      this.disablePointer();\n      this.animationManager.reset();\n      let skipAnimations = true;\n      if (this.autoSize && this._firstAutoSize) {\n        skipAnimations = false;\n        this._firstAutoSize = false;\n      }\n      this.update(2 /* PERFORM_LAYOUT */, {\n        forceNodeDataRefresh: true,\n        skipAnimations\n      });\n    }\n  }\n  processData() {\n    return __async(this, null, function* () {\n      if (this.series.some(s => s.canHaveAxes)) {\n        this.assignAxesToSeries();\n        this.assignSeriesToAxes();\n      }\n      const dataController = new DataController(this.mode);\n      const seriesPromises = this.series.map(s => s.processData(dataController));\n      yield dataController.execute();\n      yield Promise.all(seriesPromises);\n      yield this.updateLegend();\n    });\n  }\n  placeLabels() {\n    const visibleSeries = [];\n    const data = [];\n    for (const series of this.series) {\n      if (!series.visible) {\n        continue;\n      }\n      const labelData = series.getLabelData();\n      if (!(labelData && isPointLabelDatum(labelData[0]))) {\n        continue;\n      }\n      data.push(labelData);\n      visibleSeries.push(series);\n    }\n    const {\n      seriesRect\n    } = this;\n    const {\n      top,\n      right,\n      bottom,\n      left\n    } = this.seriesArea.padding;\n    const labels = seriesRect && data.length > 0 ? placeLabels(data, {\n      x: -left,\n      y: -top,\n      width: seriesRect.width + left + right,\n      height: seriesRect.height + top + bottom\n    }) : [];\n    return new Map(labels.map((l, i) => [visibleSeries[i], l]));\n  }\n  updateLegend() {\n    return __async(this, null, function* () {\n      this.legends.forEach((legend, legendType) => {\n        const isCategoryLegendData = data => data.every(d => d.legendType === \"category\");\n        const legendData = this.series.filter(s => s.properties.showInLegend).flatMap(s => s.getLegendData(legendType));\n        if (isCategoryLegendData(legendData)) {\n          this.validateCategoryLegendData(legendData);\n        }\n        legend.data = legendData;\n      });\n    });\n  }\n  validateCategoryLegendData(legendData) {\n    const labelMarkerFills = {};\n    legendData.forEach(d => {\n      var _a, _b, _c, _d, _e;\n      const seriesType = (_a = this.series.find(s => s.id === d.seriesId)) == null ? void 0 : _a.type;\n      if (!seriesType) return;\n      (_b = labelMarkerFills[seriesType]) != null ? _b : labelMarkerFills[seriesType] = {};\n      (_e = (_c = labelMarkerFills[seriesType])[_d = d.label.text]) != null ? _e : _c[_d] = /* @__PURE__ */new Set();\n      if (d.marker.fill != null) {\n        labelMarkerFills[seriesType][d.label.text].add(d.marker.fill);\n      }\n    });\n    for (const seriesMarkers of Object.values(labelMarkerFills)) {\n      for (const [name, fills] of Object.entries(seriesMarkers)) {\n        if (fills.size > 1) {\n          Logger.warnOnce(`legend item '${name}' has multiple fill colors, this may cause unexpected behaviour.`);\n        }\n      }\n    }\n  }\n  processLayout() {\n    return __async(this, null, function* () {\n      var _a;\n      const oldRect = this.animationRect;\n      yield this.performLayout();\n      if (oldRect && !((_a = this.animationRect) == null ? void 0 : _a.equals(oldRect))) {\n        this.animationManager.skipCurrentBatch();\n      }\n      this.handleOverlays();\n      this.debug(\"Chart.performUpdate() - seriesRect\", this.seriesRect);\n    });\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      if (this.scene.root) {\n        this.scene.root.visible = true;\n      }\n      const {\n        width,\n        height\n      } = this.scene;\n      let ctx = {\n        shrinkRect: new BBox(0, 0, width, height)\n      };\n      ctx = this.layoutService.dispatchPerformLayout(\"start-layout\", ctx);\n      ctx = this.layoutService.dispatchPerformLayout(\"before-series\", ctx);\n      return ctx.shrinkRect;\n    });\n  }\n  // x/y are local canvas coordinates in CSS pixels, not actual pixels\n  pickSeriesNode(point, exactMatchOnly, maxDistance) {\n    var _a, _b;\n    const start = performance.now();\n    const pickModes = exactMatchOnly ? [0 /* EXACT_SHAPE_MATCH */] : void 0;\n    const reverseSeries = [...this.series].reverse();\n    let result;\n    for (const series of reverseSeries) {\n      if (!series.visible || !series.rootGroup.visible) {\n        continue;\n      }\n      const {\n        match,\n        distance\n      } = (_a = series.pickNode(point, pickModes)) != null ? _a : {};\n      if (!match || distance == null) {\n        continue;\n      }\n      if ((!result || result.distance > distance) && distance <= (maxDistance != null ? maxDistance : Infinity)) {\n        result = {\n          series,\n          distance,\n          datum: match\n        };\n      }\n      if (distance === 0) {\n        break;\n      }\n    }\n    this.extraDebugStats[\"pickSeriesNode\"] = Math.round(((_b = this.extraDebugStats[\"pickSeriesNode\"]) != null ? _b : 0) + (performance.now() - start));\n    return result;\n  }\n  onMouseMove(event) {\n    this.lastInteractionEvent = event;\n    this.pointerScheduler.schedule();\n    this.extraDebugStats[\"mouseX\"] = event.offsetX;\n    this.extraDebugStats[\"mouseY\"] = event.offsetY;\n    this.update(5 /* SCENE_RENDER */);\n  }\n  onLeave(event) {\n    if (this.tooltip.pointerLeftOntoTooltip(event)) {\n      return;\n    }\n    this.disablePointer();\n    this.update(5 /* SCENE_RENDER */);\n  }\n  handlePointer(event) {\n    const {\n      lastPick,\n      hoverRect\n    } = this;\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    const disablePointer = (highlightOnly = false) => {\n      if (lastPick) {\n        this.disablePointer(highlightOnly);\n      }\n    };\n    if (!(hoverRect == null ? void 0 : hoverRect.containsPoint(offsetX, offsetY))) {\n      disablePointer();\n      return;\n    }\n    this.handlePointerTooltip(event, disablePointer);\n    this.handlePointerNode(event);\n  }\n  handlePointerTooltip(event, disablePointer) {\n    const {\n      lastPick,\n      tooltip\n    } = this;\n    const {\n      range: range3\n    } = tooltip;\n    const {\n      offsetX,\n      offsetY\n    } = event;\n    let pixelRange;\n    if (typeof range3 === \"number\" && Number.isFinite(range3)) {\n      pixelRange = range3;\n    }\n    const pick = this.pickSeriesNode({\n      x: offsetX,\n      y: offsetY\n    }, range3 === \"exact\", pixelRange);\n    if (!pick) {\n      this.tooltipManager.removeTooltip(this.id);\n      if (this.highlight.range === \"tooltip\") disablePointer(true);\n      return;\n    }\n    const isNewDatum = this.highlight.range === \"node\" || !lastPick || lastPick.datum !== pick.datum;\n    let html;\n    if (isNewDatum) {\n      html = pick.series.getTooltipHtml(pick.datum);\n      if (this.highlight.range === \"tooltip\") {\n        this.highlightManager.updateHighlight(this.id, pick.datum);\n      }\n    } else if (lastPick) {\n      lastPick.event = event.sourceEvent;\n    }\n    const isPixelRange = pixelRange != null;\n    const tooltipEnabled = this.tooltip.enabled && pick.series.properties.tooltip.enabled;\n    const exactlyMatched = range3 === \"exact\" && pick.distance === 0;\n    const rangeMatched = range3 === \"nearest\" || isPixelRange || exactlyMatched;\n    const shouldUpdateTooltip = tooltipEnabled && rangeMatched && (!isNewDatum || html !== void 0);\n    const meta = TooltipManager.makeTooltipMeta(event, this.scene.canvas, pick.datum, this.specialOverrides.window);\n    if (shouldUpdateTooltip) {\n      this.tooltipManager.updateTooltip(this.id, meta, html);\n    }\n  }\n  handlePointerNode(event) {\n    const found = this.checkSeriesNodeRange(event, (series, datum) => {\n      if (series.hasEventListener(\"nodeClick\") || series.hasEventListener(\"nodeDoubleClick\")) {\n        this.cursorManager.updateCursor(\"chart\", \"pointer\");\n      }\n      if (this.highlight.range === \"node\") {\n        this.highlightManager.updateHighlight(this.id, datum);\n      }\n    });\n    if (!found) {\n      this.cursorManager.updateCursor(\"chart\");\n      if (this.highlight.range === \"node\") {\n        this.highlightManager.updateHighlight(this.id);\n      }\n    }\n  }\n  onClick(event) {\n    if (this.checkSeriesNodeClick(event)) {\n      this.update(3 /* SERIES_UPDATE */);\n      return;\n    }\n    this.fireEvent({\n      type: \"click\",\n      event: event.sourceEvent\n    });\n  }\n  onDoubleClick(event) {\n    if (this.checkSeriesNodeDoubleClick(event)) {\n      this.update(3 /* SERIES_UPDATE */);\n      return;\n    }\n    this.fireEvent({\n      type: \"doubleClick\",\n      event: event.sourceEvent\n    });\n  }\n  checkSeriesNodeClick(event) {\n    return this.checkSeriesNodeRange(event, (series, datum) => series.fireNodeClickEvent(event.sourceEvent, datum));\n  }\n  checkSeriesNodeDoubleClick(event) {\n    return this.checkSeriesNodeRange(event, (series, datum) => series.fireNodeDoubleClickEvent(event.sourceEvent, datum));\n  }\n  checkSeriesNodeRange(event, callback) {\n    const nearestNode = this.pickSeriesNode({\n      x: event.offsetX,\n      y: event.offsetY\n    }, false);\n    const datum = nearestNode == null ? void 0 : nearestNode.datum;\n    const nodeClickRange = datum == null ? void 0 : datum.series.properties.nodeClickRange;\n    let pixelRange;\n    if (typeof nodeClickRange === \"number\" && Number.isFinite(nodeClickRange)) {\n      pixelRange = nodeClickRange;\n    }\n    let pickedNode = this.pickSeriesNode({\n      x: event.offsetX,\n      y: event.offsetY\n    }, true);\n    if (pickedNode) {\n      this.highlightManager.updatePicked(this.id, pickedNode.datum);\n    } else {\n      this.highlightManager.updatePicked(this.id);\n    }\n    if (datum && nodeClickRange === \"nearest\") {\n      callback(datum.series, datum);\n      return true;\n    }\n    if (nodeClickRange !== \"exact\") {\n      pickedNode = this.pickSeriesNode({\n        x: event.offsetX,\n        y: event.offsetY\n      }, false, pixelRange);\n    }\n    if (!pickedNode) return false;\n    const isPixelRange = pixelRange != null;\n    const exactlyMatched = nodeClickRange === \"exact\" && pickedNode.distance === 0;\n    if (isPixelRange || exactlyMatched) {\n      callback(pickedNode.series, pickedNode.datum);\n      return true;\n    }\n    return false;\n  }\n  changeHighlightDatum(event) {\n    var _a, _b;\n    const seriesToUpdate = /* @__PURE__ */new Set();\n    const {\n      series: newSeries = void 0,\n      datum: newDatum\n    } = (_a = event.currentHighlight) != null ? _a : {};\n    const {\n      series: lastSeries = void 0,\n      datum: lastDatum\n    } = (_b = event.previousHighlight) != null ? _b : {};\n    if (lastSeries) {\n      seriesToUpdate.add(lastSeries);\n    }\n    if (newSeries) {\n      seriesToUpdate.add(newSeries);\n    }\n    if ((lastSeries == null ? void 0 : lastSeries.properties.cursor) && lastDatum) {\n      this.cursorManager.updateCursor(lastSeries.id);\n    }\n    if ((newSeries == null ? void 0 : newSeries.properties.cursor) && newDatum) {\n      this.cursorManager.updateCursor(newSeries.id, newSeries.properties.cursor);\n    }\n    this.lastPick = event.currentHighlight ? {\n      datum: event.currentHighlight\n    } : void 0;\n    const updateAll = newSeries == null || lastSeries == null;\n    if (updateAll) {\n      this.update(3 /* SERIES_UPDATE */);\n    } else {\n      this.update(3 /* SERIES_UPDATE */, {\n        seriesToUpdate\n      });\n    }\n  }\n  waitForUpdate(timeoutMs = 5e3) {\n    return __async(this, null, function* () {\n      const start = performance.now();\n      if (this._pendingFactoryUpdatesCount > 0) {\n        yield this.updateMutex.waitForClearAcquireQueue();\n      }\n      while (this._performUpdateType !== 6 /* NONE */) {\n        if (performance.now() - start > timeoutMs) {\n          throw new Error(\"waitForUpdate() timeout reached.\");\n        }\n        yield sleep(5);\n      }\n      yield this.updateMutex.waitForClearAcquireQueue();\n    });\n  }\n  handleOverlays() {\n    const hasNoData = !this.series.some(s => s.hasData());\n    this.toggleOverlay(this.overlays.noData, hasNoData);\n    if (!hasNoData) {\n      const hasNoVisibleSeries = !this.series.some(series => series.visible);\n      this.toggleOverlay(this.overlays.noVisibleSeries, hasNoVisibleSeries);\n    }\n  }\n  toggleOverlay(overlay, visible) {\n    if (visible && this.seriesRect) {\n      overlay.show(this.seriesRect);\n    } else {\n      overlay.hide();\n    }\n  }\n  getMinRect() {\n    const minRects = this.series.map(series => series.getMinRect()).filter(rect => rect !== void 0);\n    if (!minRects.length) return void 0;\n    return new BBox(0, 0, minRects.reduce((max, rect) => Math.max(max, rect.width), 0), minRects.reduce((max, rect) => Math.max(max, rect.height), 0));\n  }\n};\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    if (this.destroyed) return;\n    value.setAttribute(\"data-ag-charts\", \"\");\n    value.appendChild(this.element);\n    chartsInstances.set(value, this);\n  },\n  oldValue(value) {\n    value.removeAttribute(\"data-ag-charts\");\n    value.removeChild(this.element);\n    chartsInstances.delete(value);\n  }\n})], Chart.prototype, \"container\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    var _a;\n    (_a = this.series) == null ? void 0 : _a.forEach(series => {\n      series.setChartData(value);\n    });\n  }\n})], Chart.prototype, \"data\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    this.resize(value, void 0, \"width option\");\n  }\n})], Chart.prototype, \"width\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    this.resize(void 0, value, \"height option\");\n  }\n})], Chart.prototype, \"height\", 2);\n__decorateClass([ActionOnSet({\n  changeValue(value) {\n    this.autoSizeChanged(value);\n  }\n}), Validate(BOOLEAN)], Chart.prototype, \"autoSize\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n  },\n  oldValue(oldValue) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n  }\n})], Chart.prototype, \"title\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n  },\n  oldValue(oldValue) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n  }\n})], Chart.prototype, \"subtitle\", 2);\n__decorateClass([ActionOnSet({\n  newValue(value) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n  },\n  oldValue(oldValue) {\n    var _a;\n    (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n  }\n})], Chart.prototype, \"footnote\", 2);\n__decorateClass([Validate(UNION([\"standalone\", \"integrated\"], \"a chart mode\"))], Chart.prototype, \"mode\", 2);\n\n// packages/ag-charts-community/src/chart/series/dataModelSeries.ts\nvar DataModelSeries = class extends Series {\n  isContinuous() {\n    var _a, _b;\n    const isContinuousX = ContinuousScale.is((_a = this.axes[\"x\" /* X */]) == null ? void 0 : _a.scale);\n    const isContinuousY = ContinuousScale.is((_b = this.axes[\"y\" /* Y */]) == null ? void 0 : _b.scale);\n    return {\n      isContinuousX,\n      isContinuousY\n    };\n  }\n  getModulePropertyDefinitions() {\n    return this.moduleMap.mapValues(mod2 => mod2.getPropertyDefinitions(this.isContinuous())).flat();\n  }\n  // Request data, but with message dispatching to series-options (modules).\n  requestDataModel(dataController, data, opts) {\n    return __async(this, null, function* () {\n      opts.props.push(...this.getModulePropertyDefinitions());\n      const {\n        dataModel,\n        processedData\n      } = yield dataController.request(this.id, data != null ? data : [], opts);\n      this.dataModel = dataModel;\n      this.processedData = processedData;\n      this.dispatch(\"data-processed\", {\n        dataModel,\n        processedData\n      });\n      return {\n        dataModel,\n        processedData\n      };\n    });\n  }\n  isProcessedDataAnimatable() {\n    var _a, _b;\n    const validationResults = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.animationValidation;\n    if (!validationResults) {\n      return true;\n    }\n    const {\n      orderedKeys,\n      uniqueKeys\n    } = validationResults;\n    return orderedKeys && uniqueKeys;\n  }\n  checkProcessedDataAnimatable() {\n    if (!this.isProcessedDataAnimatable()) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/seriesProperties.ts\nvar SeriesItemHighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"rgba(255,255,255, 0.33)\";\n    this.stroke = `rgba(0, 0, 0, 0.4)`;\n    this.strokeWidth = 2;\n  }\n};\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], SeriesItemHighlightStyle.prototype, \"lineDashOffset\", 2);\nvar SeriesHighlightStyle = class extends BaseProperties {};\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], SeriesHighlightStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO, {\n  optional: true\n})], SeriesHighlightStyle.prototype, \"dimOpacity\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], SeriesHighlightStyle.prototype, \"enabled\", 2);\nvar TextHighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.color = \"black\";\n  }\n};\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], TextHighlightStyle.prototype, \"color\", 2);\nvar HighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.item = new SeriesItemHighlightStyle();\n    this.series = new SeriesHighlightStyle();\n    this.text = new TextHighlightStyle();\n  }\n};\n__decorateClass([Validate(OBJECT)], HighlightStyle.prototype, \"item\", 2);\n__decorateClass([Validate(OBJECT)], HighlightStyle.prototype, \"series\", 2);\n__decorateClass([Validate(OBJECT)], HighlightStyle.prototype, \"text\", 2);\nvar SeriesProperties = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.visible = true;\n    this.showInLegend = true;\n    this.cursor = \"default\";\n    this.nodeClickRange = \"exact\";\n    this.highlightStyle = new HighlightStyle();\n  }\n};\n__decorateClass([Validate(STRING, {\n  optional: true\n})], SeriesProperties.prototype, \"id\", 2);\n__decorateClass([Validate(BOOLEAN)], SeriesProperties.prototype, \"visible\", 2);\n__decorateClass([Validate(BOOLEAN)], SeriesProperties.prototype, \"showInLegend\", 2);\n__decorateClass([Validate(STRING)], SeriesProperties.prototype, \"cursor\", 2);\n__decorateClass([Validate(INTERACTION_RANGE)], SeriesProperties.prototype, \"nodeClickRange\", 2);\n__decorateClass([Validate(OBJECT)], SeriesProperties.prototype, \"highlightStyle\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/cartesianSeries.ts\nvar DEFAULT_DIRECTION_KEYS = {\n  [\"x\" /* X */]: [\"xKey\"],\n  [\"y\" /* Y */]: [\"yKey\"]\n};\nvar DEFAULT_DIRECTION_NAMES = {\n  [\"x\" /* X */]: [\"xName\"],\n  [\"y\" /* Y */]: [\"yName\"]\n};\nvar CartesianSeriesNodeClickEvent = class extends SeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.xKey = series.properties.xKey;\n    this.yKey = series.properties.yKey;\n  }\n};\nvar CartesianSeriesProperties = class extends SeriesProperties {};\n__decorateClass([Validate(STRING, {\n  optional: true\n})], CartesianSeriesProperties.prototype, \"legendItemName\", 2);\nvar CartesianSeries = class extends DataModelSeries {\n  constructor(_a) {\n    var _b = _a,\n      {\n        pathsPerSeries = 1,\n        hasMarkers = false,\n        hasHighlightedLabels = false,\n        pathsZIndexSubOrderOffset = [],\n        directionKeys = DEFAULT_DIRECTION_KEYS,\n        directionNames = DEFAULT_DIRECTION_NAMES,\n        datumSelectionGarbageCollection = true,\n        markerSelectionGarbageCollection = true,\n        animationResetFns\n      } = _b,\n      otherOpts = __objRest(_b, [\"pathsPerSeries\", \"hasMarkers\", \"hasHighlightedLabels\", \"pathsZIndexSubOrderOffset\", \"directionKeys\", \"directionNames\", \"datumSelectionGarbageCollection\", \"markerSelectionGarbageCollection\", \"animationResetFns\"]);\n    super(__spreadValues({\n      directionKeys,\n      directionNames,\n      useSeriesGroupLayer: true,\n      canHaveAxes: true\n    }, otherOpts));\n    this._contextNodeData = [];\n    this.NodeClickEvent = CartesianSeriesNodeClickEvent;\n    this.highlightSelection = Selection.select(this.highlightNode, () => this.opts.hasMarkers ? this.markerFactory() : this.nodeFactory());\n    this.highlightLabelSelection = Selection.select(this.highlightLabel, Text);\n    this.annotationSelections = /* @__PURE__ */new Set();\n    this.subGroups = [];\n    this.subGroupId = 0;\n    this.debug = Debug.create();\n    this.opts = {\n      pathsPerSeries,\n      hasMarkers,\n      hasHighlightedLabels,\n      pathsZIndexSubOrderOffset,\n      directionKeys,\n      directionNames,\n      animationResetFns,\n      datumSelectionGarbageCollection,\n      markerSelectionGarbageCollection\n    };\n    this.animationState = new StateMachine(\"empty\", {\n      empty: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateEmptyUpdateReady(data)\n        }\n      },\n      ready: {\n        updateData: \"waiting\",\n        clear: \"clearing\",\n        highlight: data => this.animateReadyHighlight(data),\n        highlightMarkers: data => this.animateReadyHighlightMarkers(data),\n        resize: data => this.animateReadyResize(data)\n      },\n      waiting: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateWaitingUpdateReady(data)\n        }\n      },\n      clearing: {\n        update: {\n          target: \"empty\",\n          action: data => this.animateClearingUpdateEmpty(data)\n        }\n      }\n    }, () => this.checkProcessedDataAnimatable());\n  }\n  get contextNodeData() {\n    return this._contextNodeData.slice();\n  }\n  addChartEventListeners() {\n    this.destroyFns.push(this.ctx.chartEventManager.addListener(\"legend-item-click\", event => this.onLegendItemClick(event)), this.ctx.chartEventManager.addListener(\"legend-item-double-click\", event => this.onLegendItemDoubleClick(event)));\n  }\n  destroy() {\n    super.destroy();\n    this._contextNodeData.splice(0, this._contextNodeData.length);\n    this.subGroups.splice(0, this.subGroups.length);\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({\n      seriesRect\n    }) {\n      var _a, _b;\n      const {\n        visible,\n        _contextNodeData: previousContextData\n      } = this;\n      const {\n        series\n      } = (_b = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight()) != null ? _b : {};\n      const seriesHighlighted = series ? series === this : void 0;\n      const resize = this.checkResize(seriesRect);\n      const highlightItems = yield this.updateHighlightSelection(seriesHighlighted);\n      yield this.updateSelections(visible);\n      yield this.updateNodes(highlightItems, seriesHighlighted, visible);\n      const animationData = this.getAnimationData(seriesRect, previousContextData);\n      if (resize) {\n        this.animationState.transition(\"resize\", animationData);\n      }\n      this.animationState.transition(\"update\", animationData);\n    });\n  }\n  updateSelections(anySeriesItemEnabled) {\n    return __async(this, null, function* () {\n      if (!anySeriesItemEnabled && this.ctx.animationManager.isSkipped()) {\n        return;\n      }\n      if (!this.nodeDataRefresh && !this.isPathOrSelectionDirty()) {\n        return;\n      }\n      if (this.nodeDataRefresh) {\n        this.nodeDataRefresh = false;\n        this.debug(`CartesianSeries.updateSelections() - calling createNodeData() for`, this.id);\n        this._contextNodeData = yield this.createNodeData();\n        const animationValid = this.isProcessedDataAnimatable();\n        this._contextNodeData.forEach(nodeData => {\n          var _a;\n          (_a = nodeData.animationValid) != null ? _a : nodeData.animationValid = animationValid;\n        });\n        yield this.updateSeriesGroups();\n        const {\n          dataModel,\n          processedData\n        } = this;\n        if (dataModel !== void 0 && processedData !== void 0) {\n          this.dispatch(\"data-update\", {\n            dataModel,\n            processedData\n          });\n        }\n      }\n      yield Promise.all(this.subGroups.map((g, i) => this.updateSeriesGroupSelections(g, i)));\n    });\n  }\n  updateSeriesGroupSelections(subGroup, seriesIdx, seriesHighlighted) {\n    return __async(this, null, function* () {\n      const {\n        datumSelection,\n        labelSelection,\n        markerSelection,\n        paths\n      } = subGroup;\n      const contextData = this._contextNodeData[seriesIdx];\n      const {\n        nodeData,\n        labelData,\n        itemId\n      } = contextData;\n      yield this.updatePaths({\n        seriesHighlighted,\n        itemId,\n        contextData,\n        paths,\n        seriesIdx\n      });\n      subGroup.datumSelection = yield this.updateDatumSelection({\n        nodeData,\n        datumSelection,\n        seriesIdx\n      });\n      subGroup.labelSelection = yield this.updateLabelSelection({\n        labelData,\n        labelSelection,\n        seriesIdx\n      });\n      if (markerSelection) {\n        subGroup.markerSelection = yield this.updateMarkerSelection({\n          nodeData,\n          markerSelection,\n          seriesIdx\n        });\n      }\n    });\n  }\n  markerFactory() {\n    const MarkerShape = getMarker();\n    return new MarkerShape();\n  }\n  updateSeriesGroups() {\n    return __async(this, null, function* () {\n      const {\n        _contextNodeData: contextNodeData,\n        contentGroup,\n        subGroups,\n        opts: {\n          pathsPerSeries,\n          hasMarkers,\n          datumSelectionGarbageCollection,\n          markerSelectionGarbageCollection\n        }\n      } = this;\n      if (contextNodeData.length === subGroups.length) {\n        return;\n      }\n      if (contextNodeData.length < subGroups.length) {\n        subGroups.splice(contextNodeData.length).forEach(({\n          dataNodeGroup,\n          markerGroup,\n          labelGroup,\n          paths\n        }) => {\n          contentGroup.removeChild(dataNodeGroup);\n          if (markerGroup) {\n            contentGroup.removeChild(markerGroup);\n          }\n          if (labelGroup) {\n            contentGroup.removeChild(labelGroup);\n          }\n          for (const path of paths) {\n            contentGroup.removeChild(path);\n          }\n        });\n      }\n      const totalGroups = contextNodeData.length;\n      while (totalGroups > subGroups.length) {\n        const layer = false;\n        const subGroupId = this.subGroupId++;\n        const dataNodeGroup = new Group({\n          name: `${this.id}-series-sub${subGroupId}-dataNodes`,\n          layer,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"data\", subGroupId)\n        });\n        const markerGroup = hasMarkers ? new Group({\n          name: `${this.id}-series-sub${this.subGroupId++}-markers`,\n          layer,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"marker\", subGroupId)\n        }) : void 0;\n        const labelGroup = new Group({\n          name: `${this.id}-series-sub${this.subGroupId++}-labels`,\n          layer,\n          zIndex: 7 /* SERIES_LABEL_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"labels\", subGroupId)\n        });\n        contentGroup.appendChild(dataNodeGroup);\n        contentGroup.appendChild(labelGroup);\n        if (markerGroup) {\n          contentGroup.appendChild(markerGroup);\n        }\n        const paths = [];\n        for (let index = 0; index < pathsPerSeries; index++) {\n          paths[index] = new Path();\n          paths[index].zIndex = 4 /* SERIES_LAYER_ZINDEX */;\n          paths[index].zIndexSubOrder = this.getGroupZIndexSubOrder(\"paths\", index);\n          contentGroup.appendChild(paths[index]);\n        }\n        subGroups.push({\n          paths,\n          dataNodeGroup,\n          markerGroup,\n          labelGroup,\n          labelSelection: Selection.select(labelGroup, Text),\n          datumSelection: Selection.select(dataNodeGroup, () => this.nodeFactory(), datumSelectionGarbageCollection),\n          markerSelection: markerGroup ? Selection.select(markerGroup, () => this.markerFactory(), markerSelectionGarbageCollection) : void 0\n        });\n      }\n    });\n  }\n  getGroupZIndexSubOrder(type, subIndex = 0) {\n    var _a;\n    const result = super.getGroupZIndexSubOrder(type, subIndex);\n    if (type === \"paths\") {\n      const pathOffset = (_a = this.opts.pathsZIndexSubOrderOffset[subIndex]) != null ? _a : 0;\n      const superFn = result[0];\n      if (typeof superFn === \"function\") {\n        result[0] = () => +superFn() + pathOffset;\n      } else {\n        result[0] = +superFn + pathOffset;\n      }\n    }\n    return result;\n  }\n  updateNodes(highlightedItems, seriesHighlighted, anySeriesItemEnabled) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        highlightSelection,\n        highlightLabelSelection,\n        opts: {\n          hasMarkers,\n          hasHighlightedLabels\n        }\n      } = this;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const visible = this.visible && ((_a = this._contextNodeData) == null ? void 0 : _a.length) > 0 && anySeriesItemEnabled;\n      this.rootGroup.visible = animationEnabled || visible;\n      this.contentGroup.visible = animationEnabled || visible;\n      this.highlightGroup.visible = (animationEnabled || visible) && !!seriesHighlighted;\n      const subGroupOpacity = this.getOpacity();\n      if (hasMarkers) {\n        yield this.updateMarkerNodes({\n          markerSelection: highlightSelection,\n          isHighlight: true,\n          seriesIdx: -1\n        });\n        this.animationState.transition(\"highlightMarkers\", highlightSelection);\n      } else {\n        yield this.updateDatumNodes({\n          datumSelection: highlightSelection,\n          isHighlight: true,\n          seriesIdx: -1\n        });\n        this.animationState.transition(\"highlight\", highlightSelection);\n      }\n      if (hasHighlightedLabels) {\n        yield this.updateLabelNodes({\n          labelSelection: highlightLabelSelection,\n          seriesIdx: -1\n        });\n      }\n      yield Promise.all(this.subGroups.map((subGroup, seriesIdx) => __async(this, null, function* () {\n        const {\n          dataNodeGroup,\n          markerGroup,\n          datumSelection,\n          labelSelection,\n          markerSelection,\n          paths,\n          labelGroup\n        } = subGroup;\n        const {\n          itemId\n        } = this.contextNodeData[seriesIdx];\n        const subGroupVisible = visible;\n        dataNodeGroup.opacity = subGroupOpacity;\n        dataNodeGroup.visible = animationEnabled || subGroupVisible;\n        labelGroup.visible = subGroupVisible;\n        if (markerGroup) {\n          markerGroup.opacity = subGroupOpacity;\n          markerGroup.zIndex = dataNodeGroup.zIndex >= 4 /* SERIES_LAYER_ZINDEX */ ? dataNodeGroup.zIndex : dataNodeGroup.zIndex + 1;\n          markerGroup.visible = subGroupVisible;\n        }\n        if (labelGroup) {\n          labelGroup.opacity = subGroupOpacity;\n        }\n        yield this.updatePathNodes({\n          seriesHighlighted,\n          itemId,\n          paths,\n          seriesIdx,\n          opacity: subGroupOpacity,\n          visible: subGroupVisible,\n          animationEnabled\n        });\n        if (!dataNodeGroup.visible) {\n          return;\n        }\n        yield this.updateDatumNodes({\n          datumSelection,\n          highlightedItems,\n          isHighlight: false,\n          seriesIdx\n        });\n        yield this.updateLabelNodes({\n          labelSelection,\n          seriesIdx\n        });\n        if (hasMarkers && markerSelection) {\n          yield this.updateMarkerNodes({\n            markerSelection,\n            isHighlight: false,\n            seriesIdx\n          });\n        }\n      })));\n    });\n  }\n  getHighlightLabelData(labelData, highlightedItem) {\n    const labelItems = labelData.filter(ld => ld.datum === highlightedItem.datum && ld.itemId === highlightedItem.itemId);\n    return labelItems.length !== 0 ? labelItems : void 0;\n  }\n  getHighlightData(_nodeData, highlightedItem) {\n    return highlightedItem ? [highlightedItem] : void 0;\n  }\n  updateHighlightSelection(seriesHighlighted) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        highlightSelection,\n        highlightLabelSelection,\n        _contextNodeData: contextNodeData\n      } = this;\n      const highlightedDatum = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight();\n      const item = seriesHighlighted && (highlightedDatum == null ? void 0 : highlightedDatum.datum) ? highlightedDatum : void 0;\n      let labelItems;\n      let highlightItems;\n      if (item != null) {\n        const labelsEnabled = this.isLabelEnabled();\n        for (const {\n          labelData,\n          nodeData\n        } of contextNodeData) {\n          highlightItems = this.getHighlightData(nodeData, item);\n          labelItems = labelsEnabled ? this.getHighlightLabelData(labelData, item) : void 0;\n          if ((!labelsEnabled || labelItems != null) && highlightItems != null) {\n            break;\n          }\n        }\n      }\n      this.highlightSelection = yield this.updateHighlightSelectionItem({\n        items: highlightItems,\n        highlightSelection\n      });\n      this.highlightLabelSelection = yield this.updateHighlightSelectionLabel({\n        items: labelItems,\n        highlightLabelSelection\n      });\n      return highlightItems;\n    });\n  }\n  pickNodeExactShape(point) {\n    var _a;\n    const result = super.pickNodeExactShape(point);\n    if (result) {\n      return result;\n    }\n    const {\n      x,\n      y\n    } = point;\n    const {\n      opts: {\n        hasMarkers\n      }\n    } = this;\n    let match;\n    for (const {\n      dataNodeGroup,\n      markerGroup\n    } of this.subGroups) {\n      let match2 = dataNodeGroup.pickNode(x, y);\n      if (!match2 && hasMarkers) {\n        match2 = markerGroup == null ? void 0 : markerGroup.pickNode(x, y);\n      }\n      if (match2) {\n        break;\n      }\n    }\n    if (match) {\n      return {\n        datum: match.datum,\n        distance: 0\n      };\n    } else {\n      for (const mod2 of this.moduleMap.modules) {\n        const {\n          datum\n        } = (_a = mod2.pickNodeExact(point)) != null ? _a : {};\n        if (datum !== void 0) {\n          return {\n            datum,\n            distance: 0\n          };\n        }\n      }\n    }\n  }\n  pickNodeClosestDatum(point) {\n    var _a, _b;\n    const {\n      x,\n      y\n    } = point;\n    const {\n      axes,\n      rootGroup,\n      _contextNodeData: contextNodeData\n    } = this;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const hitPoint = rootGroup.transformPoint(x, y);\n    let minDistance = Infinity;\n    let closestDatum;\n    for (const context of contextNodeData) {\n      for (const datum of context.nodeData) {\n        const {\n          point: {\n            x: datumX = NaN,\n            y: datumY = NaN\n          } = {}\n        } = datum;\n        if (isNaN(datumX) || isNaN(datumY)) {\n          continue;\n        }\n        const isInRange = (xAxis == null ? void 0 : xAxis.inRange(datumX)) && (yAxis == null ? void 0 : yAxis.inRange(datumY));\n        if (!isInRange) {\n          continue;\n        }\n        const distance = Math.max(__pow(hitPoint.x - datumX, 2) + __pow(hitPoint.y - datumY, 2), 0);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestDatum = datum;\n        }\n      }\n    }\n    for (const mod2 of this.moduleMap.modules) {\n      const modPick = mod2.pickNodeNearest(point);\n      if (modPick !== void 0 && modPick.distanceSquared < minDistance) {\n        minDistance = modPick.distanceSquared;\n        closestDatum = modPick.datum;\n        break;\n      }\n    }\n    if (closestDatum) {\n      const distance = Math.max(Math.sqrt(minDistance) - ((_b = (_a = closestDatum.point) == null ? void 0 : _a.size) != null ? _b : 0), 0);\n      return {\n        datum: closestDatum,\n        distance\n      };\n    }\n  }\n  pickNodeMainAxisFirst(point, requireCategoryAxis) {\n    var _a, _b;\n    const {\n      x,\n      y\n    } = point;\n    const {\n      axes,\n      rootGroup,\n      _contextNodeData: contextNodeData\n    } = this;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const directions2 = [xAxis, yAxis].filter(a => a instanceof CategoryAxis).map(a => a.direction);\n    if (requireCategoryAxis && directions2.length === 0) {\n      return;\n    }\n    const [primaryDirection = \"x\" /* X */] = directions2;\n    const hitPoint = rootGroup.transformPoint(x, y);\n    const hitPointCoords = primaryDirection === \"x\" /* X */ ? [hitPoint.x, hitPoint.y] : [hitPoint.y, hitPoint.x];\n    const minDistance = [Infinity, Infinity];\n    let closestDatum;\n    for (const context of contextNodeData) {\n      for (const datum of context.nodeData) {\n        const {\n          point: {\n            x: datumX = NaN,\n            y: datumY = NaN\n          } = {}\n        } = datum;\n        if (isNaN(datumX) || isNaN(datumY)) {\n          continue;\n        }\n        const isInRange = (xAxis == null ? void 0 : xAxis.inRange(datumX)) && (yAxis == null ? void 0 : yAxis.inRange(datumY));\n        if (!isInRange) {\n          continue;\n        }\n        const point2 = primaryDirection === \"x\" /* X */ ? [datumX, datumY] : [datumY, datumX];\n        let newMinDistance = true;\n        for (let i = 0; i < point2.length; i++) {\n          const dist = Math.abs(point2[i] - hitPointCoords[i]);\n          if (dist > minDistance[i]) {\n            newMinDistance = false;\n            break;\n          }\n          if (dist < minDistance[i]) {\n            minDistance[i] = dist;\n            minDistance.fill(Infinity, i + 1, minDistance.length);\n          }\n        }\n        if (newMinDistance) {\n          closestDatum = datum;\n        }\n      }\n    }\n    if (closestDatum) {\n      let closestDistanceSquared = Math.max(__pow(minDistance[0], 2) + __pow(minDistance[1], 2) - ((_b = (_a = closestDatum.point) == null ? void 0 : _a.size) != null ? _b : 0), 0);\n      for (const mod2 of this.moduleMap.modules) {\n        const modPick = mod2.pickNodeMainAxisFirst(point);\n        if (modPick !== void 0 && modPick.distanceSquared < closestDistanceSquared) {\n          closestDatum = modPick.datum;\n          closestDistanceSquared = modPick.distanceSquared;\n          break;\n        }\n      }\n      return {\n        datum: closestDatum,\n        distance: Math.sqrt(closestDistanceSquared)\n      };\n    }\n  }\n  onLegendItemClick(event) {\n    const {\n      legendItemName\n    } = this.properties;\n    const {\n      enabled,\n      itemId,\n      series\n    } = event;\n    const matchedLegendItemName = legendItemName != null && legendItemName === event.legendItemName;\n    if (series.id === this.id || matchedLegendItemName) {\n      this.toggleSeriesItem(itemId, enabled);\n    }\n  }\n  onLegendItemDoubleClick(event) {\n    const {\n      enabled,\n      itemId,\n      series,\n      numVisibleItems\n    } = event;\n    const {\n      legendItemName\n    } = this.properties;\n    const matchedLegendItemName = legendItemName != null && legendItemName === event.legendItemName;\n    if (series.id === this.id || matchedLegendItemName) {\n      this.toggleSeriesItem(itemId, true);\n    } else if (enabled && numVisibleItems === 1) {\n      this.toggleSeriesItem(itemId, true);\n    } else {\n      this.toggleSeriesItem(itemId, false);\n    }\n  }\n  isPathOrSelectionDirty() {\n    return false;\n  }\n  getLabelData() {\n    return [];\n  }\n  shouldFlipXY() {\n    return false;\n  }\n  /**\n   * Get the minimum bounding box that contains any adjacent two nodes. The axes are treated independently, so this\n   * may not represent the same two points for both directions. The dimensions represent the greatest distance\n   * between any two adjacent nodes.\n   */\n  getMinRect() {\n    const [context] = this._contextNodeData;\n    if (!(context == null ? void 0 : context.nodeData.length)) {\n      return;\n    }\n    const width = context.nodeData.map(({\n      midPoint\n    }) => {\n      var _a;\n      return (_a = midPoint == null ? void 0 : midPoint.x) != null ? _a : 0;\n    }).sort((a, b) => a - b).reduce((max, x, i, array) => i > 0 ? Math.max(max, x - array[i - 1]) : max, 0);\n    const height = context.nodeData.map(({\n      midPoint\n    }) => {\n      var _a;\n      return (_a = midPoint == null ? void 0 : midPoint.y) != null ? _a : 0;\n    }).sort((a, b) => a - b).reduce((max, y, i, array) => i > 0 ? Math.max(max, y - array[i - 1]) : max, 0);\n    return new BBox(0, 0, width, height);\n  }\n  updateHighlightSelectionItem(opts) {\n    return __async(this, null, function* () {\n      const {\n        opts: {\n          hasMarkers\n        }\n      } = this;\n      const {\n        items,\n        highlightSelection\n      } = opts;\n      const nodeData = items != null ? items : [];\n      if (hasMarkers) {\n        const markerSelection = highlightSelection;\n        return this.updateMarkerSelection({\n          nodeData,\n          markerSelection,\n          seriesIdx: -1\n        });\n      } else {\n        return this.updateDatumSelection({\n          nodeData,\n          datumSelection: highlightSelection,\n          seriesIdx: -1\n        });\n      }\n    });\n  }\n  updateHighlightSelectionLabel(opts) {\n    return __async(this, null, function* () {\n      var _a;\n      return this.updateLabelSelection({\n        labelData: (_a = opts.items) != null ? _a : [],\n        labelSelection: opts.highlightLabelSelection,\n        seriesIdx: -1\n      });\n    });\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.datumSelection;\n    });\n  }\n  updateDatumNodes(_opts) {\n    return __async(this, null, function* () {});\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.markerSelection;\n    });\n  }\n  updateMarkerNodes(_opts) {\n    return __async(this, null, function* () {});\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      opts.paths.forEach(p => p.visible = false);\n    });\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        paths,\n        opacity,\n        visible\n      } = opts;\n      for (const path of paths) {\n        path.opacity = opacity;\n        path.visible = visible;\n      }\n    });\n  }\n  resetAllAnimation(data) {\n    var _a, _b;\n    const {\n      path,\n      datum,\n      label,\n      marker\n    } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (path) {\n      data.paths.forEach(paths => {\n        resetMotion(paths, path);\n      });\n    }\n    if (datum) {\n      resetMotion(data.datumSelections, datum);\n    }\n    if (label) {\n      resetMotion(data.labelSelections, label);\n    }\n    if (marker) {\n      resetMotion(data.markerSelections, marker);\n    }\n    if (data.contextData.some(d => d.animationValid === false)) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n  animateEmptyUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateWaitingUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateReadyHighlight(data) {\n    var _a, _b;\n    const {\n      datum\n    } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    if (datum) {\n      resetMotion([data], datum);\n    }\n  }\n  animateReadyHighlightMarkers(data) {\n    var _a, _b;\n    const {\n      marker\n    } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    if (marker) {\n      resetMotion([data], marker);\n    }\n  }\n  animateReadyResize(data) {\n    this.resetAllAnimation(data);\n  }\n  animateClearingUpdateEmpty(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData(seriesRect, previousContextData) {\n    const animationData = {\n      datumSelections: this.subGroups.map(({\n        datumSelection\n      }) => datumSelection),\n      markerSelections: this.subGroups.filter(({\n        markerSelection\n      }) => markerSelection !== void 0).map(({\n        markerSelection\n      }) => markerSelection),\n      labelSelections: this.subGroups.map(({\n        labelSelection\n      }) => labelSelection),\n      annotationSelections: [...this.annotationSelections],\n      contextData: this._contextNodeData,\n      previousContextData,\n      paths: this.subGroups.map(({\n        paths\n      }) => paths),\n      seriesRect\n    };\n    return animationData;\n  }\n  calculateScaling() {\n    const result = {};\n    const addScale = direction => {\n      const axis = this.axes[direction];\n      if (!axis) return;\n      if (axis.scale instanceof LogScale) {\n        const {\n          range: range3,\n          domain\n        } = axis.scale;\n        result[direction] = {\n          type: \"log\",\n          convert: domain2 => axis.scale.convert(domain2),\n          domain: [domain[0], domain[1]],\n          range: [range3[0], range3[1]]\n        };\n      } else if (axis.scale instanceof ContinuousScale) {\n        const {\n          range: range3\n        } = axis.scale;\n        const domain = axis.scale.getDomain();\n        result[direction] = {\n          type: \"continuous\",\n          domain: [domain[0], domain[1]],\n          range: [range3[0], range3[1]]\n        };\n      } else if (axis.scale) {\n        const {\n          domain\n        } = axis.scale;\n        result[direction] = {\n          type: \"category\",\n          domain,\n          range: domain.map(d => axis.scale.convert(d))\n        };\n      }\n    };\n    addScale(\"x\" /* X */);\n    addScale(\"y\" /* Y */);\n    return result;\n  }\n};\n\n// packages/ag-charts-community/src/chart/cartesianChart.ts\nvar directions = [\"top\", \"right\", \"bottom\", \"left\"];\nvar _CartesianChart = class _CartesianChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    /** Integrated Charts feature state - not used in Standalone Charts. */\n    this.paired = true;\n    this._lastCrossLineIds = void 0;\n    this._lastAxisWidths = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n    this._lastVisibility = {\n      crossLines: true,\n      series: true\n    };\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_CartesianChart.prototype, this, \"performLayout\").call(this);\n      const {\n        animationRect,\n        seriesRect,\n        visibility,\n        clipSeries\n      } = this.updateAxes(shrinkRect);\n      this.seriesRoot.visible = visibility.series;\n      this.seriesRect = seriesRect;\n      this.animationRect = animationRect;\n      this.seriesRoot.translationX = Math.floor(seriesRect.x);\n      this.seriesRoot.translationY = Math.floor(seriesRect.y);\n      const {\n        seriesArea: {\n          padding\n        }\n      } = this;\n      const seriesPaddedRect = seriesRect.clone().grow({\n        top: padding.top,\n        right: padding.right,\n        bottom: padding.bottom,\n        left: padding.left\n      });\n      this.hoverRect = seriesPaddedRect;\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: {\n          width: this.scene.width,\n          height: this.scene.height\n        },\n        clipSeries,\n        series: {\n          rect: seriesRect,\n          paddedRect: seriesPaddedRect,\n          visible: visibility.series,\n          shouldFlipXY: this.shouldFlipXY()\n        },\n        axes: this.axes.map(axis => __spreadValues({\n          id: axis.id\n        }, axis.getLayoutState()))\n      });\n      return shrinkRect;\n    });\n  }\n  updateAxes(inputShrinkRect) {\n    var _a;\n    const crossLineIds = this.axes.flatMap(axis => {\n      var _a2;\n      return (_a2 = axis.crossLines) != null ? _a2 : [];\n    }).map(crossLine => crossLine.id);\n    const axesValid = this._lastCrossLineIds != null && this._lastCrossLineIds.length === crossLineIds.length && this._lastCrossLineIds.every((id, index) => crossLineIds[index] === id);\n    let axisWidths;\n    let visibility;\n    if (axesValid) {\n      axisWidths = __spreadValues({}, this._lastAxisWidths);\n      visibility = __spreadValues({}, this._lastVisibility);\n    } else {\n      axisWidths = {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n      visibility = {\n        crossLines: true,\n        series: true\n      };\n      this._lastCrossLineIds = crossLineIds;\n    }\n    const liveAxisWidths = new Set(this._axes.map(a => a.position));\n    for (const position of Object.keys(axisWidths)) {\n      if (!liveAxisWidths.has(position)) {\n        delete axisWidths[position];\n      }\n    }\n    const stableOutputs = (otherAxisWidths, otherVisibility) => {\n      if (Object.keys(otherAxisWidths).some(k => axisWidths[k] == null)) {\n        return false;\n      }\n      return visibility.crossLines === otherVisibility.crossLines && visibility.series === otherVisibility.series &&\n      // Check for existing axis positions and equality.\n      Object.entries(axisWidths).every(([p, w]) => {\n        const otherW = otherAxisWidths[p];\n        if (w != null || otherW != null) {\n          return w === otherW;\n        }\n        return true;\n      });\n    };\n    const ceilValues = records => {\n      return Object.entries(records).reduce((out, [key, value]) => {\n        if (value && Math.abs(value) === Infinity) {\n          value = 0;\n        }\n        out[key] = value != null ? Math.ceil(value) : value;\n        return out;\n      }, {});\n    };\n    let lastPassAxisWidths = {};\n    let lastPassVisibility = {};\n    let clipSeries = false;\n    let seriesRect = (_a = this.seriesRect) == null ? void 0 : _a.clone();\n    let count2 = 0;\n    let primaryTickCounts = {};\n    do {\n      Object.assign(axisWidths, lastPassAxisWidths);\n      Object.assign(visibility, lastPassVisibility);\n      const result = this.updateAxesPass(axisWidths, inputShrinkRect.clone(), seriesRect);\n      lastPassAxisWidths = ceilValues(result.axisWidths);\n      lastPassVisibility = result.visibility;\n      clipSeries = result.clipSeries;\n      seriesRect = result.seriesRect;\n      primaryTickCounts = result.primaryTickCounts;\n      if (count2++ > 10) {\n        Logger.warn(\"unable to find stable axis layout.\");\n        break;\n      }\n    } while (!stableOutputs(lastPassAxisWidths, lastPassVisibility));\n    this.axes.forEach(axis => {\n      const {\n        direction\n      } = axis;\n      const primaryTickCount = primaryTickCounts[direction];\n      axis.update(primaryTickCount);\n    });\n    const clipRectPadding = 5;\n    this.axes.forEach(axis => {\n      axis.setCrossLinesVisible(visibility.crossLines);\n      if (!seriesRect) {\n        return;\n      }\n      axis.clipGrid(seriesRect.x, seriesRect.y, seriesRect.width + clipRectPadding, seriesRect.height + clipRectPadding);\n      switch (axis.position) {\n        case \"left\":\n        case \"right\":\n          axis.clipTickLines(inputShrinkRect.x, seriesRect.y, inputShrinkRect.width + clipRectPadding, seriesRect.height + clipRectPadding);\n          break;\n        case \"top\":\n        case \"bottom\":\n          axis.clipTickLines(seriesRect.x, inputShrinkRect.y, seriesRect.width + clipRectPadding, inputShrinkRect.height + clipRectPadding);\n          break;\n      }\n    });\n    this._lastAxisWidths = axisWidths;\n    this._lastVisibility = visibility;\n    return {\n      seriesRect,\n      animationRect: inputShrinkRect,\n      visibility,\n      clipSeries\n    };\n  }\n  updateAxesPass(axisWidths, bounds, lastPassSeriesRect) {\n    const {\n      axes\n    } = this;\n    const visited = {};\n    const newAxisWidths = {};\n    const visibility = {\n      series: true,\n      crossLines: true\n    };\n    let clipSeries = false;\n    const primaryTickCounts = {};\n    const paddedBounds = this.applySeriesPadding(bounds);\n    const crossLinePadding = lastPassSeriesRect ? this.buildCrossLinePadding(axisWidths) : {};\n    const axisBound = this.buildAxisBound(paddedBounds, axisWidths, crossLinePadding, visibility);\n    const seriesRect = this.buildSeriesRect(axisBound, axisWidths);\n    axes.forEach(axis => {\n      var _a, _b;\n      const {\n        position = \"left\"\n      } = axis;\n      const {\n        clipSeries: newClipSeries,\n        axisThickness,\n        axisOffset\n      } = this.calculateAxisDimensions({\n        axis,\n        seriesRect,\n        paddedBounds,\n        axisWidths,\n        newAxisWidths,\n        primaryTickCounts,\n        clipSeries,\n        addInterAxisPadding: ((_a = visited[position]) != null ? _a : 0) > 0\n      });\n      visited[position] = ((_b = visited[position]) != null ? _b : 0) + 1;\n      clipSeries = clipSeries || newClipSeries;\n      this.positionAxis({\n        axis,\n        axisBound,\n        axisOffset,\n        axisThickness,\n        axisWidths,\n        primaryTickCounts,\n        seriesRect\n      });\n    });\n    return {\n      clipSeries,\n      seriesRect,\n      axisWidths: newAxisWidths,\n      visibility,\n      primaryTickCounts\n    };\n  }\n  buildCrossLinePadding(axisWidths) {\n    var _a;\n    const crossLinePadding = {};\n    this.axes.forEach(axis => {\n      if (axis.crossLines) {\n        axis.crossLines.forEach(crossLine => {\n          crossLine.calculatePadding(crossLinePadding);\n        });\n      }\n    });\n    for (const [side, padding = 0] of Object.entries(crossLinePadding)) {\n      crossLinePadding[side] = Math.max(padding - ((_a = axisWidths[side]) != null ? _a : 0), 0);\n    }\n    return crossLinePadding;\n  }\n  applySeriesPadding(bounds) {\n    const paddedRect = bounds.clone();\n    const reversedAxes = this.axes.slice().reverse();\n    directions.forEach(dir => {\n      const padding = this.seriesArea.padding[dir];\n      const axis = reversedAxes.find(axis2 => axis2.position === dir);\n      if (axis) {\n        axis.seriesAreaPadding = padding;\n      } else {\n        paddedRect.shrink(padding, dir);\n      }\n    });\n    return paddedRect;\n  }\n  buildAxisBound(bounds, axisWidths, crossLinePadding, visibility) {\n    var _a, _b, _c, _d;\n    const result = bounds.clone();\n    const {\n      top = 0,\n      right = 0,\n      bottom = 0,\n      left = 0\n    } = crossLinePadding;\n    const horizontalPadding = left + right;\n    const verticalPadding = top + bottom;\n    const totalWidth = ((_a = axisWidths.left) != null ? _a : 0) + ((_b = axisWidths.right) != null ? _b : 0) + horizontalPadding;\n    const totalHeight = ((_c = axisWidths.top) != null ? _c : 0) + ((_d = axisWidths.bottom) != null ? _d : 0) + verticalPadding;\n    if (result.width <= totalWidth || result.height <= totalHeight) {\n      visibility.crossLines = false;\n      visibility.series = false;\n      return result;\n    }\n    result.x += left;\n    result.y += top;\n    result.width -= horizontalPadding;\n    result.height -= verticalPadding;\n    return result;\n  }\n  buildSeriesRect(axisBound, axisWidths) {\n    const result = axisBound.clone();\n    const {\n      top,\n      bottom,\n      left,\n      right\n    } = axisWidths;\n    result.x += left != null ? left : 0;\n    result.y += top != null ? top : 0;\n    result.width -= (left != null ? left : 0) + (right != null ? right : 0);\n    result.height -= (top != null ? top : 0) + (bottom != null ? bottom : 0);\n    result.width = Math.max(0, result.width);\n    result.height = Math.max(0, result.height);\n    return result;\n  }\n  clampToOutsideSeriesRect(seriesRect, value, dimension, direction) {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = seriesRect;\n    const clampBounds = [x, y, x + width, y + height];\n    const fn = direction === 1 ? Math.min : Math.max;\n    const compareTo = clampBounds[(dimension === \"x\" ? 0 : 1) + (direction === 1 ? 0 : 2)];\n    return fn(value, compareTo);\n  }\n  calculateAxisDimensions(opts) {\n    var _a, _b, _c, _d, _e;\n    const {\n      axis,\n      seriesRect,\n      paddedBounds,\n      axisWidths,\n      newAxisWidths,\n      primaryTickCounts,\n      addInterAxisPadding\n    } = opts;\n    let {\n      clipSeries\n    } = opts;\n    const {\n      position = \"left\",\n      direction\n    } = axis;\n    const axisLeftRightRange = axis2 => {\n      if (axis2 instanceof CategoryAxis || axis2 instanceof GroupedCategoryAxis) {\n        return [0, seriesRect.height];\n      }\n      return [seriesRect.height, 0];\n    };\n    const axisOffset = (_a = newAxisWidths[position]) != null ? _a : 0;\n    switch (position) {\n      case \"top\":\n      case \"bottom\":\n        axis.range = [0, seriesRect.width];\n        axis.gridLength = seriesRect.height;\n        break;\n      case \"right\":\n      case \"left\":\n        axis.range = axisLeftRightRange(axis);\n        axis.gridLength = seriesRect.width;\n        break;\n    }\n    const zoom = this.zoomManager.getAxisZoom(axis.id);\n    const {\n      min = 0,\n      max = 1\n    } = zoom != null ? zoom : {};\n    axis.visibleRange = [min, max];\n    const rangeClipped = axis.dataDomain.clipped || axis.visibleRange[0] > 0 || axis.visibleRange[1] < 1;\n    clipSeries || (clipSeries = rangeClipped);\n    let primaryTickCount = axis.nice ? primaryTickCounts[direction] : void 0;\n    const paddedBoundsCoefficient = 0.3;\n    if (axis.thickness != null && axis.thickness > 0) {\n      axis.maxThickness = axis.thickness;\n    } else if (direction === \"y\" /* Y */) {\n      axis.maxThickness = paddedBounds.width * paddedBoundsCoefficient;\n    } else {\n      axis.maxThickness = paddedBounds.height * paddedBoundsCoefficient;\n    }\n    const layout = axis.calculateLayout(primaryTickCount);\n    primaryTickCount = layout.primaryTickCount;\n    primaryTickCounts[direction] = (_b = primaryTickCounts[direction]) != null ? _b : primaryTickCount;\n    let axisThickness = 0;\n    if (axis.thickness != null && axis.thickness > 0) {\n      axisThickness = axis.thickness;\n    } else {\n      const {\n        bbox\n      } = layout;\n      axisThickness = direction === \"x\" /* X */ ? bbox.height : bbox.width;\n    }\n    const axisPadding = 15;\n    if (addInterAxisPadding) {\n      axisThickness += axisPadding;\n    }\n    axisThickness = Math.ceil(axisThickness);\n    newAxisWidths[position] = ((_c = newAxisWidths[position]) != null ? _c : 0) + axisThickness;\n    axis.gridPadding = ((_d = axisWidths[position]) != null ? _d : 0) - ((_e = newAxisWidths[position]) != null ? _e : 0);\n    return {\n      clipSeries,\n      axisThickness,\n      axisOffset,\n      primaryTickCount\n    };\n  }\n  positionAxis(opts) {\n    var _a, _b, _c, _d;\n    const {\n      axis,\n      axisBound,\n      axisWidths,\n      seriesRect,\n      axisOffset,\n      axisThickness\n    } = opts;\n    const {\n      position\n    } = axis;\n    switch (position) {\n      case \"top\":\n        axis.translation.x = axisBound.x + ((_a = axisWidths.left) != null ? _a : 0);\n        axis.translation.y = this.clampToOutsideSeriesRect(seriesRect, axisBound.y + 1 + axisOffset + axisThickness, \"y\", 1);\n        break;\n      case \"bottom\":\n        axis.translation.x = axisBound.x + ((_b = axisWidths.left) != null ? _b : 0);\n        axis.translation.y = this.clampToOutsideSeriesRect(seriesRect, axisBound.y + axisBound.height + 1 - axisThickness - axisOffset, \"y\", -1);\n        break;\n      case \"left\":\n        axis.translation.y = axisBound.y + ((_c = axisWidths.top) != null ? _c : 0);\n        axis.translation.x = this.clampToOutsideSeriesRect(seriesRect, axisBound.x + axisOffset + axisThickness, \"x\", 1);\n        break;\n      case \"right\":\n        axis.translation.y = axisBound.y + ((_d = axisWidths.top) != null ? _d : 0);\n        axis.translation.x = this.clampToOutsideSeriesRect(seriesRect, axisBound.x + axisBound.width - axisThickness - axisOffset, \"x\", -1);\n        break;\n    }\n    axis.updatePosition({\n      rotation: toRadians(axis.rotation),\n      sideFlag: axis.label.getSideFlag()\n    });\n  }\n  shouldFlipXY() {\n    return !this.series.some(series => !(series instanceof CartesianSeries && series.shouldFlipXY()));\n  }\n};\n_CartesianChart.className = \"CartesianChart\";\n_CartesianChart.type = \"cartesian\";\nvar CartesianChart = _CartesianChart;\n\n// packages/ag-charts-community/src/chart/chartProxy.ts\nvar AgChartInstanceProxy = class _AgChartInstanceProxy {\n  constructor(chart) {\n    this.chart = chart;\n  }\n  static isInstance(x) {\n    var _a;\n    if (x instanceof _AgChartInstanceProxy) {\n      return true;\n    }\n    if (((_a = x.constructor) == null ? void 0 : _a.name) === \"AgChartInstanceProxy\" && x.chart != null) {\n      return true;\n    }\n    return x.chart != null && this.validateImplementation(x);\n  }\n  static validateImplementation(x) {\n    var _a, _b;\n    const chartProps = [\"getOptions\", \"destroy\"];\n    const signatureProps = Object.keys((_b = (_a = x.constructor) == null ? void 0 : _a.prototype) != null ? _b : {});\n    return chartProps.every(prop => signatureProps.includes(prop));\n  }\n  getOptions() {\n    return this.chart.getOptions();\n  }\n  destroy() {\n    this.chart.destroy();\n  }\n};\n\n// packages/ag-charts-community/src/util/secondaryAxisTicks.ts\nfunction calculateNiceSecondaryAxis(domain, primaryTickCount, reverse) {\n  let start = Math.floor(Math.min(domain[0], domain[1]));\n  let stop = Math.max(domain[0], domain[1]);\n  start = calculateNiceStart(start, stop, primaryTickCount);\n  const step = getTickStep(start, stop, primaryTickCount);\n  const segments = primaryTickCount - 1;\n  stop = start + segments * step;\n  const d = reverse ? [stop, start] : [start, stop];\n  const ticks = getTicks(start, step, primaryTickCount);\n  return [d, ticks];\n}\nfunction calculateNiceStart(a, b, count2) {\n  const rawStep = Math.abs(b - a) / (count2 - 1);\n  const order = Math.floor(Math.log10(rawStep));\n  const magnitude = Math.pow(10, order);\n  return Math.floor(a / magnitude) * magnitude;\n}\nfunction getTicks(start, step, count2) {\n  const stepPower = Math.floor(Math.log10(step));\n  const fractionDigits = step > 0 && step < 1 ? Math.abs(stepPower) : 0;\n  const f = Math.pow(10, fractionDigits);\n  const ticks = createNumericTicks(fractionDigits);\n  for (let i = 0; i < count2; i++) {\n    const tick = start + step * i;\n    ticks[i] = Math.round(tick * f) / f;\n  }\n  return ticks;\n}\nfunction getTickStep(start, stop, count2) {\n  const segments = count2 - 1;\n  const rawStep = (stop - start) / segments;\n  return calculateNextNiceStep(rawStep);\n}\nfunction calculateNextNiceStep(rawStep) {\n  const order = Math.floor(Math.log10(rawStep));\n  const magnitude = Math.pow(10, order);\n  const step = rawStep / magnitude * 10;\n  if (step > 0 && step <= 1) {\n    return magnitude / 10;\n  }\n  if (step > 1 && step <= 2) {\n    return 2 * magnitude / 10;\n  }\n  if (step > 1 && step <= 5) {\n    return 5 * magnitude / 10;\n  }\n  if (step > 5 && step <= 10) {\n    return 10 * magnitude / 10;\n  }\n  if (step > 10 && step <= 20) {\n    return 20 * magnitude / 10;\n  }\n  if (step > 20 && step <= 40) {\n    return 40 * magnitude / 10;\n  }\n  if (step > 40 && step <= 50) {\n    return 50 * magnitude / 10;\n  }\n  if (step > 50 && step <= 100) {\n    return 100 * magnitude / 10;\n  }\n  return step;\n}\n\n// packages/ag-charts-community/src/chart/axis/numberAxis.ts\nvar NumberAxisTick = class extends AxisTick {\n  constructor() {\n    super(...arguments);\n    this.maxSpacing = NaN;\n  }\n};\n__decorateClass([Validate(OR(AND(NUMBER.restrict({\n  min: 1\n}), GREATER_THAN(\"minSpacing\")), NAN)), Default(NaN)], NumberAxisTick.prototype, \"maxSpacing\", 2);\nvar NumberAxis = class extends CartesianAxis {\n  constructor(moduleCtx, scale2 = new LinearScale()) {\n    super(moduleCtx, scale2);\n    this.min = NaN;\n    this.max = NaN;\n  }\n  normaliseDataDomain(d) {\n    const {\n      min,\n      max\n    } = this;\n    const {\n      extent: extent2,\n      clipped\n    } = normalisedExtentWithMetadata(d, min, max);\n    return {\n      domain: extent2,\n      clipped\n    };\n  }\n  formatDatum(datum) {\n    if (typeof datum === \"number\") {\n      return datum.toFixed(2);\n    } else {\n      Logger.warnOnce(\"data contains Date objects which are being plotted against a number axis, please only use a number axis for numbers.\");\n      return String(datum);\n    }\n  }\n  createTick() {\n    return new NumberAxisTick();\n  }\n  updateSecondaryAxisTicks(primaryTickCount) {\n    if (this.dataDomain == null) {\n      throw new Error(\"AG Charts - dataDomain not calculated, cannot perform tick calculation.\");\n    }\n    if (this.dataDomain.domain.length === 0) return [];\n    const [d, ticks] = calculateNiceSecondaryAxis(this.dataDomain.domain, primaryTickCount != null ? primaryTickCount : 0, this.reverse);\n    this.scale.nice = false;\n    this.scale.domain = d;\n    this.scale.update();\n    return ticks;\n  }\n};\nNumberAxis.className = \"NumberAxis\";\nNumberAxis.type = \"number\";\n__decorateClass([Validate(AND(NUMBER_OR_NAN, LESS_THAN(\"max\"))), Default(NaN)], NumberAxis.prototype, \"min\", 2);\n__decorateClass([Validate(AND(NUMBER_OR_NAN, GREATER_THAN(\"min\"))), Default(NaN)], NumberAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/axis/logAxis.ts\nvar NON_ZERO_NUMBER = predicateWithMessage(value => isNumber(value) && value !== 0, \"a non-zero number\");\nvar LogAxis = class extends NumberAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new LogScale());\n    this.min = NaN;\n    this.max = NaN;\n  }\n  normaliseDataDomain(d) {\n    const {\n      min,\n      max\n    } = this;\n    const {\n      extent: extent2,\n      clipped\n    } = normalisedExtentWithMetadata(d, min, max);\n    const isInverted = extent2[0] > extent2[1];\n    const crossesZero = extent2[0] < 0 && extent2[1] > 0;\n    const hasZeroExtent = extent2[0] === 0 && extent2[1] === 0;\n    const invalidDomain = isInverted || crossesZero || hasZeroExtent;\n    if (invalidDomain) {\n      d = [];\n      if (crossesZero) {\n        Logger.warn(`the data domain crosses zero, the chart data cannot be rendered. See log axis documentation for more information.`);\n      } else if (hasZeroExtent) {\n        Logger.warn(`the data domain has 0 extent, no data is rendered.`);\n      }\n    }\n    if (extent2[0] === 0) {\n      extent2[0] = 1;\n    }\n    if (extent2[1] === 0) {\n      extent2[1] = -1;\n    }\n    return {\n      domain: extent2,\n      clipped\n    };\n  }\n  set base(value) {\n    this.scale.base = value;\n  }\n  get base() {\n    return this.scale.base;\n  }\n};\nLogAxis.className = \"LogAxis\";\nLogAxis.type = \"log\";\n__decorateClass([Validate(AND(NUMBER_OR_NAN, NON_ZERO_NUMBER, LESS_THAN(\"max\"))), Default(NaN)], LogAxis.prototype, \"min\", 2);\n__decorateClass([Validate(AND(NUMBER_OR_NAN, NON_ZERO_NUMBER, GREATER_THAN(\"min\"))), Default(NaN)], LogAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/axis/timeAxis.ts\nvar MAX_SPACING2 = OR(AND(NUMBER.restrict({\n  min: 1\n}), GREATER_THAN(\"minSpacing\")), NAN);\nvar TimeAxisTick = class extends AxisTick {\n  constructor() {\n    super(...arguments);\n    this.maxSpacing = NaN;\n  }\n};\n__decorateClass([Validate(MAX_SPACING2), Default(NaN)], TimeAxisTick.prototype, \"maxSpacing\", 2);\nvar TimeAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new TimeScale());\n    this.datumFormat = \"%m/%d/%y, %H:%M:%S\";\n    this.min = void 0;\n    this.max = void 0;\n    const {\n      scale: scale2\n    } = this;\n    this.refreshScale();\n    this.datumFormatter = scale2.tickFormat({\n      specifier: this.datumFormat\n    });\n  }\n  normaliseDataDomain(d) {\n    var _a;\n    let {\n      min,\n      max\n    } = this;\n    let clipped = false;\n    if (typeof min === \"number\") {\n      min = new Date(min);\n    }\n    if (typeof max === \"number\") {\n      max = new Date(max);\n    }\n    if (d.length > 2) {\n      d = ((_a = extent(d)) != null ? _a : [0, 1e3]).map(x => new Date(x));\n    }\n    if (min instanceof Date) {\n      clipped || (clipped = min > d[0]);\n      d = [min, d[1]];\n    }\n    if (max instanceof Date) {\n      clipped || (clipped = max < d[1]);\n      d = [d[0], max];\n    }\n    if (d[0] > d[1]) {\n      d = [];\n    }\n    return {\n      domain: d,\n      clipped\n    };\n  }\n  createTick() {\n    return new TimeAxisTick();\n  }\n  onLabelFormatChange(ticks, format2) {\n    if (format2) {\n      super.onLabelFormatChange(ticks, format2);\n    } else {\n      this.labelFormatter = this.scale.tickFormat({\n        ticks\n      });\n    }\n  }\n  formatDatum(datum) {\n    var _a;\n    return (_a = this.moduleCtx.callbackCache.call(this.datumFormatter, datum)) != null ? _a : String(datum);\n  }\n  calculatePadding(_min, _max, reverse) {\n    return reverse ? [1, 0] : [0, 1];\n  }\n};\nTimeAxis.className = \"TimeAxis\";\nTimeAxis.type = \"time\";\n__decorateClass([Validate(AND(DATE_OR_DATETIME_MS, LESS_THAN(\"max\")), {\n  optional: true\n})], TimeAxis.prototype, \"min\", 2);\n__decorateClass([Validate(AND(DATE_OR_DATETIME_MS, GREATER_THAN(\"min\")), {\n  optional: true\n})], TimeAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/factory/axisTypes.ts\nvar AXIS_CONSTRUCTORS = {\n  [NumberAxis.type]: NumberAxis,\n  [CategoryAxis.type]: CategoryAxis,\n  [TimeAxis.type]: TimeAxis,\n  [GroupedCategoryAxis.type]: GroupedCategoryAxis,\n  [LogAxis.type]: LogAxis\n};\nfunction registerAxis(axisType, ctor) {\n  AXIS_CONSTRUCTORS[axisType] = ctor;\n}\nfunction getAxis(axisType, moduleCtx) {\n  const axisConstructor = AXIS_CONSTRUCTORS[axisType];\n  if (axisConstructor) {\n    return new axisConstructor(moduleCtx);\n  }\n  throw new Error(`AG Charts - unknown axis type: ${axisType}`);\n}\nvar AXIS_TYPES = {\n  has(axisType) {\n    return Object.hasOwn(AXIS_CONSTRUCTORS, axisType);\n  },\n  get axesTypes() {\n    return Object.keys(AXIS_CONSTRUCTORS);\n  }\n};\nvar AXIS_THEME_TEMPLATES = {};\nfunction registerAxisThemeTemplate(axisType, theme) {\n  AXIS_THEME_TEMPLATES[axisType] = theme;\n}\nfunction getAxisThemeTemplate(axisType) {\n  var _a;\n  return (_a = AXIS_THEME_TEMPLATES[axisType]) != null ? _a : {};\n}\n\n// packages/ag-charts-community/src/chart/factory/expectedEnterpriseModules.ts\nvar EXPECTED_ENTERPRISE_MODULES = [{\n  type: \"root\",\n  optionsKey: \"animation\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"]\n}, {\n  type: \"root\",\n  optionsKey: \"background\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n  optionsInnerKey: \"image\"\n}, {\n  type: \"root\",\n  optionsKey: \"contextMenu\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"]\n}, {\n  type: \"root\",\n  optionsKey: \"zoom\",\n  chartTypes: [\"cartesian\"]\n}, {\n  type: \"legend\",\n  optionsKey: \"gradientLegend\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n  identifier: \"gradient\"\n}, {\n  type: \"axis\",\n  optionsKey: \"axes[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"angle-category\"\n}, {\n  type: \"axis\",\n  optionsKey: \"axes[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"angle-number\"\n}, {\n  type: \"axis\",\n  optionsKey: \"axes[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radius-category\"\n}, {\n  type: \"axis\",\n  optionsKey: \"axes[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radius-number\"\n}, {\n  type: \"axis-option\",\n  optionsKey: \"crosshair\",\n  chartTypes: [\"cartesian\"]\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"box-plot\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"bullet\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"heatmap\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"nightingale\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radar-area\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radar-line\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radial-bar\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"polar\"],\n  identifier: \"radial-column\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"range-area\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"range-bar\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"hierarchy\"],\n  identifier: \"sunburst\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"hierarchy\"],\n  identifier: \"treemap\"\n}, {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"waterfall\"\n}, {\n  type: \"series-option\",\n  optionsKey: \"errorBar\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"error-bars\"\n}];\nfunction isEnterpriseSeriesType(type) {\n  return EXPECTED_ENTERPRISE_MODULES.some(s => s.type === \"series\" && s.identifier === type);\n}\nfunction getEnterpriseSeriesChartTypes(type) {\n  var _a;\n  return (_a = EXPECTED_ENTERPRISE_MODULES.find(s => s.type === \"series\" && s.identifier === type)) == null ? void 0 : _a.chartTypes;\n}\nfunction isEnterpriseSeriesTypeLoaded(type) {\n  var _a, _b;\n  return ((_b = (_a = EXPECTED_ENTERPRISE_MODULES.find(s => s.type === \"series\" && s.identifier === type)) == null ? void 0 : _a.useCount) != null ? _b : 0) > 0;\n}\nfunction isEnterpriseCartesian(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find(v => v === \"cartesian\");\n  return type === \"cartesian\";\n}\nfunction isEnterprisePolar(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find(v => v === \"polar\");\n  return type === \"polar\";\n}\nfunction isEnterpriseHierarchy(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find(v => v === \"hierarchy\");\n  return type === \"hierarchy\";\n}\nfunction verifyIfModuleExpected(module) {\n  var _a;\n  if (module.packageType !== \"enterprise\") {\n    throw new Error(\"AG Charts - internal configuration error, only enterprise modules need verification.\");\n  }\n  const stub = EXPECTED_ENTERPRISE_MODULES.find(s => {\n    return s.type === module.type && s.optionsKey === module.optionsKey && s.identifier === module.identifier && module.chartTypes.every(t => s.chartTypes.includes(t));\n  });\n  if (stub) {\n    (_a = stub.useCount) != null ? _a : stub.useCount = 0;\n    stub.useCount++;\n  }\n  return stub != null;\n}\nfunction getUnusedExpectedModules() {\n  return EXPECTED_ENTERPRISE_MODULES.filter(({\n    useCount\n  }) => useCount == null || useCount === 0);\n}\n\n// packages/ag-charts-community/src/chart/factory/legendTypes.ts\nvar LEGEND_FACTORIES = {\n  category: Legend\n};\nvar LEGEND_KEYS = {\n  category: \"legend\"\n};\nfunction registerLegend(type, key, ctr, theme) {\n  LEGEND_FACTORIES[type] = ctr;\n  LEGEND_KEYS[type] = key;\n  LEGEND_THEME_TEMPLATES[key] = theme;\n}\nvar LEGEND_THEME_TEMPLATES = {};\nfunction getLegendThemeTemplates() {\n  return LEGEND_THEME_TEMPLATES;\n}\nfunction getLegendKeys() {\n  return LEGEND_KEYS;\n}\n\n// packages/ag-charts-community/src/chart/background/background.ts\nvar Background = class extends BaseModuleInstance {\n  constructor(ctx) {\n    var _a;\n    super();\n    this.node = new Group({\n      name: \"background\",\n      zIndex: 0 /* SERIES_BACKGROUND_ZINDEX */\n    });\n    this.rectNode = new Rect();\n    this.visible = true;\n    this.fill = \"white\";\n    // placeholder for enterprise module\n    this.image = void 0;\n    this.node.appendChild(this.rectNode);\n    (_a = ctx.scene.root) == null ? void 0 : _a.appendChild(this.node);\n    this.destroyFns.push(() => {\n      var _a2;\n      return (_a2 = ctx.scene.root) == null ? void 0 : _a2.removeChild(this.node);\n    }, ctx.layoutService.addListener(\"layout-complete\", e => this.onLayoutComplete(e)));\n  }\n  onLayoutComplete(e) {\n    const {\n      width,\n      height\n    } = e.chart;\n    this.rectNode.width = width;\n    this.rectNode.height = height;\n  }\n};\n__decorateClass([Validate(BOOLEAN), ProxyPropertyOnWrite(\"node\", \"visible\")], Background.prototype, \"visible\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n}), ProxyPropertyOnWrite(\"rectNode\", \"fill\")], Background.prototype, \"fill\", 2);\n\n// packages/ag-charts-community/src/chart/background/backgroundModule.ts\nvar BackgroundModule = {\n  type: \"root\",\n  optionsKey: \"background\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n  instanceConstructor: Background\n};\n\n// packages/ag-charts-community/src/chart/navigator/navigatorHandle.ts\nvar NavigatorHandle = class {\n  set fill(value) {\n    this.rh.fill = value;\n  }\n  get fill() {\n    return this.rh.fill;\n  }\n  set stroke(value) {\n    this.rh.stroke = value;\n  }\n  get stroke() {\n    return this.rh.stroke;\n  }\n  set strokeWidth(value) {\n    this.rh.strokeWidth = value;\n  }\n  get strokeWidth() {\n    return this.rh.strokeWidth;\n  }\n  set width(value) {\n    this.rh.width = value;\n  }\n  get width() {\n    return this.rh.width;\n  }\n  set height(value) {\n    this.rh.height = value;\n  }\n  get height() {\n    return this.rh.height;\n  }\n  set gripLineGap(value) {\n    this.rh.gripLineGap = value;\n  }\n  get gripLineGap() {\n    return this.rh.gripLineGap;\n  }\n  set gripLineLength(value) {\n    this.rh.gripLineLength = value;\n  }\n  get gripLineLength() {\n    return this.rh.gripLineLength;\n  }\n  constructor(rangeHandle) {\n    this.rh = rangeHandle;\n  }\n};\n\n// packages/ag-charts-community/src/chart/navigator/navigatorMask.ts\nvar NavigatorMask = class {\n  set fill(value) {\n    this.rm.fill = value;\n  }\n  get fill() {\n    return this.rm.fill;\n  }\n  set stroke(value) {\n    this.rm.stroke = value;\n  }\n  get stroke() {\n    return this.rm.stroke;\n  }\n  set strokeWidth(value) {\n    this.rm.strokeWidth = value;\n  }\n  get strokeWidth() {\n    return this.rm.strokeWidth;\n  }\n  set fillOpacity(value) {\n    this.rm.fillOpacity = value;\n  }\n  get fillOpacity() {\n    return this.rm.fillOpacity;\n  }\n  constructor(rangeMask) {\n    this.rm = rangeMask;\n  }\n};\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeHandle.ts\nvar RangeHandle = class extends Path {\n  constructor() {\n    super(...arguments);\n    this._fill = \"#f2f2f2\";\n    this._stroke = \"#999999\";\n    this._strokeWidth = 1;\n    this._lineCap = \"square\";\n    this._centerX = 0;\n    this._centerY = 0;\n    this._width = 8;\n    this._gripLineGap = 2;\n    this._gripLineLength = 8;\n    this._height = 16;\n  }\n  set centerX(value) {\n    if (this._centerX !== value) {\n      this._centerX = value;\n      this.dirtyPath = true;\n    }\n  }\n  get centerX() {\n    return this._centerX;\n  }\n  set centerY(value) {\n    if (this._centerY !== value) {\n      this._centerY = value;\n      this.dirtyPath = true;\n    }\n  }\n  get centerY() {\n    return this._centerY;\n  }\n  set width(value) {\n    if (this._width !== value) {\n      this._width = value;\n      this.dirtyPath = true;\n    }\n  }\n  get width() {\n    return this._width;\n  }\n  set gripLineGap(value) {\n    if (this._gripLineGap !== value) {\n      this._gripLineGap = value;\n      this.dirtyPath = true;\n    }\n  }\n  get gripLineGap() {\n    return this._gripLineGap;\n  }\n  set gripLineLength(value) {\n    if (this._gripLineLength !== value) {\n      this._gripLineLength = value;\n      this.dirtyPath = true;\n    }\n  }\n  get gripLineLength() {\n    return this._gripLineLength;\n  }\n  set height(value) {\n    if (this._height !== value) {\n      this._height = value;\n      this.dirtyPath = true;\n    }\n  }\n  get height() {\n    return this._height;\n  }\n  computeBBox() {\n    const {\n      centerX,\n      centerY,\n      width,\n      height\n    } = this;\n    const x = centerX - width / 2;\n    const y = centerY - height / 2;\n    return new BBox(x, y, width, height);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox.containsPoint(point.x, point.y);\n  }\n  updatePath() {\n    const {\n      path,\n      centerX,\n      centerY,\n      width,\n      height\n    } = this;\n    path.clear();\n    const x = centerX - width / 2;\n    const y = centerY - height / 2;\n    const ax = this.align(x);\n    const ay = this.align(y);\n    const axw = ax + this.align(x, width);\n    const ayh = ay + this.align(y, height);\n    path.moveTo(ax, ay);\n    path.lineTo(axw, ay);\n    path.lineTo(axw, ayh);\n    path.lineTo(ax, ayh);\n    path.lineTo(ax, ay);\n    const dx = this.gripLineGap / 2;\n    const dy = this.gripLineLength / 2;\n    path.moveTo(this.align(centerX - dx), this.align(centerY - dy));\n    path.lineTo(this.align(centerX - dx), this.align(centerY + dy));\n    path.moveTo(this.align(centerX + dx), this.align(centerY - dy));\n    path.lineTo(this.align(centerX + dx), this.align(centerY + dy));\n  }\n};\nRangeHandle.className = \"RangeHandle\";\n__decorateClass([Validate(COLOR_STRING)], RangeHandle.prototype, \"_fill\", 2);\n__decorateClass([Validate(COLOR_STRING)], RangeHandle.prototype, \"_stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], RangeHandle.prototype, \"_strokeWidth\", 2);\n__decorateClass([Validate(LINE_CAP)], RangeHandle.prototype, \"_lineCap\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], RangeHandle.prototype, \"_width\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], RangeHandle.prototype, \"_gripLineGap\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], RangeHandle.prototype, \"_gripLineLength\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], RangeHandle.prototype, \"_height\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeMask.ts\nfunction markDirtyOnChange(newValue, oldValue) {\n  if (newValue !== oldValue) {\n    this.dirtyPath = true;\n  }\n}\nvar RangeMask = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.width = 200;\n    this.height = 30;\n    this.minRange = 0.05;\n    this._min = 0;\n    this._max = 1;\n  }\n  set min(value) {\n    var _a;\n    value = clamp2(0, value, this.max - this.minRange);\n    if (this._min !== value && !isNaN(value)) {\n      this._min = value;\n      this.dirtyPath = true;\n      (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n    }\n  }\n  get min() {\n    return this._min;\n  }\n  set max(value) {\n    var _a;\n    value = clamp2(this.min + this.minRange, value, 1);\n    if (this._max !== value && !isNaN(value)) {\n      this._max = value;\n      this.dirtyPath = true;\n      (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n    }\n  }\n  get max() {\n    return this._max;\n  }\n  computeBBox() {\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this;\n    return new BBox(x, y, width, height);\n  }\n  computeVisibleRangeBBox() {\n    const {\n      x,\n      y,\n      width,\n      height,\n      min,\n      max\n    } = this;\n    const minX = x + width * min;\n    const maxX = x + width * max;\n    return new BBox(minX, y, maxX - minX, height);\n  }\n  updatePath() {\n    const {\n      path,\n      x,\n      y,\n      width,\n      height,\n      min,\n      max\n    } = this;\n    path.clear();\n    const ax = this.align(x);\n    const ay = this.align(y);\n    const axw = ax + this.align(x, width);\n    const ayh = ay + this.align(y, height);\n    path.moveTo(ax, ay);\n    path.lineTo(axw, ay);\n    path.lineTo(axw, ayh);\n    path.lineTo(ax, ayh);\n    path.lineTo(ax, ay);\n    const minX = this.align(x + width * min);\n    const maxX = this.align(x + width * max);\n    path.moveTo(minX, ay);\n    path.lineTo(minX, ayh);\n    path.lineTo(maxX, ayh);\n    path.lineTo(maxX, ay);\n    path.lineTo(minX, ay);\n  }\n};\nRangeMask.className = \"RangeMask\";\n__decorateClass([ActionOnSet({\n  changeValue: markDirtyOnChange\n}), Validate(POSITIVE_NUMBER)], RangeMask.prototype, \"x\", 2);\n__decorateClass([ActionOnSet({\n  changeValue: markDirtyOnChange\n}), Validate(POSITIVE_NUMBER)], RangeMask.prototype, \"y\", 2);\n__decorateClass([ActionOnSet({\n  changeValue: markDirtyOnChange\n}), Validate(POSITIVE_NUMBER)], RangeMask.prototype, \"width\", 2);\n__decorateClass([ActionOnSet({\n  changeValue: markDirtyOnChange\n}), Validate(POSITIVE_NUMBER)], RangeMask.prototype, \"height\", 2);\n__decorateClass([Validate(NUMBER)], RangeMask.prototype, \"_min\", 2);\n__decorateClass([Validate(NUMBER)], RangeMask.prototype, \"_max\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeSelector.ts\nvar _RangeSelector = class _RangeSelector extends Group {\n  constructor() {\n    super({\n      name: \"rangeSelectorGroup\"\n    });\n    this.minHandle = new RangeHandle();\n    this.maxHandle = new RangeHandle();\n    this.mask = (() => {\n      const {\n        x,\n        y,\n        width,\n        height,\n        min,\n        max\n      } = _RangeSelector.defaults;\n      const mask = new RangeMask();\n      mask.x = x;\n      mask.y = y;\n      mask.width = width;\n      mask.height = height;\n      mask.min = min;\n      mask.max = max;\n      const {\n        minHandle,\n        maxHandle\n      } = this;\n      minHandle.centerX = x;\n      maxHandle.centerX = x + width;\n      minHandle.centerY = maxHandle.centerY = y + height / 2;\n      this.append([mask, minHandle, maxHandle]);\n      mask.onRangeChange = () => {\n        var _a;\n        this.updateHandles();\n        (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n      };\n      return mask;\n    })();\n    this._x = _RangeSelector.defaults.x;\n    this._y = _RangeSelector.defaults.y;\n    this._width = _RangeSelector.defaults.width;\n    this._height = _RangeSelector.defaults.height;\n    this._min = _RangeSelector.defaults.min;\n    this._max = _RangeSelector.defaults.max;\n    this.isContainerNode = true;\n  }\n  set x(value) {\n    this.mask.x = value;\n    this.updateHandles();\n  }\n  get x() {\n    return this.mask.x;\n  }\n  set y(value) {\n    this.mask.y = value;\n    this.updateHandles();\n  }\n  get y() {\n    return this.mask.y;\n  }\n  set width(value) {\n    this.mask.width = value;\n    this.updateHandles();\n  }\n  get width() {\n    return this.mask.width;\n  }\n  set height(value) {\n    this.mask.height = value;\n    this.updateHandles();\n  }\n  get height() {\n    return this.mask.height;\n  }\n  set min(value) {\n    this.mask.min = value;\n  }\n  get min() {\n    return this.mask.min;\n  }\n  set max(value) {\n    this.mask.max = value;\n  }\n  get max() {\n    return this.mask.max;\n  }\n  updateHandles() {\n    const {\n      minHandle,\n      maxHandle,\n      x,\n      y,\n      width,\n      height,\n      mask\n    } = this;\n    minHandle.centerX = x + width * mask.min;\n    maxHandle.centerX = x + width * mask.max;\n    minHandle.centerY = maxHandle.centerY = y + height / 2;\n  }\n  computeBBox() {\n    return this.mask.computeBBox();\n  }\n  computeVisibleRangeBBox() {\n    return this.mask.computeVisibleRangeBBox();\n  }\n  render(renderCtx) {\n    const {\n      ctx,\n      forceRender,\n      stats\n    } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats) stats.nodesSkipped++;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const {\n      mask,\n      minHandle,\n      maxHandle\n    } = this;\n    [mask, minHandle, maxHandle].forEach(child => {\n      if (child.visible && (forceRender || child.dirty > 0 /* NONE */)) {\n        ctx.save();\n        child.render(__spreadProps(__spreadValues({}, renderCtx), {\n          ctx,\n          forceRender\n        }));\n        ctx.restore();\n      }\n    });\n    this.markClean({\n      force: true\n    });\n    if (stats) stats.nodesRendered++;\n  }\n};\n_RangeSelector.className = \"Range\";\n_RangeSelector.defaults = {\n  x: 0,\n  y: 0,\n  width: 200,\n  height: 30,\n  min: 0,\n  max: 1\n};\nvar RangeSelector = _RangeSelector;\n\n// packages/ag-charts-community/src/chart/navigator/navigator.ts\nvar Navigator = class extends BaseModuleInstance {\n  constructor(ctx) {\n    var _a;\n    super();\n    this.ctx = ctx;\n    this.rs = new RangeSelector();\n    // Wrappers to allow option application to the scene graph nodes.\n    this.mask = new NavigatorMask(this.rs.mask);\n    this.minHandle = new NavigatorHandle(this.rs.minHandle);\n    this.maxHandle = new NavigatorHandle(this.rs.maxHandle);\n    this.minHandleDragging = false;\n    this.maxHandleDragging = false;\n    this.panHandleOffset = NaN;\n    this.enabled = false;\n    this.margin = 10;\n    this._visible = true;\n    this.rs.onRangeChange = () => ctx.zoomManager.updateZoom(\"navigator\", {\n      x: {\n        min: this.rs.min,\n        max: this.rs.max\n      },\n      y: {\n        min: 0,\n        max: 1\n      }\n    });\n    (_a = ctx.scene.root) == null ? void 0 : _a.appendChild(this.rs);\n    const interactionOpts = {\n      bypassPause: [\"animation\"]\n    };\n    this.destroyFns.push(ctx.interactionManager.addListener(\"drag-start\", event => this.onDragStart(event), interactionOpts), ctx.interactionManager.addListener(\"drag\", event => this.onDrag(event), interactionOpts), ctx.interactionManager.addListener(\"hover\", event => this.onDrag(event), interactionOpts), ctx.interactionManager.addListener(\"drag-end\", () => this.onDragStop(), interactionOpts), ctx.layoutService.addListener(\"before-series\", event => this.layout(event)), ctx.layoutService.addListener(\"layout-complete\", event => this.layoutComplete(event)), () => {\n      var _a2;\n      return (_a2 = ctx.scene.root) == null ? void 0 : _a2.removeChild(this.rs);\n    }, () => this.ctx.zoomManager.updateZoom(\"navigator\"));\n    this.updateGroupVisibility();\n  }\n  set width(value) {\n    this.rs.width = value;\n  }\n  get width() {\n    return this.rs.width;\n  }\n  set height(value) {\n    this.rs.height = value;\n  }\n  get height() {\n    return this.rs.height;\n  }\n  set min(value) {\n    this.rs.min = value;\n  }\n  get min() {\n    return this.rs.min;\n  }\n  set max(value) {\n    this.rs.max = value;\n  }\n  get max() {\n    return this.rs.max;\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  updateGroupVisibility() {\n    const visible = this.enabled && this.visible;\n    this.rs.visible = visible;\n    if (visible) {\n      this.ctx.zoomManager.updateZoom(\"navigator\", {\n        x: {\n          min: this.rs.min,\n          max: this.rs.max\n        },\n        y: {\n          min: 0,\n          max: 1\n        }\n      });\n    } else {\n      this.ctx.zoomManager.updateZoom(\"navigator\");\n    }\n  }\n  layout({\n    shrinkRect\n  }) {\n    if (this.enabled) {\n      const navigatorTotalHeight = this.rs.height + this.margin;\n      shrinkRect.shrink(navigatorTotalHeight, \"bottom\");\n      this.rs.y = shrinkRect.y + shrinkRect.height + this.margin;\n    }\n    return {\n      shrinkRect\n    };\n  }\n  layoutComplete({\n    series: {\n      rect,\n      visible\n    }\n  }) {\n    if (this.enabled && visible) {\n      this.rs.x = rect.x;\n      this.rs.width = rect.width;\n    }\n    this.visible = visible;\n  }\n  onDragStart(offset4) {\n    if (!this.enabled) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = offset4;\n    const {\n      rs\n    } = this;\n    const {\n      minHandle,\n      maxHandle,\n      x,\n      width,\n      min\n    } = rs;\n    const visibleRange = rs.computeVisibleRangeBBox();\n    if (!(this.minHandleDragging || this.maxHandleDragging)) {\n      if (minHandle.containsPoint(offsetX, offsetY)) {\n        this.minHandleDragging = true;\n      } else if (maxHandle.containsPoint(offsetX, offsetY)) {\n        this.maxHandleDragging = true;\n      } else if (visibleRange.containsPoint(offsetX, offsetY)) {\n        this.panHandleOffset = (offsetX - x) / width - min;\n      }\n    }\n  }\n  onDrag(offset4) {\n    if (!this.enabled) {\n      return;\n    }\n    const {\n      rs,\n      panHandleOffset\n    } = this;\n    const {\n      x,\n      y,\n      width,\n      height,\n      minHandle,\n      maxHandle\n    } = rs;\n    const {\n      offsetX,\n      offsetY\n    } = offset4;\n    const minX = x + width * rs.min;\n    const maxX = x + width * rs.max;\n    const visibleRange = new BBox(minX, y, maxX - minX, height);\n    const getRatio = () => Math.min(Math.max((offsetX - x) / width, 0), 1);\n    if (minHandle.containsPoint(offsetX, offsetY) || maxHandle.containsPoint(offsetX, offsetY)) {\n      this.ctx.cursorManager.updateCursor(\"navigator\", \"ew-resize\");\n    } else if (visibleRange.containsPoint(offsetX, offsetY)) {\n      this.ctx.cursorManager.updateCursor(\"navigator\", \"grab\");\n    } else {\n      this.ctx.cursorManager.updateCursor(\"navigator\");\n    }\n    if (this.minHandleDragging) {\n      rs.min = getRatio();\n    } else if (this.maxHandleDragging) {\n      rs.max = getRatio();\n    } else if (!isNaN(panHandleOffset)) {\n      const span = rs.max - rs.min;\n      const min = Math.min(getRatio() - panHandleOffset, 1 - span);\n      if (min <= rs.min) {\n        rs.min = min;\n        rs.max = rs.min + span;\n      } else {\n        rs.max = min + span;\n        rs.min = rs.max - span;\n      }\n    }\n  }\n  onDragStop() {\n    this.stopHandleDragging();\n  }\n  stopHandleDragging() {\n    this.minHandleDragging = this.maxHandleDragging = false;\n    this.panHandleOffset = NaN;\n  }\n};\n__decorateClass([ActionOnSet({\n  changeValue(newValue) {\n    if (newValue) {\n      this.min = 0;\n      this.max = 1;\n    }\n    this.updateGroupVisibility();\n  }\n}), Validate(BOOLEAN)], Navigator.prototype, \"enabled\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], Navigator.prototype, \"margin\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/navigatorModule.ts\nvar NavigatorModule = {\n  type: \"root\",\n  optionsKey: \"navigator\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  instanceConstructor: Navigator,\n  themeTemplate: {\n    navigator: {\n      enabled: false,\n      height: 30,\n      mask: {\n        fill: \"#999999\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        fillOpacity: 0.2\n      },\n      minHandle: {\n        fill: \"#f2f2f2\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        width: 8,\n        height: 16,\n        gripLineGap: 2,\n        gripLineLength: 8\n      },\n      maxHandle: {\n        fill: \"#f2f2f2\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        width: 8,\n        height: 16,\n        gripLineGap: 2,\n        gripLineLength: 8\n      }\n    }\n  }\n};\n\n// packages/ag-charts-community/src/util/theme.ts\nvar singleSeriesPaletteFactory = ({\n  takeColors\n}) => {\n  const {\n    fills: [fill],\n    strokes: [stroke]\n  } = takeColors(1);\n  return {\n    fill,\n    stroke\n  };\n};\nvar markerPaletteFactory = params => {\n  const {\n    fill,\n    stroke\n  } = singleSeriesPaletteFactory(params);\n  return {\n    marker: {\n      fill,\n      stroke\n    }\n  };\n};\n\n// packages/ag-charts-community/src/chart/themes/constants.ts\nvar FONT_SIZE = {\n  SMALL: 12,\n  MEDIUM: 13,\n  LARGE: 17\n};\nvar FONT_WEIGHT2 = {\n  NORMAL: \"normal\",\n  BOLD: \"bold\",\n  BOLDER: \"bolder\",\n  LIGHTER: \"lighter\"\n};\nvar BOTTOM = \"bottom\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar CARTESIAN_AXIS_POSITIONS = {\n  BOTTOM,\n  LEFT,\n  TOP\n};\nvar CATEGORY = \"category\";\nvar NUMBER2 = \"number\";\nvar TIME = \"time\";\nvar LOG = \"log\";\nvar CARTESIAN_AXIS_TYPES = {\n  CATEGORY,\n  NUMBER: NUMBER2,\n  TIME,\n  LOG\n};\nvar ANGLE_CATEGORY = \"angle-category\";\nvar ANGLE_NUMBER = \"angle-number\";\nvar RADIUS_CATEGORY = \"radius-category\";\nvar RADIUS_NUMBER = \"radius-number\";\nvar POLAR_AXIS_TYPES = {\n  ANGLE_CATEGORY,\n  ANGLE_NUMBER,\n  RADIUS_CATEGORY,\n  RADIUS_NUMBER\n};\nvar CIRCLE = \"circle\";\n\n// packages/ag-charts-community/src/chart/factory/chartTypes.ts\nvar TYPES = {};\nvar DEFAULTS = {};\nvar CHART_TYPES = {\n  has(seriesType) {\n    return Object.hasOwn(TYPES, seriesType);\n  },\n  isCartesian(seriesType) {\n    return TYPES[seriesType] === \"cartesian\";\n  },\n  isPolar(seriesType) {\n    return TYPES[seriesType] === \"polar\";\n  },\n  isHierarchy(seriesType) {\n    return TYPES[seriesType] === \"hierarchy\";\n  },\n  get seriesTypes() {\n    return Object.keys(TYPES);\n  },\n  get cartesianTypes() {\n    return this.seriesTypes.filter(t => this.isCartesian(t));\n  },\n  get polarTypes() {\n    return this.seriesTypes.filter(t => this.isPolar(t));\n  },\n  get hierarchyTypes() {\n    return this.seriesTypes.filter(t => this.isHierarchy(t));\n  }\n};\nfunction registerChartSeriesType(seriesType, chartType2) {\n  TYPES[seriesType] = chartType2;\n}\nfunction registerChartDefaults(chartType2, defaults) {\n  var _a;\n  DEFAULTS[chartType2] = jsonMerge([(_a = DEFAULTS[chartType2]) != null ? _a : {}, defaults]);\n}\nfunction getChartDefaults(chartType2) {\n  var _a;\n  return (_a = DEFAULTS[chartType2]) != null ? _a : {};\n}\nfunction getChartType(seriesType) {\n  var _a;\n  return (_a = TYPES[seriesType]) != null ? _a : \"unknown\";\n}\n\n// packages/ag-charts-community/src/chart/mapping/types.ts\nfunction optionsType(input) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = input.series) == null ? void 0 : _a[0]) == null ? void 0 : _b.type) != null ? _c : \"line\";\n}\nfunction isAgCartesianChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return true;\n  }\n  if (specifiedType === \"cartesian\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isCartesian(specifiedType) || isEnterpriseCartesian(specifiedType);\n}\nfunction isAgHierarchyChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  if (specifiedType === \"hierarchy\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isHierarchy(specifiedType) || isEnterpriseHierarchy(specifiedType);\n}\nfunction isAgPolarChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  if (specifiedType === \"polar\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isPolar(specifiedType) || isEnterprisePolar(specifiedType);\n}\nfunction isSeriesOptionType(input) {\n  if (input == null) {\n    return false;\n  }\n  return CHART_TYPES.has(input);\n}\nfunction isAxisOptionType(input) {\n  if (input == null) {\n    return false;\n  }\n  return AXIS_TYPES.has(input);\n}\n\n// packages/ag-charts-community/src/chart/mapping/defaults.ts\nvar DEFAULT_CARTESIAN_CHART_OVERRIDES = {\n  axes: [{\n    type: CARTESIAN_AXIS_TYPES.NUMBER,\n    position: CARTESIAN_AXIS_POSITIONS.LEFT\n  }, {\n    type: CARTESIAN_AXIS_TYPES.CATEGORY,\n    position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n  }]\n};\nfunction swapAxes(opts) {\n  var _a;\n  if (!isAgCartesianChartOptions(opts)) {\n    return opts;\n  }\n  const [axis0, axis1] = (_a = opts.axes) != null ? _a : [];\n  return __spreadProps(__spreadValues({}, opts), {\n    axes: [__spreadProps(__spreadValues({}, axis0), {\n      position: axis1.position\n    }), __spreadProps(__spreadValues({}, axis1), {\n      position: axis0.position\n    })]\n  });\n}\nfunction resolveModuleConflicts(opts) {\n  var _a, _b, _c, _d;\n  const conflictOverrides = {};\n  for (const [source, conflicts] of MODULE_CONFLICTS.entries()) {\n    if (opts[source] == null || !conflicts.length) {\n      continue;\n    }\n    (_a = conflictOverrides[source]) != null ? _a : conflictOverrides[source] = {};\n    for (const conflict of conflicts) {\n      if (((_b = opts[source]) == null ? void 0 : _b.enabled) && ((_c = opts[conflict]) == null ? void 0 : _c.enabled)) {\n        Logger.warnOnce(`the [${source}] module can not be used at the same time as [${conflict}], it will be disabled.`);\n        conflictOverrides[source].enabled = false;\n      } else {\n        conflictOverrides[source].enabled = (_d = opts[source]) == null ? void 0 : _d.enabled;\n      }\n    }\n  }\n  return conflictOverrides;\n}\n\n// packages/ag-charts-community/src/chart/themes/symbols.ts\nvar EXTENDS_CHART_DEFAULTS = Symbol(\"extends-chart-defaults\");\nvar EXTENDS_LEGEND_DEFAULTS = Symbol(\"extends-legend-defaults\");\nvar EXTENDS_LEGEND_ITEM_DEFAULTS = Symbol(\"extends-legend-item-defaults\");\nvar EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS = Symbol(\"extends-legend-item-marker-defaults\");\nvar EXTENDS_AXES_DEFAULTS = Symbol(\"extends-axes-defaults\");\nvar EXTENDS_AXES_LABEL_DEFAULTS = Symbol(\"extends-axes-label-defaults\");\nvar EXTENDS_AXES_LINE_DEFAULTS = Symbol(\"extends-axes-line-defaults\");\nvar EXTENDS_AXES_TICK_DEFAULTS = Symbol(\"extends-axes-tick-defaults\");\nvar EXTENDS_AXES_GRID_LINE_DEFAULTS = Symbol(\"extends-axes-grid-line-defaults\");\nvar EXTENDS_SERIES_DEFAULTS = Symbol(\"extends-series-defaults\");\nvar EXTENDS_CARTESIAN_MARKER_DEFAULTS = Symbol(\"extends-cartesian-marker-defaults\");\nvar OVERRIDE_SERIES_LABEL_DEFAULTS = Symbol(\"override-series-label-defaults\");\nvar DEFAULT_FONT_FAMILY = Symbol(\"default-font\");\nvar DEFAULT_LABEL_COLOUR = Symbol(\"default-label-colour\");\nvar DEFAULT_INVERTED_LABEL_COLOUR = Symbol(\"default-inverted-label-colour\");\nvar DEFAULT_INSIDE_SERIES_LABEL_COLOUR = Symbol(\"default-inside-series-label-colour\");\nvar DEFAULT_MUTED_LABEL_COLOUR = Symbol(\"default-muted-label-colour\");\nvar DEFAULT_AXIS_GRID_COLOUR = Symbol(\"default-axis-grid-colour\");\nvar DEFAULT_AXIS_LINE_COLOUR = Symbol(\"default-axis-line-colour\");\nvar DEFAULT_CROSS_LINES_COLOUR = Symbol(\"default-cross-lines-colour\");\nvar DEFAULT_BACKGROUND_COLOUR = Symbol(\"default-background-colour\");\nvar DEFAULT_SHADOW_COLOUR = Symbol(\"default-shadow-colour\");\nvar DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS = Symbol(\"default-waterfall-series-positive-colors\");\nvar DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS = Symbol(\"default-waterfall-series-negative-colors\");\nvar DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS = Symbol(\"default-waterfall-series-total-colors\");\nvar DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE = Symbol(\"default-waterfall-series-connector-line-stroke\");\nvar DEFAULT_POLAR_SERIES_STROKE = Symbol(\"default-polar-series-stroke\");\nvar DEFAULT_DIVERGING_SERIES_COLOUR_RANGE = Symbol(\"default-diverging-series-colour-range\");\nvar DEFAULT_HIERARCHY_FILLS = Symbol(\"default-hierarchy-fills\");\nvar DEFAULT_HIERARCHY_STROKES = Symbol(\"default-hierarchy-strokes\");\n\n// packages/ag-charts-community/src/motion/pathMotion.ts\nfunction pathMotion(groupId, subId, animationManager, paths, fns) {\n  const {\n    defaultDuration\n  } = animationManager;\n  const {\n    addPhaseFn,\n    updatePhaseFn,\n    removePhaseFn\n  } = fns;\n  const animate = (phase, path, updateFn) => {\n    animationManager.animate({\n      id: `${groupId}_${subId}_${path.id}_${phase}`,\n      groupId,\n      from: 0,\n      to: 1,\n      ease: easeOut,\n      onUpdate(ratio, preInit) {\n        if (preInit && phase !== \"removed\") return;\n        path.path.clear({\n          trackChanges: true\n        });\n        updateFn(ratio, path);\n        path.checkPathDirty();\n      },\n      onStop() {\n        if (phase !== \"added\") return;\n        path.path.clear({\n          trackChanges: true\n        });\n        updateFn(1, path);\n        path.checkPathDirty();\n      },\n      duration: FROM_TO_MIXINS[phase].animationDuration * defaultDuration,\n      delay: FROM_TO_MIXINS[phase].animationDelay * defaultDuration\n    });\n  };\n  for (const path of paths) {\n    if (!animationManager.isSkipped()) {\n      animate(\"removed\", path, removePhaseFn);\n      animate(\"updated\", path, updatePhaseFn);\n    }\n    animate(\"added\", path, addPhaseFn);\n  }\n}\n\n// packages/ag-charts-community/src/chart/series/seriesLabelUtil.ts\nfunction seriesLabelFadeInAnimation({\n  id\n}, subId, animationManager, labelSelections) {\n  staticFromToMotion(id, subId, animationManager, labelSelections, {\n    opacity: 0\n  }, {\n    opacity: 1\n  }, LABEL_PHASE);\n}\nfunction seriesLabelFadeOutAnimation({\n  id\n}, subId, animationManager, labelSelections) {\n  staticFromToMotion(id, subId, animationManager, labelSelections, {\n    opacity: 1\n  }, {\n    opacity: 0\n  }, LABEL_PHASE);\n}\nfunction resetLabelFn(_node) {\n  return {\n    opacity: 1\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/seriesMarker.ts\nvar MARKER_SHAPE = predicateWithMessage(value => isMarkerShape(value) || Object.getPrototypeOf(value) === Marker, `a marker shape keyword such as 'circle', 'diamond' or 'square' or an object extending the Marker class`);\nvar SeriesMarker = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.shape = Circle;\n    this.size = 6;\n    this.fillOpacity = 1;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n  }\n  getStyle() {\n    const {\n      size,\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      strokeOpacity\n    } = this;\n    return {\n      size,\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      strokeOpacity\n    };\n  }\n  getDiameter() {\n    return this.size + this.strokeWidth;\n  }\n};\n__decorateClass([Validate(BOOLEAN), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"enabled\", 2);\n__decorateClass([Validate(MARKER_SHAPE), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"shape\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"size\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n}), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n}), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n}), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], SeriesMarker.prototype, \"formatter\", 2);\n\n// packages/ag-charts-community/src/chart/series/seriesTooltip.ts\nvar SeriesTooltipInteraction = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = false;\n  }\n};\n__decorateClass([Validate(BOOLEAN)], SeriesTooltipInteraction.prototype, \"enabled\", 2);\nvar SeriesTooltip = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.interaction = new SeriesTooltipInteraction();\n    this.position = new TooltipPosition();\n  }\n  toTooltipHtml(defaults, params) {\n    if (this.renderer) {\n      return toTooltipHtml(this.renderer(params), defaults);\n    }\n    return toTooltipHtml(defaults);\n  }\n};\n__decorateClass([Validate(BOOLEAN)], SeriesTooltip.prototype, \"enabled\", 2);\n__decorateClass([Validate(BOOLEAN, {\n  optional: true\n})], SeriesTooltip.prototype, \"showArrow\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], SeriesTooltip.prototype, \"renderer\", 2);\n__decorateClass([Validate(OBJECT)], SeriesTooltip.prototype, \"interaction\", 2);\n__decorateClass([Validate(OBJECT)], SeriesTooltip.prototype, \"position\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeriesProperties.ts\nvar AreaSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.xName = void 0;\n    this.fill = \"#c16068\";\n    this.fillOpacity = 1;\n    this.stroke = \"#874349\";\n    this.strokeWidth = 2;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.shadow = new DropShadow();\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n    this.connectMissingData = false;\n  }\n};\n__decorateClass([Validate(STRING)], AreaSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], AreaSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING)], AreaSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], AreaSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], AreaSeriesProperties.prototype, \"normalizedTo\", 2);\n__decorateClass([Validate(COLOR_STRING)], AreaSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO)], AreaSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING)], AreaSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AreaSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO)], AreaSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH)], AreaSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], AreaSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([Validate(OBJECT)], AreaSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([Validate(OBJECT)], AreaSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([Validate(OBJECT)], AreaSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], AreaSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([Validate(BOOLEAN)], AreaSeriesProperties.prototype, \"connectMissingData\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/markerUtil.ts\nfunction markerFadeInAnimation({\n  id\n}, animationManager, markerSelections, status = \"unknown\") {\n  const params = __spreadValues({}, FROM_TO_MIXINS[status]);\n  staticFromToMotion(id, \"markers\", animationManager, markerSelections, {\n    opacity: 0\n  }, {\n    opacity: 1\n  }, params);\n  markerSelections.forEach(s => s.cleanup());\n}\nfunction markerScaleInAnimation({\n  id\n}, animationManager, markerSelections) {\n  staticFromToMotion(id, \"markers\", animationManager, markerSelections, {\n    scalingX: 0,\n    scalingY: 0\n  }, {\n    scalingX: 1,\n    scalingY: 1\n  });\n  markerSelections.forEach(s => s.cleanup());\n}\nfunction markerSwipeScaleInAnimation({\n  id,\n  nodeDataDependencies\n}, animationManager, markerSelections) {\n  const seriesWidth = nodeDataDependencies.seriesRectWidth;\n  const fromFn = (_, datum) => {\n    var _a, _b;\n    const x = (_b = (_a = datum.midPoint) == null ? void 0 : _a.x) != null ? _b : seriesWidth;\n    const delay = clamp2(0, inverseEaseOut(x / seriesWidth), 1);\n    const animationDuration = Debug.check(\"animationImmediateMarkerSwipeScaleIn\") ? 0 : QUICK_TRANSITION;\n    return {\n      scalingX: 0,\n      scalingY: 0,\n      animationDelay: delay,\n      animationDuration\n    };\n  };\n  const toFn = () => {\n    return {\n      scalingX: 1,\n      scalingY: 1\n    };\n  };\n  fromToMotion(id, \"markers\", animationManager, markerSelections, {\n    fromFn,\n    toFn\n  });\n}\nfunction resetMarkerFn(_node) {\n  return {\n    opacity: 1,\n    scalingX: 1,\n    scalingY: 1\n  };\n}\nfunction resetMarkerPositionFn(_node, datum) {\n  var _a, _b, _c, _d;\n  return {\n    translationX: (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : NaN,\n    translationY: (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : NaN\n  };\n}\nfunction prepareMarkerAnimation(pairMap, parentStatus) {\n  const readFirstPair = (xValue, type) => {\n    const val = pairMap[type][xValue];\n    return Array.isArray(val) ? val[0] : val;\n  };\n  const markerStatus = datum => {\n    const {\n      xValue\n    } = datum;\n    if (pairMap.moved[xValue]) {\n      return {\n        point: readFirstPair(xValue, \"moved\"),\n        status: \"updated\"\n      };\n    } else if (pairMap.removed[xValue]) {\n      return {\n        point: readFirstPair(xValue, \"removed\"),\n        status: \"removed\"\n      };\n    } else if (pairMap.added[xValue]) {\n      return {\n        point: readFirstPair(xValue, \"added\"),\n        status: \"added\"\n      };\n    }\n    return {\n      status: \"unknown\"\n    };\n  };\n  const fromFn = (marker, datum) => {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      status,\n      point\n    } = markerStatus(datum);\n    if (status === \"unknown\") return {\n      opacity: 0\n    };\n    const defaults = __spreadValues({\n      translationX: (_b = (_a = point == null ? void 0 : point.from) == null ? void 0 : _a.x) != null ? _b : marker.translationX,\n      translationY: (_d = (_c = point == null ? void 0 : point.from) == null ? void 0 : _c.y) != null ? _d : marker.translationY,\n      opacity: marker.opacity\n    }, FROM_TO_MIXINS[status]);\n    if (parentStatus === \"added\") {\n      return __spreadValues(__spreadProps(__spreadValues({}, defaults), {\n        opacity: 0,\n        translationX: (_e = point == null ? void 0 : point.to) == null ? void 0 : _e.x,\n        translationY: (_f = point == null ? void 0 : point.to) == null ? void 0 : _f.y\n      }), FROM_TO_MIXINS[\"added\"]);\n    }\n    if (status === \"added\") {\n      defaults.opacity = 0;\n    }\n    return defaults;\n  };\n  const toFn = (_marker, datum) => {\n    var _a, _b;\n    const {\n      status,\n      point\n    } = markerStatus(datum);\n    if (status === \"unknown\") return {\n      opacity: 0\n    };\n    const defaults = __spreadValues({\n      translationX: datum.point.x,\n      translationY: datum.point.y,\n      opacity: 1\n    }, FROM_TO_MIXINS[status]);\n    if (status === \"removed\" || parentStatus === \"removed\") {\n      return __spreadValues(__spreadProps(__spreadValues({}, defaults), {\n        translationX: (_a = point == null ? void 0 : point.to) == null ? void 0 : _a.x,\n        translationY: (_b = point == null ? void 0 : point.to) == null ? void 0 : _b.y,\n        opacity: 0\n      }), FROM_TO_MIXINS[\"removed\"]);\n    }\n    return defaults;\n  };\n  return {\n    fromFn,\n    toFn\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/pathUtil.ts\nfunction minMax(nodeData) {\n  return nodeData.reduce(({\n    min,\n    max\n  }, node) => {\n    if (min == null || min.point.x > node.point.x) {\n      min = node;\n    }\n    if (max == null || max.point.x < node.point.x) {\n      max = node;\n    }\n    return {\n      min,\n      max\n    };\n  }, {});\n}\nfunction intersectionOnLine(a, b, targetX) {\n  const m = (b.y - a.y) / (b.x - a.x);\n  const y = (targetX - a.x) * m + a.y;\n  return {\n    x: targetX,\n    y\n  };\n}\nfunction backfillPathPoint(results, process, skip, processFn) {\n  let prevMarkerIdx = -1,\n    nextMarkerIdx = 0;\n  const toProcess = [];\n  while (nextMarkerIdx < results.length) {\n    if (results[nextMarkerIdx].change === process) {\n      toProcess.push(results[nextMarkerIdx]);\n      nextMarkerIdx++;\n      continue;\n    }\n    if (results[nextMarkerIdx].change === skip) {\n      nextMarkerIdx++;\n      continue;\n    }\n    if (toProcess.length > 0) {\n      processFn(toProcess, prevMarkerIdx, nextMarkerIdx);\n      toProcess.length = 0;\n    }\n    prevMarkerIdx = nextMarkerIdx;\n    nextMarkerIdx++;\n  }\n  if (toProcess.length > 0) {\n    processFn(toProcess, prevMarkerIdx, nextMarkerIdx);\n  }\n}\nfunction backfillPathPointData(result, splitMode) {\n  backfillPathPoint(result, \"out\", \"in\", (toProcess, sIdx, eIdx) => {\n    var _a, _b;\n    if (sIdx === -1 && result[eIdx]) {\n      toProcess.forEach(d => d.to = result[eIdx].from);\n    } else if (eIdx === result.length && result[sIdx]) {\n      toProcess.forEach(d => d.to = result[sIdx].from);\n    } else if (splitMode === \"intersect\" && ((_a = result[sIdx]) == null ? void 0 : _a.from) && ((_b = result[eIdx]) == null ? void 0 : _b.from)) {\n      toProcess.forEach(d => d.to = intersectionOnLine(result[sIdx].from, result[eIdx].from, d.from.x));\n    } else {\n      toProcess.forEach(d => d.to = d.from);\n    }\n  });\n  backfillPathPoint(result, \"in\", \"out\", (toProcess, sIdx, eIdx) => {\n    var _a, _b;\n    if (sIdx === -1 && result[eIdx]) {\n      toProcess.forEach(d => d.from = result[eIdx].to);\n    } else if (eIdx === result.length && result[sIdx]) {\n      toProcess.forEach(d => d.from = result[sIdx].to);\n    } else if (splitMode === \"intersect\" && ((_a = result[sIdx]) == null ? void 0 : _a.to) && ((_b = result[eIdx]) == null ? void 0 : _b.to)) {\n      toProcess.forEach(d => d.from = intersectionOnLine(result[sIdx].to, result[eIdx].to, d.to.x));\n    } else {\n      toProcess.forEach(d => d.from = d.to);\n    }\n  });\n}\nfunction calculatePoint(from, to, ratio) {\n  const x1 = isNaN(from.x) ? to.x : from.x;\n  const y1 = isNaN(from.y) ? to.y : from.y;\n  const xd = to.x - from.x;\n  const yd = to.y - from.y;\n  const xr = isNaN(xd) ? 0 : xd * ratio;\n  const yr = isNaN(yd) ? 0 : yd * ratio;\n  return {\n    x: x1 + xr,\n    y: y1 + yr\n  };\n}\nfunction renderPartialPath(pairData, ratios, path) {\n  const {\n    path: linePath\n  } = path;\n  let previousTo;\n  for (const data of pairData) {\n    const ratio = ratios[data.change];\n    if (ratio == null) continue;\n    const {\n      from,\n      to\n    } = data;\n    if (from == null || to == null) continue;\n    const {\n      x,\n      y\n    } = calculatePoint(from, to, ratio);\n    if (data.moveTo === false) {\n      linePath.lineTo(x, y);\n    } else if (data.moveTo === true || !previousTo) {\n      linePath.moveTo(x, y);\n    } else if (previousTo) {\n      const moveToRatio = data.moveTo === \"in\" ? ratio : 1 - ratio;\n      const {\n        x: midPointX,\n        y: midPointY\n      } = calculatePoint(previousTo, {\n        x,\n        y\n      }, moveToRatio);\n      linePath.lineTo(midPointX, midPointY);\n      linePath.moveTo(x, y);\n    }\n    previousTo = {\n      x,\n      y\n    };\n  }\n}\nfunction pathSwipeInAnimation({\n  id,\n  visible\n}, animationManager, paths) {\n  staticFromToMotion(id, \"path_properties\", animationManager, paths, {\n    clipScalingX: 0\n  }, {\n    clipScalingX: 1\n  }, {\n    start: {\n      clipMode: \"normal\",\n      visible\n    },\n    finish: {\n      clipMode: void 0,\n      visible\n    }\n  });\n}\nfunction pathFadeInAnimation({\n  id\n}, subId, animationManager, selection) {\n  staticFromToMotion(id, subId, animationManager, selection, {\n    opacity: 0\n  }, {\n    opacity: 1\n  }, LABEL_PHASE);\n}\nfunction pathFadeOutAnimation({\n  id\n}, subId, animationManager, selection) {\n  staticFromToMotion(id, subId, animationManager, selection, {\n    opacity: 1\n  }, {\n    opacity: 0\n  }, LABEL_PHASE);\n}\nfunction buildResetPathFn(opts) {\n  return _node => {\n    return {\n      opacity: opts.getOpacity(),\n      clipScalingX: 1,\n      clipMode: void 0\n    };\n  };\n}\nfunction updateClipPath({\n  nodeDataDependencies\n}, path) {\n  var _a, _b;\n  const {\n    seriesRectHeight: height,\n    seriesRectWidth: width\n  } = nodeDataDependencies;\n  if (path.clipPath == null) {\n    path.clipPath = new Path2D();\n    path.clipScalingX = 1;\n    path.clipScalingY = 1;\n  }\n  (_a = path.clipPath) == null ? void 0 : _a.clear({\n    trackChanges: true\n  });\n  (_b = path.clipPath) == null ? void 0 : _b.rect(-25, -25, toReal(width) + 50, toReal(height) + 50);\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/scaling.ts\nfunction isContinuousScaling(scaling) {\n  return scaling.type === \"continuous\" || scaling.type === \"log\";\n}\nfunction isCategoryScaling(scaling) {\n  return scaling.type === \"category\";\n}\nfunction areEqual(a, b) {\n  return a.domain.length === b.domain.length && a.range.length === b.range.length && a.domain.every((val, index) => val === b.domain[index]) && a.range.every((val, index) => val === b.range[index]);\n}\nfunction areScalingEqual(a, b) {\n  if (a === void 0 || b === void 0) {\n    return a !== void 0 || b !== void 0;\n  }\n  if (isContinuousScaling(a) && isContinuousScaling(b)) {\n    return a.type === b.type && areEqual(a, b);\n  }\n  if (isCategoryScaling(a) && isCategoryScaling(b)) {\n    return areEqual(a, b);\n  }\n  return false;\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineUtil.ts\nfunction scale(val, scaling) {\n  if (!scaling) return NaN;\n  if (val instanceof Date) {\n    val = val.getTime();\n  }\n  if (scaling.type === \"continuous\" && typeof val === \"number\") {\n    const domainRatio = (val - scaling.domain[0]) / (scaling.domain[1] - scaling.domain[0]);\n    return domainRatio * (scaling.range[1] - scaling.range[0]) + scaling.range[0];\n  }\n  if (scaling.type === \"log\" && typeof val === \"number\") {\n    return scaling.convert(val);\n  }\n  const matchingIndex = scaling.domain.findIndex(d => d === val);\n  if (matchingIndex >= 0) {\n    return scaling.range[matchingIndex];\n  }\n  return NaN;\n}\nfunction scalesChanged(newData, oldData) {\n  return !areScalingEqual(newData.scales.x, oldData.scales.x) || !areScalingEqual(newData.scales.y, oldData.scales.y);\n}\nfunction closeMatch(a, b) {\n  const an = Number(a);\n  const bn = Number(b);\n  if (!isNaN(an) && !isNaN(bn)) {\n    return Math.abs(bn - an) < 0.25;\n  }\n  return a === b;\n}\nfunction calculateMoveTo(from = false, to = false) {\n  if (from === to) {\n    return !!from;\n  }\n  return from ? \"in\" : \"out\";\n}\nfunction pairContinuousData(newData, oldData, opts = {}) {\n  var _a, _b, _c, _d;\n  const {\n    backfillSplitMode = \"intersect\"\n  } = opts;\n  const toNewScale = oldDatum => {\n    var _a2, _b2;\n    return {\n      x: scale((_a2 = oldDatum.xValue) != null ? _a2 : NaN, newData.scales.x),\n      y: scale((_b2 = oldDatum.yValue) != null ? _b2 : NaN, newData.scales.y)\n    };\n  };\n  const toOldScale = newDatum => {\n    var _a2, _b2;\n    return {\n      x: scale((_a2 = newDatum.xValue) != null ? _a2 : NaN, oldData.scales.x),\n      y: scale((_b2 = newDatum.yValue) != null ? _b2 : NaN, oldData.scales.y)\n    };\n  };\n  const result = [];\n  const resultMap = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  const pairUp = (from, to, xValue, change = \"move\") => {\n    if (from && (isNaN(from.point.x) || isNaN(from.point.y))) {\n      from = to;\n    }\n    const resultPoint = {\n      from: from == null ? void 0 : from.point,\n      to: to == null ? void 0 : to.point,\n      moveTo: calculateMoveTo(from == null ? void 0 : from.point.moveTo, to == null ? void 0 : to.point.moveTo),\n      change\n    };\n    if (change === \"move\") {\n      resultMap.moved[xValue] = resultPoint;\n      oldIdx++;\n      newIdx++;\n    } else if (change === \"in\") {\n      resultMap.added[xValue] = resultPoint;\n      newIdx++;\n    } else if (change === \"out\") {\n      resultMap.removed[xValue] = resultPoint;\n      oldIdx++;\n    }\n    result.push(resultPoint);\n  };\n  const {\n    min: minFromNode,\n    max: maxFromNode\n  } = minMax(oldData.nodeData);\n  const {\n    min: minToNode,\n    max: maxToNode\n  } = minMax(newData.nodeData);\n  let oldIdx = 0;\n  let newIdx = 0;\n  while (oldIdx < oldData.nodeData.length || newIdx < newData.nodeData.length) {\n    const from = oldData.nodeData[oldIdx];\n    const to = newData.nodeData[newIdx];\n    const fromShifted = from ? toNewScale(from) : void 0;\n    const toUnshifted = to ? toOldScale(to) : void 0;\n    const NA = void 0;\n    if (fromShifted && closeMatch(fromShifted.x, to == null ? void 0 : to.point.x)) {\n      pairUp(from, to, to.xValue, \"move\");\n    } else if (fromShifted && fromShifted.x < ((_a = minToNode == null ? void 0 : minToNode.point.x) != null ? _a : -Infinity)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (fromShifted && fromShifted.x > ((_b = maxToNode == null ? void 0 : maxToNode.point.x) != null ? _b : Infinity)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (toUnshifted && toUnshifted.x < ((_c = minFromNode == null ? void 0 : minFromNode.point.x) != null ? _c : -Infinity)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (toUnshifted && toUnshifted.x > ((_d = maxFromNode == null ? void 0 : maxFromNode.point.x) != null ? _d : Infinity)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (fromShifted && fromShifted.x < (to == null ? void 0 : to.point.x)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (toUnshifted && toUnshifted.x < (from == null ? void 0 : from.point.x)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (from) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (to) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else {\n      throw new Error(\"Unable to process points\");\n    }\n  }\n  backfillPathPointData(result, backfillSplitMode);\n  return {\n    result,\n    resultMap\n  };\n}\nfunction pairCategoryData(newData, oldData, diff2, opts = {}) {\n  var _a, _b, _c;\n  const {\n    backfillSplitMode = \"intersect\",\n    multiDatum = false\n  } = opts;\n  const result = [];\n  const resultMapSingle = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  const resultMapMulti = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  let previousResultPoint = void 0;\n  let previousXValue = void 0;\n  const addToResultMap = (xValue, result2) => {\n    var _a2, _b2;\n    const type = result2.change === \"move\" ? \"moved\" : result2.change === \"in\" ? \"added\" : \"removed\";\n    if (multiDatum) {\n      (_b2 = (_a2 = resultMapMulti[type])[xValue]) != null ? _b2 : _a2[xValue] = [];\n      resultMapMulti[type][xValue].push(result2);\n    } else {\n      resultMapSingle[type][xValue] = result2;\n    }\n    previousResultPoint = result2;\n    previousXValue = xValue;\n  };\n  let oldIndex = 0;\n  let newIndex = 0;\n  let isXUnordered = false;\n  while (oldIndex < oldData.nodeData.length || newIndex < newData.nodeData.length) {\n    const before = oldData.nodeData[oldIndex];\n    const after = newData.nodeData[newIndex];\n    let resultPoint;\n    if ((before == null ? void 0 : before.xValue) === (after == null ? void 0 : after.xValue)) {\n      resultPoint = {\n        change: \"move\",\n        moveTo: calculateMoveTo((_a = before.point.moveTo) != null ? _a : false, after.point.moveTo),\n        from: before.point,\n        to: after.point\n      };\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n      newIndex++;\n    } else if (diff2 !== void 0 && diff2.removed.indexOf(before == null ? void 0 : before.xValue) >= 0) {\n      resultPoint = {\n        change: \"out\",\n        moveTo: (_b = before.point.moveTo) != null ? _b : false,\n        from: before.point\n      };\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n    } else if (diff2 !== void 0 && diff2.added.indexOf(after == null ? void 0 : after.xValue) >= 0) {\n      resultPoint = {\n        change: \"in\",\n        moveTo: (_c = after.point.moveTo) != null ? _c : false,\n        to: after.point\n      };\n      addToResultMap(after.xValue, resultPoint);\n      newIndex++;\n    } else if (multiDatum && previousResultPoint && previousXValue === (before == null ? void 0 : before.xValue)) {\n      resultPoint = __spreadValues({}, previousResultPoint);\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n    } else if (multiDatum && previousResultPoint && previousXValue === (after == null ? void 0 : after.xValue)) {\n      resultPoint = __spreadValues({}, previousResultPoint);\n      addToResultMap(after.xValue, resultPoint);\n      newIndex++;\n    } else {\n      isXUnordered = true;\n      break;\n    }\n    result.push(resultPoint);\n  }\n  let previousX = -Infinity;\n  isXUnordered || (isXUnordered = result.some(pathPoint => {\n    const {\n      change: marker,\n      to: {\n        x = -Infinity\n      } = {}\n    } = pathPoint;\n    if (marker === \"out\") return;\n    const result2 = x < previousX;\n    previousX = x;\n    return result2;\n  }));\n  if (isXUnordered) {\n    return {\n      result: void 0,\n      resultMap: void 0\n    };\n  }\n  backfillPathPointData(result, backfillSplitMode);\n  if (multiDatum) {\n    return {\n      result,\n      resultMap: resultMapMulti\n    };\n  }\n  return {\n    result,\n    resultMap: resultMapSingle\n  };\n}\nfunction determinePathStatus(newData, oldData) {\n  let status = \"updated\";\n  const visible = data => {\n    return data.visible;\n  };\n  if (!visible(oldData) && visible(newData)) {\n    status = \"added\";\n  } else if (visible(oldData) && !visible(newData)) {\n    status = \"removed\";\n  }\n  return status;\n}\nfunction prepareLinePathPropertyAnimation(status, visibleToggleMode) {\n  const phase = visibleToggleMode === \"none\" ? \"updated\" : status;\n  const result = {\n    fromFn: _path => {\n      let mixin;\n      if (status === \"removed\") {\n        mixin = {\n          finish: {\n            visible: false\n          }\n        };\n      } else if (status === \"added\") {\n        mixin = {\n          start: {\n            visible: true\n          }\n        };\n      } else {\n        mixin = {};\n      }\n      return __spreadValues(__spreadValues({}, FROM_TO_MIXINS[phase]), mixin);\n    },\n    toFn: _path => {\n      return __spreadValues({}, FROM_TO_MIXINS[phase]);\n    }\n  };\n  if (visibleToggleMode === \"fade\") {\n    return {\n      fromFn: path => {\n        const opacity = status === \"added\" ? 0 : path.opacity;\n        return __spreadValues({\n          opacity\n        }, result.fromFn(path));\n      },\n      toFn: path => {\n        const opacity = status === \"removed\" ? 0 : 1;\n        return __spreadValues({\n          opacity\n        }, result.toFn(path));\n      }\n    };\n  }\n  return result;\n}\nfunction prepareLinePathAnimationFns(newData, oldData, pairData, visibleToggleMode, render) {\n  const status = determinePathStatus(newData, oldData);\n  const removePhaseFn = (ratio, path) => {\n    render(pairData, {\n      move: 0,\n      out: ratio\n    }, path);\n  };\n  const updatePhaseFn = (ratio, path) => {\n    render(pairData, {\n      move: ratio\n    }, path);\n  };\n  const addPhaseFn = (ratio, path) => {\n    render(pairData, {\n      move: 1,\n      in: ratio\n    }, path);\n  };\n  const pathProperties = prepareLinePathPropertyAnimation(status, visibleToggleMode);\n  return {\n    status,\n    path: {\n      addPhaseFn,\n      updatePhaseFn,\n      removePhaseFn\n    },\n    pathProperties\n  };\n}\nfunction prepareLinePathAnimation(newData, oldData, diff2) {\n  var _a, _b;\n  const isCategoryBased = ((_a = newData.scales.x) == null ? void 0 : _a.type) === \"category\";\n  const {\n    result: pairData,\n    resultMap: pairMap\n  } = isCategoryBased ? pairCategoryData(newData, oldData, diff2) : pairContinuousData(newData, oldData);\n  let status = \"updated\";\n  if (oldData.visible && !newData.visible) {\n    status = \"removed\";\n  } else if (!oldData.visible && newData.visible) {\n    status = \"added\";\n  }\n  if (pairData === void 0 || pairMap === void 0) {\n    return;\n  }\n  const hasMotion = ((_b = diff2 == null ? void 0 : diff2.changed) != null ? _b : true) || scalesChanged(newData, oldData);\n  const pathFns = prepareLinePathAnimationFns(newData, oldData, pairData, \"fade\", renderPartialPath);\n  const marker = prepareMarkerAnimation(pairMap, status);\n  return __spreadProps(__spreadValues({}, pathFns), {\n    marker,\n    hasMotion\n  });\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaUtil.ts\nvar AreaSeriesTag = /* @__PURE__ */(AreaSeriesTag2 => {\n  AreaSeriesTag2[AreaSeriesTag2[\"Fill\"] = 0] = \"Fill\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Stroke\"] = 1] = \"Stroke\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Marker\"] = 2] = \"Marker\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Label\"] = 3] = \"Label\";\n  return AreaSeriesTag2;\n})(AreaSeriesTag || {});\nfunction splitFillPoints(context) {\n  const {\n    points\n  } = context.fillData;\n  return {\n    top: points.slice(0, points.length / 2),\n    bottom: points.slice(points.length / 2).reverse()\n  };\n}\nfunction prepPoints(key, ctx, points) {\n  return {\n    scales: ctx.scales,\n    nodeData: points[key],\n    visible: ctx.visible\n  };\n}\nfunction pairFillCategoryData(newData, oldData, diff2) {\n  const oldPoints = splitFillPoints(oldData);\n  const newPoints = splitFillPoints(newData);\n  const pairOpts = {\n    multiDatum: true\n  };\n  return {\n    top: pairCategoryData(prepPoints(\"top\", newData, newPoints), prepPoints(\"top\", oldData, oldPoints), diff2, pairOpts),\n    bottom: pairCategoryData(prepPoints(\"bottom\", newData, newPoints), prepPoints(\"bottom\", oldData, oldPoints), diff2, pairOpts)\n  };\n}\nfunction pairFillContinuousData(newData, oldData) {\n  const oldPoints = splitFillPoints(oldData);\n  const newPoints = splitFillPoints(newData);\n  return {\n    top: pairContinuousData(prepPoints(\"top\", newData, newPoints), prepPoints(\"top\", oldData, oldPoints)),\n    bottom: pairContinuousData(prepPoints(\"bottom\", newData, newPoints), prepPoints(\"bottom\", oldData, oldPoints))\n  };\n}\nfunction prepareAreaPathAnimation(newData, oldData, diff2) {\n  var _a;\n  const isCategoryBased = ((_a = newData.scales.x) == null ? void 0 : _a.type) === \"category\";\n  let status = \"updated\";\n  if (oldData.visible && !newData.visible) {\n    status = \"removed\";\n  } else if (!oldData.visible && newData.visible) {\n    status = \"added\";\n  }\n  const prepareMarkerPairs = () => {\n    if (isCategoryBased) {\n      return pairCategoryData(newData, oldData, diff2, {\n        backfillSplitMode: \"static\",\n        multiDatum: true\n      });\n    }\n    return pairContinuousData(newData, oldData, {\n      backfillSplitMode: \"static\"\n    });\n  };\n  const prepareFillPairs = () => {\n    if (isCategoryBased) {\n      return pairFillCategoryData(newData, oldData, diff2);\n    }\n    return pairFillContinuousData(newData, oldData);\n  };\n  const {\n    resultMap: markerPairMap\n  } = prepareMarkerPairs();\n  const {\n    top,\n    bottom\n  } = prepareFillPairs();\n  if (markerPairMap === void 0 || top.result === void 0 || bottom.result === void 0) {\n    return;\n  }\n  const pairData = [...top.result, ...bottom.result.reverse()];\n  const fill = prepareLinePathAnimationFns(newData, oldData, pairData, \"none\", renderPartialPath);\n  const marker = prepareMarkerAnimation(markerPairMap, status);\n  return {\n    fill,\n    marker\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeries.ts\nvar _AreaSeries = class _AreaSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pathsPerSeries: 2,\n      pathsZIndexSubOrderOffset: [0, 1e3],\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      pickModes: [1 /* NEAREST_BY_MAIN_AXIS_FIRST */, 0 /* EXACT_SHAPE_MATCH */],\n      animationResetFns: {\n        path: buildResetPathFn({\n          getOpacity: () => this.getOpacity()\n        }),\n        label: resetLabelFn,\n        marker: (node, datum) => __spreadValues(__spreadValues({}, resetMarkerFn(node)), resetMarkerPositionFn(node, datum))\n      }\n    });\n    this.properties = new AreaSeriesProperties();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      if (this.data == null || !this.properties.isValid()) {\n        return;\n      }\n      const {\n        data,\n        visible,\n        seriesGrouping: {\n          groupIndex = this.id,\n          stackCount = 1\n        } = {}\n      } = this;\n      const {\n        xKey,\n        yKey,\n        connectMissingData,\n        normalizedTo\n      } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const {\n        isContinuousX,\n        isContinuousY\n      } = this.isContinuous();\n      const ids = [`area-stack-${groupIndex}-yValues`, `area-stack-${groupIndex}-yValues-trailing`, `area-stack-${groupIndex}-yValues-prev`, `area-stack-${groupIndex}-yValues-trailing-prev`, `area-stack-${groupIndex}-yValues-marker`];\n      const extraProps = [];\n      if (isDefined(normalizedTo)) {\n        extraProps.push(normaliseGroupTo(this, [ids[0], ids[1], ids[4]], normalizedTo, \"range\"));\n        extraProps.push(normaliseGroupTo(this, [ids[2], ids[3]], normalizedTo, \"range\"));\n      }\n      if (!isContinuousX && animationEnabled && this.processedData) {\n        extraProps.push(diff(this.processedData));\n      }\n      if (animationEnabled) {\n        extraProps.push(animationValidation(this));\n      }\n      const common = {\n        invalidValue: null\n      };\n      if (connectMissingData && stackCount > 1) {\n        common.invalidValue = 0;\n      }\n      if (!visible) {\n        common.forceValue = 0;\n      }\n      yield this.requestDataModel(dataController, data, {\n        props: [keyProperty(this, xKey, isContinuousX, {\n          id: \"xValue\"\n        }), valueProperty(this, yKey, isContinuousY, __spreadValues({\n          id: `yValueRaw`\n        }, common)), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window\", \"current\", __spreadProps(__spreadValues({\n          id: `yValueEnd`\n        }, common), {\n          groupId: ids[0]\n        })), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window-trailing\", \"current\", __spreadProps(__spreadValues({\n          id: `yValueStart`\n        }, common), {\n          groupId: ids[1]\n        })), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window\", \"last\", __spreadProps(__spreadValues({\n          id: `yValuePreviousEnd`\n        }, common), {\n          groupId: ids[2]\n        })), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window-trailing\", \"last\", __spreadProps(__spreadValues({\n          id: `yValuePreviousStart`\n        }, common), {\n          groupId: ids[3]\n        })), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"normal\", \"current\", __spreadProps(__spreadValues({\n          id: `yValueCumulative`\n        }, common), {\n          groupId: ids[4]\n        })), ...extraProps],\n        groupByKeys: true,\n        groupByData: false\n      });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const {\n      processedData,\n      dataModel,\n      axes\n    } = this;\n    if (!processedData || !dataModel || processedData.data.length === 0) return [];\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const keyDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    const keys = dataModel.getDomain(this, `xValue`, \"key\", processedData);\n    const yExtent = dataModel.getDomain(this, `yValueEnd`, \"value\", processedData);\n    if (direction === \"x\" /* X */) {\n      if ((keyDef == null ? void 0 : keyDef.def.type) === \"key\" && keyDef.def.valueType === \"category\") {\n        return keys;\n      }\n      return fixNumericExtent(extent(keys), xAxis);\n    } else if (yAxis instanceof LogAxis || yAxis instanceof TimeAxis) {\n      return fixNumericExtent(yExtent, yAxis);\n    } else {\n      const fixedYExtent = [yExtent[0] > 0 ? 0 : yExtent[0], yExtent[1] < 0 ? 0 : yExtent[1]];\n      return fixNumericExtent(fixedYExtent, yAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        axes,\n        data,\n        processedData: {\n          data: groupedData\n        } = {},\n        dataModel\n      } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!xAxis || !yAxis || !data || !dataModel || !this.properties.isValid()) {\n        return [];\n      }\n      const {\n        yKey,\n        xKey,\n        marker,\n        label,\n        fill: seriesFill,\n        stroke: seriesStroke,\n        connectMissingData\n      } = this.properties;\n      const {\n        scale: xScale\n      } = xAxis;\n      const {\n        scale: yScale\n      } = yAxis;\n      const continuousY = ContinuousScale.is(yScale);\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const defs = dataModel.resolveProcessedDataDefsByIds(this, [`yValueStart`, `yValueEnd`, `yValueRaw`, `yValuePreviousStart`, `yValuePreviousEnd`, `yValueCumulative`]);\n      const createMovePoint = plainPoint => {\n        const _a2 = plainPoint,\n          {\n            point\n          } = _a2,\n          stroke = __objRest(_a2, [\"point\"]);\n        return __spreadProps(__spreadValues({}, stroke), {\n          point: __spreadProps(__spreadValues({}, point), {\n            moveTo: true\n          })\n        });\n      };\n      const createPathCoordinates = (xValue, lastYEnd, yEnd) => {\n        const x = xScale.convert(xValue) + xOffset;\n        const prevYCoordinate = yScale.convert(lastYEnd);\n        const currYCoordinate = yScale.convert(yEnd);\n        return [{\n          point: {\n            x,\n            y: currYCoordinate\n          },\n          yValue: yEnd,\n          xValue\n        }, {\n          point: {\n            x,\n            y: prevYCoordinate\n          },\n          yValue: lastYEnd,\n          xValue\n        }];\n      };\n      const createMarkerCoordinate = (xDatum, yEnd, rawYDatum) => {\n        let currY;\n        if (isDefined(this.properties.normalizedTo) ? continuousY && isContinuous(rawYDatum) : !isNaN(rawYDatum)) {\n          currY = yEnd;\n        }\n        return {\n          x: xScale.convert(xDatum) + xOffset,\n          y: yScale.convert(currY),\n          size: marker.size\n        };\n      };\n      const itemId = yKey;\n      const labelData = [];\n      const markerData = [];\n      const context = {\n        itemId,\n        fillData: {\n          itemId,\n          points: []\n        },\n        strokeData: {\n          itemId,\n          points: []\n        },\n        labelData,\n        nodeData: markerData,\n        scales: __superGet(_AreaSeries.prototype, this, \"calculateScaling\").call(this),\n        visible: this.visible\n      };\n      const fillPoints = context.fillData.points;\n      const fillPhantomPoints = [];\n      const strokePoints = context.strokeData.points;\n      let datumIdx = -1;\n      let lastXDatum;\n      let lastYDatum = -Infinity;\n      groupedData == null ? void 0 : groupedData.forEach(datumGroup => {\n        const {\n          keys,\n          keys: [xDatum],\n          datum: datumArray,\n          values: valuesArray\n        } = datumGroup;\n        valuesArray.forEach((values, valueIdx) => {\n          var _a2, _b, _c;\n          datumIdx++;\n          const seriesDatum = datumArray[valueIdx];\n          const dataValues = dataModel.resolveProcessedDataDefsValues(defs, {\n            keys,\n            values\n          });\n          const {\n            yValueRaw: yDatum,\n            yValueCumulative\n          } = dataValues;\n          let {\n            yValueStart,\n            yValueEnd,\n            yValuePreviousStart,\n            yValuePreviousEnd\n          } = dataValues;\n          const validPoint = yDatum != null;\n          const point = createMarkerCoordinate(xDatum, +yValueCumulative, yDatum);\n          if (validPoint && marker) {\n            markerData.push({\n              index: datumIdx,\n              series: this,\n              itemId,\n              datum: seriesDatum,\n              midPoint: {\n                x: point.x,\n                y: point.y\n              },\n              cumulativeValue: yValueEnd,\n              yValue: yDatum,\n              xValue: xDatum,\n              yKey,\n              xKey,\n              point,\n              fill: (_a2 = marker.fill) != null ? _a2 : seriesFill,\n              stroke: (_b = marker.stroke) != null ? _b : seriesStroke,\n              strokeWidth: (_c = marker.strokeWidth) != null ? _c : this.getStrokeWidth(this.properties.strokeWidth)\n            });\n          }\n          if (validPoint && label) {\n            const labelText = this.getLabelText(label, {\n              value: yDatum,\n              datum: seriesDatum,\n              xKey,\n              yKey,\n              xName: this.properties.xName,\n              yName: this.properties.yName\n            }, value => isNumber2(value) ? value.toFixed(2) : String(value));\n            labelData.push({\n              index: datumIdx,\n              series: this,\n              itemId: yKey,\n              datum: seriesDatum,\n              x: point.x,\n              y: point.y,\n              label: labelText ? {\n                text: labelText,\n                fontStyle: label.fontStyle,\n                fontWeight: label.fontWeight,\n                fontSize: label.fontSize,\n                fontFamily: label.fontFamily,\n                textAlign: \"center\",\n                textBaseline: \"bottom\",\n                fill: label.color\n              } : void 0\n            });\n          }\n          const xValid = lastXDatum != null && xDatum != null;\n          const yValid = lastYDatum != null && validPoint;\n          if (!yValid) {\n            yValueStart = yValueStart != null ? yValueStart : 0;\n            yValueEnd = yValueStart != null ? yValueStart : 0;\n            yValuePreviousStart = yValuePreviousStart != null ? yValuePreviousStart : 0;\n            yValuePreviousEnd = yValuePreviousStart != null ? yValuePreviousStart : 0;\n          }\n          const [prevTop, prevBottom] = createPathCoordinates(lastXDatum, yValuePreviousStart, yValuePreviousEnd);\n          const [top, bottom] = createPathCoordinates(xDatum, yValueStart, yValueEnd);\n          if (xValid && (!connectMissingData || yValid)) {\n            fillPoints.push(prevTop);\n            fillPhantomPoints.push(prevBottom);\n            fillPoints.push(top);\n            fillPhantomPoints.push(bottom);\n          }\n          if (yValid && datumIdx > 0) {\n            strokePoints.push(createMovePoint(prevTop));\n            strokePoints.push(top);\n          }\n          lastXDatum = xDatum;\n          lastYDatum = yDatum;\n        });\n      });\n      if (strokePoints.length > 0) {\n        strokePoints[0] = createMovePoint(strokePoints[0]);\n      }\n      fillPhantomPoints.reverse();\n      fillPoints.push(...fillPhantomPoints);\n      return [context];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  markerFactory() {\n    const {\n      shape\n    } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        opacity,\n        visible,\n        animationEnabled\n      } = opts;\n      const [fill, stroke] = opts.paths;\n      const strokeWidth = this.getStrokeWidth(this.properties.strokeWidth);\n      stroke.setProperties({\n        tag: 1 /* Stroke */,\n        fill: void 0,\n        lineJoin: stroke.lineCap = \"round\",\n        pointerEvents: 1 /* None */,\n        stroke: this.properties.stroke,\n        strokeWidth,\n        strokeOpacity: this.properties.strokeOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset,\n        opacity,\n        visible\n      });\n      fill.setProperties({\n        tag: 0 /* Fill */,\n        stroke: void 0,\n        lineJoin: \"round\",\n        pointerEvents: 1 /* None */,\n        fill: this.properties.fill,\n        fillOpacity: this.properties.fillOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset,\n        strokeOpacity: this.properties.strokeOpacity,\n        fillShadow: this.properties.shadow,\n        opacity,\n        visible: visible || animationEnabled,\n        strokeWidth\n      });\n      updateClipPath(this, stroke);\n      updateClipPath(this, fill);\n    });\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      this.updateAreaPaths([opts.paths], [opts.contextData]);\n    });\n  }\n  updateAreaPaths(paths, contextData) {\n    this.updateFillPath(paths, contextData);\n    this.updateStrokePath(paths, contextData);\n  }\n  updateFillPath(paths, contextData) {\n    contextData.forEach(({\n      fillData\n    }, contextDataIndex) => {\n      const [fill] = paths[contextDataIndex];\n      const {\n        path: fillPath\n      } = fill;\n      fillPath.clear({\n        trackChanges: true\n      });\n      for (const {\n        point\n      } of fillData.points) {\n        if (point.moveTo) {\n          fillPath.moveTo(point.x, point.y);\n        } else {\n          fillPath.lineTo(point.x, point.y);\n        }\n      }\n      fillPath.closePath();\n      fill.checkPathDirty();\n    });\n  }\n  updateStrokePath(paths, contextData) {\n    contextData.forEach(({\n      strokeData\n    }, contextDataIndex) => {\n      const [, stroke] = paths[contextDataIndex];\n      const {\n        path: strokePath\n      } = stroke;\n      strokePath.clear({\n        trackChanges: true\n      });\n      for (const {\n        point\n      } of strokeData.points) {\n        if (point.moveTo) {\n          strokePath.moveTo(point.x, point.y);\n        } else {\n          strokePath.lineTo(point.x, point.y);\n        }\n      }\n      stroke.checkPathDirty();\n    });\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        nodeData,\n        markerSelection\n      } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(this.properties.marker.enabled ? nodeData : []);\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        markerSelection,\n        isHighlight: highlighted\n      } = opts;\n      const {\n        xKey,\n        yKey,\n        marker,\n        fill,\n        stroke,\n        strokeWidth,\n        fillOpacity,\n        strokeOpacity,\n        highlightStyle\n      } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle(), {\n        fill,\n        stroke,\n        strokeWidth,\n        fillOpacity,\n        strokeOpacity\n      });\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, {\n          datum,\n          highlighted,\n          xKey,\n          yKey\n        }, baseStyle);\n      });\n      if (!highlighted) {\n        this.properties.marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        labelData,\n        labelSelection\n      } = opts;\n      return labelSelection.update(labelData, text => {\n        text.tag = 3 /* Label */;\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        labelSelection\n      } = opts;\n      const {\n        enabled: labelEnabled,\n        fontStyle,\n        fontWeight,\n        fontSize,\n        fontFamily,\n        color\n      } = this.properties.label;\n      labelSelection.each((text, datum) => {\n        const {\n          x,\n          y,\n          label\n        } = datum;\n        if (label && labelEnabled && this.visible) {\n          text.fontStyle = fontStyle;\n          text.fontWeight = fontWeight;\n          text.fontSize = fontSize;\n          text.fontFamily = fontFamily;\n          text.textAlign = label.textAlign;\n          text.textBaseline = label.textBaseline;\n          text.text = label.text;\n          text.x = x;\n          text.y = y - 10;\n          text.fill = color;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const {\n      id: seriesId,\n      axes,\n      dataModel\n    } = this;\n    const {\n      xKey,\n      xName,\n      yName,\n      tooltip,\n      marker\n    } = this.properties;\n    const {\n      yKey,\n      xValue,\n      yValue,\n      datum\n    } = nodeDatum;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !(xAxis && yAxis && isNumber2(yValue)) || !dataModel) {\n      return \"\";\n    }\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml(yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    const baseStyle = mergeDefaults({\n      fill: this.properties.fill\n    }, marker.getStyle(), {\n      stroke: this.properties.stroke,\n      strokeWidth: this.properties.strokeWidth\n    });\n    const {\n      fill: color\n    } = this.getMarkerStyle(marker, {\n      datum: nodeDatum,\n      xKey,\n      yKey,\n      highlighted: false\n    }, baseStyle);\n    return tooltip.toTooltipHtml({\n      title,\n      content,\n      backgroundColor: color\n    }, {\n      datum,\n      xKey,\n      xName,\n      yKey,\n      yName,\n      color,\n      title,\n      seriesId\n    });\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || legendType !== \"category\") {\n      return [];\n    }\n    const {\n      yKey,\n      yName,\n      fill,\n      stroke,\n      fillOpacity,\n      strokeOpacity,\n      strokeWidth,\n      lineDash,\n      marker,\n      visible\n    } = this.properties;\n    return [{\n      legendType,\n      id: this.id,\n      itemId: yKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: yName != null ? yName : yKey\n      },\n      marker: {\n        shape: marker.shape,\n        fill: (_b = marker.fill) != null ? _b : fill,\n        stroke: (_c = marker.stroke) != null ? _c : stroke,\n        fillOpacity: (_d = marker.fillOpacity) != null ? _d : fillOpacity,\n        strokeOpacity: (_e = marker.strokeOpacity) != null ? _e : strokeOpacity,\n        strokeWidth: (_f = marker.strokeWidth) != null ? _f : 0,\n        enabled: marker.enabled || strokeWidth <= 0\n      },\n      line: {\n        stroke,\n        strokeOpacity,\n        strokeWidth,\n        lineDash\n      }\n    }];\n  }\n  animateEmptyUpdateReady(animationData) {\n    const {\n      markerSelections,\n      labelSelections,\n      contextData,\n      paths\n    } = animationData;\n    const {\n      animationManager\n    } = this.ctx;\n    this.updateAreaPaths(paths, contextData);\n    pathSwipeInAnimation(this, animationManager, paths.flat());\n    resetMotion(markerSelections, resetMarkerPositionFn);\n    markerSwipeScaleInAnimation(this, animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n  }\n  animateReadyResize(animationData) {\n    const {\n      contextData,\n      paths\n    } = animationData;\n    this.updateAreaPaths(paths, contextData);\n    super.animateReadyResize(animationData);\n  }\n  animateWaitingUpdateReady(animationData) {\n    var _a, _b;\n    const {\n      animationManager\n    } = this.ctx;\n    const {\n      markerSelections,\n      labelSelections,\n      contextData,\n      paths,\n      previousContextData\n    } = animationData;\n    super.resetAllAnimation(animationData);\n    if (contextData.length === 0 || !previousContextData || previousContextData.length === 0) {\n      animationManager.skipCurrentBatch();\n      this.updateAreaPaths(paths, contextData);\n      return;\n    }\n    const [[fill, stroke]] = paths;\n    const [newData] = contextData;\n    const [oldData] = previousContextData;\n    const fns = prepareAreaPathAnimation(newData, oldData, (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff);\n    if (fns === void 0) {\n      animationManager.skipCurrentBatch();\n      this.updateAreaPaths(paths, contextData);\n      return;\n    }\n    fromToMotion(this.id, \"marker_update\", animationManager, markerSelections, fns.marker);\n    fromToMotion(this.id, \"fill_path_properties\", animationManager, [fill], fns.fill.pathProperties);\n    pathMotion(this.id, \"fill_path_update\", animationManager, [fill], fns.fill.path);\n    this.updateStrokePath(paths, contextData);\n    pathFadeInAnimation(this, \"stroke\", animationManager, [stroke]);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_AreaSeries.className = \"AreaSeries\";\n_AreaSeries.type = \"area\";\nvar AreaSeries = _AreaSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeriesModule.ts\nvar AreaSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"area\",\n  instanceConstructor: AreaSeries,\n  stackable: true,\n  seriesDefaults: DEFAULT_CARTESIAN_CHART_OVERRIDES,\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    nodeClickRange: \"nearest\",\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    fillOpacity: 0.8,\n    strokeOpacity: 1,\n    strokeWidth: 0,\n    lineDash: [0],\n    lineDashOffset: 0,\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      enabled: false,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      strokeWidth: 0\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      formatter: void 0\n    }\n  },\n  paletteFactory: params => {\n    const {\n      marker\n    } = markerPaletteFactory(params);\n    return {\n      fill: marker.fill,\n      stroke: marker.stroke,\n      marker\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/abstractBarSeries.ts\nvar AbstractBarSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.direction = \"vertical\";\n  }\n};\n__decorateClass([Validate(DIRECTION)], AbstractBarSeriesProperties.prototype, \"direction\", 2);\nvar AbstractBarSeries = class extends CartesianSeries {\n  getBandScalePadding() {\n    return {\n      inner: 0.2,\n      outer: 0.1\n    };\n  }\n  shouldFlipXY() {\n    return !this.isVertical();\n  }\n  isVertical() {\n    return this.properties.direction === \"vertical\";\n  }\n  getBarDirection() {\n    return this.shouldFlipXY() ? \"x\" /* X */ : \"y\" /* Y */;\n  }\n  getCategoryDirection() {\n    return this.shouldFlipXY() ? \"y\" /* Y */ : \"x\" /* X */;\n  }\n  getValueAxis() {\n    const direction = this.getBarDirection();\n    return this.axes[direction];\n  }\n  getCategoryAxis() {\n    const direction = this.getCategoryDirection();\n    return this.axes[direction];\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeriesProperties.ts\nvar BarSeriesLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.placement = \"inside\";\n  }\n};\n__decorateClass([Validate(PLACEMENT)], BarSeriesLabel.prototype, \"placement\", 2);\nvar BarSeriesProperties = class extends AbstractBarSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"#c16068\";\n    this.fillOpacity = 1;\n    this.stroke = \"#874349\";\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.cornerRadius = 0;\n    this.shadow = new DropShadow();\n    this.label = new BarSeriesLabel();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([Validate(STRING)], BarSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BarSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING)], BarSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BarSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BarSeriesProperties.prototype, \"stackGroup\", 2);\n__decorateClass([Validate(NUMBER, {\n  optional: true\n})], BarSeriesProperties.prototype, \"normalizedTo\", 2);\n__decorateClass([Validate(COLOR_STRING)], BarSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO)], BarSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING)], BarSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], BarSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO)], BarSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH)], BarSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], BarSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], BarSeriesProperties.prototype, \"cornerRadius\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], BarSeriesProperties.prototype, \"formatter\", 2);\n__decorateClass([Validate(OBJECT, {\n  optional: true\n})], BarSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([Validate(OBJECT)], BarSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], BarSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/barUtil.ts\nfunction updateRect({\n  rect,\n  config\n}) {\n  const {\n    crisp = true,\n    fill,\n    stroke,\n    strokeWidth,\n    fillOpacity,\n    strokeOpacity,\n    lineDash,\n    lineDashOffset,\n    fillShadow,\n    cornerRadius = 0,\n    topLeftCornerRadius,\n    topRightCornerRadius,\n    bottomRightCornerRadius,\n    bottomLeftCornerRadius,\n    cornerRadiusBbox,\n    visible = true\n  } = config;\n  rect.crisp = crisp;\n  rect.fill = fill;\n  rect.stroke = stroke;\n  rect.strokeWidth = strokeWidth;\n  rect.fillOpacity = fillOpacity;\n  rect.strokeOpacity = strokeOpacity;\n  rect.lineDash = lineDash;\n  rect.lineDashOffset = lineDashOffset;\n  rect.fillShadow = fillShadow;\n  rect.topLeftCornerRadius = topLeftCornerRadius ? cornerRadius : 0;\n  rect.topRightCornerRadius = topRightCornerRadius ? cornerRadius : 0;\n  rect.bottomRightCornerRadius = bottomRightCornerRadius ? cornerRadius : 0;\n  rect.bottomLeftCornerRadius = bottomLeftCornerRadius ? cornerRadius : 0;\n  rect.cornerRadiusBbox = cornerRadiusBbox;\n  rect.visible = visible;\n}\nfunction getRectConfig(_a) {\n  var _b = _a,\n    {\n      datum,\n      isHighlighted,\n      style,\n      highlightStyle,\n      formatter,\n      seriesId,\n      ctx: {\n        callbackCache\n      }\n    } = _b,\n    opts = __objRest(_b, [\"datum\", \"isHighlighted\", \"style\", \"highlightStyle\", \"formatter\", \"seriesId\", \"ctx\"]);\n  var _a2, _b2, _c, _d, _e, _f;\n  const {\n    fill,\n    fillOpacity,\n    stroke,\n    strokeWidth\n  } = mergeDefaults(isHighlighted && highlightStyle, style);\n  const {\n    strokeOpacity,\n    fillShadow,\n    lineDash,\n    lineDashOffset,\n    cornerRadius = 0,\n    topLeftCornerRadius = true,\n    topRightCornerRadius = true,\n    bottomRightCornerRadius = true,\n    bottomLeftCornerRadius = true,\n    cornerRadiusBbox\n  } = style;\n  let format2;\n  if (formatter) {\n    format2 = callbackCache.call(formatter, __spreadValues({\n      datum: datum.datum,\n      xKey: datum.xKey,\n      fill,\n      stroke,\n      strokeWidth,\n      cornerRadius,\n      highlighted: isHighlighted,\n      seriesId\n    }, opts));\n  }\n  return {\n    fill: (_a2 = format2 == null ? void 0 : format2.fill) != null ? _a2 : fill,\n    stroke: (_b2 = format2 == null ? void 0 : format2.stroke) != null ? _b2 : stroke,\n    strokeWidth: (_c = format2 == null ? void 0 : format2.strokeWidth) != null ? _c : strokeWidth,\n    fillOpacity: (_d = format2 == null ? void 0 : format2.fillOpacity) != null ? _d : fillOpacity,\n    strokeOpacity: (_e = format2 == null ? void 0 : format2.strokeOpacity) != null ? _e : strokeOpacity,\n    lineDash,\n    lineDashOffset,\n    fillShadow,\n    // @ts-expect-error Remove once corner radius is officially added\n    cornerRadius: (_f = format2 == null ? void 0 : format2.cornerRadius) != null ? _f : cornerRadius,\n    topLeftCornerRadius,\n    topRightCornerRadius,\n    bottomRightCornerRadius,\n    bottomLeftCornerRadius,\n    cornerRadiusBbox\n  };\n}\nfunction checkCrisp(visibleRange = []) {\n  const [visibleMin, visibleMax] = visibleRange;\n  const isZoomed = visibleMin !== 0 || visibleMax !== 1;\n  return !isZoomed;\n}\nfunction collapsedStartingBarPosition(isVertical, axes) {\n  const {\n    startingX,\n    startingY\n  } = getStartingValues(isVertical, axes);\n  const isDatumNegative = datum => {\n    var _a;\n    return isNegative((_a = datum[\"yValue\"]) != null ? _a : 0);\n  };\n  const calculate = (datum, prevDatum) => {\n    let x = isVertical ? datum.x : startingX;\n    let y = isVertical ? startingY : datum.y;\n    let width = isVertical ? datum.width : 0;\n    let height = isVertical ? 0 : datum.height;\n    if (prevDatum && (isNaN(x) || isNaN(y))) {\n      ({\n        x,\n        y\n      } = prevDatum);\n      width = isVertical ? prevDatum.width : 0;\n      height = isVertical ? 0 : prevDatum.height;\n      if (isVertical && !isDatumNegative(prevDatum)) {\n        y += prevDatum.height;\n      } else if (!isVertical && isDatumNegative(prevDatum)) {\n        x += prevDatum.width;\n      }\n    }\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  };\n  return {\n    isVertical,\n    calculate\n  };\n}\nfunction midpointStartingBarPosition(isVertical) {\n  return {\n    isVertical,\n    calculate: datum => {\n      return {\n        x: isVertical ? datum.x : datum.x + datum.width / 2,\n        y: isVertical ? datum.y + datum.height / 2 : datum.y,\n        width: isVertical ? datum.width : 0,\n        height: isVertical ? 0 : datum.height\n      };\n    }\n  };\n}\nfunction prepareBarAnimationFunctions(initPos) {\n  const isRemoved = datum => datum == null || isNaN(datum.x) || isNaN(datum.y);\n  const fromFn = (rect, datum, status) => {\n    if (status === \"updated\" && isRemoved(datum)) {\n      status = \"removed\";\n    } else if (status === \"updated\" && isRemoved(rect.previousDatum)) {\n      status = \"added\";\n    }\n    let source = {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    };\n    if (status === \"unknown\" || status === \"added\") {\n      source = initPos.calculate(datum, rect.previousDatum);\n    }\n    return __spreadValues(__spreadValues({}, source), FROM_TO_MIXINS[status]);\n  };\n  const toFn = (rect, datum, status) => {\n    if (status === \"removed\" || isRemoved(datum)) {\n      return initPos.calculate(datum, rect.previousDatum);\n    }\n    return {\n      x: datum.x,\n      y: datum.y,\n      width: datum.width,\n      height: datum.height\n    };\n  };\n  return {\n    toFn,\n    fromFn\n  };\n}\nfunction getStartingValues(isVertical, axes) {\n  const axis = axes[isVertical ? \"y\" /* Y */ : \"x\" /* X */];\n  let startingX = Infinity;\n  let startingY = 0;\n  if (!axis) {\n    return {\n      startingX,\n      startingY\n    };\n  }\n  if (isVertical) {\n    startingY = axis.scale.convert(ContinuousScale.is(axis.scale) ? 0 : Math.max(...axis.range));\n  } else {\n    startingX = axis.scale.convert(ContinuousScale.is(axis.scale) ? 0 : Math.min(...axis.range));\n  }\n  return {\n    startingX,\n    startingY\n  };\n}\nfunction resetBarSelectionsFn(_node, {\n  x,\n  y,\n  width,\n  height\n}) {\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/labelUtil.ts\nfunction updateLabelNode(textNode, label, labelDatum) {\n  if (label.enabled && labelDatum) {\n    const {\n      x,\n      y,\n      text,\n      textAlign,\n      textBaseline\n    } = labelDatum;\n    const {\n      color: fill,\n      fontStyle,\n      fontWeight,\n      fontSize,\n      fontFamily\n    } = label;\n    textNode.setProperties({\n      visible: true,\n      x,\n      y,\n      text,\n      fill,\n      fontStyle,\n      fontWeight,\n      fontSize,\n      fontFamily,\n      textAlign,\n      textBaseline\n    });\n  } else {\n    textNode.visible = false;\n  }\n}\nfunction adjustLabelPlacement({\n  isPositive,\n  isVertical,\n  placement,\n  padding = 0,\n  rect\n}) {\n  let x = rect.x + rect.width / 2;\n  let y = rect.y + rect.height / 2;\n  let textAlign = \"center\";\n  let textBaseline = \"middle\";\n  switch (placement) {\n    case \"start\":\n      {\n        if (isVertical) {\n          y = isPositive ? rect.y + rect.height + padding : rect.y - padding;\n          textBaseline = isPositive ? \"top\" : \"bottom\";\n        } else {\n          x = isPositive ? rect.x - padding : rect.x + rect.width + padding;\n          textAlign = isPositive ? \"start\" : \"end\";\n        }\n        break;\n      }\n    case \"outside\":\n    case \"end\":\n      {\n        if (isVertical) {\n          y = isPositive ? rect.y - padding : rect.y + rect.height + padding;\n          textBaseline = isPositive ? \"bottom\" : \"top\";\n        } else {\n          x = isPositive ? rect.x + rect.width + padding : rect.x - padding;\n          textAlign = isPositive ? \"start\" : \"end\";\n        }\n        break;\n      }\n  }\n  return {\n    x,\n    y,\n    textAlign,\n    textBaseline\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeries.ts\nvar _BarSeries = class _BarSeries extends AbstractBarSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      pathsPerSeries: 0,\n      hasHighlightedLabels: true,\n      datumSelectionGarbageCollection: false,\n      animationResetFns: {\n        datum: resetBarSelectionsFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new BarSeriesProperties();\n    /**\n     * Used to get the position of bars within each group.\n     */\n    this.groupScale = new BandScale();\n    this.smallestDataInterval = void 0;\n  }\n  resolveKeyDirection(direction) {\n    if (this.getBarDirection() === \"x\" /* X */) {\n      if (direction === \"x\" /* X */) {\n        return \"y\" /* Y */;\n      }\n      return \"x\" /* X */;\n    }\n    return direction;\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d;\n      if (!this.properties.isValid() || !this.data) {\n        return;\n      }\n      const {\n        seriesGrouping: {\n          groupIndex = this.id\n        } = {},\n        data = []\n      } = this;\n      const {\n        xKey,\n        yKey,\n        normalizedTo\n      } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const normalizedToAbs = Math.abs(normalizedTo != null ? normalizedTo : NaN);\n      const isContinuousX = ContinuousScale.is((_a = this.getCategoryAxis()) == null ? void 0 : _a.scale);\n      const isContinuousY = ContinuousScale.is((_b = this.getValueAxis()) == null ? void 0 : _b.scale);\n      const stackGroupName = `bar-stack-${groupIndex}-yValues`;\n      const stackGroupTrailingName = `${stackGroupName}-trailing`;\n      const normaliseTo = normalizedToAbs && isFinite(normalizedToAbs) ? normalizedToAbs : void 0;\n      const extraProps = [];\n      if (normaliseTo) {\n        extraProps.push(normaliseGroupTo(this, [stackGroupName, stackGroupTrailingName], normaliseTo, \"range\"));\n      }\n      if (animationEnabled && this.processedData) {\n        extraProps.push(diff(this.processedData));\n      }\n      if (animationEnabled) {\n        extraProps.push(animationValidation(this));\n      }\n      const visibleProps = !this.visible ? {\n        forceValue: 0\n      } : {};\n      const {\n        processedData\n      } = yield this.requestDataModel(dataController, data, {\n        props: [keyProperty(this, xKey, isContinuousX, {\n          id: \"xValue\"\n        }), valueProperty(this, yKey, isContinuousY, __spreadValues({\n          id: `yValue-raw`,\n          invalidValue: null\n        }, visibleProps)), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"normal\", \"current\", __spreadValues({\n          id: `yValue-end`,\n          rangeId: `yValue-range`,\n          invalidValue: null,\n          missingValue: 0,\n          groupId: stackGroupName,\n          separateNegative: true\n        }, visibleProps)), ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"trailing\", \"current\", __spreadValues({\n          id: `yValue-start`,\n          invalidValue: null,\n          missingValue: 0,\n          groupId: stackGroupTrailingName,\n          separateNegative: true\n        }, visibleProps)), ...(isContinuousX ? [SMALLEST_KEY_INTERVAL] : []), ...extraProps],\n        groupByKeys: true,\n        groupByData: false\n      });\n      this.smallestDataInterval = {\n        x: (_d = (_c = processedData.reduced) == null ? void 0 : _c.smallestKeyInterval) != null ? _d : Infinity,\n        y: Infinity\n      };\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    var _a;\n    const {\n      processedData,\n      dataModel\n    } = this;\n    if (!processedData || !dataModel || processedData.data.length === 0) return [];\n    const {\n      reduced: {\n        [SMALLEST_KEY_INTERVAL.property]: smallestX\n      } = {}\n    } = processedData;\n    const categoryAxis = this.getCategoryAxis();\n    const valueAxis = this.getValueAxis();\n    const keyDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    const keys = dataModel.getDomain(this, `xValue`, \"key\", processedData);\n    const yExtent = dataModel.getDomain(this, `yValue-end`, \"value\", processedData);\n    if (direction === this.getCategoryDirection()) {\n      if ((keyDef == null ? void 0 : keyDef.def.type) === \"key\" && (keyDef == null ? void 0 : keyDef.def.valueType) === \"category\") {\n        return keys;\n      }\n      const scalePadding = smallestX != null && isFinite(smallestX) ? smallestX : 0;\n      const keysExtent = (_a = extent(keys)) != null ? _a : [NaN, NaN];\n      const isReversed = categoryAxis == null ? void 0 : categoryAxis.isReversed();\n      if (direction === \"y\" /* Y */) {\n        const d02 = keysExtent[0] + (isReversed ? 0 : -scalePadding);\n        const d12 = keysExtent[1] + (isReversed ? scalePadding : 0);\n        return fixNumericExtent([d02, d12], categoryAxis);\n      }\n      const d0 = keysExtent[0] + (isReversed ? -scalePadding : 0);\n      const d1 = keysExtent[1] + (isReversed ? 0 : scalePadding);\n      return fixNumericExtent([d0, d1], categoryAxis);\n    } else if (this.getValueAxis() instanceof LogAxis) {\n      return fixNumericExtent(yExtent, valueAxis);\n    } else {\n      const fixedYExtent = [yExtent[0] > 0 ? 0 : yExtent[0], yExtent[1] < 0 ? 0 : yExtent[1]];\n      return fixNumericExtent(fixedYExtent, valueAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      const {\n        dataModel\n      } = this;\n      const xAxis = this.getCategoryAxis();\n      const yAxis = this.getValueAxis();\n      if (!(dataModel && xAxis && yAxis && this.properties.isValid())) {\n        return [];\n      }\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const {\n        groupScale,\n        processedData,\n        smallestDataInterval,\n        ctx: {\n          seriesStateManager\n        }\n      } = this;\n      const {\n        xKey,\n        yKey,\n        xName,\n        yName,\n        fill,\n        stroke,\n        strokeWidth,\n        cornerRadius,\n        legendItemName,\n        label\n      } = this.properties;\n      const yReversed = yAxis.isReversed();\n      const xBandWidth = ContinuousScale.is(xScale) ? xScale.calcBandwidth(smallestDataInterval == null ? void 0 : smallestDataInterval.x) : xScale.bandwidth;\n      const domain = [];\n      const {\n        index: groupIndex,\n        visibleGroupCount\n      } = seriesStateManager.getVisiblePeerGroupIndex(this);\n      for (let groupIdx = 0; groupIdx < visibleGroupCount; groupIdx++) {\n        domain.push(String(groupIdx));\n      }\n      groupScale.domain = domain;\n      groupScale.range = [0, xBandWidth != null ? xBandWidth : 0];\n      if (xAxis instanceof CategoryAxis) {\n        groupScale.paddingInner = xAxis.groupPaddingInner;\n      } else if (xAxis instanceof GroupedCategoryAxis) {\n        groupScale.padding = 0.1;\n      } else {\n        groupScale.padding = 0;\n      }\n      groupScale.round = groupScale.padding !== 0;\n      const barWidth = groupScale.bandwidth >= 1 ?\n      // Pixel-rounded value for low-volume bar charts.\n      groupScale.bandwidth :\n      // Handle high-volume bar charts gracefully.\n      groupScale.rawBandwidth;\n      const xIndex = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yRawIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-raw`).index;\n      const yStartIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-start`).index;\n      const yEndIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-end`).index;\n      const yRangeIndex = dataModel.resolveProcessedDataDefById(this, `yValue-range`).index;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const contexts = [];\n      processedData == null ? void 0 : processedData.data.forEach(({\n        keys,\n        datum: seriesDatum,\n        values,\n        aggValues\n      }) => {\n        values.forEach((value, contextIndex) => {\n          var _a, _b;\n          (_a = contexts[contextIndex]) != null ? _a : contexts[contextIndex] = {\n            itemId: yKey,\n            nodeData: [],\n            labelData: [],\n            scales: __superGet(_BarSeries.prototype, this, \"calculateScaling\").call(this),\n            visible: this.visible || animationEnabled\n          };\n          const xValue = keys[xIndex];\n          const x = xScale.convert(xValue);\n          const currY = +value[yEndIndex];\n          const prevY = +value[yStartIndex];\n          const yRawValue = value[yRawIndex];\n          const isPositive = yRawValue >= 0;\n          const isUpward = isPositive !== yReversed;\n          const yRange = (_b = aggValues == null ? void 0 : aggValues[yRangeIndex][isPositive ? 1 : 0]) != null ? _b : 0;\n          const barX = x + groupScale.convert(String(groupIndex));\n          if (isNaN(currY)) {\n            return;\n          }\n          const y = yScale.convert(currY);\n          const bottomY = yScale.convert(prevY);\n          const barAlongX = this.getBarDirection() === \"x\" /* X */;\n          const bboxHeight = yScale.convert(yRange);\n          const bboxBottom = yScale.convert(0);\n          const cornerRadiusBbox = new BBox(barAlongX ? Math.min(bboxBottom, bboxHeight) : barX, barAlongX ? barX : Math.min(bboxBottom, bboxHeight), barAlongX ? Math.abs(bboxBottom - bboxHeight) : barWidth, barAlongX ? barWidth : Math.abs(bboxBottom - bboxHeight));\n          const rect = {\n            x: barAlongX ? Math.min(y, bottomY) : barX,\n            y: barAlongX ? barX : Math.min(y, bottomY),\n            width: barAlongX ? Math.abs(bottomY - y) : barWidth,\n            height: barAlongX ? barWidth : Math.abs(bottomY - y),\n            cornerRadiusBbox\n          };\n          const {\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily,\n            color: labelColor,\n            placement\n          } = label;\n          const labelText = this.getLabelText(this.properties.label, {\n            datum: seriesDatum[contextIndex],\n            value: yRawValue,\n            xKey,\n            yKey,\n            xName,\n            yName,\n            legendItemName\n          }, value2 => isNumber2(value2) ? value2.toFixed(2) : \"\");\n          const labelDatum = labelText ? __spreadValues({\n            text: labelText,\n            fill: labelColor,\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily\n          }, adjustLabelPlacement({\n            isPositive,\n            isVertical: !barAlongX,\n            placement,\n            rect\n          })) : void 0;\n          const lengthRatioMultiplier = this.shouldFlipXY() ? rect.height : rect.width;\n          const nodeData = {\n            series: this,\n            itemId: yKey,\n            datum: seriesDatum[contextIndex],\n            cumulativeValue: currY,\n            xValue,\n            yValue: yRawValue,\n            yKey,\n            xKey,\n            capDefaults: {\n              lengthRatioMultiplier,\n              lengthMax: lengthRatioMultiplier\n            },\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            midPoint: {\n              x: rect.x + rect.width / 2,\n              y: rect.y + rect.height / 2\n            },\n            fill,\n            stroke,\n            strokeWidth,\n            cornerRadius,\n            topLeftCornerRadius: !(barAlongX === isUpward),\n            topRightCornerRadius: isUpward,\n            bottomRightCornerRadius: barAlongX === isUpward,\n            bottomLeftCornerRadius: !isUpward,\n            cornerRadiusBbox,\n            label: labelDatum\n          };\n          contexts[contextIndex].nodeData.push(nodeData);\n          contexts[contextIndex].labelData.push(nodeData);\n        });\n      });\n      return contexts;\n    });\n  }\n  nodeFactory() {\n    return new Rect();\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.datumSelection.update(opts.nodeData, rect => {\n        rect.tag = 0 /* Bar */;\n      }, datum => datum.xValue);\n    });\n  }\n  updateDatumNodes(opts) {\n    return __async(this, null, function* () {\n      if (!this.properties.isValid()) {\n        return;\n      }\n      const {\n        yKey,\n        stackGroup,\n        fill,\n        fillOpacity,\n        stroke,\n        strokeWidth,\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        formatter,\n        shadow,\n        highlightStyle: {\n          item: itemHighlightStyle\n        }\n      } = this.properties;\n      const xAxis = this.axes[\"x\" /* X */];\n      const crisp = checkCrisp(xAxis == null ? void 0 : xAxis.visibleRange);\n      const categoryAlongX = this.getCategoryDirection() === \"x\" /* X */;\n      opts.datumSelection.each((rect, datum) => {\n        const style = {\n          fill,\n          stroke,\n          fillOpacity,\n          strokeOpacity,\n          lineDash,\n          lineDashOffset,\n          fillShadow: shadow,\n          strokeWidth: this.getStrokeWidth(strokeWidth),\n          cornerRadius: datum.cornerRadius,\n          topLeftCornerRadius: datum.topLeftCornerRadius,\n          topRightCornerRadius: datum.topRightCornerRadius,\n          bottomRightCornerRadius: datum.bottomRightCornerRadius,\n          bottomLeftCornerRadius: datum.bottomLeftCornerRadius,\n          cornerRadiusBbox: datum.cornerRadiusBbox\n        };\n        const visible = categoryAlongX ? datum.width > 0 : datum.height > 0;\n        const config = getRectConfig({\n          datum,\n          ctx: this.ctx,\n          seriesId: this.id,\n          isHighlighted: opts.isHighlight,\n          highlightStyle: itemHighlightStyle,\n          yKey,\n          style,\n          formatter,\n          stackGroup\n        });\n        config.crisp = crisp;\n        config.visible = visible;\n        updateRect({\n          rect,\n          config\n        });\n      });\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const data = this.isLabelEnabled() ? opts.labelData : [];\n      return opts.labelSelection.update(data, text => {\n        text.tag = 1 /* Label */;\n        text.pointerEvents = 1 /* None */;\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      opts.labelSelection.each((textNode, datum) => {\n        updateLabelNode(textNode, this.properties.label, datum.label);\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const {\n      id: seriesId,\n      processedData,\n      ctx: {\n        callbackCache\n      }\n    } = this;\n    const xAxis = this.getCategoryAxis();\n    const yAxis = this.getValueAxis();\n    if (!processedData || !this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const {\n      xKey,\n      yKey,\n      xName,\n      yName,\n      fill,\n      stroke,\n      strokeWidth,\n      tooltip,\n      formatter,\n      stackGroup\n    } = this.properties;\n    const {\n      xValue,\n      yValue,\n      datum\n    } = nodeDatum;\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml(yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    let format2;\n    if (formatter) {\n      format2 = callbackCache.call(formatter, {\n        seriesId,\n        datum,\n        xKey,\n        yKey,\n        stackGroup,\n        fill,\n        stroke,\n        strokeWidth: this.getStrokeWidth(strokeWidth),\n        highlighted: false\n      });\n    }\n    const color = (_a = format2 == null ? void 0 : format2.fill) != null ? _a : fill;\n    return tooltip.toTooltipHtml({\n      title,\n      content,\n      backgroundColor: color\n    }, __spreadValues({\n      seriesId,\n      datum,\n      xKey,\n      yKey,\n      xName,\n      yName,\n      stackGroup,\n      title,\n      color\n    }, this.getModuleTooltipParams()));\n  }\n  getLegendData(legendType) {\n    var _a, _b;\n    const {\n      showInLegend\n    } = this.properties;\n    if (legendType !== \"category\" || !((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || !showInLegend) {\n      return [];\n    }\n    const {\n      yKey,\n      yName,\n      fill,\n      stroke,\n      strokeWidth,\n      fillOpacity,\n      strokeOpacity,\n      legendItemName,\n      visible\n    } = this.properties;\n    return [{\n      legendType: \"category\",\n      id: this.id,\n      itemId: yKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: (_b = legendItemName != null ? legendItemName : yName) != null ? _b : yKey\n      },\n      marker: {\n        fill,\n        fillOpacity,\n        stroke,\n        strokeWidth,\n        strokeOpacity\n      },\n      legendItemName\n    }];\n  }\n  animateEmptyUpdateReady({\n    datumSelections,\n    labelSelections,\n    annotationSelections\n  }) {\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(this.isVertical(), this.axes));\n    fromToMotion(this.id, \"nodes\", this.ctx.animationManager, datumSelections, fns);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  animateWaitingUpdateReady(data) {\n    var _a, _b;\n    const {\n      datumSelections,\n      labelSelections,\n      annotationSelections\n    } = data;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    const diff2 = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff;\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(this.isVertical(), this.axes));\n    fromToMotion(this.id, \"nodes\", this.ctx.animationManager, datumSelections, fns, (_, datum) => String(datum.xValue), diff2);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n};\n_BarSeries.className = \"BarSeries\";\n_BarSeries.type = \"bar\";\nvar BarSeries = _BarSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeriesModule.ts\nvar BarSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"bar\",\n  instanceConstructor: BarSeries,\n  stackable: true,\n  groupable: true,\n  seriesDefaults: {\n    axes: [{\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.LEFT\n    }, {\n      type: CARTESIAN_AXIS_TYPES.CATEGORY,\n      position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n    }]\n  },\n  swapDefaultAxesCondition: series => (series == null ? void 0 : series.direction) === \"horizontal\",\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    fillOpacity: 1,\n    strokeWidth: 0,\n    lineDash: [0],\n    lineDashOffset: 0,\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      formatter: void 0,\n      placement: \"inside\"\n    },\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 0.3\n      }\n    }\n  },\n  paletteFactory: singleSeriesPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeriesProperties.ts\nvar BubbleSeriesMarker = class extends SeriesMarker {\n  constructor() {\n    super(...arguments);\n    this.maxSize = 30;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], BubbleSeriesMarker.prototype, \"maxSize\", 2);\n__decorateClass([Validate(NUMBER_ARRAY, {\n  optional: true\n}), SceneChangeDetection({\n  redraw: 3 /* MAJOR */\n})], BubbleSeriesMarker.prototype, \"domain\", 2);\nvar BubbleSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.colorRange = [\"#ffff00\", \"#00ff00\", \"#0000ff\"];\n    this.marker = new BubbleSeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([Validate(STRING)], BubbleSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING)], BubbleSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING)], BubbleSeriesProperties.prototype, \"sizeKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"labelKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"sizeName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"labelName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([Validate(NUMBER_ARRAY, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"colorDomain\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], BubbleSeriesProperties.prototype, \"colorRange\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], BubbleSeriesProperties.prototype, \"title\", 2);\n__decorateClass([Validate(OBJECT)], BubbleSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([Validate(OBJECT)], BubbleSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], BubbleSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeries.ts\nvar BubbleSeriesNodeClickEvent = class extends CartesianSeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.sizeKey = series.properties.sizeKey;\n  }\n};\nvar _BubbleSeries = class _BubbleSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */, 3 /* NEAREST_NODE */, 0 /* EXACT_SHAPE_MATCH */],\n      pathsPerSeries: 0,\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        label: resetLabelFn,\n        marker: resetMarkerFn\n      }\n    });\n    this.NodeClickEvent = BubbleSeriesNodeClickEvent;\n    this.properties = new BubbleSeriesProperties();\n    this.sizeScale = new LinearScale();\n    this.colorScale = new ColorScale();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const {\n        isContinuousX,\n        isContinuousY\n      } = this.isContinuous();\n      const {\n        xKey,\n        yKey,\n        sizeKey,\n        labelKey,\n        colorDomain,\n        colorRange,\n        colorKey,\n        marker\n      } = this.properties;\n      const {\n        dataModel,\n        processedData\n      } = yield this.requestDataModel(dataController, this.data, {\n        props: [keyProperty(this, xKey, isContinuousX, {\n          id: \"xKey-raw\"\n        }), keyProperty(this, yKey, isContinuousY, {\n          id: \"yKey-raw\"\n        }), ...(labelKey ? [keyProperty(this, labelKey, false, {\n          id: `labelKey-raw`\n        })] : []), valueProperty(this, xKey, isContinuousX, {\n          id: `xValue`\n        }), valueProperty(this, yKey, isContinuousY, {\n          id: `yValue`\n        }), valueProperty(this, sizeKey, true, {\n          id: `sizeValue`\n        }), ...(colorKey ? [valueProperty(this, colorKey, true, {\n          id: `colorValue`\n        })] : []), ...(labelKey ? [valueProperty(this, labelKey, false, {\n          id: `labelValue`\n        })] : [])],\n        dataVisible: this.visible\n      });\n      const sizeKeyIdx = dataModel.resolveProcessedDataIndexById(this, `sizeValue`).index;\n      const processedSize = (_a = processedData.domain.values[sizeKeyIdx]) != null ? _a : [];\n      this.sizeScale.domain = marker.domain ? marker.domain : processedSize;\n      if (colorKey) {\n        const colorKeyIdx = dataModel.resolveProcessedDataIndexById(this, `colorValue`).index;\n        this.colorScale.domain = (_b = colorDomain != null ? colorDomain : processedData.domain.values[colorKeyIdx]) != null ? _b : [];\n        this.colorScale.range = colorRange;\n        this.colorScale.update();\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const {\n      dataModel,\n      processedData\n    } = this;\n    if (!processedData || !dataModel) return [];\n    const id = direction === \"x\" /* X */ ? `xValue` : `yValue`;\n    const dataDef = dataModel.resolveProcessedDataDefById(this, id);\n    const domain = dataModel.getDomain(this, id, \"value\", processedData);\n    if ((dataDef == null ? void 0 : dataDef.def.type) === \"value\" && (dataDef == null ? void 0 : dataDef.def.valueType) === \"category\") {\n      return domain;\n    }\n    const axis = this.axes[direction];\n    return fixNumericExtent(extent(domain), axis);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const {\n        axes,\n        dataModel,\n        processedData,\n        colorScale,\n        sizeScale\n      } = this;\n      const {\n        xKey,\n        yKey,\n        sizeKey,\n        labelKey,\n        xName,\n        yName,\n        sizeName,\n        labelName,\n        label,\n        colorKey,\n        marker,\n        visible\n      } = this.properties;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!(dataModel && processedData && visible && xAxis && yAxis)) {\n        return [];\n      }\n      const xDataIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yDataIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      const sizeDataIdx = sizeKey ? dataModel.resolveProcessedDataIndexById(this, `sizeValue`).index : -1;\n      const colorDataIdx = colorKey ? dataModel.resolveProcessedDataIndexById(this, `colorValue`).index : -1;\n      const labelDataIdx = labelKey ? dataModel.resolveProcessedDataIndexById(this, `labelValue`).index : -1;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      sizeScale.range = [marker.size, marker.maxSize];\n      const font = label.getFont();\n      for (const {\n        values,\n        datum\n      } of (_c = processedData.data) != null ? _c : []) {\n        const xDatum = values[xDataIdx];\n        const yDatum = values[yDataIdx];\n        const x = xScale.convert(xDatum) + xOffset;\n        const y = yScale.convert(yDatum) + yOffset;\n        const labelText = this.getLabelText(label, {\n          value: labelKey ? values[labelDataIdx] : yDatum,\n          datum,\n          xKey,\n          yKey,\n          sizeKey,\n          labelKey,\n          xName,\n          yName,\n          sizeName,\n          labelName\n        });\n        const size = HdpiCanvas.getTextSize(String(labelText), font);\n        const markerSize = sizeKey ? sizeScale.convert(values[sizeDataIdx]) : marker.size;\n        const fill = colorKey ? colorScale.convert(values[colorDataIdx]) : void 0;\n        nodeData.push({\n          series: this,\n          itemId: yKey,\n          yKey,\n          xKey,\n          datum,\n          xValue: xDatum,\n          yValue: yDatum,\n          sizeValue: values[sizeDataIdx],\n          point: {\n            x,\n            y,\n            size: markerSize\n          },\n          midPoint: {\n            x,\n            y\n          },\n          fill,\n          label: __spreadValues({\n            text: labelText\n          }, size)\n        });\n      }\n      return [{\n        itemId: yKey,\n        nodeData,\n        labelData: nodeData,\n        scales: __superGet(_BubbleSeries.prototype, this, \"calculateScaling\").call(this),\n        visible: this.visible\n      }];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  getLabelData() {\n    var _a;\n    return (_a = this.contextNodeData) == null ? void 0 : _a.reduce((r, n) => r.concat(n.labelData), []);\n  }\n  markerFactory() {\n    const {\n      shape\n    } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        nodeData,\n        markerSelection\n      } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      const data = this.properties.marker.enabled ? nodeData : [];\n      return markerSelection.update(data, void 0, datum => this.getDatumId(datum));\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        markerSelection,\n        isHighlight: highlighted\n      } = opts;\n      const {\n        xKey,\n        yKey,\n        sizeKey,\n        labelKey,\n        marker\n      } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && this.properties.highlightStyle.item, marker.getStyle());\n      this.sizeScale.range = [marker.size, marker.maxSize];\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, {\n          datum,\n          highlighted,\n          xKey,\n          yKey,\n          sizeKey,\n          labelKey\n        }, baseStyle);\n      });\n      if (!highlighted) {\n        this.properties.marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const placedLabels = this.properties.label.enabled ? (_b = (_a = this.chart) == null ? void 0 : _a.placeLabels().get(this)) != null ? _b : [] : [];\n      return opts.labelSelection.update(placedLabels.map(v => __spreadProps(__spreadValues({}, v.datum), {\n        point: {\n          x: v.x,\n          y: v.y,\n          size: v.datum.point.size\n        }\n      })));\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        label\n      } = this.properties;\n      opts.labelSelection.each((text, datum) => {\n        var _a, _b, _c, _d;\n        text.text = datum.label.text;\n        text.fill = label.color;\n        text.x = (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : 0;\n        text.y = (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : 0;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.textAlign = \"left\";\n        text.textBaseline = \"top\";\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const {\n      xKey,\n      yKey,\n      sizeKey,\n      labelKey,\n      xName,\n      yName,\n      sizeName,\n      labelName,\n      marker,\n      tooltip\n    } = this.properties;\n    const title = (_a = this.properties.title) != null ? _a : yName;\n    const baseStyle = mergeDefaults({\n      fill: nodeDatum.fill,\n      strokeWidth: this.getStrokeWidth(marker.strokeWidth)\n    }, marker.getStyle());\n    const {\n      fill: color = \"gray\"\n    } = this.getMarkerStyle(marker, {\n      datum: nodeDatum,\n      highlighted: false,\n      xKey,\n      yKey,\n      sizeKey,\n      labelKey\n    }, baseStyle);\n    const {\n      datum,\n      xValue,\n      yValue,\n      sizeValue,\n      label: {\n        text: labelText\n      }\n    } = nodeDatum;\n    const xString = sanitizeHtml(xAxis.formatDatum(xValue));\n    const yString = sanitizeHtml(yAxis.formatDatum(yValue));\n    let content = `<b>${sanitizeHtml(xName != null ? xName : xKey)}</b>: ${xString}<br><b>${sanitizeHtml(yName != null ? yName : yKey)}</b>: ${yString}`;\n    if (sizeKey) {\n      content += `<br><b>${sanitizeHtml(sizeName != null ? sizeName : sizeKey)}</b>: ${sanitizeHtml(String(sizeValue))}`;\n    }\n    if (labelKey) {\n      content = `<b>${sanitizeHtml(labelName != null ? labelName : labelKey)}</b>: ${sanitizeHtml(labelText)}<br>` + content;\n    }\n    return tooltip.toTooltipHtml({\n      title,\n      content,\n      backgroundColor: color\n    }, {\n      datum,\n      xKey,\n      xName,\n      yKey,\n      yName,\n      sizeKey,\n      sizeName,\n      labelKey,\n      labelName,\n      title,\n      color,\n      seriesId: this.id\n    });\n  }\n  getLegendData() {\n    var _a, _b;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid()) {\n      return [];\n    }\n    const {\n      yKey,\n      yName,\n      title,\n      marker,\n      visible\n    } = this.properties;\n    const {\n      shape,\n      fill,\n      stroke,\n      fillOpacity,\n      strokeOpacity,\n      strokeWidth\n    } = marker;\n    return [{\n      legendType: \"category\",\n      id: this.id,\n      itemId: yKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: (_b = title != null ? title : yName) != null ? _b : yKey\n      },\n      marker: {\n        shape,\n        fill: fill != null ? fill : \"rgba(0, 0, 0, 0)\",\n        stroke: stroke != null ? stroke : \"rgba(0, 0, 0, 0)\",\n        fillOpacity: fillOpacity != null ? fillOpacity : 1,\n        strokeOpacity: strokeOpacity != null ? strokeOpacity : 1,\n        strokeWidth: strokeWidth != null ? strokeWidth : 0\n      }\n    }];\n  }\n  animateEmptyUpdateReady({\n    markerSelections,\n    labelSelections\n  }) {\n    markerScaleInAnimation(this, this.ctx.animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n  }\n  getDatumId(datum) {\n    return createDatumId([`${datum.xValue}`, `${datum.yValue}`, datum.label.text]);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_BubbleSeries.className = \"BubbleSeries\";\n_BubbleSeries.type = \"bubble\";\nvar BubbleSeries = _BubbleSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeriesModule.ts\nvar BubbleSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"bubble\",\n  instanceConstructor: BubbleSeries,\n  seriesDefaults: {\n    axes: [{\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n    }, {\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.LEFT\n    }]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      maxSize: 30,\n      fillOpacity: 0.8\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR\n    }\n  },\n  paletteFactory: markerPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeriesProperties.ts\nvar HistogramSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fillOpacity = 1;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.areaPlot = false;\n    this.aggregation = \"sum\";\n    this.shadow = new DropShadow();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([Validate(STRING)], HistogramSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO)], HistogramSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(COLOR_STRING, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], HistogramSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO)], HistogramSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH)], HistogramSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], HistogramSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([Validate(BOOLEAN)], HistogramSeriesProperties.prototype, \"areaPlot\", 2);\n__decorateClass([Validate(ARRAY, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"bins\", 2);\n__decorateClass([Validate(UNION([\"count\", \"sum\", \"mean\"], \"a histogram aggregation\"))], HistogramSeriesProperties.prototype, \"aggregation\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], HistogramSeriesProperties.prototype, \"binCount\", 2);\n__decorateClass([Validate(OBJECT)], HistogramSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([Validate(OBJECT)], HistogramSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], HistogramSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeries.ts\nvar defaultBinCount = 10;\nvar _HistogramSeries = class _HistogramSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      datumSelectionGarbageCollection: false,\n      animationResetFns: {\n        datum: resetBarSelectionsFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new HistogramSeriesProperties();\n    this.calculatedBins = [];\n  }\n  // During processData phase, used to unify different ways of the user specifying\n  // the bins. Returns bins in format[[min1, max1], [min2, max2], ... ].\n  deriveBins(xDomain) {\n    if (this.properties.binCount) {\n      return this.calculateNiceBins(xDomain, this.properties.binCount);\n    }\n    const binStarts = ticks_default(xDomain[0], xDomain[1], defaultBinCount);\n    const binSize = tickStep(xDomain[0], xDomain[1], defaultBinCount);\n    const [firstBinEnd] = binStarts;\n    const expandStartToBin = n => [n, n + binSize];\n    return [[firstBinEnd - binSize, firstBinEnd], ...binStarts.map(expandStartToBin)];\n  }\n  calculateNiceBins(domain, binCount) {\n    const startGuess = Math.floor(domain[0]);\n    const stop = domain[1];\n    const segments = binCount || 1;\n    const {\n      start,\n      binSize\n    } = this.calculateNiceStart(startGuess, stop, segments);\n    return this.getBins(start, stop, binSize, segments);\n  }\n  getBins(start, stop, step, count2) {\n    const bins = [];\n    const precision = this.calculatePrecision(step);\n    for (let i = 0; i < count2; i++) {\n      const a = Math.round((start + i * step) * precision) / precision;\n      let b = Math.round((start + (i + 1) * step) * precision) / precision;\n      if (i === count2 - 1) {\n        b = Math.max(b, stop);\n      }\n      bins[i] = [a, b];\n    }\n    return bins;\n  }\n  calculatePrecision(step) {\n    let precision = 10;\n    if (isReal(step) && step > 0) {\n      while (step < 1) {\n        precision *= 10;\n        step *= 10;\n      }\n    }\n    return precision;\n  }\n  calculateNiceStart(a, b, segments) {\n    const binSize = Math.abs(b - a) / segments;\n    const order = Math.floor(Math.log10(binSize));\n    const magnitude = Math.pow(10, order);\n    const start = Math.floor(a / magnitude) * magnitude;\n    return {\n      start,\n      binSize\n    };\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        xKey,\n        yKey,\n        areaPlot,\n        aggregation\n      } = this.properties;\n      const props = [keyProperty(this, xKey, true), SORT_DOMAIN_GROUPS];\n      if (yKey) {\n        let aggProp = groupCount(this, \"groupCount\");\n        if (aggregation === \"count\") {} else if (aggregation === \"sum\") {\n          aggProp = groupSum(this, \"groupAgg\");\n        } else if (aggregation === \"mean\") {\n          aggProp = groupAverage(this, \"groupAgg\");\n        }\n        if (areaPlot) {\n          aggProp = area(this, \"groupAgg\", aggProp);\n        }\n        props.push(valueProperty(this, yKey, true, {\n          invalidValue: void 0\n        }), aggProp);\n      } else {\n        let aggProp = groupCount(this, \"groupAgg\");\n        if (areaPlot) {\n          aggProp = area(this, \"groupAgg\", aggProp);\n        }\n        props.push(aggProp);\n      }\n      const groupByFn = dataSet => {\n        var _a2;\n        const xExtent = fixNumericExtent(dataSet.domain.keys[0]);\n        if (xExtent.length === 0) {\n          dataSet.domain.groups = [];\n          return () => [];\n        }\n        const bins = (_a2 = this.properties.bins) != null ? _a2 : this.deriveBins(xExtent);\n        const binCount = bins.length;\n        this.calculatedBins = [...bins];\n        return item => {\n          const xValue = item.keys[0];\n          for (let i = 0; i < binCount; i++) {\n            const nextBin = bins[i];\n            if (xValue >= nextBin[0] && xValue < nextBin[1]) {\n              return nextBin;\n            }\n            if (i === binCount - 1 && xValue <= nextBin[1]) {\n              return nextBin;\n            }\n          }\n          return [];\n        };\n      };\n      if (!this.ctx.animationManager.isSkipped() && this.processedData) {\n        props.push(diff(this.processedData, false));\n      }\n      yield this.requestDataModel(dataController, (_a = this.data) != null ? _a : [], {\n        props,\n        dataVisible: this.visible,\n        groupByFn\n      });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    var _a, _b, _c, _d;\n    const {\n      processedData,\n      dataModel\n    } = this;\n    if (!processedData || !dataModel || !this.calculatedBins.length) return [];\n    const yDomain = dataModel.getDomain(this, `groupAgg`, \"aggregate\", processedData);\n    const xDomainMin = (_a = this.calculatedBins) == null ? void 0 : _a[0][0];\n    const xDomainMax = (_d = this.calculatedBins) == null ? void 0 : _d[((_c = (_b = this.calculatedBins) == null ? void 0 : _b.length) != null ? _c : 0) - 1][1];\n    if (direction === \"x\" /* X */) {\n      return fixNumericExtent([xDomainMin, xDomainMax]);\n    }\n    return fixNumericExtent(yDomain);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        id: seriesId,\n        axes,\n        processedData,\n        ctx: {\n          callbackCache\n        }\n      } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!this.visible || !xAxis || !yAxis || !processedData || processedData.type !== \"grouped\") {\n        return [];\n      }\n      const {\n        scale: xScale\n      } = xAxis;\n      const {\n        scale: yScale\n      } = yAxis;\n      const {\n        xKey,\n        yKey,\n        xName,\n        yName,\n        fill,\n        stroke,\n        strokeWidth\n      } = this.properties;\n      const {\n        formatter: labelFormatter = params => String(params.value),\n        fontStyle: labelFontStyle,\n        fontWeight: labelFontWeight,\n        fontSize: labelFontSize,\n        fontFamily: labelFontFamily,\n        color: labelColor\n      } = this.properties.label;\n      const nodeData = [];\n      processedData.data.forEach(group2 => {\n        var _a2;\n        const {\n          aggValues: [[negativeAgg, positiveAgg]] = [[0, 0]],\n          datum,\n          datum: {\n            length: frequency\n          },\n          keys: domain,\n          keys: [xDomainMin, xDomainMax]\n        } = group2;\n        const xMinPx = xScale.convert(xDomainMin);\n        const xMaxPx = xScale.convert(xDomainMax);\n        const total = negativeAgg + positiveAgg;\n        const yZeroPx = yScale.convert(0);\n        const yMaxPx = yScale.convert(total);\n        const w = Math.abs(xMaxPx - xMinPx);\n        const h = Math.abs(yMaxPx - yZeroPx);\n        const x = Math.min(xMinPx, xMaxPx);\n        const y = Math.min(yZeroPx, yMaxPx);\n        const selectionDatumLabel = total !== 0 ? {\n          text: (_a2 = callbackCache.call(labelFormatter, {\n            value: total,\n            datum,\n            seriesId,\n            xKey,\n            yKey,\n            xName,\n            yName\n          })) != null ? _a2 : String(total),\n          fontStyle: labelFontStyle,\n          fontWeight: labelFontWeight,\n          fontSize: labelFontSize,\n          fontFamily: labelFontFamily,\n          fill: labelColor,\n          x: x + w / 2,\n          y: y + h / 2\n        } : void 0;\n        const nodeMidPoint = {\n          x: x + w / 2,\n          y: y + h / 2\n        };\n        nodeData.push({\n          series: this,\n          datum,\n          // required by SeriesNodeDatum, but might not make sense here\n          // since each selection is an aggregation of multiple data.\n          aggregatedValue: total,\n          frequency,\n          domain,\n          yKey,\n          xKey,\n          x,\n          y,\n          xValue: xMinPx,\n          yValue: yMaxPx,\n          width: w,\n          height: h,\n          midPoint: nodeMidPoint,\n          fill,\n          stroke,\n          strokeWidth,\n          label: selectionDatumLabel\n        });\n      });\n      return [{\n        itemId: (_a = this.properties.yKey) != null ? _a : this.id,\n        nodeData,\n        labelData: nodeData,\n        scales: __superGet(_HistogramSeries.prototype, this, \"calculateScaling\").call(this),\n        animationValid: true,\n        visible: this.visible\n      }];\n    });\n  }\n  nodeFactory() {\n    return new Rect();\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        nodeData,\n        datumSelection\n      } = opts;\n      return datumSelection.update(nodeData, rect => {\n        rect.tag = 0 /* Bin */;\n        rect.crisp = true;\n      }, datum => datum.domain.join(\"_\"));\n    });\n  }\n  updateDatumNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        isHighlight: isDatumHighlighted\n      } = opts;\n      const {\n        fillOpacity: seriesFillOpacity,\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        shadow,\n        highlightStyle: {\n          item: {\n            fill: highlightedFill,\n            fillOpacity: highlightFillOpacity = seriesFillOpacity,\n            stroke: highlightedStroke,\n            strokeWidth: highlightedDatumStrokeWidth\n          }\n        }\n      } = this.properties;\n      opts.datumSelection.each((rect, datum, index) => {\n        var _a, _b;\n        const strokeWidth = isDatumHighlighted && highlightedDatumStrokeWidth !== void 0 ? highlightedDatumStrokeWidth : datum.strokeWidth;\n        const fillOpacity = isDatumHighlighted ? highlightFillOpacity : seriesFillOpacity;\n        rect.fill = (_a = isDatumHighlighted ? highlightedFill : void 0) != null ? _a : datum.fill;\n        rect.stroke = (_b = isDatumHighlighted ? highlightedStroke : void 0) != null ? _b : datum.stroke;\n        rect.fillOpacity = fillOpacity;\n        rect.strokeOpacity = strokeOpacity;\n        rect.strokeWidth = strokeWidth;\n        rect.lineDash = lineDash;\n        rect.lineDashOffset = lineDashOffset;\n        rect.fillShadow = shadow;\n        rect.zIndex = isDatumHighlighted ? Series.highlightedZIndex : index;\n        rect.visible = datum.height > 0;\n      });\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        labelData,\n        labelSelection\n      } = opts;\n      return labelSelection.update(labelData, text => {\n        text.tag = 1 /* Label */;\n        text.pointerEvents = 1 /* None */;\n        text.textAlign = \"center\";\n        text.textBaseline = \"middle\";\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const labelEnabled = this.isLabelEnabled();\n      opts.labelSelection.each((text, datum) => {\n        const label = datum.label;\n        if (label && labelEnabled) {\n          text.text = label.text;\n          text.x = label.x;\n          text.y = label.y;\n          text.fontStyle = label.fontStyle;\n          text.fontWeight = label.fontWeight;\n          text.fontSize = label.fontSize;\n          text.fontFamily = label.fontFamily;\n          text.fill = label.fill;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const {\n      xKey,\n      yKey,\n      xName,\n      yName,\n      fill: color,\n      aggregation,\n      tooltip\n    } = this.properties;\n    const {\n      aggregatedValue,\n      frequency,\n      domain: [rangeMin, rangeMax]\n    } = nodeDatum;\n    const title = `${sanitizeHtml(xName != null ? xName : xKey)}: ${xAxis.formatDatum(rangeMin)} - ${xAxis.formatDatum(rangeMax)}`;\n    let content = yKey ? `<b>${sanitizeHtml(yName != null ? yName : yKey)} (${aggregation})</b>: ${yAxis.formatDatum(aggregatedValue)}<br>` : \"\";\n    content += `<b>Frequency</b>: ${frequency}`;\n    const defaults = {\n      title,\n      backgroundColor: color,\n      content\n    };\n    return tooltip.toTooltipHtml(defaults, {\n      datum: {\n        data: nodeDatum.datum,\n        aggregatedValue: nodeDatum.aggregatedValue,\n        domain: nodeDatum.domain,\n        frequency: nodeDatum.frequency\n      },\n      xKey,\n      xName,\n      yKey,\n      yName,\n      color,\n      title,\n      seriesId: this.id\n    });\n  }\n  getLegendData(legendType) {\n    var _a, _b;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || legendType !== \"category\") {\n      return [];\n    }\n    const {\n      xKey,\n      yName,\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      visible\n    } = this.properties;\n    return [{\n      legendType: \"category\",\n      id: this.id,\n      itemId: xKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: (_b = yName != null ? yName : xKey) != null ? _b : \"Frequency\"\n      },\n      marker: {\n        fill: fill != null ? fill : \"rgba(0, 0, 0, 0)\",\n        stroke: stroke != null ? stroke : \"rgba(0, 0, 0, 0)\",\n        fillOpacity,\n        strokeOpacity,\n        strokeWidth\n      }\n    }];\n  }\n  animateEmptyUpdateReady({\n    datumSelections,\n    labelSelections\n  }) {\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(true, this.axes));\n    fromToMotion(this.id, \"datums\", this.ctx.animationManager, datumSelections, fns);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n  }\n  animateWaitingUpdateReady(data) {\n    var _a, _b;\n    const diff2 = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff;\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(true, this.axes));\n    fromToMotion(this.id, \"datums\", this.ctx.animationManager, data.datumSelections, fns, (_, datum) => this.getDatumId(datum), diff2);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, data.labelSelections);\n  }\n  getDatumId(datum) {\n    return createDatumId(datum.domain.map(d => `${d}`));\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n};\n_HistogramSeries.className = \"HistogramSeries\";\n_HistogramSeries.type = \"histogram\";\nvar HistogramSeries = _HistogramSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeriesModule.ts\nvar HistogramSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"histogram\",\n  instanceConstructor: HistogramSeries,\n  seriesDefaults: {\n    axes: [{\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n    }, {\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.LEFT\n    }]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    strokeWidth: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      formatter: void 0\n    },\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    }\n  },\n  paletteFactory: ({\n    takeColors\n  }) => {\n    const {\n      fills: [fill],\n      strokes: [stroke]\n    } = takeColors(1);\n    return {\n      fill,\n      stroke\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeriesProperties.ts\nvar LineSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.stroke = \"#874349\";\n    this.strokeWidth = 2;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n    this.connectMissingData = false;\n  }\n};\n__decorateClass([Validate(STRING)], LineSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING)], LineSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], LineSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], LineSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], LineSeriesProperties.prototype, \"title\", 2);\n__decorateClass([Validate(COLOR_STRING)], LineSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LineSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(RATIO)], LineSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH)], LineSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], LineSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([Validate(OBJECT)], LineSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([Validate(OBJECT)], LineSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], LineSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([Validate(BOOLEAN)], LineSeriesProperties.prototype, \"connectMissingData\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeries.ts\nvar _LineSeries = class _LineSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      hasMarkers: true,\n      pickModes: [2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */, 3 /* NEAREST_NODE */, 0 /* EXACT_SHAPE_MATCH */],\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        path: buildResetPathFn({\n          getOpacity: () => this.getOpacity()\n        }),\n        label: resetLabelFn,\n        marker: (node, datum) => __spreadValues(__spreadValues({}, resetMarkerFn(node)), resetMarkerPositionFn(node, datum))\n      }\n    });\n    this.properties = new LineSeriesProperties();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const {\n        xKey,\n        yKey\n      } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const {\n        isContinuousX,\n        isContinuousY\n      } = this.isContinuous();\n      const props = [];\n      if (!isContinuousX) {\n        props.push(keyProperty(this, xKey, isContinuousX, {\n          id: \"xKey\"\n        }));\n        if (animationEnabled && this.processedData) {\n          props.push(diff(this.processedData));\n        }\n      }\n      if (animationEnabled) {\n        props.push(animationValidation(this, isContinuousX ? [\"xValue\"] : []));\n      }\n      props.push(valueProperty(this, xKey, isContinuousX, {\n        id: \"xValue\"\n      }), valueProperty(this, yKey, isContinuousY, {\n        id: \"yValue\",\n        invalidValue: void 0\n      }));\n      yield this.requestDataModel(dataController, this.data, {\n        props\n      });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const {\n      axes,\n      dataModel,\n      processedData\n    } = this;\n    if (!processedData || !dataModel) return [];\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const xDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    if (direction === \"x\" /* X */) {\n      const domain = dataModel.getDomain(this, `xValue`, \"value\", processedData);\n      if ((xDef == null ? void 0 : xDef.def.type) === \"value\" && xDef.def.valueType === \"category\") {\n        return domain;\n      }\n      return fixNumericExtent(extent(domain), xAxis);\n    } else {\n      const domain = dataModel.getDomain(this, `yValue`, \"value\", processedData);\n      return fixNumericExtent(domain, yAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const {\n        processedData,\n        dataModel,\n        axes\n      } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!processedData || !dataModel || !xAxis || !yAxis) {\n        return [];\n      }\n      const {\n        xKey,\n        yKey,\n        xName,\n        yName,\n        marker,\n        label,\n        connectMissingData\n      } = this.properties;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      const size = marker.enabled ? marker.size : 0;\n      const xIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      let moveTo = true;\n      let nextPoint;\n      for (let i = 0; i < processedData.data.length; i++) {\n        const {\n          datum,\n          values\n        } = nextPoint != null ? nextPoint : processedData.data[i];\n        const xDatum = values[xIdx];\n        const yDatum = values[yIdx];\n        if (yDatum === void 0) {\n          moveTo = !connectMissingData;\n        } else {\n          const x = xScale.convert(xDatum) + xOffset;\n          if (isNaN(x)) {\n            moveTo = !connectMissingData;\n            nextPoint = void 0;\n            continue;\n          }\n          nextPoint = ((_c = processedData.data[i + 1]) == null ? void 0 : _c.values[yIdx]) === void 0 ? void 0 : processedData.data[i + 1];\n          const y = yScale.convert(yDatum) + yOffset;\n          const labelText = this.getLabelText(label, {\n            value: yDatum,\n            datum,\n            xKey,\n            yKey,\n            xName,\n            yName\n          }, value => isNumber2(value) ? value.toFixed(2) : String(value));\n          nodeData.push({\n            series: this,\n            datum,\n            yKey,\n            xKey,\n            point: {\n              x,\n              y,\n              moveTo,\n              size\n            },\n            midPoint: {\n              x,\n              y\n            },\n            yValue: yDatum,\n            xValue: xDatum,\n            capDefaults: {\n              lengthRatioMultiplier: this.properties.marker.getDiameter(),\n              lengthMax: Infinity\n            },\n            label: labelText ? {\n              text: labelText,\n              fontStyle: label.fontStyle,\n              fontWeight: label.fontWeight,\n              fontSize: label.fontSize,\n              fontFamily: label.fontFamily,\n              textAlign: \"center\",\n              textBaseline: \"bottom\",\n              fill: label.color\n            } : void 0\n          });\n          moveTo = false;\n        }\n      }\n      return [{\n        itemId: yKey,\n        nodeData,\n        labelData: nodeData,\n        scales: __superGet(_LineSeries.prototype, this, \"calculateScaling\").call(this),\n        visible: this.visible\n      }];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  markerFactory() {\n    const {\n      shape\n    } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        paths: [lineNode],\n        opacity,\n        visible,\n        animationEnabled\n      } = opts;\n      lineNode.setProperties({\n        fill: void 0,\n        lineJoin: \"round\",\n        pointerEvents: 1 /* None */,\n        opacity,\n        stroke: this.properties.stroke,\n        strokeWidth: this.getStrokeWidth(this.properties.strokeWidth),\n        strokeOpacity: this.properties.strokeOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset\n      });\n      if (!animationEnabled) {\n        lineNode.visible = visible;\n      }\n      updateClipPath(this, lineNode);\n    });\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      let {\n        nodeData\n      } = opts;\n      const {\n        markerSelection\n      } = opts;\n      const {\n        shape,\n        enabled\n      } = this.properties.marker;\n      nodeData = shape && enabled ? nodeData : [];\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(nodeData, void 0, datum => this.getDatumId(datum));\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        markerSelection,\n        isHighlight: highlighted\n      } = opts;\n      const {\n        xKey,\n        yKey,\n        stroke,\n        strokeWidth,\n        strokeOpacity,\n        marker,\n        highlightStyle\n      } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle(), {\n        stroke,\n        strokeWidth,\n        strokeOpacity\n      });\n      const applyTranslation = this.ctx.animationManager.isSkipped();\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, {\n          datum,\n          highlighted,\n          xKey,\n          yKey\n        }, baseStyle, {\n          applyTranslation\n        });\n      });\n      if (!highlighted) {\n        marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.labelSelection.update(this.isLabelEnabled() ? opts.labelData : []);\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        enabled,\n        fontStyle,\n        fontWeight,\n        fontSize,\n        fontFamily,\n        color\n      } = this.properties.label;\n      opts.labelSelection.each((text, datum) => {\n        const {\n          point,\n          label\n        } = datum;\n        if (datum && label && enabled) {\n          text.fontStyle = fontStyle;\n          text.fontWeight = fontWeight;\n          text.fontSize = fontSize;\n          text.fontFamily = fontFamily;\n          text.textAlign = label.textAlign;\n          text.textBaseline = label.textBaseline;\n          text.text = label.text;\n          text.x = point.x;\n          text.y = point.y - 10;\n          text.fill = color;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const {\n      xKey,\n      yKey,\n      xName,\n      yName,\n      strokeWidth,\n      marker,\n      tooltip\n    } = this.properties;\n    const {\n      datum,\n      xValue,\n      yValue\n    } = nodeDatum;\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml((_a = this.properties.title) != null ? _a : yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    const baseStyle = mergeDefaults({\n      fill: marker.stroke\n    }, marker.getStyle(), {\n      strokeWidth\n    });\n    const {\n      fill: color\n    } = this.getMarkerStyle(marker, {\n      datum: nodeDatum,\n      xKey,\n      yKey,\n      highlighted: false\n    }, baseStyle);\n    return tooltip.toTooltipHtml({\n      title,\n      content,\n      backgroundColor: color\n    }, __spreadValues({\n      datum,\n      xKey,\n      xName,\n      yKey,\n      yName,\n      title,\n      color,\n      seriesId: this.id\n    }, this.getModuleTooltipParams()));\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n    if (!(((_a = this.data) == null ? void 0 : _a.length) && this.properties.isValid() && legendType === \"category\")) {\n      return [];\n    }\n    const {\n      yKey,\n      yName,\n      stroke,\n      strokeOpacity,\n      strokeWidth,\n      lineDash,\n      title,\n      marker,\n      visible\n    } = this.properties;\n    const color0 = \"rgba(0, 0, 0, 0)\";\n    return [{\n      legendType: \"category\",\n      id: this.id,\n      itemId: yKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: (_b = title != null ? title : yName) != null ? _b : yKey\n      },\n      marker: {\n        shape: marker.shape,\n        fill: (_c = marker.fill) != null ? _c : color0,\n        stroke: (_e = (_d = marker.stroke) != null ? _d : stroke) != null ? _e : color0,\n        fillOpacity: (_f = marker.fillOpacity) != null ? _f : 1,\n        strokeOpacity: (_h = (_g = marker.strokeOpacity) != null ? _g : strokeOpacity) != null ? _h : 1,\n        strokeWidth: (_i = marker.strokeWidth) != null ? _i : 0,\n        enabled: marker.enabled\n      },\n      line: {\n        stroke: stroke != null ? stroke : color0,\n        strokeOpacity,\n        strokeWidth,\n        lineDash\n      }\n    }];\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      this.updateLinePaths([opts.paths], [opts.contextData]);\n    });\n  }\n  updateLinePaths(paths, contextData) {\n    contextData.forEach(({\n      nodeData\n    }, contextDataIndex) => {\n      const [lineNode] = paths[contextDataIndex];\n      const {\n        path: linePath\n      } = lineNode;\n      linePath.clear({\n        trackChanges: true\n      });\n      for (const data of nodeData) {\n        if (data.point.moveTo) {\n          linePath.moveTo(data.point.x, data.point.y);\n        } else {\n          linePath.lineTo(data.point.x, data.point.y);\n        }\n      }\n      lineNode.checkPathDirty();\n    });\n  }\n  animateEmptyUpdateReady(animationData) {\n    const {\n      markerSelections,\n      labelSelections,\n      annotationSelections,\n      contextData,\n      paths\n    } = animationData;\n    const {\n      animationManager\n    } = this.ctx;\n    this.updateLinePaths(paths, contextData);\n    pathSwipeInAnimation(this, animationManager, paths.flat());\n    resetMotion(markerSelections, resetMarkerPositionFn);\n    markerSwipeScaleInAnimation(this, animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", animationManager, annotationSelections);\n  }\n  animateReadyResize(animationData) {\n    const {\n      contextData,\n      paths\n    } = animationData;\n    this.updateLinePaths(paths, contextData);\n    super.animateReadyResize(animationData);\n  }\n  animateWaitingUpdateReady(animationData) {\n    var _a, _b;\n    const {\n      animationManager\n    } = this.ctx;\n    const {\n      markerSelections,\n      labelSelections,\n      annotationSelections,\n      contextData,\n      paths,\n      previousContextData\n    } = animationData;\n    super.resetAllAnimation(animationData);\n    if (contextData.length === 0 || !previousContextData || previousContextData.length === 0) {\n      animationManager.skipCurrentBatch();\n      this.updateLinePaths(paths, contextData);\n      return;\n    }\n    const [path] = paths;\n    const [newData] = contextData;\n    const [oldData] = previousContextData;\n    const fns = prepareLinePathAnimation(newData, oldData, (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff);\n    if (fns === void 0) {\n      animationManager.skipCurrentBatch();\n      this.updateLinePaths(paths, contextData);\n      return;\n    }\n    fromToMotion(this.id, \"marker\", animationManager, markerSelections, fns.marker);\n    fromToMotion(this.id, \"path_properties\", animationManager, path, fns.pathProperties);\n    pathMotion(this.id, \"path_update\", animationManager, path, fns.path);\n    if (fns.hasMotion) {\n      seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n      seriesLabelFadeInAnimation(this, \"annotations\", animationManager, annotationSelections);\n    }\n  }\n  getDatumId(datum) {\n    return createDatumId([`${datum.xValue}`]);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  getBandScalePadding() {\n    return {\n      inner: 1,\n      outer: 0.1\n    };\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_LineSeries.className = \"LineSeries\";\n_LineSeries.type = \"line\";\nvar LineSeries = _LineSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeriesModule.ts\nvar LineSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"line\",\n  instanceConstructor: LineSeries,\n  seriesDefaults: DEFAULT_CARTESIAN_CHART_OVERRIDES,\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    strokeWidth: 2,\n    strokeOpacity: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      strokeWidth: 0\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      formatter: void 0\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 1\n      }\n    }\n  },\n  paletteFactory: params => {\n    const {\n      marker\n    } = markerPaletteFactory(params);\n    return {\n      stroke: marker.fill,\n      marker\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeriesProperties.ts\nvar ScatterSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.colorRange = [\"#ffff00\", \"#00ff00\", \"#0000ff\"];\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([Validate(STRING)], ScatterSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([Validate(STRING)], ScatterSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"labelKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"labelName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([Validate(NUMBER_ARRAY, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"colorDomain\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], ScatterSeriesProperties.prototype, \"colorRange\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], ScatterSeriesProperties.prototype, \"title\", 2);\n__decorateClass([Validate(OBJECT)], ScatterSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([Validate(OBJECT)], ScatterSeriesProperties.prototype, \"label\", 2);\n__decorateClass([Validate(OBJECT)], ScatterSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeries.ts\nvar _ScatterSeries = class _ScatterSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */, 3 /* NEAREST_NODE */, 0 /* EXACT_SHAPE_MATCH */],\n      pathsPerSeries: 0,\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        marker: resetMarkerFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new ScatterSeriesProperties();\n    this.colorScale = new ColorScale();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const {\n        isContinuousX,\n        isContinuousY\n      } = this.isContinuous();\n      const {\n        xKey,\n        yKey,\n        labelKey,\n        colorKey,\n        colorDomain,\n        colorRange\n      } = this.properties;\n      const {\n        dataModel,\n        processedData\n      } = yield this.requestDataModel(dataController, this.data, {\n        props: [keyProperty(this, xKey, isContinuousX, {\n          id: \"xKey-raw\"\n        }), keyProperty(this, yKey, isContinuousY, {\n          id: \"yKey-raw\"\n        }), ...(labelKey ? [keyProperty(this, labelKey, false, {\n          id: `labelKey-raw`\n        })] : []), valueProperty(this, xKey, isContinuousX, {\n          id: `xValue`\n        }), valueProperty(this, yKey, isContinuousY, {\n          id: `yValue`\n        }), ...(colorKey ? [valueProperty(this, colorKey, true, {\n          id: `colorValue`\n        })] : []), ...(labelKey ? [valueProperty(this, labelKey, false, {\n          id: `labelValue`\n        })] : [])],\n        dataVisible: this.visible\n      });\n      if (colorKey) {\n        const colorKeyIdx = dataModel.resolveProcessedDataIndexById(this, `colorValue`).index;\n        this.colorScale.domain = (_a = colorDomain != null ? colorDomain : processedData.domain.values[colorKeyIdx]) != null ? _a : [];\n        this.colorScale.range = colorRange;\n        this.colorScale.update();\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const {\n      dataModel,\n      processedData\n    } = this;\n    if (!processedData || !dataModel) return [];\n    const id = direction === \"x\" /* X */ ? `xValue` : `yValue`;\n    const dataDef = dataModel.resolveProcessedDataDefById(this, id);\n    const domain = dataModel.getDomain(this, id, \"value\", processedData);\n    if ((dataDef == null ? void 0 : dataDef.def.type) === \"value\" && (dataDef == null ? void 0 : dataDef.def.valueType) === \"category\") {\n      return domain;\n    }\n    const axis = this.axes[direction];\n    return fixNumericExtent(extent(domain), axis);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const {\n        axes,\n        dataModel,\n        processedData,\n        colorScale\n      } = this;\n      const {\n        xKey,\n        yKey,\n        labelKey,\n        colorKey,\n        xName,\n        yName,\n        labelName,\n        marker,\n        label,\n        visible\n      } = this.properties;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!(dataModel && processedData && visible && xAxis && yAxis)) {\n        return [];\n      }\n      const xDataIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yDataIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      const colorDataIdx = colorKey ? dataModel.resolveProcessedDataIndexById(this, `colorValue`).index : -1;\n      const labelDataIdx = labelKey ? dataModel.resolveProcessedDataIndexById(this, `labelValue`).index : -1;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      const font = label.getFont();\n      for (const {\n        values,\n        datum\n      } of (_c = processedData.data) != null ? _c : []) {\n        const xDatum = values[xDataIdx];\n        const yDatum = values[yDataIdx];\n        const x = xScale.convert(xDatum) + xOffset;\n        const y = yScale.convert(yDatum) + yOffset;\n        const labelText = this.getLabelText(label, {\n          value: labelKey ? values[labelDataIdx] : yDatum,\n          datum,\n          xKey,\n          yKey,\n          labelKey,\n          xName,\n          yName,\n          labelName\n        });\n        const size = HdpiCanvas.getTextSize(labelText, font);\n        const fill = colorKey ? colorScale.convert(values[colorDataIdx]) : void 0;\n        nodeData.push({\n          series: this,\n          itemId: yKey,\n          yKey,\n          xKey,\n          datum,\n          xValue: xDatum,\n          yValue: yDatum,\n          capDefaults: {\n            lengthRatioMultiplier: marker.getDiameter(),\n            lengthMax: Infinity\n          },\n          point: {\n            x,\n            y,\n            size: marker.size\n          },\n          midPoint: {\n            x,\n            y\n          },\n          fill,\n          label: __spreadValues({\n            text: labelText\n          }, size)\n        });\n      }\n      return [{\n        itemId: yKey,\n        nodeData,\n        labelData: nodeData,\n        scales: __superGet(_ScatterSeries.prototype, this, \"calculateScaling\").call(this),\n        visible: this.visible\n      }];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  getLabelData() {\n    var _a;\n    return (_a = this.contextNodeData) == null ? void 0 : _a.reduce((r, n) => r.concat(n.labelData), []);\n  }\n  markerFactory() {\n    const {\n      shape\n    } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const {\n        nodeData,\n        markerSelection\n      } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(this.properties.marker.enabled ? nodeData : []);\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        markerSelection,\n        isHighlight: highlighted\n      } = opts;\n      const {\n        xKey,\n        yKey,\n        labelKey,\n        marker,\n        highlightStyle\n      } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle());\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, {\n          datum,\n          highlighted,\n          xKey,\n          yKey,\n          labelKey\n        }, baseStyle);\n      });\n      if (!highlighted) {\n        marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const placedLabels = this.isLabelEnabled() ? (_b = (_a = this.chart) == null ? void 0 : _a.placeLabels().get(this)) != null ? _b : [] : [];\n      return opts.labelSelection.update(placedLabels.map(({\n        datum,\n        x,\n        y\n      }) => __spreadProps(__spreadValues({}, datum), {\n        point: {\n          x,\n          y,\n          size: datum.point.size\n        }\n      })), text => {\n        text.pointerEvents = 1 /* None */;\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        label\n      } = this.properties;\n      opts.labelSelection.each((text, datum) => {\n        var _a, _b, _c, _d;\n        text.text = datum.label.text;\n        text.fill = label.color;\n        text.x = (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : 0;\n        text.y = (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : 0;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.textAlign = \"left\";\n        text.textBaseline = \"top\";\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const {\n      xKey,\n      yKey,\n      labelKey,\n      xName,\n      yName,\n      labelName,\n      title = yName,\n      marker,\n      tooltip\n    } = this.properties;\n    const {\n      datum,\n      xValue,\n      yValue,\n      label\n    } = nodeDatum;\n    const baseStyle = mergeDefaults({\n      fill: nodeDatum.fill,\n      strokeWidth: this.getStrokeWidth(marker.strokeWidth)\n    }, marker.getStyle());\n    const {\n      fill: color = \"gray\"\n    } = this.getMarkerStyle(marker, {\n      datum: nodeDatum,\n      highlighted: false,\n      xKey,\n      yKey,\n      labelKey\n    }, baseStyle);\n    const xString = sanitizeHtml(xAxis.formatDatum(xValue));\n    const yString = sanitizeHtml(yAxis.formatDatum(yValue));\n    let content = `<b>${sanitizeHtml(xName != null ? xName : xKey)}</b>: ${xString}<br><b>${sanitizeHtml(yName != null ? yName : yKey)}</b>: ${yString}`;\n    if (labelKey) {\n      content = `<b>${sanitizeHtml(labelName != null ? labelName : labelKey)}</b>: ${sanitizeHtml(label.text)}<br>` + content;\n    }\n    return tooltip.toTooltipHtml({\n      title,\n      content,\n      backgroundColor: color\n    }, __spreadValues({\n      datum,\n      xKey,\n      xName,\n      yKey,\n      yName,\n      labelKey,\n      labelName,\n      title,\n      color,\n      seriesId: this.id\n    }, this.getModuleTooltipParams()));\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      yKey,\n      yName,\n      title,\n      marker,\n      visible\n    } = this.properties;\n    const {\n      fill,\n      stroke,\n      fillOpacity,\n      strokeOpacity,\n      strokeWidth\n    } = marker;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || legendType !== \"category\") {\n      return [];\n    }\n    return [{\n      legendType: \"category\",\n      id: this.id,\n      itemId: yKey,\n      seriesId: this.id,\n      enabled: visible,\n      label: {\n        text: (_b = title != null ? title : yName) != null ? _b : yKey\n      },\n      marker: {\n        shape: marker.shape,\n        fill: (_d = (_c = marker.fill) != null ? _c : fill) != null ? _d : \"rgba(0, 0, 0, 0)\",\n        stroke: (_f = (_e = marker.stroke) != null ? _e : stroke) != null ? _f : \"rgba(0, 0, 0, 0)\",\n        fillOpacity: fillOpacity != null ? fillOpacity : 1,\n        strokeOpacity: strokeOpacity != null ? strokeOpacity : 1,\n        strokeWidth: strokeWidth != null ? strokeWidth : 0\n      }\n    }];\n  }\n  animateEmptyUpdateReady(data) {\n    const {\n      markerSelections,\n      labelSelections,\n      annotationSelections\n    } = data;\n    markerScaleInAnimation(this, this.ctx.animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_ScatterSeries.className = \"ScatterSeries\";\n_ScatterSeries.type = \"scatter\";\nvar ScatterSeries = _ScatterSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeriesModule.ts\nvar ScatterSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"scatter\",\n  instanceConstructor: ScatterSeries,\n  seriesDefaults: {\n    axes: [{\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n    }, {\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.LEFT\n    }]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      fillOpacity: 0.8\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 1\n      }\n    }\n  },\n  paletteFactory: markerPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/themes/defaultColors.ts\nvar DEFAULT_FILLS = {\n  BLUE: \"#5090dc\",\n  ORANGE: \"#ffa03a\",\n  GREEN: \"#459d55\",\n  CYAN: \"#34bfe1\",\n  YELLOW: \"#e1cc00\",\n  VIOLET: \"#9669cb\",\n  GRAY: \"#b5b5b5\",\n  MAGENTA: \"#bd5aa7\",\n  BROWN: \"#8a6224\",\n  RED: \"#ef5452\"\n};\nvar DEFAULT_STROKES = {\n  BLUE: \"#2b5c95\",\n  ORANGE: \"#cc6f10\",\n  GREEN: \"#1e652e\",\n  CYAN: \"#18859e\",\n  YELLOW: \"#a69400\",\n  VIOLET: \"#603c88\",\n  GRAY: \"#575757\",\n  MAGENTA: \"#7d2f6d\",\n  BROWN: \"#4f3508\",\n  RED: \"#a82529\"\n};\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeriesProperties.ts\nvar PieTitle = class extends Caption {\n  constructor() {\n    super(...arguments);\n    this.showInLegend = false;\n  }\n};\n__decorateClass([Validate(BOOLEAN)], PieTitle.prototype, \"showInLegend\", 2);\nvar DoughnutInnerLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.margin = 2;\n  }\n  set(properties, _reset) {\n    return super.set(properties);\n  }\n};\n__decorateClass([Validate(STRING)], DoughnutInnerLabel.prototype, \"text\", 2);\n__decorateClass([Validate(NUMBER)], DoughnutInnerLabel.prototype, \"margin\", 2);\nvar DoughnutInnerCircle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"transparent\";\n    this.fillOpacity = 1;\n  }\n};\n__decorateClass([Validate(COLOR_STRING)], DoughnutInnerCircle.prototype, \"fill\", 2);\n__decorateClass([Validate(RATIO)], DoughnutInnerCircle.prototype, \"fillOpacity\", 2);\nvar PieSeriesCalloutLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.offset = 3;\n    this.minAngle = 0;\n    this.minSpacing = 4;\n    this.maxCollisionOffset = 50;\n    this.avoidCollisions = true;\n  }\n};\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesCalloutLabel.prototype, \"offset\", 2);\n__decorateClass([Validate(DEGREE)], PieSeriesCalloutLabel.prototype, \"minAngle\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesCalloutLabel.prototype, \"minSpacing\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesCalloutLabel.prototype, \"maxCollisionOffset\", 2);\n__decorateClass([Validate(BOOLEAN)], PieSeriesCalloutLabel.prototype, \"avoidCollisions\", 2);\nvar PieSeriesSectorLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.positionOffset = 0;\n    this.positionRatio = 0.5;\n  }\n};\n__decorateClass([Validate(NUMBER)], PieSeriesSectorLabel.prototype, \"positionOffset\", 2);\n__decorateClass([Validate(RATIO)], PieSeriesSectorLabel.prototype, \"positionRatio\", 2);\nvar PieSeriesCalloutLine = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.length = 10;\n    this.strokeWidth = 1;\n  }\n};\n__decorateClass([Validate(COLOR_STRING_ARRAY, {\n  optional: true\n})], PieSeriesCalloutLine.prototype, \"colors\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesCalloutLine.prototype, \"length\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesCalloutLine.prototype, \"strokeWidth\", 2);\nvar PieSeriesProperties = class extends SeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fills = Object.values(DEFAULT_FILLS);\n    this.strokes = Object.values(DEFAULT_STROKES);\n    this.fillOpacity = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.rotation = 0;\n    this.outerRadiusOffset = 0;\n    this.outerRadiusRatio = 1;\n    this.innerRadiusOffset = 0;\n    this.innerRadiusRatio = 1;\n    this.strokeWidth = 1;\n    this.sectorSpacing = void 0;\n    this.innerLabels = new PropertiesArray(DoughnutInnerLabel);\n    this.title = new PieTitle();\n    this.innerCircle = new DoughnutInnerCircle();\n    this.shadow = new DropShadow();\n    this.calloutLabel = new PieSeriesCalloutLabel();\n    this.sectorLabel = new PieSeriesSectorLabel();\n    this.calloutLine = new PieSeriesCalloutLine();\n    this.tooltip = new SeriesTooltip();\n    this.__BACKGROUND_COLOR_DO_NOT_USE = void 0;\n  }\n};\n__decorateClass([Validate(STRING)], PieSeriesProperties.prototype, \"angleKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"angleName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"radiusKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"radiusName\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], PieSeriesProperties.prototype, \"radiusMin\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], PieSeriesProperties.prototype, \"radiusMax\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"calloutLabelKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"calloutLabelName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"sectorLabelKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"sectorLabelName\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"legendItemKey\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], PieSeriesProperties.prototype, \"fills\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], PieSeriesProperties.prototype, \"strokes\", 2);\n__decorateClass([Validate(RATIO)], PieSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([Validate(RATIO)], PieSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([Validate(LINE_DASH)], PieSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([Validate(FUNCTION, {\n  optional: true\n})], PieSeriesProperties.prototype, \"formatter\", 2);\n__decorateClass([Validate(DEGREE)], PieSeriesProperties.prototype, \"rotation\", 2);\n__decorateClass([Validate(NUMBER)], PieSeriesProperties.prototype, \"outerRadiusOffset\", 2);\n__decorateClass([Validate(RATIO)], PieSeriesProperties.prototype, \"outerRadiusRatio\", 2);\n__decorateClass([Validate(NUMBER)], PieSeriesProperties.prototype, \"innerRadiusOffset\", 2);\n__decorateClass([Validate(RATIO)], PieSeriesProperties.prototype, \"innerRadiusRatio\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER)], PieSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([Validate(POSITIVE_NUMBER, {\n  optional: true\n})], PieSeriesProperties.prototype, \"sectorSpacing\", 2);\n__decorateClass([Validate(OBJECT_ARRAY)], PieSeriesProperties.prototype, \"innerLabels\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"title\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"innerCircle\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"calloutLabel\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"sectorLabel\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"calloutLine\", 2);\n__decorateClass([Validate(OBJECT)], PieSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], PieSeriesProperties.prototype, \"__BACKGROUND_COLOR_DO_NOT_USE\", 2);\n\n// packages/ag-charts-community/src/chart/series/polar/pieUtil.ts\nfunction preparePieSeriesAnimationFunctions(initialLoad, rotationDegrees, scaleFn, oldScaleFn) {\n  const scale2 = [scaleFn.convert(0), scaleFn.convert(1)];\n  const oldScale = [oldScaleFn.convert(0), oldScaleFn.convert(1)];\n  const rotation = Math.PI / -2 + toRadians(rotationDegrees);\n  const scaleToNewRadius = ({\n    radius\n  }) => {\n    return {\n      innerRadius: scale2[0],\n      outerRadius: scale2[0] + (scale2[1] - scale2[0]) * radius\n    };\n  };\n  const scaleToOldRadius = ({\n    radius\n  }) => {\n    return {\n      innerRadius: oldScale[0],\n      outerRadius: oldScale[0] + (oldScale[1] - oldScale[0]) * radius\n    };\n  };\n  const fromFn = (sect, datum, status, {\n    prevFromProps\n  }) => {\n    var _a, _b, _c, _d, _e, _f;\n    let {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = sect;\n    let {\n      fill,\n      stroke\n    } = datum.sectorFormat;\n    if (status === \"unknown\" || status === \"added\" && !prevFromProps) {\n      startAngle = rotation;\n      endAngle = rotation;\n      innerRadius = datum.innerRadius;\n      outerRadius = datum.outerRadius;\n    } else if (status === \"added\" && prevFromProps) {\n      startAngle = (_a = prevFromProps.endAngle) != null ? _a : rotation;\n      endAngle = (_b = prevFromProps.endAngle) != null ? _b : rotation;\n      innerRadius = (_c = prevFromProps.innerRadius) != null ? _c : datum.innerRadius;\n      outerRadius = (_d = prevFromProps.outerRadius) != null ? _d : datum.outerRadius;\n    }\n    if (status === \"added\" && !initialLoad) {\n      const radii = scaleToOldRadius(datum);\n      innerRadius = radii.innerRadius;\n      outerRadius = radii.outerRadius;\n    }\n    if (status === \"updated\") {\n      fill = (_e = sect.fill) != null ? _e : fill;\n      stroke = (_f = sect.stroke) != null ? _f : stroke;\n    }\n    return {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      fill,\n      stroke\n    };\n  };\n  const toFn = (_sect, datum, status, {\n    prevLive\n  }) => {\n    var _a, _b;\n    let {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = datum;\n    const {\n      stroke,\n      fill\n    } = datum.sectorFormat;\n    if (status === \"removed\" && prevLive) {\n      startAngle = (_a = prevLive.datum) == null ? void 0 : _a.endAngle;\n      endAngle = (_b = prevLive.datum) == null ? void 0 : _b.endAngle;\n    } else if (status === \"removed\" && !prevLive) {\n      startAngle = rotation;\n      endAngle = rotation;\n    }\n    if (status === \"removed\") {\n      const radii = scaleToNewRadius(datum);\n      innerRadius = radii.innerRadius;\n      outerRadius = radii.outerRadius;\n    }\n    return {\n      startAngle,\n      endAngle,\n      outerRadius,\n      innerRadius,\n      stroke,\n      fill\n    };\n  };\n  const innerCircle = {\n    fromFn: (node, _datum) => {\n      var _a, _b, _c;\n      return {\n        size: (_c = (_b = (_a = node.previousDatum) == null ? void 0 : _a.radius) != null ? _b : node.size) != null ? _c : 0\n      };\n    },\n    toFn: (_node, datum) => {\n      var _a;\n      return {\n        size: (_a = datum.radius) != null ? _a : 0\n      };\n    }\n  };\n  return {\n    nodes: {\n      toFn,\n      fromFn\n    },\n    innerCircle\n  };\n}\nfunction resetPieSelectionsFn(_node, datum) {\n  return {\n    startAngle: datum.startAngle,\n    endAngle: datum.endAngle,\n    innerRadius: datum.innerRadius,\n    outerRadius: datum.outerRadius,\n    fill: datum.sectorFormat.fill,\n    stroke: datum.sectorFormat.stroke\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/polar/polarSeries.ts\nvar PolarSeries = class extends DataModelSeries {\n  constructor(_a) {\n    var _b = _a,\n      {\n        useLabelLayer = false,\n        pickModes = [0 /* EXACT_SHAPE_MATCH */],\n        canHaveAxes = false,\n        animationResetFns\n      } = _b,\n      opts = __objRest(_b, [\"useLabelLayer\", \"pickModes\", \"canHaveAxes\", \"animationResetFns\"]);\n    super(__spreadProps(__spreadValues({}, opts), {\n      useLabelLayer,\n      pickModes,\n      contentGroupVirtual: false,\n      directionKeys: {\n        [\"x\" /* X */]: [\"angleKey\"],\n        [\"y\" /* Y */]: [\"radiusKey\"]\n      },\n      directionNames: {\n        [\"x\" /* X */]: [\"angleName\"],\n        [\"y\" /* Y */]: [\"radiusName\"]\n      },\n      canHaveAxes\n    }));\n    this.sectorGroup = this.contentGroup.appendChild(new Group());\n    this.itemSelection = Selection.select(this.sectorGroup, () => this.nodeFactory(), false);\n    this.labelSelection = Selection.select(this.labelGroup, Text, false);\n    this.highlightSelection = Selection.select(this.highlightGroup, () => this.nodeFactory());\n    /**\n     * The center of the polar series (for example, the center of a pie).\n     * If the polar chart has multiple series, all of them will have their\n     * center set to the same value as a result of the polar chart layout.\n     * The center coordinates are not supposed to be set by the user.\n     */\n    this.centerX = 0;\n    this.centerY = 0;\n    /**\n     * The maximum radius the series can use.\n     * This value is set automatically as a result of the polar chart layout\n     * and is not supposed to be set by the user.\n     */\n    this.radius = 0;\n    this.sectorGroup.zIndexSubOrder = [() => this._declarationOrder, 1];\n    this.animationResetFns = animationResetFns;\n    this.animationState = new StateMachine(\"empty\", {\n      empty: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateEmptyUpdateReady(data)\n        }\n      },\n      ready: {\n        updateData: \"waiting\",\n        clear: \"clearing\",\n        highlight: data => this.animateReadyHighlight(data),\n        highlightMarkers: data => this.animateReadyHighlightMarkers(data),\n        resize: data => this.animateReadyResize(data)\n      },\n      waiting: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateWaitingUpdateReady(data)\n        }\n      },\n      clearing: {\n        update: {\n          target: \"empty\",\n          action: data => this.animateClearingUpdateEmpty(data)\n        }\n      }\n    }, () => this.checkProcessedDataAnimatable());\n  }\n  getLabelData() {\n    return [];\n  }\n  computeLabelsBBox(_options, _seriesRect) {\n    return null;\n  }\n  resetAllAnimation() {\n    var _a;\n    const {\n      item,\n      label\n    } = (_a = this.animationResetFns) != null ? _a : {};\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (item) {\n      resetMotion([this.itemSelection, this.highlightSelection], item);\n    }\n    if (label) {\n      resetMotion([this.labelSelection], label);\n    }\n    this.itemSelection.cleanup();\n    this.labelSelection.cleanup();\n    this.highlightSelection.cleanup();\n  }\n  animateEmptyUpdateReady(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animateWaitingUpdateReady(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animateReadyHighlight(_data) {\n    var _a;\n    const {\n      item\n    } = (_a = this.animationResetFns) != null ? _a : {};\n    if (item) {\n      resetMotion([this.highlightSelection], item);\n    }\n  }\n  animateReadyHighlightMarkers(_data) {}\n  animateReadyResize(_data) {\n    this.resetAllAnimation();\n  }\n  animateClearingUpdateEmpty(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData(seriesRect) {\n    return {\n      seriesRect\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeries.ts\nvar PieSeriesNodeClickEvent = class extends SeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.angleKey = series.properties.angleKey;\n    this.radiusKey = series.properties.radiusKey;\n    this.calloutLabelKey = series.properties.calloutLabelKey;\n    this.sectorLabelKey = series.properties.sectorLabelKey;\n  }\n};\nvar PieSeries = class extends PolarSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      useLabelLayer: true,\n      animationResetFns: {\n        item: resetPieSelectionsFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new PieSeriesProperties();\n    this.previousRadiusScale = new LinearScale();\n    this.radiusScale = new LinearScale();\n    // The group node that contains the background graphics.\n    this.backgroundGroup = this.rootGroup.appendChild(new Group({\n      name: `${this.id}-background`,\n      layer: true,\n      zIndex: 0 /* SERIES_BACKGROUND_ZINDEX */\n    }));\n    // AG-6193 If the sum of all datums is 0, then we'll draw 1 or 2 rings to represent the empty series.\n    this.zerosumRingsGroup = this.backgroundGroup.appendChild(new Group({\n      name: `${this.id}-zerosumRings`\n    }));\n    this.zerosumOuterRing = this.zerosumRingsGroup.appendChild(new Circle());\n    this.zerosumInnerRing = this.zerosumRingsGroup.appendChild(new Circle());\n    this.innerCircleGroup = this.backgroundGroup.appendChild(new Group({\n      name: `${this.id}-innerCircle`\n    }));\n    this.nodeData = [];\n    // When a user toggles a series item (e.g. from the legend), its boolean state is recorded here.\n    this.seriesItemEnabled = [];\n    this.surroundingRadius = void 0;\n    this.NodeClickEvent = PieSeriesNodeClickEvent;\n    this.angleScale = new LinearScale();\n    this.angleScale.domain = [0, 1];\n    this.angleScale.range = [-Math.PI, Math.PI].map(angle => angle + Math.PI / 2);\n    const pieCalloutLabels = new Group({\n      name: \"pieCalloutLabels\"\n    });\n    const pieSectorLabels = new Group({\n      name: \"pieSectorLabels\"\n    });\n    const innerLabels = new Group({\n      name: \"innerLabels\"\n    });\n    this.labelGroup.append(pieCalloutLabels);\n    this.labelGroup.append(pieSectorLabels);\n    this.labelGroup.append(innerLabels);\n    this.calloutLabelSelection = Selection.select(pieCalloutLabels, Group);\n    this.sectorLabelSelection = Selection.select(pieSectorLabels, Text);\n    this.innerLabelsSelection = Selection.select(innerLabels, Text);\n    this.innerCircleSelection = Selection.select(this.innerCircleGroup, Circle);\n    for (const circle of [this.zerosumInnerRing, this.zerosumOuterRing]) {\n      circle.fillOpacity = 0;\n      circle.stroke = this.properties.calloutLabel.color;\n      circle.strokeWidth = 1;\n      circle.strokeOpacity = 1;\n    }\n  }\n  addChartEventListeners() {\n    var _a;\n    (_a = this.ctx.chartEventManager) == null ? void 0 : _a.addListener(\"legend-item-click\", event => this.onLegendItemClick(event));\n  }\n  visibleChanged() {\n    this.processSeriesItemEnabled();\n  }\n  get visible() {\n    return this.seriesItemEnabled.length ? this.seriesItemEnabled.some(visible => visible) : super.visible;\n  }\n  processSeriesItemEnabled() {\n    var _a;\n    const {\n      data,\n      visible\n    } = this;\n    this.seriesItemEnabled = (_a = data == null ? void 0 : data.map(() => visible)) != null ? _a : [];\n  }\n  nodeFactory() {\n    return new Sector();\n  }\n  getSeriesDomain(direction) {\n    if (direction === \"x\" /* X */) {\n      return this.angleScale.domain;\n    } else {\n      return this.radiusScale.domain;\n    }\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d, _e;\n      if (this.data == null || !this.properties.isValid()) {\n        return;\n      }\n      let {\n        data\n      } = this;\n      const {\n        seriesItemEnabled\n      } = this;\n      const {\n        angleKey,\n        radiusKey,\n        calloutLabelKey,\n        sectorLabelKey,\n        legendItemKey\n      } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const extraKeyProps = [];\n      const extraProps = [];\n      if (legendItemKey) {\n        extraKeyProps.push(keyProperty(this, legendItemKey, false, {\n          id: `legendItemKey`\n        }));\n      } else if (calloutLabelKey) {\n        extraKeyProps.push(keyProperty(this, calloutLabelKey, false, {\n          id: `calloutLabelKey`\n        }));\n      } else if (sectorLabelKey) {\n        extraKeyProps.push(keyProperty(this, sectorLabelKey, false, {\n          id: `sectorLabelKey`\n        }));\n      }\n      if (radiusKey) {\n        extraProps.push(rangedValueProperty(this, radiusKey, {\n          id: \"radiusValue\",\n          min: (_a = this.properties.radiusMin) != null ? _a : 0,\n          max: this.properties.radiusMax\n        }), valueProperty(this, radiusKey, true, {\n          id: `radiusRaw`\n        }),\n        // Raw value pass-through.\n        normalisePropertyTo(this, {\n          id: \"radiusValue\"\n        }, [0, 1], 1, (_b = this.properties.radiusMin) != null ? _b : 0, this.properties.radiusMax));\n      }\n      if (calloutLabelKey) {\n        extraProps.push(valueProperty(this, calloutLabelKey, false, {\n          id: `calloutLabelValue`\n        }));\n      }\n      if (sectorLabelKey) {\n        extraProps.push(valueProperty(this, sectorLabelKey, false, {\n          id: `sectorLabelValue`\n        }));\n      }\n      if (legendItemKey) {\n        extraProps.push(valueProperty(this, legendItemKey, false, {\n          id: `legendItemValue`\n        }));\n      }\n      if (animationEnabled && this.processedData && extraKeyProps.length > 0) {\n        extraProps.push(diff(this.processedData));\n      }\n      extraProps.push(animationValidation(this));\n      data = data.map((d, idx) => seriesItemEnabled[idx] ? d : __spreadProps(__spreadValues({}, d), {\n        [angleKey]: 0\n      }));\n      yield this.requestDataModel(dataController, data, {\n        props: [...extraKeyProps, accumulativeValueProperty(this, angleKey, true, {\n          id: `angleValue`,\n          onlyPositive: true\n        }), valueProperty(this, angleKey, true, {\n          id: `angleRaw`\n        }),\n        // Raw value pass-through.\n        normalisePropertyTo(this, {\n          id: \"angleValue\"\n        }, [0, 1], 0, 0), ...extraProps]\n      });\n      for (const valueDef of (_e = (_d = (_c = this.processedData) == null ? void 0 : _c.defs) == null ? void 0 : _d.values) != null ? _e : []) {\n        const {\n          id,\n          missing,\n          property\n        } = valueDef;\n        if (id !== \"angleRaw\" && missing !== void 0 && missing > 0) {\n          Logger.warnOnce(`no value was found for the key '${String(property)}' on ${missing} data element${missing > 1 ? \"s\" : \"\"}`);\n        }\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  maybeRefreshNodeData() {\n    return __async(this, null, function* () {\n      if (!this.nodeDataRefresh) return;\n      const [{\n        nodeData = []\n      } = {}] = yield this.createNodeData();\n      this.nodeData = nodeData;\n      this.nodeDataRefresh = false;\n    });\n  }\n  getProcessedDataIndexes(dataModel) {\n    const angleIdx = dataModel.resolveProcessedDataIndexById(this, `angleValue`).index;\n    const radiusIdx = this.properties.radiusKey ? dataModel.resolveProcessedDataIndexById(this, `radiusValue`).index : -1;\n    const calloutLabelIdx = this.properties.calloutLabelKey ? dataModel.resolveProcessedDataIndexById(this, `calloutLabelValue`).index : -1;\n    const sectorLabelIdx = this.properties.sectorLabelKey ? dataModel.resolveProcessedDataIndexById(this, `sectorLabelValue`).index : -1;\n    const legendItemIdx = this.properties.legendItemKey ? dataModel.resolveProcessedDataIndexById(this, `legendItemValue`).index : -1;\n    return {\n      angleIdx,\n      radiusIdx,\n      calloutLabelIdx,\n      sectorLabelIdx,\n      legendItemIdx\n    };\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      const {\n        id: seriesId,\n        processedData,\n        dataModel,\n        angleScale\n      } = this;\n      const {\n        rotation\n      } = this.properties;\n      if (!processedData || !dataModel || processedData.type !== \"ungrouped\") return [];\n      const {\n        angleIdx,\n        radiusIdx,\n        calloutLabelIdx,\n        sectorLabelIdx,\n        legendItemIdx\n      } = this.getProcessedDataIndexes(dataModel);\n      let currentStart = 0;\n      let sum2 = 0;\n      const nodeData = processedData.data.map((group2, index) => {\n        var _a;\n        const {\n          datum,\n          values\n        } = group2;\n        const currentValue = values[angleIdx];\n        const startAngle = angleScale.convert(currentStart) + toRadians(rotation);\n        currentStart = currentValue;\n        sum2 += currentValue;\n        const endAngle = angleScale.convert(currentStart) + toRadians(rotation);\n        const span = Math.abs(endAngle - startAngle);\n        const midAngle = startAngle + span / 2;\n        const angleValue = values[angleIdx + 1];\n        const radius = radiusIdx >= 0 ? (_a = values[radiusIdx]) != null ? _a : 1 : 1;\n        const radiusValue = radiusIdx >= 0 ? values[radiusIdx + 1] : void 0;\n        const legendItemValue = legendItemIdx >= 0 ? values[legendItemIdx] : void 0;\n        const labels = this.getLabels(datum, midAngle, span, true, values[calloutLabelIdx], values[sectorLabelIdx], legendItemValue);\n        const sectorFormat = this.getSectorFormat(datum, index, false);\n        return __spreadValues({\n          itemId: index,\n          series: this,\n          datum,\n          index,\n          angleValue,\n          midAngle,\n          midCos: Math.cos(midAngle),\n          midSin: Math.sin(midAngle),\n          startAngle,\n          endAngle,\n          sectorFormat,\n          radiusValue,\n          radius,\n          innerRadius: Math.max(this.radiusScale.convert(0), 0),\n          outerRadius: Math.max(this.radiusScale.convert(radius), 0),\n          legendItemValue\n        }, labels);\n      });\n      this.zerosumOuterRing.visible = sum2 === 0;\n      this.zerosumInnerRing.visible = sum2 === 0 && this.properties.innerRadiusRatio !== 1 && this.properties.innerRadiusRatio > 0;\n      return [{\n        itemId: seriesId,\n        nodeData,\n        labelData: nodeData\n      }];\n    });\n  }\n  getLabels(datum, midAngle, span, skipDisabled, calloutLabelValue, sectorLabelValue, legendItemValue) {\n    const {\n      calloutLabel,\n      sectorLabel,\n      legendItemKey\n    } = this.properties;\n    const calloutLabelKey = !skipDisabled || calloutLabel.enabled ? this.properties.calloutLabelKey : void 0;\n    const sectorLabelKey = !skipDisabled || sectorLabel.enabled ? this.properties.sectorLabelKey : void 0;\n    if (!calloutLabelKey && !sectorLabelKey && !legendItemKey) {\n      return {};\n    }\n    const labelFormatterParams = {\n      datum,\n      angleKey: this.properties.angleKey,\n      angleName: this.properties.angleName,\n      radiusKey: this.properties.radiusKey,\n      radiusName: this.properties.radiusName,\n      calloutLabelKey: this.properties.calloutLabelKey,\n      calloutLabelName: this.properties.calloutLabelName,\n      sectorLabelKey: this.properties.sectorLabelKey,\n      sectorLabelName: this.properties.sectorLabelName,\n      legendItemKey: this.properties.legendItemKey\n    };\n    const result = {};\n    if (calloutLabelKey && span > toRadians(calloutLabel.minAngle)) {\n      result.calloutLabel = __spreadProps(__spreadValues({}, this.getTextAlignment(midAngle)), {\n        text: this.getLabelText(calloutLabel, __spreadProps(__spreadValues({}, labelFormatterParams), {\n          value: calloutLabelValue\n        })),\n        hidden: false,\n        collisionTextAlign: void 0,\n        collisionOffsetY: 0,\n        box: void 0\n      });\n    }\n    if (sectorLabelKey) {\n      result.sectorLabel = {\n        text: this.getLabelText(sectorLabel, __spreadProps(__spreadValues({}, labelFormatterParams), {\n          value: sectorLabelValue\n        }))\n      };\n    }\n    if (legendItemKey != null && legendItemValue != null) {\n      result.legendItem = {\n        key: legendItemKey,\n        text: legendItemValue\n      };\n    }\n    return result;\n  }\n  getTextAlignment(midAngle) {\n    const quadrantTextOpts = [{\n      textAlign: \"center\",\n      textBaseline: \"bottom\"\n    }, {\n      textAlign: \"left\",\n      textBaseline: \"middle\"\n    }, {\n      textAlign: \"center\",\n      textBaseline: \"hanging\"\n    }, {\n      textAlign: \"right\",\n      textBaseline: \"middle\"\n    }];\n    const midAngle180 = normalizeAngle180(midAngle);\n    const quadrantStart = -3 * Math.PI / 4;\n    const quadrantOffset = midAngle180 - quadrantStart;\n    const quadrant = Math.floor(quadrantOffset / (Math.PI / 2));\n    const quadrantIndex = mod(quadrant, quadrantTextOpts.length);\n    return quadrantTextOpts[quadrantIndex];\n  }\n  getSectorFormat(datum, formatIndex, highlight) {\n    var _a, _b, _c, _d, _e;\n    const {\n      callbackCache,\n      highlightManager\n    } = this.ctx;\n    const {\n      angleKey,\n      radiusKey,\n      fills,\n      strokes,\n      formatter,\n      sectorSpacing,\n      __BACKGROUND_COLOR_DO_NOT_USE\n    } = this.properties;\n    const highlightedDatum = highlightManager.getActiveHighlight();\n    const isDatumHighlighted = highlight && (highlightedDatum == null ? void 0 : highlightedDatum.series) === this && formatIndex === highlightedDatum.itemId;\n    const {\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      strokeOpacity\n    } = mergeDefaults(isDatumHighlighted && this.properties.highlightStyle.item, {\n      fill: fills.length > 0 ? fills[formatIndex % fills.length] : void 0,\n      fillOpacity: this.properties.fillOpacity,\n      // @todo(AG-10275) Remove sectorSpacing null case\n      stroke: sectorSpacing != null ? strokes.length > 0 ? strokes[formatIndex % strokes.length] : void 0 : strokes.length > 0 ? strokes[formatIndex % strokes.length] : __BACKGROUND_COLOR_DO_NOT_USE,\n      strokeWidth: this.getStrokeWidth(this.properties.strokeWidth),\n      strokeOpacity: this.getOpacity()\n    });\n    let format2;\n    if (formatter) {\n      format2 = callbackCache.call(formatter, {\n        datum,\n        angleKey,\n        radiusKey,\n        fill,\n        stroke,\n        fills,\n        strokes,\n        strokeWidth,\n        highlighted: isDatumHighlighted,\n        seriesId: this.id\n      });\n    }\n    return {\n      fill: (_a = format2 == null ? void 0 : format2.fill) != null ? _a : fill,\n      fillOpacity: (_b = format2 == null ? void 0 : format2.fillOpacity) != null ? _b : fillOpacity,\n      stroke: (_c = format2 == null ? void 0 : format2.stroke) != null ? _c : stroke,\n      strokeWidth: (_d = format2 == null ? void 0 : format2.strokeWidth) != null ? _d : strokeWidth,\n      strokeOpacity: (_e = format2 == null ? void 0 : format2.strokeOpacity) != null ? _e : strokeOpacity\n    };\n  }\n  getInnerRadius() {\n    const {\n      radius\n    } = this;\n    const {\n      innerRadiusRatio,\n      innerRadiusOffset\n    } = this.properties;\n    const innerRadius = radius * innerRadiusRatio + innerRadiusOffset;\n    if (innerRadius === radius || innerRadius < 0) {\n      return 0;\n    }\n    return innerRadius;\n  }\n  getOuterRadius() {\n    return Math.max(this.radius * this.properties.outerRadiusRatio + this.properties.outerRadiusOffset, 0);\n  }\n  updateRadiusScale(resize) {\n    const newRange = [this.getInnerRadius(), this.getOuterRadius()];\n    this.radiusScale.range = newRange;\n    if (resize) {\n      this.previousRadiusScale.range = newRange;\n    }\n    this.nodeData = this.nodeData.map(_a => {\n      var _b = _a,\n        {\n          radius\n        } = _b,\n        d = __objRest(_b, [\"radius\"]);\n      return __spreadProps(__spreadValues({}, d), {\n        radius,\n        innerRadius: Math.max(this.radiusScale.convert(0), 0),\n        outerRadius: Math.max(this.radiusScale.convert(radius), 0)\n      });\n    });\n  }\n  getTitleTranslationY() {\n    var _a, _b;\n    const outerRadius = Math.max(0, this.radiusScale.range[1]);\n    if (outerRadius === 0) {\n      return NaN;\n    }\n    const spacing = (_b = (_a = this.properties.title) == null ? void 0 : _a.spacing) != null ? _b : 0;\n    const titleOffset = 2 + spacing;\n    const dy = Math.max(0, -outerRadius);\n    return -outerRadius - titleOffset - dy;\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({\n      seriesRect\n    }) {\n      const {\n        title\n      } = this.properties;\n      const newNodeDataDependencies = {\n        seriesRectWidth: seriesRect == null ? void 0 : seriesRect.width,\n        seriesRectHeight: seriesRect == null ? void 0 : seriesRect.height\n      };\n      const resize = jsonDiff(this.nodeDataDependencies, newNodeDataDependencies) != null;\n      if (resize) {\n        this._nodeDataDependencies = newNodeDataDependencies;\n      }\n      yield this.maybeRefreshNodeData();\n      this.updateTitleNodes();\n      this.updateRadiusScale(resize);\n      this.contentGroup.translationX = this.centerX;\n      this.contentGroup.translationY = this.centerY;\n      this.highlightGroup.translationX = this.centerX;\n      this.highlightGroup.translationY = this.centerY;\n      this.backgroundGroup.translationX = this.centerX;\n      this.backgroundGroup.translationY = this.centerY;\n      if (this.labelGroup) {\n        this.labelGroup.translationX = this.centerX;\n        this.labelGroup.translationY = this.centerY;\n      }\n      if (title) {\n        const dy = this.getTitleTranslationY();\n        const titleBox = title.node.computeBBox();\n        title.node.visible = title.enabled && isFinite(dy) && !this.bboxIntersectsSurroundingSeries(titleBox, 0, dy);\n        title.node.translationY = isFinite(dy) ? dy : 0;\n      }\n      this.updateNodeMidPoint();\n      yield this.updateSelections();\n      yield this.updateNodes(seriesRect);\n    });\n  }\n  updateTitleNodes() {\n    var _a, _b;\n    const {\n      oldTitle\n    } = this;\n    const {\n      title\n    } = this.properties;\n    if (oldTitle !== title) {\n      if (oldTitle) {\n        (_a = this.labelGroup) == null ? void 0 : _a.removeChild(oldTitle.node);\n      }\n      if (title) {\n        title.node.textBaseline = \"bottom\";\n        (_b = this.labelGroup) == null ? void 0 : _b.appendChild(title.node);\n      }\n      this.oldTitle = title;\n    }\n  }\n  updateNodeMidPoint() {\n    this.nodeData.forEach(d => {\n      const radius = d.innerRadius + (d.outerRadius - d.innerRadius) / 2;\n      d.midPoint = {\n        x: d.midCos * Math.max(0, radius),\n        y: d.midSin * Math.max(0, radius)\n      };\n    });\n  }\n  updateSelections() {\n    return __async(this, null, function* () {\n      yield this.updateGroupSelection();\n      this.updateInnerCircleSelection();\n    });\n  }\n  updateGroupSelection() {\n    return __async(this, null, function* () {\n      const {\n        itemSelection,\n        highlightSelection,\n        calloutLabelSelection,\n        sectorLabelSelection,\n        innerLabelsSelection\n      } = this;\n      const update = (selection, clone) => {\n        let nodeData = this.nodeData;\n        if (clone) {\n          nodeData = nodeData.map(datum => __spreadProps(__spreadValues({}, datum), {\n            sectorFormat: __spreadValues({}, datum.sectorFormat)\n          }));\n        }\n        selection.update(nodeData);\n        if (this.ctx.animationManager.isSkipped()) {\n          selection.cleanup();\n        }\n      };\n      update(itemSelection, false);\n      update(highlightSelection, true);\n      calloutLabelSelection.update(this.nodeData, group2 => {\n        const line = new Line();\n        line.tag = 1 /* Callout */;\n        line.pointerEvents = 1 /* None */;\n        group2.appendChild(line);\n        const text = new Text();\n        text.tag = 2 /* Label */;\n        text.pointerEvents = 1 /* None */;\n        group2.appendChild(text);\n      });\n      sectorLabelSelection.update(this.nodeData, node => {\n        node.pointerEvents = 1 /* None */;\n      });\n      innerLabelsSelection.update(this.properties.innerLabels, node => {\n        node.pointerEvents = 1 /* None */;\n      });\n    });\n  }\n  updateInnerCircleSelection() {\n    const {\n      innerCircle\n    } = this.properties;\n    let radius = 0;\n    const innerRadius = this.getInnerRadius();\n    if (innerRadius > 0) {\n      const circleRadius = Math.min(innerRadius, this.getOuterRadius());\n      const antiAliasingPadding = 1;\n      radius = Math.ceil(circleRadius * 2 + antiAliasingPadding);\n    }\n    const datums = innerCircle ? [{\n      radius\n    }] : [];\n    this.innerCircleSelection.update(datums);\n  }\n  updateNodes(seriesRect) {\n    return __async(this, null, function* () {\n      const highlightedDatum = this.ctx.highlightManager.getActiveHighlight();\n      const isVisible = this.seriesItemEnabled.indexOf(true) >= 0;\n      this.rootGroup.visible = isVisible;\n      this.backgroundGroup.visible = isVisible;\n      this.contentGroup.visible = isVisible;\n      this.highlightGroup.visible = isVisible && (highlightedDatum == null ? void 0 : highlightedDatum.series) === this;\n      if (this.labelGroup) {\n        this.labelGroup.visible = isVisible;\n      }\n      this.contentGroup.opacity = this.getOpacity();\n      this.innerCircleSelection.each((node, {\n        radius\n      }) => {\n        var _a, _b;\n        node.setProperties({\n          fill: (_a = this.properties.innerCircle) == null ? void 0 : _a.fill,\n          opacity: (_b = this.properties.innerCircle) == null ? void 0 : _b.fillOpacity,\n          size: radius\n        });\n      });\n      const updateSectorFn = (sector, datum, _index, isDatumHighlighted) => {\n        const format2 = this.getSectorFormat(datum.datum, datum.itemId, isDatumHighlighted);\n        datum.sectorFormat.fill = format2.fill;\n        datum.sectorFormat.stroke = format2.stroke;\n        const animationDisabled = this.ctx.animationManager.isSkipped();\n        if (animationDisabled) {\n          sector.startAngle = datum.startAngle;\n          sector.endAngle = datum.endAngle;\n          sector.innerRadius = datum.innerRadius;\n          sector.outerRadius = datum.outerRadius;\n        }\n        if (isDatumHighlighted || animationDisabled) {\n          sector.fill = format2.fill;\n          sector.stroke = format2.stroke;\n        }\n        sector.strokeWidth = format2.strokeWidth;\n        sector.fillOpacity = format2.fillOpacity;\n        sector.strokeOpacity = this.properties.strokeOpacity;\n        sector.lineDash = this.properties.lineDash;\n        sector.lineDashOffset = this.properties.lineDashOffset;\n        sector.fillShadow = this.properties.shadow;\n        sector.inset = this.properties.sectorSpacing != null ? (this.properties.sectorSpacing + (format2.stroke != null ? format2.strokeWidth : 0)) / 2 : 0;\n        sector.lineJoin = this.properties.sectorSpacing != null ? \"miter\" : \"round\";\n      };\n      this.itemSelection.each((node, datum, index) => updateSectorFn(node, datum, index, false));\n      this.highlightSelection.each((node, datum, index) => {\n        const isDatumHighlighted = (highlightedDatum == null ? void 0 : highlightedDatum.series) === this && node.datum.itemId === highlightedDatum.itemId;\n        updateSectorFn(node, datum, index, isDatumHighlighted);\n        node.visible = isDatumHighlighted;\n      });\n      this.updateCalloutLineNodes();\n      this.updateCalloutLabelNodes(seriesRect);\n      this.updateSectorLabelNodes();\n      this.updateInnerLabelNodes();\n      this.updateZerosumRings();\n      this.animationState.transition(\"update\");\n    });\n  }\n  updateCalloutLineNodes() {\n    var _a;\n    const {\n      calloutLine\n    } = this.properties;\n    const calloutLength = calloutLine.length;\n    const calloutStrokeWidth = calloutLine.strokeWidth;\n    const calloutColors = (_a = calloutLine.colors) != null ? _a : this.properties.strokes;\n    const {\n      offset: offset4\n    } = this.properties.calloutLabel;\n    this.calloutLabelSelection.selectByTag(1 /* Callout */).forEach((line, index) => {\n      const datum = line.datum;\n      const {\n        calloutLabel: label,\n        outerRadius\n      } = datum;\n      if ((label == null ? void 0 : label.text) && !label.hidden && outerRadius !== 0) {\n        line.visible = true;\n        line.strokeWidth = calloutStrokeWidth;\n        line.stroke = calloutColors[index % calloutColors.length];\n        line.fill = void 0;\n        const x1 = datum.midCos * outerRadius;\n        const y1 = datum.midSin * outerRadius;\n        let x2 = datum.midCos * (outerRadius + calloutLength);\n        let y2 = datum.midSin * (outerRadius + calloutLength);\n        const isMoved = label.collisionTextAlign || label.collisionOffsetY !== 0;\n        if (isMoved && label.box != null) {\n          const box = label.box;\n          let cx = x2;\n          let cy = y2;\n          if (x2 < box.x) {\n            cx = box.x;\n          } else if (x2 > box.x + box.width) {\n            cx = box.x + box.width;\n          }\n          if (y2 < box.y) {\n            cy = box.y;\n          } else if (y2 > box.y + box.height) {\n            cy = box.y + box.height;\n          }\n          const dx = cx - x2;\n          const dy = cy - y2;\n          const length = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n          const paddedLength = length - offset4;\n          if (paddedLength > 0) {\n            x2 = x2 + dx * paddedLength / length;\n            y2 = y2 + dy * paddedLength / length;\n          }\n        }\n        line.x1 = x1;\n        line.y1 = y1;\n        line.x2 = x2;\n        line.y2 = y2;\n      } else {\n        line.visible = false;\n      }\n    });\n  }\n  getLabelOverflow(text, box, seriesRect) {\n    const seriesLeft = seriesRect.x - this.centerX;\n    const seriesRight = seriesRect.x + seriesRect.width - this.centerX;\n    const seriesTop = seriesRect.y - this.centerY;\n    const seriesBottom = seriesRect.y + seriesRect.height - this.centerY;\n    const errPx = 1;\n    let visibleTextPart = 1;\n    if (box.x + errPx < seriesLeft) {\n      visibleTextPart = (box.x + box.width - seriesLeft) / box.width;\n    } else if (box.x + box.width - errPx > seriesRight) {\n      visibleTextPart = (seriesRight - box.x) / box.width;\n    }\n    const hasVerticalOverflow = box.y + errPx < seriesTop || box.y + box.height - errPx > seriesBottom;\n    const textLength = visibleTextPart === 1 ? text.length : Math.floor(text.length * visibleTextPart) - 1;\n    const hasSurroundingSeriesOverflow = this.bboxIntersectsSurroundingSeries(box);\n    return {\n      textLength,\n      hasVerticalOverflow,\n      hasSurroundingSeriesOverflow\n    };\n  }\n  bboxIntersectsSurroundingSeries(box, dx = 0, dy = 0) {\n    const {\n      surroundingRadius\n    } = this;\n    if (surroundingRadius == null) {\n      return false;\n    }\n    const corners = [{\n      x: box.x + dx,\n      y: box.y + dy\n    }, {\n      x: box.x + box.width + dx,\n      y: box.y + dy\n    }, {\n      x: box.x + box.width + dx,\n      y: box.y + box.height + dy\n    }, {\n      x: box.x + dx,\n      y: box.y + box.height + dy\n    }];\n    const sur2 = __pow(surroundingRadius, 2);\n    return corners.some(corner => __pow(corner.x, 2) + __pow(corner.y, 2) > sur2);\n  }\n  computeCalloutLabelCollisionOffsets() {\n    const {\n      radiusScale\n    } = this;\n    const {\n      calloutLabel,\n      calloutLine\n    } = this.properties;\n    const {\n      offset: offset4,\n      minSpacing\n    } = calloutLabel;\n    const innerRadius = radiusScale.convert(0);\n    const shouldSkip = datum => {\n      const label = datum.calloutLabel;\n      return !label || datum.outerRadius === 0;\n    };\n    const fullData = this.nodeData;\n    const data = this.nodeData.filter(t => !shouldSkip(t));\n    data.forEach(datum => {\n      const label = datum.calloutLabel;\n      if (label == null) return;\n      label.hidden = false;\n      label.collisionTextAlign = void 0;\n      label.collisionOffsetY = 0;\n    });\n    if (data.length <= 1) {\n      return;\n    }\n    const leftLabels = data.filter(d => d.midCos < 0).sort((a, b) => a.midSin - b.midSin);\n    const rightLabels = data.filter(d => d.midCos >= 0).sort((a, b) => a.midSin - b.midSin);\n    const topLabels = data.filter(d => {\n      var _a;\n      return d.midSin < 0 && ((_a = d.calloutLabel) == null ? void 0 : _a.textAlign) === \"center\";\n    }).sort((a, b) => a.midCos - b.midCos);\n    const bottomLabels = data.filter(d => {\n      var _a;\n      return d.midSin >= 0 && ((_a = d.calloutLabel) == null ? void 0 : _a.textAlign) === \"center\";\n    }).sort((a, b) => a.midCos - b.midCos);\n    const tempTextNode = new Text();\n    const getTextBBox = datum => {\n      var _a;\n      const label = datum.calloutLabel;\n      if (label == null) return new BBox(0, 0, 0, 0);\n      const labelRadius = datum.outerRadius + calloutLine.length + offset4;\n      const x = datum.midCos * labelRadius;\n      const y = datum.midSin * labelRadius + label.collisionOffsetY;\n      tempTextNode.text = label.text;\n      tempTextNode.x = x;\n      tempTextNode.y = y;\n      tempTextNode.setFont(this.properties.calloutLabel);\n      tempTextNode.setAlign({\n        textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n        textBaseline: label.textBaseline\n      });\n      return tempTextNode.computeBBox();\n    };\n    const avoidNeighbourYCollision = (label, next, direction) => {\n      const box = getTextBBox(label).grow(minSpacing / 2);\n      const other = getTextBBox(next).grow(minSpacing / 2);\n      const collidesOrBehind = box.x < other.x + other.width && box.x + box.width > other.x && (direction === \"to-top\" ? box.y < other.y + other.height : box.y + box.height > other.y);\n      if (collidesOrBehind) {\n        const dy = direction === \"to-top\" ? box.y - other.y - other.height : box.y + box.height - other.y;\n        next.calloutLabel.collisionOffsetY = dy;\n      }\n    };\n    const avoidYCollisions = labels => {\n      const midLabel = labels.slice().sort((a, b) => Math.abs(a.midSin) - Math.abs(b.midSin))[0];\n      const midIndex = labels.indexOf(midLabel);\n      for (let i = midIndex - 1; i >= 0; i--) {\n        const prev = labels[i + 1];\n        const next = labels[i];\n        avoidNeighbourYCollision(prev, next, \"to-top\");\n      }\n      for (let i = midIndex + 1; i < labels.length; i++) {\n        const prev = labels[i - 1];\n        const next = labels[i];\n        avoidNeighbourYCollision(prev, next, \"to-bottom\");\n      }\n    };\n    const avoidXCollisions = labels => {\n      const labelsCollideLabelsByY = data.some(datum => datum.calloutLabel.collisionOffsetY !== 0);\n      const boxes = labels.map(label => getTextBBox(label));\n      const paddedBoxes = boxes.map(box => box.clone().grow(minSpacing / 2));\n      let labelsCollideLabelsByX = false;\n      for (let i = 0; i < paddedBoxes.length && !labelsCollideLabelsByX; i++) {\n        const box = paddedBoxes[i];\n        for (let j = i + 1; j < labels.length; j++) {\n          const other = paddedBoxes[j];\n          if (box.collidesBBox(other)) {\n            labelsCollideLabelsByX = true;\n            break;\n          }\n        }\n      }\n      const sectors = fullData.map(datum => {\n        const {\n          startAngle,\n          endAngle,\n          outerRadius\n        } = datum;\n        return {\n          startAngle,\n          endAngle,\n          innerRadius,\n          outerRadius\n        };\n      });\n      const labelsCollideSectors = boxes.some(box => {\n        return sectors.some(sector => boxCollidesSector(box, sector));\n      });\n      if (!labelsCollideLabelsByX && !labelsCollideLabelsByY && !labelsCollideSectors) {\n        return;\n      }\n      labels.filter(d => d.calloutLabel.textAlign === \"center\").forEach(d => {\n        const label = d.calloutLabel;\n        if (d.midCos < 0) {\n          label.collisionTextAlign = \"right\";\n        } else if (d.midCos > 0) {\n          label.collisionTextAlign = \"left\";\n        } else {\n          label.collisionTextAlign = \"center\";\n        }\n      });\n    };\n    avoidYCollisions(leftLabels);\n    avoidYCollisions(rightLabels);\n    avoidXCollisions(topLabels);\n    avoidXCollisions(bottomLabels);\n  }\n  updateCalloutLabelNodes(seriesRect) {\n    const {\n      radiusScale\n    } = this;\n    const {\n      calloutLabel,\n      calloutLine\n    } = this.properties;\n    const calloutLength = calloutLine.length;\n    const {\n      offset: offset4,\n      color\n    } = calloutLabel;\n    const tempTextNode = new Text();\n    this.calloutLabelSelection.selectByTag(2 /* Label */).forEach(text => {\n      var _a;\n      const {\n        datum\n      } = text;\n      const label = datum.calloutLabel;\n      const radius = radiusScale.convert(datum.radius);\n      const outerRadius = Math.max(0, radius);\n      if (!(label == null ? void 0 : label.text) || outerRadius === 0 || label.hidden) {\n        text.visible = false;\n        return;\n      }\n      const labelRadius = outerRadius + calloutLength + offset4;\n      const x = datum.midCos * labelRadius;\n      const y = datum.midSin * labelRadius + label.collisionOffsetY;\n      const align = {\n        textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n        textBaseline: label.textBaseline\n      };\n      tempTextNode.text = label.text;\n      tempTextNode.x = x;\n      tempTextNode.y = y;\n      tempTextNode.setFont(this.properties.calloutLabel);\n      tempTextNode.setAlign(align);\n      const box = tempTextNode.computeBBox();\n      let displayText = label.text;\n      let visible = true;\n      if (calloutLabel.avoidCollisions) {\n        const {\n          textLength,\n          hasVerticalOverflow\n        } = this.getLabelOverflow(label.text, box, seriesRect);\n        displayText = label.text.length === textLength ? label.text : `${label.text.substring(0, textLength)}\\u2026`;\n        visible = !hasVerticalOverflow;\n      }\n      text.text = displayText;\n      text.x = x;\n      text.y = y;\n      text.setFont(this.properties.calloutLabel);\n      text.setAlign(align);\n      text.fill = color;\n      text.visible = visible;\n    });\n  }\n  computeLabelsBBox(options, seriesRect) {\n    return __async(this, null, function* () {\n      const {\n        calloutLabel,\n        calloutLine\n      } = this.properties;\n      const calloutLength = calloutLine.length;\n      const {\n        offset: offset4,\n        maxCollisionOffset,\n        minSpacing\n      } = calloutLabel;\n      if (!calloutLabel.avoidCollisions) {\n        return null;\n      }\n      yield this.maybeRefreshNodeData();\n      this.updateRadiusScale(false);\n      this.computeCalloutLabelCollisionOffsets();\n      const textBoxes = [];\n      const text = new Text();\n      let titleBox;\n      const {\n        title\n      } = this.properties;\n      if ((title == null ? void 0 : title.text) && title.enabled) {\n        const dy = this.getTitleTranslationY();\n        if (isFinite(dy)) {\n          text.text = title.text;\n          text.x = 0;\n          text.y = dy;\n          text.setFont(title);\n          text.setAlign({\n            textBaseline: \"bottom\",\n            textAlign: \"center\"\n          });\n          titleBox = text.computeBBox();\n          textBoxes.push(titleBox);\n        }\n      }\n      this.nodeData.forEach(datum => {\n        var _a;\n        const label = datum.calloutLabel;\n        if (!label || datum.outerRadius === 0) {\n          return null;\n        }\n        const labelRadius = datum.outerRadius + calloutLength + offset4;\n        const x = datum.midCos * labelRadius;\n        const y = datum.midSin * labelRadius + label.collisionOffsetY;\n        text.text = label.text;\n        text.x = x;\n        text.y = y;\n        text.setFont(this.properties.calloutLabel);\n        text.setAlign({\n          textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n          textBaseline: label.textBaseline\n        });\n        const box = text.computeBBox();\n        label.box = box;\n        if (Math.abs(label.collisionOffsetY) > maxCollisionOffset) {\n          label.hidden = true;\n          return;\n        }\n        if (titleBox) {\n          const seriesTop = seriesRect.y - this.centerY;\n          const titleCleanArea = new BBox(titleBox.x - minSpacing, seriesTop, titleBox.width + 2 * minSpacing, titleBox.y + titleBox.height + minSpacing - seriesTop);\n          if (box.collidesBBox(titleCleanArea)) {\n            label.hidden = true;\n            return;\n          }\n        }\n        if (options.hideWhenNecessary) {\n          const {\n            textLength,\n            hasVerticalOverflow,\n            hasSurroundingSeriesOverflow\n          } = this.getLabelOverflow(label.text, box, seriesRect);\n          const isTooShort = label.text.length > 2 && textLength < 2;\n          if (hasVerticalOverflow || isTooShort || hasSurroundingSeriesOverflow) {\n            label.hidden = true;\n            return;\n          }\n        }\n        label.hidden = false;\n        textBoxes.push(box);\n      });\n      if (textBoxes.length === 0) {\n        return null;\n      }\n      return BBox.merge(textBoxes);\n    });\n  }\n  updateSectorLabelNodes() {\n    const {\n      radiusScale\n    } = this;\n    const innerRadius = radiusScale.convert(0);\n    const {\n      fontSize,\n      fontStyle,\n      fontWeight,\n      fontFamily,\n      positionOffset,\n      positionRatio,\n      color\n    } = this.properties.sectorLabel;\n    const isDoughnut = innerRadius > 0;\n    const singleVisibleSector = this.seriesItemEnabled.filter(Boolean).length === 1;\n    this.sectorLabelSelection.each((text, datum) => {\n      const {\n        sectorLabel,\n        outerRadius\n      } = datum;\n      let isTextVisible = false;\n      if (sectorLabel && outerRadius !== 0) {\n        const labelRadius = innerRadius * (1 - positionRatio) + outerRadius * positionRatio + positionOffset;\n        text.fill = color;\n        text.fontStyle = fontStyle;\n        text.fontWeight = fontWeight;\n        text.fontSize = fontSize;\n        text.fontFamily = fontFamily;\n        text.text = sectorLabel.text;\n        const shouldPutTextInCenter = !isDoughnut && singleVisibleSector;\n        if (shouldPutTextInCenter) {\n          text.x = 0;\n          text.y = 0;\n        } else {\n          text.x = datum.midCos * labelRadius;\n          text.y = datum.midSin * labelRadius;\n        }\n        text.textAlign = \"center\";\n        text.textBaseline = \"middle\";\n        const bbox = text.computeBBox();\n        const corners = [[bbox.x, bbox.y], [bbox.x + bbox.width, bbox.y], [bbox.x + bbox.width, bbox.y + bbox.height], [bbox.x, bbox.y + bbox.height]];\n        const {\n          startAngle,\n          endAngle\n        } = datum;\n        const sectorBounds = {\n          startAngle,\n          endAngle,\n          innerRadius,\n          outerRadius\n        };\n        if (corners.every(([x, y]) => isPointInSector(x, y, sectorBounds))) {\n          isTextVisible = true;\n        }\n      }\n      text.visible = isTextVisible;\n    });\n  }\n  updateInnerLabelNodes() {\n    const textBBoxes = [];\n    const margins = [];\n    this.innerLabelsSelection.each((text, datum) => {\n      const {\n        fontStyle,\n        fontWeight,\n        fontSize,\n        fontFamily,\n        color\n      } = datum;\n      text.fontStyle = fontStyle;\n      text.fontWeight = fontWeight;\n      text.fontSize = fontSize;\n      text.fontFamily = fontFamily;\n      text.text = datum.text;\n      text.x = 0;\n      text.y = 0;\n      text.fill = color;\n      text.textAlign = \"center\";\n      text.textBaseline = \"alphabetic\";\n      textBBoxes.push(text.computeBBox());\n      margins.push(datum.margin);\n    });\n    const getMarginTop = index => index === 0 ? 0 : margins[index];\n    const getMarginBottom = index => index === margins.length - 1 ? 0 : margins[index];\n    const totalHeight = textBBoxes.reduce((sum2, bbox, i) => {\n      return sum2 + bbox.height + getMarginTop(i) + getMarginBottom(i);\n    }, 0);\n    const totalWidth = Math.max(...textBBoxes.map(bbox => bbox.width));\n    const innerRadius = this.getInnerRadius();\n    const labelRadius = Math.sqrt(Math.pow(totalWidth / 2, 2) + Math.pow(totalHeight / 2, 2));\n    const labelsVisible = labelRadius <= (innerRadius > 0 ? innerRadius : this.getOuterRadius());\n    const textBottoms = [];\n    for (let i = 0, prev = -totalHeight / 2; i < textBBoxes.length; i++) {\n      const bbox = textBBoxes[i];\n      const bottom = bbox.height + prev + getMarginTop(i);\n      textBottoms.push(bottom);\n      prev = bottom + getMarginBottom(i);\n    }\n    this.innerLabelsSelection.each((text, _datum, index) => {\n      text.y = textBottoms[index];\n      text.visible = labelsVisible;\n    });\n  }\n  updateZerosumRings() {\n    this.zerosumOuterRing.size = this.getOuterRadius() * 2;\n    this.zerosumInnerRing.size = this.getInnerRadius() * 2;\n  }\n  getDatumLegendName(nodeDatum) {\n    const {\n      angleKey,\n      calloutLabelKey,\n      sectorLabelKey,\n      legendItemKey\n    } = this.properties;\n    const {\n      sectorLabel,\n      calloutLabel,\n      legendItem\n    } = nodeDatum;\n    if (legendItemKey && legendItem !== void 0) {\n      return legendItem.text;\n    } else if (calloutLabelKey && calloutLabelKey !== angleKey && (calloutLabel == null ? void 0 : calloutLabel.text) !== void 0) {\n      return calloutLabel.text;\n    } else if (sectorLabelKey && sectorLabelKey !== angleKey && (sectorLabel == null ? void 0 : sectorLabel.text) !== void 0) {\n      return sectorLabel.text;\n    }\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    if (!this.properties.isValid()) {\n      return \"\";\n    }\n    const {\n      datum,\n      angleValue,\n      sectorFormat: {\n        fill: color\n      }\n    } = nodeDatum;\n    const title = sanitizeHtml((_a = this.properties.title) == null ? void 0 : _a.text);\n    const content = isNumber2(angleValue) ? toFixed(angleValue) : String(angleValue);\n    const labelText = this.getDatumLegendName(nodeDatum);\n    return this.properties.tooltip.toTooltipHtml({\n      title: title != null ? title : labelText,\n      content: title && labelText ? `${labelText}: ${content}` : content,\n      backgroundColor: color\n    }, {\n      datum,\n      title,\n      color,\n      seriesId: this.id,\n      angleKey: this.properties.angleKey,\n      angleName: this.properties.angleName,\n      radiusKey: this.properties.radiusKey,\n      radiusName: this.properties.radiusName,\n      calloutLabelKey: this.properties.calloutLabelKey,\n      calloutLabelName: this.properties.calloutLabelName,\n      sectorLabelKey: this.properties.sectorLabelKey,\n      sectorLabelName: this.properties.sectorLabelName\n    });\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e;\n    const {\n      processedData,\n      dataModel\n    } = this;\n    if (!dataModel || !(processedData == null ? void 0 : processedData.data.length) || legendType !== \"category\") {\n      return [];\n    }\n    const {\n      angleKey,\n      calloutLabelKey,\n      sectorLabelKey,\n      legendItemKey\n    } = this.properties;\n    if (!legendItemKey && (!calloutLabelKey || calloutLabelKey === angleKey) && (!sectorLabelKey || sectorLabelKey === angleKey)) return [];\n    const {\n      calloutLabelIdx,\n      sectorLabelIdx,\n      legendItemIdx\n    } = this.getProcessedDataIndexes(dataModel);\n    const titleText = ((_a = this.properties.title) == null ? void 0 : _a.showInLegend) && this.properties.title.text;\n    const legendData = [];\n    for (let index = 0; index < processedData.data.length; index++) {\n      const {\n        datum,\n        values\n      } = processedData.data[index];\n      const labelParts = [];\n      if (titleText) {\n        labelParts.push(titleText);\n      }\n      const labels = this.getLabels(datum, 2 * Math.PI, 2 * Math.PI, false, values[calloutLabelIdx], values[sectorLabelIdx], values[legendItemIdx]);\n      if (legendItemKey && labels.legendItem !== void 0) {\n        labelParts.push(labels.legendItem.text);\n      } else if (calloutLabelKey && calloutLabelKey !== angleKey && ((_b = labels.calloutLabel) == null ? void 0 : _b.text) !== void 0) {\n        labelParts.push((_c = labels.calloutLabel) == null ? void 0 : _c.text);\n      } else if (sectorLabelKey && sectorLabelKey !== angleKey && ((_d = labels.sectorLabel) == null ? void 0 : _d.text) !== void 0) {\n        labelParts.push((_e = labels.sectorLabel) == null ? void 0 : _e.text);\n      }\n      if (labelParts.length === 0) continue;\n      const sectorFormat = this.getSectorFormat(datum, index, false);\n      legendData.push({\n        legendType: \"category\",\n        id: this.id,\n        itemId: index,\n        seriesId: this.id,\n        enabled: this.seriesItemEnabled[index],\n        label: {\n          text: labelParts.join(\" - \")\n        },\n        marker: {\n          fill: sectorFormat.fill,\n          stroke: sectorFormat.stroke,\n          fillOpacity: this.properties.fillOpacity,\n          strokeOpacity: this.properties.strokeOpacity,\n          strokeWidth: this.properties.strokeWidth\n        }\n      });\n    }\n    return legendData;\n  }\n  onLegendItemClick(event) {\n    const {\n      enabled,\n      itemId,\n      series\n    } = event;\n    if (series.id === this.id) {\n      this.toggleSeriesItem(itemId, enabled);\n    } else if (series.type === \"pie\") {\n      this.toggleOtherSeriesItems(series, itemId, enabled);\n    }\n  }\n  toggleSeriesItem(itemId, enabled) {\n    this.seriesItemEnabled[itemId] = enabled;\n    this.nodeDataRefresh = true;\n  }\n  toggleOtherSeriesItems(series, itemId, enabled) {\n    var _a, _b;\n    if (!this.properties.legendItemKey || !this.dataModel) {\n      return;\n    }\n    const datumToggledLegendItemValue = series.properties.legendItemKey && ((_a = series.data) == null ? void 0 : _a.find((_, index) => index === itemId)[series.properties.legendItemKey]);\n    if (!datumToggledLegendItemValue) {\n      return;\n    }\n    const legendItemIdx = this.dataModel.resolveProcessedDataIndexById(this, `legendItemValue`).index;\n    (_b = this.processedData) == null ? void 0 : _b.data.forEach(({\n      values\n    }, datumItemId) => {\n      if (values[legendItemIdx] === datumToggledLegendItemValue) {\n        this.toggleSeriesItem(datumItemId, enabled);\n      }\n    });\n  }\n  animateEmptyUpdateReady(_data) {\n    const {\n      animationManager\n    } = this.ctx;\n    const fns = preparePieSeriesAnimationFunctions(true, this.properties.rotation, this.radiusScale, this.previousRadiusScale);\n    fromToMotion(this.id, \"nodes\", animationManager, [this.itemSelection, this.highlightSelection], fns.nodes);\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeInAnimation(this, \"callout\", animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"sector\", animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"inner\", animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  animateWaitingUpdateReady() {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      itemSelection,\n      highlightSelection,\n      processedData,\n      radiusScale,\n      previousRadiusScale\n    } = this;\n    const {\n      animationManager\n    } = this.ctx;\n    const diff2 = (_a = processedData == null ? void 0 : processedData.reduced) == null ? void 0 : _a.diff;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    const supportedDiff = ((_b = diff2 == null ? void 0 : diff2.moved.length) != null ? _b : 0) === 0 && (diff2 == null ? void 0 : diff2.addedIndices.every(i => !diff2.removedIndices.includes(i)));\n    const hasKeys = ((_c = processedData == null ? void 0 : processedData.defs.keys.length) != null ? _c : 0) > 0;\n    const hasUniqueKeys = (_f = (_e = (_d = processedData == null ? void 0 : processedData.reduced) == null ? void 0 : _d.animationValidation) == null ? void 0 : _e.uniqueKeys) != null ? _f : true;\n    if (!supportedDiff || !hasKeys || !hasUniqueKeys) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n    const fns = preparePieSeriesAnimationFunctions(false, this.properties.rotation, radiusScale, previousRadiusScale);\n    fromToMotion(this.id, \"nodes\", animationManager, [itemSelection, highlightSelection], fns.nodes, (_, datum) => this.getDatumId(datum), diff2);\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeInAnimation(this, \"callout\", this.ctx.animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"sector\", this.ctx.animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"inner\", this.ctx.animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  animateClearingUpdateEmpty() {\n    const {\n      itemSelection,\n      highlightSelection,\n      radiusScale,\n      previousRadiusScale\n    } = this;\n    const {\n      animationManager\n    } = this.ctx;\n    const fns = preparePieSeriesAnimationFunctions(false, this.properties.rotation, radiusScale, previousRadiusScale);\n    fromToMotion(this.id, \"nodes\", animationManager, [itemSelection, highlightSelection], fns.nodes);\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeOutAnimation(this, \"callout\", this.ctx.animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeOutAnimation(this, \"sector\", this.ctx.animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeOutAnimation(this, \"inner\", this.ctx.animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  getDatumIdFromData(datum) {\n    var _a, _b, _c;\n    const {\n      calloutLabelKey,\n      sectorLabelKey,\n      legendItemKey\n    } = this.properties;\n    if (!((_c = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.animationValidation) == null ? void 0 : _c.uniqueKeys)) {\n      return;\n    }\n    if (legendItemKey) {\n      return datum[legendItemKey];\n    } else if (calloutLabelKey) {\n      return datum[calloutLabelKey];\n    } else if (sectorLabelKey) {\n      return datum[sectorLabelKey];\n    }\n  }\n  getDatumId(datum) {\n    var _a;\n    const {\n      index\n    } = datum;\n    return (_a = this.getDatumIdFromData(datum.datum)) != null ? _a : `${index}`;\n  }\n  onDataChange() {\n    this.processSeriesItemEnabled();\n  }\n};\nPieSeries.className = \"PieSeries\";\nPieSeries.type = \"pie\";\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeriesModule.ts\nvar PieSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"polar\"],\n  identifier: \"pie\",\n  instanceConstructor: PieSeries,\n  seriesDefaults: {},\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    title: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 14,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_MUTED_LABEL_COLOUR,\n      spacing: 5\n    },\n    calloutLabel: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      offset: 3,\n      minAngle: 0\n    },\n    sectorLabel: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      positionOffset: 0,\n      positionRatio: 0.5\n    },\n    calloutLine: {\n      length: 10,\n      strokeWidth: 2\n    },\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    rotation: 0,\n    outerRadiusOffset: 0,\n    innerRadiusOffset: 0,\n    // @todo(AG-10275) Uncomment this\n    // sectorSpacing: 1,\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    },\n    innerLabels: {\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      margin: 2\n    },\n    // @todo(AG-10275) Remove this\n    // @ts-expect-error\n    __BACKGROUND_COLOR_DO_NOT_USE: DEFAULT_BACKGROUND_COLOUR\n  },\n  paletteFactory: ({\n    takeColors,\n    colorsCount,\n    userPalette\n  }) => {\n    const {\n      fills,\n      strokes\n    } = takeColors(colorsCount);\n    return {\n      fills,\n      strokes: userPalette ? strokes : [],\n      calloutLine: {\n        colors: strokes\n      }\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/factory/registerInbuiltModules.ts\nfunction registerInbuiltModules() {\n  registerModule(BackgroundModule);\n  registerModule(NavigatorModule);\n  registerModule(AreaSeriesModule);\n  registerModule(BarSeriesModule);\n  registerModule(BubbleSeriesModule);\n  registerModule(LineSeriesModule);\n  registerModule(ScatterSeriesModule);\n  registerModule(PieSeriesModule);\n  registerModule(HistogramSeriesModule);\n}\n\n// packages/ag-charts-community/src/module-support.ts\nvar module_support_exports = {};\n__export(module_support_exports, {\n  ADD_PHASE: () => ADD_PHASE,\n  AGG_VALUES_EXTENT: () => AGG_VALUES_EXTENT,\n  AND: () => AND,\n  ARRAY: () => ARRAY,\n  ARRAY_OF: () => ARRAY_OF,\n  AbstractBarSeries: () => AbstractBarSeries,\n  AbstractBarSeriesProperties: () => AbstractBarSeriesProperties,\n  ActionOnSet: () => ActionOnSet,\n  Animation: () => Animation,\n  AnimationManager: () => AnimationManager,\n  AreaSeriesTag: () => AreaSeriesTag,\n  Axis: () => Axis,\n  AxisLabel: () => AxisLabel,\n  AxisTick: () => AxisTick,\n  BOOLEAN: () => BOOLEAN,\n  BOOLEAN_ARRAY: () => BOOLEAN_ARRAY,\n  Background: () => Background,\n  BackgroundModule: () => BackgroundModule,\n  BaseModuleInstance: () => BaseModuleInstance,\n  BaseProperties: () => BaseProperties,\n  COLOR_STRING: () => COLOR_STRING,\n  COLOR_STRING_ARRAY: () => COLOR_STRING_ARRAY,\n  CartesianAxis: () => CartesianAxis,\n  CartesianSeries: () => CartesianSeries,\n  CartesianSeriesNodeClickEvent: () => CartesianSeriesNodeClickEvent,\n  CartesianSeriesProperties: () => CartesianSeriesProperties,\n  CategoryAxis: () => CategoryAxis,\n  ChartAxisDirection: () => ChartAxisDirection,\n  ChartEventManager: () => ChartEventManager,\n  ChartUpdateType: () => ChartUpdateType,\n  CursorManager: () => CursorManager,\n  DATE: () => DATE,\n  DATE_ARRAY: () => DATE_ARRAY,\n  DATE_OR_DATETIME_MS: () => DATE_OR_DATETIME_MS,\n  DEGREE: () => DEGREE,\n  DIRECTION: () => DIRECTION,\n  DataController: () => DataController,\n  DataModel: () => DataModel,\n  Default: () => Default,\n  Deprecated: () => Deprecated,\n  DeprecatedAndRenamedTo: () => DeprecatedAndRenamedTo,\n  FONT_STYLE: () => FONT_STYLE,\n  FONT_WEIGHT: () => FONT_WEIGHT,\n  FROM_TO_MIXINS: () => FROM_TO_MIXINS,\n  FUNCTION: () => FUNCTION,\n  GREATER_THAN: () => GREATER_THAN,\n  HierarchyNode: () => HierarchyNode,\n  HierarchySeries: () => HierarchySeries,\n  HierarchySeriesProperties: () => HierarchySeriesProperties,\n  HighlightManager: () => HighlightManager,\n  HighlightStyle: () => HighlightStyle,\n  INITIAL_LOAD: () => INITIAL_LOAD,\n  INTERACTION_RANGE: () => INTERACTION_RANGE,\n  InteractionManager: () => InteractionManager,\n  LABEL_PHASE: () => LABEL_PHASE,\n  LESS_THAN: () => LESS_THAN,\n  LINE_CAP: () => LINE_CAP,\n  LINE_DASH: () => LINE_DASH,\n  LINE_JOIN: () => LINE_JOIN,\n  Layers: () => Layers,\n  LayoutService: () => LayoutService,\n  MATCHING_CROSSLINE_TYPE: () => MATCHING_CROSSLINE_TYPE,\n  MAX_SPACING: () => MAX_SPACING,\n  MIN_SPACING: () => MIN_SPACING,\n  MODULE_CONFLICTS: () => MODULE_CONFLICTS,\n  Motion: () => easing_exports,\n  NAN: () => NAN,\n  NODE_UPDATE_PHASES: () => NODE_UPDATE_PHASES,\n  NUMBER: () => NUMBER,\n  NUMBER_ARRAY: () => NUMBER_ARRAY,\n  NUMBER_OR_NAN: () => NUMBER_OR_NAN,\n  OBJECT: () => OBJECT,\n  OBJECT_ARRAY: () => OBJECT_ARRAY,\n  OR: () => OR,\n  OVERFLOW_STRATEGY: () => OVERFLOW_STRATEGY,\n  PLACEMENT: () => PLACEMENT,\n  POLAR_AXIS_SHAPE: () => POLAR_AXIS_SHAPE,\n  POSITION: () => POSITION,\n  POSITIVE_NUMBER: () => POSITIVE_NUMBER,\n  PolarAxis: () => PolarAxis,\n  PolarSeries: () => PolarSeries,\n  PropertiesArray: () => PropertiesArray,\n  ProxyOnWrite: () => ProxyOnWrite,\n  ProxyProperty: () => ProxyProperty,\n  ProxyPropertyOnWrite: () => ProxyPropertyOnWrite,\n  QUICK_TRANSITION: () => QUICK_TRANSITION,\n  RATIO: () => RATIO,\n  REGISTERED_MODULES: () => REGISTERED_MODULES,\n  REMOVE_PHASE: () => REMOVE_PHASE,\n  RepeatType: () => RepeatType,\n  SMALLEST_KEY_INTERVAL: () => SMALLEST_KEY_INTERVAL,\n  SORT_DOMAIN_GROUPS: () => SORT_DOMAIN_GROUPS,\n  STRING: () => STRING,\n  STRING_ARRAY: () => STRING_ARRAY,\n  Series: () => Series,\n  SeriesItemHighlightStyle: () => SeriesItemHighlightStyle,\n  SeriesMarker: () => SeriesMarker,\n  SeriesNodeClickEvent: () => SeriesNodeClickEvent,\n  SeriesNodePickMode: () => SeriesNodePickMode,\n  SeriesProperties: () => SeriesProperties,\n  SeriesTooltip: () => SeriesTooltip,\n  StateMachine: () => StateMachine,\n  TEXT_ALIGN: () => TEXT_ALIGN,\n  TEXT_WRAP: () => TEXT_WRAP,\n  Tags: () => Tags,\n  TooltipManager: () => TooltipManager,\n  UNION: () => UNION,\n  UPDATE_PHASE: () => UPDATE_PHASE,\n  UpdateService: () => UpdateService,\n  VERTICAL_ALIGN: () => VERTICAL_ALIGN,\n  Validate: () => Validate,\n  ZoomManager: () => ZoomManager,\n  __FORCE_MODULE_DETECTION: () => __FORCE_MODULE_DETECTION2,\n  accumulateGroup: () => accumulateGroup,\n  accumulatedValue: () => accumulatedValue,\n  accumulativeValueProperty: () => accumulativeValueProperty,\n  adjustLabelPlacement: () => adjustLabelPlacement,\n  animationValidation: () => animationValidation,\n  area: () => area,\n  arraysEqual: () => arraysEqual,\n  assignJsonApplyConstructedArray: () => assignJsonApplyConstructedArray,\n  average: () => average,\n  backfillPathPointData: () => backfillPathPointData,\n  buildResetPathFn: () => buildResetPathFn,\n  checkCrisp: () => checkCrisp,\n  clamp: () => clamp2,\n  clampArray: () => clampArray,\n  collapsedStartingBarPosition: () => collapsedStartingBarPosition,\n  count: () => count,\n  countFractionDigits: () => countFractionDigits,\n  createDatumId: () => createDatumId,\n  createDeprecationWarning: () => createDeprecationWarning,\n  deconstructSelectionsOrNodes: () => deconstructSelectionsOrNodes,\n  deepMerge: () => deepMerge,\n  determinePathStatus: () => determinePathStatus,\n  diff: () => diff,\n  enterpriseModule: () => enterpriseModule,\n  extent: () => extent,\n  extractDecoratedProperties: () => extractDecoratedProperties,\n  fixNumericExtent: () => fixNumericExtent,\n  fromToMotion: () => fromToMotion,\n  getRectConfig: () => getRectConfig,\n  groupAccumulativeValueProperty: () => groupAccumulativeValueProperty,\n  groupAverage: () => groupAverage,\n  groupCount: () => groupCount,\n  groupSum: () => groupSum,\n  hasRegisteredEnterpriseModules: () => hasRegisteredEnterpriseModules,\n  injectStyle: () => injectStyle,\n  invertShapeDirection: () => invertShapeDirection,\n  isArray: () => isArray,\n  isBoolean: () => isBoolean,\n  isDate: () => isDate,\n  isDecoratedObject: () => isDecoratedObject,\n  isDefined: () => isDefined,\n  isEqual: () => isEqual,\n  isFiniteNumber: () => isFiniteNumber,\n  isFunction: () => isFunction,\n  isHtmlElement: () => isHtmlElement,\n  isNegative: () => isNegative,\n  isNumber: () => isNumber,\n  isObject: () => isObject,\n  isObjectLike: () => isObjectLike,\n  isPlainObject: () => isPlainObject,\n  isProperties: () => isProperties,\n  isReal: () => isReal,\n  isString: () => isString,\n  isValidDate: () => isValidDate,\n  keyProperty: () => keyProperty,\n  listDecoratedProperties: () => listDecoratedProperties,\n  markerFadeInAnimation: () => markerFadeInAnimation,\n  markerPaletteFactory: () => markerPaletteFactory,\n  markerScaleInAnimation: () => markerScaleInAnimation,\n  markerSwipeScaleInAnimation: () => markerSwipeScaleInAnimation,\n  mergeDefaults: () => mergeDefaults,\n  midpointStartingBarPosition: () => midpointStartingBarPosition,\n  minMax: () => minMax,\n  mod: () => mod,\n  normaliseGroupTo: () => normaliseGroupTo,\n  normalisePropertyTo: () => normalisePropertyTo,\n  normalisedExtent: () => normalisedExtent,\n  normalisedExtentWithMetadata: () => normalisedExtentWithMetadata,\n  pairCategoryData: () => pairCategoryData,\n  pairContinuousData: () => pairContinuousData,\n  partialAssign: () => partialAssign,\n  pathFadeInAnimation: () => pathFadeInAnimation,\n  pathFadeOutAnimation: () => pathFadeOutAnimation,\n  pathSwipeInAnimation: () => pathSwipeInAnimation,\n  predicateWithMessage: () => predicateWithMessage,\n  prepareAreaPathAnimation: () => prepareAreaPathAnimation,\n  prepareAxisAnimationContext: () => prepareAxisAnimationContext,\n  prepareAxisAnimationFunctions: () => prepareAxisAnimationFunctions,\n  prepareBarAnimationFunctions: () => prepareBarAnimationFunctions,\n  prepareLinePathAnimation: () => prepareLinePathAnimation,\n  prepareLinePathAnimationFns: () => prepareLinePathAnimationFns,\n  prepareMarkerAnimation: () => prepareMarkerAnimation,\n  range: () => range2,\n  rangedValueProperty: () => rangedValueProperty,\n  registerModule: () => registerModule,\n  registerModuleConflicts: () => registerModuleConflicts,\n  renderPartialPath: () => renderPartialPath,\n  resetAxisGroupFn: () => resetAxisGroupFn,\n  resetAxisLabelSelectionFn: () => resetAxisLabelSelectionFn,\n  resetAxisLineSelectionFn: () => resetAxisLineSelectionFn,\n  resetAxisSelectionFn: () => resetAxisSelectionFn,\n  resetBarSelectionsFn: () => resetBarSelectionsFn,\n  resetIds: () => resetIds,\n  resetLabelFn: () => resetLabelFn,\n  resetMarkerFn: () => resetMarkerFn,\n  resetMarkerPositionFn: () => resetMarkerPositionFn,\n  resetMotion: () => resetMotion,\n  round: () => round,\n  seriesLabelFadeInAnimation: () => seriesLabelFadeInAnimation,\n  seriesLabelFadeOutAnimation: () => seriesLabelFadeOutAnimation,\n  singleSeriesPaletteFactory: () => singleSeriesPaletteFactory,\n  staticFromToMotion: () => staticFromToMotion,\n  stringify: () => stringify,\n  sum: () => sum,\n  toArray: () => toArray,\n  toFixed: () => toFixed,\n  toReal: () => toReal,\n  trailingAccumulatedValue: () => trailingAccumulatedValue,\n  trailingAccumulatedValueProperty: () => trailingAccumulatedValueProperty,\n  trailingValue: () => trailingValue,\n  trailingValueProperty: () => trailingValueProperty,\n  unique: () => unique,\n  updateClipPath: () => updateClipPath,\n  updateLabelNode: () => updateLabelNode,\n  updateRect: () => updateRect,\n  validateCrossLineValues: () => validateCrossLineValues,\n  valueProperty: () => valueProperty\n});\n\n// packages/ag-charts-community/src/util/shapes.ts\nfunction invertShapeDirection(...supportedShapes) {\n  for (const shape of supportedShapes) {\n    if (shape instanceof Rect) {\n      const {\n        x,\n        y,\n        width,\n        height\n      } = shape;\n      shape.setProperties({\n        x: y,\n        y: x,\n        width: height,\n        height: width\n      });\n    } else if (shape instanceof Line) {\n      const {\n        x1,\n        y1,\n        x2,\n        y2\n      } = shape;\n      shape.setProperties({\n        x1: y1,\n        y1: x1,\n        x2: y2,\n        y2: x2\n      });\n    }\n  }\n}\n\n// packages/ag-charts-community/src/chart/series/hierarchy/hierarchySeries.ts\nvar _HierarchyNode = class _HierarchyNode {\n  constructor(series, index, datum, size, colorValue, fill, stroke, sumSize, depth, parent, children) {\n    this.series = series;\n    this.index = index;\n    this.datum = datum;\n    this.size = size;\n    this.colorValue = colorValue;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.sumSize = sumSize;\n    this.depth = depth;\n    this.parent = parent;\n    this.children = children;\n    this.midPoint = {\n      x: 0,\n      y: 0\n    };\n  }\n  contains(other) {\n    let current = other;\n    while (current != null && current.index >= this.index) {\n      if (current === this) {\n        return true;\n      }\n      current = current.parent;\n    }\n    return false;\n  }\n  walk(callback, order = _HierarchyNode.Walk.PreOrder) {\n    if (order === _HierarchyNode.Walk.PreOrder) {\n      callback(this);\n    }\n    this.children.forEach(child => {\n      child.walk(callback, order);\n    });\n    if (order === _HierarchyNode.Walk.PostOrder) {\n      callback(this);\n    }\n  }\n  *[Symbol.iterator]() {\n    yield this;\n    for (const child of this.children) {\n      yield* __yieldStar(child);\n    }\n  }\n};\n_HierarchyNode.Walk = {\n  PreOrder: 0,\n  PostOrder: 1\n};\nvar HierarchyNode = _HierarchyNode;\nvar HierarchySeries = class extends Series {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      contentGroupVirtual: false\n    });\n    this.rootNode = new HierarchyNode(this, 0, void 0, 0, void 0, void 0, void 0, 0, void 0, void 0, []);\n    this.colorDomain = [0, 0];\n    this.maxDepth = 0;\n    this.animationState = new StateMachine(\"empty\", {\n      empty: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateEmptyUpdateReady(data)\n        }\n      },\n      ready: {\n        updateData: \"waiting\",\n        clear: \"clearing\",\n        highlight: data => this.animateReadyHighlight(data),\n        resize: data => this.animateReadyResize(data)\n      },\n      waiting: {\n        update: {\n          target: \"ready\",\n          action: data => this.animateWaitingUpdateReady(data)\n        }\n      },\n      clearing: {\n        update: {\n          target: \"empty\",\n          action: data => this.animateClearingUpdateEmpty(data)\n        }\n      }\n    }, () => this.checkProcessedDataAnimatable());\n  }\n  hasData() {\n    return Array.isArray(this.data) && this.data.length > 0;\n  }\n  processData() {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const {\n        childrenKey,\n        sizeKey,\n        colorKey,\n        fills,\n        strokes,\n        colorRange\n      } = this.properties;\n      let index = 0;\n      const getIndex = () => {\n        index += 1;\n        return index;\n      };\n      let maxDepth = 0;\n      let minColor = Infinity;\n      let maxColor = -Infinity;\n      const colors = new Array(((_b = (_a = this.data) == null ? void 0 : _a.length) != null ? _b : 0) + 1).fill(void 0);\n      const createNode = (datum, parent) => {\n        const index2 = getIndex();\n        const depth = parent.depth != null ? parent.depth + 1 : 0;\n        const children = childrenKey != null ? datum[childrenKey] : void 0;\n        const isLeaf = children == null || children.length === 0;\n        let size = sizeKey != null ? datum[sizeKey] : void 0;\n        if (Number.isFinite(size)) {\n          size = Math.max(size, 0);\n        } else {\n          size = isLeaf ? 1 : 0;\n        }\n        const sumSize = size;\n        maxDepth = Math.max(maxDepth, depth);\n        const color = colorKey != null ? datum[colorKey] : void 0;\n        if (typeof color === \"number\") {\n          colors[index2] = color;\n          minColor = Math.min(minColor, color);\n          maxColor = Math.max(maxColor, color);\n        }\n        return appendChildren(new HierarchyNode(this, index2, datum, size, color, void 0, void 0, sumSize, depth, parent, []), children);\n      };\n      const appendChildren = (node, data) => {\n        data == null ? void 0 : data.forEach(datum => {\n          const child = createNode(datum, node);\n          node.children.push(child);\n          node.sumSize += child.sumSize;\n        });\n        return node;\n      };\n      const rootNode = appendChildren(new HierarchyNode(this, 0, void 0, 0, void 0, void 0, void 0, 0, void 0, void 0, []), this.data);\n      const colorDomain = [minColor, maxColor];\n      let colorScale;\n      if (colorRange != null && Number.isFinite(minColor) && Number.isFinite(maxColor)) {\n        colorScale = new ColorScale();\n        colorScale.domain = colorDomain;\n        colorScale.range = colorRange;\n        colorScale.update();\n      }\n      rootNode.children.forEach((child, index2) => {\n        child.walk(node => {\n          let fill;\n          const color = colors[node.index];\n          if (color != null) {\n            fill = colorScale == null ? void 0 : colorScale.convert(color);\n          }\n          fill != null ? fill : fill = fills == null ? void 0 : fills[index2 % fills.length];\n          node.fill = fill;\n          node.stroke = colorScale == null ? strokes == null ? void 0 : strokes[index2 % strokes.length] : \"rgba(0, 0, 0, 0.2)\";\n        });\n      });\n      this.rootNode = rootNode;\n      this.maxDepth = maxDepth;\n      this.colorDomain = colorDomain;\n    });\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({\n      seriesRect\n    }) {\n      yield this.updateSelections();\n      yield this.updateNodes();\n      const animationData = this.getAnimationData();\n      const resize = this.checkResize(seriesRect);\n      if (resize) {\n        this.animationState.transition(\"resize\", animationData);\n      }\n      this.animationState.transition(\"update\", animationData);\n    });\n  }\n  resetAllAnimation(data) {\n    var _a;\n    const datum = (_a = this.animationResetFns) == null ? void 0 : _a.datum;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (datum != null) {\n      resetMotion(data.datumSelections, datum);\n    }\n  }\n  animateEmptyUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateWaitingUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateReadyHighlight(data) {\n    var _a;\n    const datum = (_a = this.animationResetFns) == null ? void 0 : _a.datum;\n    if (datum != null) {\n      resetMotion([data], datum);\n    }\n  }\n  animateReadyResize(data) {\n    this.resetAllAnimation(data);\n  }\n  animateClearingUpdateEmpty(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData() {\n    const animationData = {\n      datumSelections: [this.groupSelection]\n    };\n    return animationData;\n  }\n  isProcessedDataAnimatable() {\n    return true;\n  }\n  checkProcessedDataAnimatable() {\n    if (!this.isProcessedDataAnimatable()) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n  getLabelData() {\n    return [];\n  }\n  getSeriesDomain() {\n    return [NaN, NaN];\n  }\n  getLegendData(legendType) {\n    const {\n      colorKey,\n      colorName,\n      colorRange,\n      visible\n    } = this.properties;\n    return legendType === \"gradient\" && colorKey != null && colorRange != null ? [{\n      legendType: \"gradient\",\n      enabled: visible,\n      seriesId: this.id,\n      colorName,\n      colorRange,\n      colorDomain: this.colorDomain\n    }] : [];\n  }\n  getDatumIdFromData(node) {\n    return `${node.index}`;\n  }\n  getDatumId(node) {\n    return this.getDatumIdFromData(node);\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/hierarchy/hierarchySeriesProperties.ts\nvar HierarchySeriesProperties = class extends SeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.childrenKey = \"children\";\n    this.fills = Object.values(DEFAULT_FILLS);\n    this.strokes = Object.values(DEFAULT_STROKES);\n  }\n};\n__decorateClass([Validate(STRING)], HierarchySeriesProperties.prototype, \"childrenKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HierarchySeriesProperties.prototype, \"sizeKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HierarchySeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([Validate(STRING, {\n  optional: true\n})], HierarchySeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], HierarchySeriesProperties.prototype, \"fills\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY)], HierarchySeriesProperties.prototype, \"strokes\", 2);\n__decorateClass([Validate(COLOR_STRING_ARRAY, {\n  optional: true\n})], HierarchySeriesProperties.prototype, \"colorRange\", 2);\n\n// packages/ag-charts-community/src/chart/axis/polarAxis.ts\nvar POLAR_AXIS_SHAPE = UNION([\"polygon\", \"circle\"], \"a polar axis shape\");\nvar PolarAxis = class extends Axis {\n  constructor() {\n    super(...arguments);\n    this.shape = \"polygon\";\n    this.innerRadiusRatio = 0;\n    this.defaultTickMinSpacing = 20;\n  }\n  computeLabelsBBox(_options, _seriesRect) {\n    return null;\n  }\n};\n__decorateClass([Validate(POLAR_AXIS_SHAPE)], PolarAxis.prototype, \"shape\", 2);\n__decorateClass([Validate(RATIO)], PolarAxis.prototype, \"innerRadiusRatio\", 2);\n\n// packages/ag-charts-community/src/chart/legendDatum.ts\nvar __FORCE_MODULE_DETECTION2 = 0;\n\n// packages/ag-charts-community/src/chart/factory/seriesTypes.ts\nvar SERIES_FACTORIES = {};\nvar SERIES_DEFAULTS = {};\nvar SERIES_THEME_TEMPLATES = {};\nvar ENTERPRISE_SERIES_THEME_TEMPLATES = {};\nvar SERIES_PALETTE_FACTORIES = {};\nvar SOLO_SERIES_TYPES = /* @__PURE__ */new Set();\nvar STACKABLE_SERIES_TYPES = /* @__PURE__ */new Set();\nvar GROUPABLE_SERIES_TYPES = /* @__PURE__ */new Set();\nvar STACKED_BY_DEFAULT_SERIES_TYPES = /* @__PURE__ */new Set();\nvar SWAP_DEFAULT_AXES_CONDITIONS = {};\nvar CUSTOM_DEFAULTS_FUNCTIONS = {};\nfunction registerSeries(seriesType, chartType2, cstr, defaults, theme, enterpriseTheme, paletteFactory, solo, stackable, groupable, stackedByDefault, swapDefaultAxesCondition, customDefaultsFunction) {\n  SERIES_FACTORIES[seriesType] = cstr;\n  SERIES_DEFAULTS[seriesType] = defaults;\n  registerSeriesThemeTemplate(seriesType, theme, enterpriseTheme);\n  if (paletteFactory) {\n    addSeriesPaletteFactory(seriesType, paletteFactory);\n  }\n  if (solo) {\n    addSoloSeriesType(seriesType);\n  }\n  if (stackable) {\n    addStackableSeriesType(seriesType);\n  }\n  if (groupable) {\n    addGroupableSeriesType(seriesType);\n  }\n  if (stackedByDefault) {\n    addStackedByDefaultSeriesType(seriesType);\n  }\n  if (swapDefaultAxesCondition) {\n    addSwapDefaultAxesCondition(seriesType, swapDefaultAxesCondition);\n  }\n  if (customDefaultsFunction) {\n    addCustomDefaultsFunctions(seriesType, customDefaultsFunction);\n  }\n  registerChartSeriesType(seriesType, chartType2);\n}\nfunction registerSeriesThemeTemplate(seriesType, themeTemplate, enterpriseThemeTemplate = {}) {\n  const existingTemplate = SERIES_THEME_TEMPLATES[seriesType];\n  SERIES_THEME_TEMPLATES[seriesType] = jsonMerge([existingTemplate, themeTemplate]);\n  ENTERPRISE_SERIES_THEME_TEMPLATES[seriesType] = jsonMerge([existingTemplate, themeTemplate, enterpriseThemeTemplate]);\n}\nfunction getSeries(chartType2, moduleCtx) {\n  const seriesConstructor = SERIES_FACTORIES[chartType2];\n  if (seriesConstructor) {\n    return new seriesConstructor(moduleCtx);\n  }\n  throw new Error(`AG Charts - unknown series type: ${chartType2}`);\n}\nfunction getSeriesDefaults(chartType2) {\n  return SERIES_DEFAULTS[chartType2];\n}\nfunction getSeriesThemeTemplate(chartType2) {\n  if (hasRegisteredEnterpriseModules()) {\n    return ENTERPRISE_SERIES_THEME_TEMPLATES[chartType2];\n  }\n  return SERIES_THEME_TEMPLATES[chartType2];\n}\nfunction addSeriesPaletteFactory(seriesType, factory) {\n  SERIES_PALETTE_FACTORIES[seriesType] = factory;\n}\nfunction getSeriesPaletteFactory(seriesType) {\n  return SERIES_PALETTE_FACTORIES[seriesType];\n}\nfunction isSoloSeries(seriesType) {\n  return SOLO_SERIES_TYPES.has(seriesType);\n}\nfunction isStackableSeries(seriesType) {\n  return STACKABLE_SERIES_TYPES.has(seriesType);\n}\nfunction isGroupableSeries(seriesType) {\n  return GROUPABLE_SERIES_TYPES.has(seriesType);\n}\nfunction isSeriesStackedByDefault(seriesType) {\n  return STACKED_BY_DEFAULT_SERIES_TYPES.has(seriesType);\n}\nfunction addGroupableSeriesType(seriesType) {\n  GROUPABLE_SERIES_TYPES.add(seriesType);\n}\nfunction addSoloSeriesType(seriesType) {\n  SOLO_SERIES_TYPES.add(seriesType);\n}\nfunction addStackableSeriesType(seriesType) {\n  STACKABLE_SERIES_TYPES.add(seriesType);\n}\nfunction addStackedByDefaultSeriesType(seriesType) {\n  STACKED_BY_DEFAULT_SERIES_TYPES.add(seriesType);\n}\nfunction addSwapDefaultAxesCondition(seriesType, predicate) {\n  SWAP_DEFAULT_AXES_CONDITIONS[seriesType] = predicate;\n}\nfunction addCustomDefaultsFunctions(seriesType, predicate) {\n  CUSTOM_DEFAULTS_FUNCTIONS[seriesType] = predicate;\n}\nfunction isDefaultAxisSwapNeeded(opts) {\n  var _a, _b;\n  let result;\n  for (const series of (_a = opts.series) != null ? _a : []) {\n    const {\n      type = \"line\"\n    } = series;\n    const isDefaultAxisSwapped = (_b = SWAP_DEFAULT_AXES_CONDITIONS[type]) == null ? void 0 : _b.call(SWAP_DEFAULT_AXES_CONDITIONS, series);\n    if (isDefaultAxisSwapped != null) {\n      if (result != null && result != isDefaultAxisSwapped) {\n        throw new Error(\"AG Charts - The provided series have incompatible directions\");\n      }\n      result = isDefaultAxisSwapped;\n    }\n  }\n  return result;\n}\nfunction executeCustomDefaultsFunctions(opts, initialDefaults) {\n  var _a;\n  let result = initialDefaults;\n  for (const series of (_a = opts.series) != null ? _a : []) {\n    const {\n      type\n    } = series;\n    const fn = type != null ? CUSTOM_DEFAULTS_FUNCTIONS[type] : void 0;\n    if (fn !== void 0) {\n      result = __spreadValues(__spreadValues({}, result), fn(series));\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/chart/factory/setupModules.ts\nfunction setupModules() {\n  var _a;\n  for (const m of REGISTERED_MODULES) {\n    if (m.packageType === \"enterprise\" && !verifyIfModuleExpected(m)) {\n      Logger.errorOnce(\"Unexpected enterprise module registered: \" + m.identifier);\n    }\n    if (JSON_APPLY_PLUGINS.constructors != null && m.optionConstructors != null) {\n      Object.assign(JSON_APPLY_PLUGINS.constructors, m.optionConstructors);\n    }\n    if (m.type === \"root\" && m.themeTemplate) {\n      for (const chartType2 of m.chartTypes) {\n        registerChartDefaults(chartType2, m.themeTemplate);\n      }\n    }\n    if (m.type === \"root\" && ((_a = m.conflicts) == null ? void 0 : _a.length)) {\n      registerModuleConflicts(m.optionsKey, m.conflicts);\n    }\n    if (m.type === \"series\") {\n      if (m.chartTypes.length > 1) throw new Error(\"AG Charts - Module definition error: \" + m.identifier);\n      registerSeries(m.identifier, m.chartTypes[0], m.instanceConstructor, m.seriesDefaults, m.themeTemplate, m.enterpriseThemeTemplate, m.paletteFactory, m.solo, m.stackable, m.groupable, m.stackedByDefault, m.swapDefaultAxesCondition, m.customDefaultsFunction);\n    }\n    if (m.type === \"series-option\" && m.themeTemplate) {\n      for (const seriesType of m.seriesTypes) {\n        registerSeriesThemeTemplate(seriesType, m.themeTemplate);\n      }\n    }\n    if (m.type === \"axis-option\" && m.themeTemplate) {\n      for (const axisType of m.axisTypes) {\n        const axisTypeTheme = m.themeTemplate[axisType];\n        const theme = __spreadValues(__spreadValues({}, m.themeTemplate), typeof axisTypeTheme === \"object\" ? axisTypeTheme : {});\n        for (const axisType2 of m.axisTypes) {\n          delete theme[axisType2];\n        }\n        registerAxisThemeTemplate(axisType, theme);\n      }\n    }\n    if (m.type === \"axis\") {\n      registerAxis(m.identifier, m.instanceConstructor);\n      if (m.themeTemplate) {\n        registerAxisThemeTemplate(m.identifier, m.themeTemplate);\n      }\n    }\n    if (m.type === \"legend\") {\n      registerLegend(m.identifier, m.optionsKey, m.instanceConstructor, m.themeTemplate);\n    }\n  }\n  if (hasRegisteredEnterpriseModules()) {\n    const expectedButUnused = getUnusedExpectedModules();\n    if (expectedButUnused.length > 0) {\n      Logger.errorOnce(\"Enterprise modules expected but not registered: \", expectedButUnused);\n    }\n  }\n}\n\n// packages/ag-charts-community/src/chart/hierarchyChart.ts\nvar _HierarchyChart = class _HierarchyChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    this._data = {};\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_HierarchyChart.prototype, this, \"performLayout\").call(this);\n      const {\n        seriesArea: {\n          padding\n        },\n        seriesRoot\n      } = this;\n      const fullSeriesRect = shrinkRect.clone();\n      shrinkRect.shrink(padding.left, \"left\");\n      shrinkRect.shrink(padding.top, \"top\");\n      shrinkRect.shrink(padding.right, \"right\");\n      shrinkRect.shrink(padding.bottom, \"bottom\");\n      this.seriesRect = shrinkRect;\n      this.animationRect = shrinkRect;\n      this.hoverRect = shrinkRect;\n      seriesRoot.translationX = Math.floor(shrinkRect.x);\n      seriesRoot.translationY = Math.floor(shrinkRect.y);\n      yield Promise.all(this.series.map(series => __async(this, null, function* () {\n        yield series.update({\n          seriesRect: shrinkRect\n        });\n      })));\n      seriesRoot.visible = this.series[0].visible;\n      seriesRoot.setClipRectInGroupCoordinateSpace(new BBox(shrinkRect.x, shrinkRect.y, shrinkRect.width, shrinkRect.height));\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: {\n          width: this.scene.width,\n          height: this.scene.height\n        },\n        clipSeries: false,\n        series: {\n          rect: fullSeriesRect,\n          paddedRect: shrinkRect,\n          visible: true\n        },\n        axes: []\n      });\n      return shrinkRect;\n    });\n  }\n};\n_HierarchyChart.className = \"HierarchyChart\";\n_HierarchyChart.type = \"hierarchy\";\nvar HierarchyChart = _HierarchyChart;\n\n// packages/ag-charts-community/src/chart/factory/processEnterpriseOptions.ts\nfunction removeUsedEnterpriseOptions(options) {\n  var _a, _b, _c, _d;\n  const usedOptions = [];\n  const optionsChartType = getChartType(optionsType(options));\n  for (const {\n    type,\n    chartTypes,\n    optionsKey,\n    optionsInnerKey,\n    identifier\n  } of EXPECTED_ENTERPRISE_MODULES) {\n    if (optionsChartType !== \"unknown\" && !chartTypes.includes(optionsChartType)) continue;\n    if (type === \"root\" || type === \"legend\") {\n      const optionValue = options[optionsKey];\n      if (optionValue == null) continue;\n      if (!optionsInnerKey) {\n        usedOptions.push(optionsKey);\n        delete options[optionsKey];\n      } else if (optionValue[optionsInnerKey]) {\n        usedOptions.push(`${optionsKey}.${optionsInnerKey}`);\n        delete optionValue[optionsInnerKey];\n      }\n    } else if (type === \"axis\") {\n      if (!(\"axes\" in options) || !((_a = options.axes) == null ? void 0 : _a.some(axis => axis.type === identifier))) continue;\n      usedOptions.push(`axis[type=${identifier}]`);\n      options.axes = options.axes.filter(axis => axis.type !== identifier);\n    } else if (type === \"axis-option\") {\n      if (!(\"axes\" in options) || !((_b = options.axes) == null ? void 0 : _b.some(axis => axis[optionsKey]))) continue;\n      usedOptions.push(`axis.${optionsKey}`);\n      options.axes.forEach(axis => {\n        if (axis[optionsKey]) {\n          delete axis[optionsKey];\n        }\n      });\n    } else if (type === \"series\") {\n      if (!((_c = options.series) == null ? void 0 : _c.some(series => series.type === identifier))) continue;\n      usedOptions.push(`series[type=${identifier}]`);\n      options.series = options.series.filter(series => series.type !== identifier);\n    } else if (type === \"series-option\") {\n      if (!((_d = options.series) == null ? void 0 : _d.some(series => series[optionsKey]))) continue;\n      usedOptions.push(`series.${optionsKey}`);\n      options.series.forEach(series => {\n        if (series[optionsKey]) {\n          delete series[optionsKey];\n        }\n      });\n    }\n  }\n  if (usedOptions.length > 0) {\n    Logger.warnOnce([`unable to use these enterprise features as 'ag-charts-enterprise' has not been loaded:`, ``, ...usedOptions, ``, \"See: https://charts.ag-grid.com/javascript/installation/\"].join(\"\\n\"));\n  }\n}\n\n// packages/ag-charts-community/src/chart/themes/chartTheme.ts\nvar DEFAULT_BACKGROUND_FILL = \"white\";\nvar palette = {\n  fills: Array.from(Object.values(DEFAULT_FILLS)),\n  strokes: Array.from(Object.values(DEFAULT_STROKES))\n};\nvar CHART_TYPE_CONFIG = {\n  get cartesian() {\n    return {\n      seriesTypes: CHART_TYPES.cartesianTypes,\n      commonOptions: [\"zoom\", \"navigator\"]\n    };\n  },\n  get polar() {\n    return {\n      seriesTypes: CHART_TYPES.polarTypes,\n      commonOptions: []\n    };\n  },\n  get hierarchy() {\n    return {\n      seriesTypes: CHART_TYPES.hierarchyTypes,\n      commonOptions: []\n    };\n  }\n};\nvar CHART_TYPE_SPECIFIC_COMMON_OPTIONS = Object.values(CHART_TYPE_CONFIG).reduce((r, {\n  commonOptions\n}) => [...r, ...commonOptions], []);\nfunction resolvePartialPalette(partialPalette, basePalette) {\n  var _a, _b;\n  if (partialPalette == null) return null;\n  return {\n    fills: (_a = partialPalette.fills) != null ? _a : basePalette.fills,\n    strokes: (_b = partialPalette.strokes) != null ? _b : basePalette.strokes\n  };\n}\nvar _ChartTheme = class _ChartTheme {\n  getPalette() {\n    return palette;\n  }\n  static getAxisDefaults() {\n    return {\n      top: {},\n      right: {},\n      bottom: {},\n      left: {},\n      title: {\n        enabled: false,\n        text: \"Axis Title\",\n        spacing: 25,\n        fontStyle: void 0,\n        fontWeight: FONT_WEIGHT2.NORMAL,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_LABEL_COLOUR\n      },\n      label: {\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.SMALL,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        padding: 5,\n        rotation: void 0,\n        color: DEFAULT_LABEL_COLOUR,\n        formatter: void 0,\n        avoidCollisions: true\n      },\n      line: {\n        enabled: true,\n        width: 1,\n        color: DEFAULT_AXIS_LINE_COLOUR\n      },\n      tick: {\n        enabled: false,\n        width: 1,\n        color: DEFAULT_AXIS_LINE_COLOUR\n      },\n      gridLine: {\n        enabled: true,\n        style: [{\n          stroke: DEFAULT_AXIS_GRID_COLOUR,\n          lineDash: []\n        }]\n      },\n      crossLines: {\n        enabled: false,\n        fill: DEFAULT_CROSS_LINES_COLOUR,\n        stroke: DEFAULT_CROSS_LINES_COLOUR,\n        fillOpacity: 0.1,\n        strokeWidth: 1,\n        label: {\n          enabled: false,\n          fontStyle: void 0,\n          fontWeight: void 0,\n          fontSize: FONT_SIZE.SMALL,\n          fontFamily: DEFAULT_FONT_FAMILY,\n          padding: 5,\n          color: DEFAULT_LABEL_COLOUR\n        }\n      }\n    };\n  }\n  static getSeriesDefaults() {\n    return {\n      tooltip: {\n        enabled: true,\n        renderer: void 0\n      },\n      visible: true,\n      showInLegend: true,\n      highlightStyle: {\n        item: {\n          fill: \"rgba(255,255,255, 0.33)\",\n          stroke: `rgba(0, 0, 0, 0.4)`,\n          strokeWidth: 2\n        },\n        series: {\n          dimOpacity: 1\n        },\n        text: {\n          color: \"black\"\n        }\n      },\n      nodeClickRange: \"exact\"\n    };\n  }\n  static getCartesianSeriesMarkerDefaults() {\n    return {\n      enabled: true,\n      shape: \"circle\",\n      size: 7,\n      strokeWidth: 1,\n      formatter: void 0\n    };\n  }\n  static getLegendItemMarkerDefaults() {\n    return {\n      shape: void 0,\n      size: 15,\n      padding: 8\n    };\n  }\n  static getCaptionWrappingDefaults() {\n    return \"hyphenate\";\n  }\n  static getChartDefaults() {\n    return {\n      background: {\n        visible: true,\n        fill: DEFAULT_BACKGROUND_COLOUR\n      },\n      padding: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      title: {\n        enabled: false,\n        text: \"Title\",\n        fontStyle: void 0,\n        fontWeight: FONT_WEIGHT2.NORMAL,\n        fontSize: FONT_SIZE.LARGE,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_LABEL_COLOUR,\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      subtitle: {\n        enabled: false,\n        text: \"Subtitle\",\n        spacing: 20,\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_MUTED_LABEL_COLOUR,\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      footnote: {\n        enabled: false,\n        text: \"Footnote\",\n        spacing: 20,\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: \"rgb(140, 140, 140)\",\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      legend: {\n        position: BOTTOM,\n        spacing: 30,\n        listeners: {},\n        item: {\n          paddingX: 16,\n          paddingY: 8,\n          marker: _ChartTheme.getLegendItemMarkerDefaults(),\n          label: {\n            color: DEFAULT_LABEL_COLOUR,\n            fontStyle: void 0,\n            fontWeight: void 0,\n            fontSize: FONT_SIZE.SMALL,\n            fontFamily: DEFAULT_FONT_FAMILY,\n            formatter: void 0\n          }\n        },\n        reverseOrder: false,\n        pagination: {\n          marker: {\n            size: 12\n          },\n          activeStyle: {\n            fill: DEFAULT_LABEL_COLOUR\n          },\n          inactiveStyle: {\n            fill: DEFAULT_MUTED_LABEL_COLOUR\n          },\n          highlightStyle: {\n            fill: DEFAULT_LABEL_COLOUR\n          },\n          label: {\n            color: DEFAULT_LABEL_COLOUR\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        range: \"nearest\",\n        delay: 0\n      },\n      listeners: {}\n    };\n  }\n  constructor(options) {\n    var _a;\n    options = deepMerge({}, options != null ? options : {});\n    const {\n      overrides = null,\n      palette: palette11 = null\n    } = options;\n    const defaults = this.createChartConfigPerChartType(this.getDefaults());\n    if (overrides) {\n      const {\n        common\n      } = overrides;\n      const applyOverrides = (seriesTypes, overrideOpts) => {\n        if (!overrideOpts) return;\n        for (const s of seriesTypes) {\n          const seriesType = s;\n          defaults[seriesType] = deepMerge(defaults[seriesType], overrideOpts);\n        }\n      };\n      for (const [, {\n        seriesTypes,\n        commonOptions\n      }] of Object.entries(CHART_TYPE_CONFIG)) {\n        const cleanedCommon = __spreadValues({}, common);\n        for (const commonKey of CHART_TYPE_SPECIFIC_COMMON_OPTIONS) {\n          if (!commonOptions.includes(commonKey)) {\n            delete cleanedCommon[commonKey];\n          }\n        }\n        applyOverrides(seriesTypes, cleanedCommon);\n      }\n      CHART_TYPES.seriesTypes.forEach(s => {\n        const seriesType = s;\n        if (overrides[seriesType]) {\n          defaults[seriesType] = deepMerge(defaults[seriesType], overrides[seriesType]);\n        }\n      });\n    }\n    const basePalette = this.getPalette();\n    this.palette = (_a = resolvePartialPalette(palette11, basePalette)) != null ? _a : basePalette;\n    this.config = Object.freeze(this.templateTheme(defaults));\n  }\n  createChartConfigPerChartType(config) {\n    Object.entries(CHART_TYPE_CONFIG).forEach(([nextType, {\n      seriesTypes\n    }]) => {\n      const typeDefaults = getChartDefaults(nextType);\n      seriesTypes.forEach(next => {\n        const alias = next;\n        if (!config[alias]) {\n          config[alias] = {};\n          deepMerge(config[alias], typeDefaults);\n        }\n      });\n    });\n    return config;\n  }\n  getDefaults() {\n    let defaults = {};\n    const getChartTypeDefaults = chartType2 => {\n      return __spreadValues(__spreadValues(__spreadValues({}, getLegendThemeTemplates()), _ChartTheme.getChartDefaults()), getChartDefaults(chartType2));\n    };\n    const getOverridesByType = (chartType2, seriesTypes) => {\n      var _a, _b, _c, _d;\n      const chartDefaults = getChartTypeDefaults(chartType2);\n      const result = {};\n      for (const seriesType of seriesTypes) {\n        (_a = result[seriesType]) != null ? _a : result[seriesType] = deepMerge({}, chartDefaults);\n        const axes = (_c = (_b = result[seriesType]).axes) != null ? _c : _b.axes = {};\n        const template = getSeriesThemeTemplate(seriesType);\n        if (template) {\n          result[seriesType].series = deepMerge(result[seriesType].series, template);\n        }\n        for (const axisType of AXIS_TYPES.axesTypes) {\n          const template2 = getAxisThemeTemplate(axisType);\n          if (chartType2 === \"cartesian\") {\n            axes[axisType] = deepMerge(axes[axisType], (_d = _ChartTheme.cartesianAxisDefault[axisType]) != null ? _d : {});\n          }\n          if (template2) {\n            axes[axisType] = deepMerge(axes[axisType], template2);\n          }\n        }\n      }\n      return result;\n    };\n    defaults = deepMerge(defaults, getOverridesByType(\"cartesian\", CHART_TYPES.cartesianTypes));\n    defaults = deepMerge(defaults, getOverridesByType(\"polar\", CHART_TYPES.polarTypes));\n    defaults = deepMerge(defaults, getOverridesByType(\"hierarchy\", CHART_TYPES.hierarchyTypes));\n    return defaults;\n  }\n  templateTheme(themeTemplate) {\n    const themeInstance = jsonClone(themeTemplate);\n    const {\n      extensions,\n      properties\n    } = this.getTemplateParameters();\n    jsonWalk(themeInstance, node => {\n      if (node[\"__extends__\"]) {\n        const key = node[\"__extends__\"];\n        const source = extensions.get(key);\n        if (source == null) {\n          throw new Error(`AG Charts - no template variable provided for: ${key}`);\n        }\n        Object.keys(source).forEach(key2 => {\n          if (!(key2 in node)) {\n            node[key2] = source[key2];\n          }\n        });\n        delete node[\"__extends__\"];\n      }\n      if (node[\"__overrides__\"]) {\n        const key = node[\"__overrides__\"];\n        const source = extensions.get(key);\n        if (source == null) {\n          throw new Error(`AG Charts - no template variable provided for: ${key}`);\n        }\n        Object.assign(node, source);\n        delete node[\"__overrides__\"];\n      }\n      if (Array.isArray(node)) {\n        for (let i = 0; i < node.length; i++) {\n          const symbol = node[i];\n          if (properties.has(symbol)) {\n            node[i] = properties.get(symbol);\n          }\n        }\n      } else {\n        for (const [name, value] of Object.entries(node)) {\n          if (properties.has(value)) {\n            node[name] = properties.get(value);\n          }\n        }\n      }\n    });\n    return themeInstance;\n  }\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: DEFAULT_FILLS.BLUE,\n      stroke: DEFAULT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: DEFAULT_FILLS.ORANGE,\n      stroke: DEFAULT_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: DEFAULT_FILLS.GRAY,\n      stroke: DEFAULT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const extensions = /* @__PURE__ */new Map();\n    extensions.set(EXTENDS_CHART_DEFAULTS, _ChartTheme.getChartDefaults());\n    extensions.set(EXTENDS_AXES_DEFAULTS, _ChartTheme.getAxisDefaults());\n    extensions.set(EXTENDS_LEGEND_DEFAULTS, _ChartTheme.getChartDefaults().legend);\n    extensions.set(EXTENDS_LEGEND_ITEM_DEFAULTS, _ChartTheme.getChartDefaults().legend.item);\n    extensions.set(EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS, _ChartTheme.getLegendItemMarkerDefaults());\n    extensions.set(EXTENDS_AXES_LABEL_DEFAULTS, _ChartTheme.getAxisDefaults().label);\n    extensions.set(EXTENDS_AXES_LINE_DEFAULTS, _ChartTheme.getAxisDefaults().line);\n    extensions.set(EXTENDS_AXES_TICK_DEFAULTS, _ChartTheme.getAxisDefaults().tick);\n    extensions.set(EXTENDS_AXES_GRID_LINE_DEFAULTS, _ChartTheme.getAxisDefaults().gridLine);\n    extensions.set(EXTENDS_SERIES_DEFAULTS, _ChartTheme.getSeriesDefaults());\n    extensions.set(OVERRIDE_SERIES_LABEL_DEFAULTS, {});\n    extensions.set(EXTENDS_CARTESIAN_MARKER_DEFAULTS, _ChartTheme.getCartesianSeriesMarkerDefaults());\n    const properties = /* @__PURE__ */new Map();\n    properties.set(DEFAULT_FONT_FAMILY, \"Verdana, sans-serif\");\n    properties.set(DEFAULT_LABEL_COLOUR, \"rgb(70, 70, 70)\");\n    properties.set(DEFAULT_INVERTED_LABEL_COLOUR, \"white\");\n    properties.set(DEFAULT_MUTED_LABEL_COLOUR, \"rgb(140, 140, 140)\");\n    properties.set(DEFAULT_AXIS_GRID_COLOUR, \"rgb(224,234,241)\");\n    properties.set(DEFAULT_AXIS_LINE_COLOUR, \"rgb(195, 195, 195)\");\n    properties.set(DEFAULT_CROSS_LINES_COLOUR, \"rgb(70, 70, 70)\");\n    properties.set(DEFAULT_INSIDE_SERIES_LABEL_COLOUR, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_BACKGROUND_COLOUR, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_SHADOW_COLOUR, \"rgba(0, 0, 0, 0.5)\");\n    properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [DEFAULT_FILLS.ORANGE, DEFAULT_FILLS.YELLOW, DEFAULT_FILLS.GREEN]);\n    properties.set(DEFAULT_HIERARCHY_FILLS, [\"#ffffff\", \"#e0e5ea\", \"#c1ccd5\", \"#a3b4c1\", \"#859cad\"]);\n    properties.set(DEFAULT_HIERARCHY_STROKES, [\"#ffffff\", \"#c5cbd1\", \"#a4b1bd\", \"#8498a9\", \"#648096\"]);\n    properties.set(DEFAULT_POLAR_SERIES_STROKE, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _ChartTheme.getWaterfallSeriesDefaultPositiveColors());\n    properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _ChartTheme.getWaterfallSeriesDefaultNegativeColors());\n    properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _ChartTheme.getWaterfallSeriesDefaultTotalColors());\n    properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _ChartTheme.getWaterfallSeriesDefaultTotalColors().stroke);\n    return {\n      extensions,\n      properties\n    };\n  }\n};\n_ChartTheme.cartesianAxisDefault = {\n  number: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    line: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().line), {\n      enabled: false\n    })\n  }),\n  log: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    base: 10,\n    line: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().line), {\n      enabled: false\n    })\n  }),\n  category: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    groupPaddingInner: 0.1,\n    label: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().label), {\n      autoRotate: true\n    }),\n    gridLine: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().gridLine), {\n      enabled: false\n    })\n  }),\n  \"grouped-category\": __spreadValues({}, _ChartTheme.getAxisDefaults()),\n  time: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    gridLine: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().gridLine), {\n      enabled: false\n    })\n  })\n};\nvar ChartTheme = _ChartTheme;\n\n// packages/ag-charts-community/src/chart/mapping/prepareSeries.ts\nfunction groupSeriesByType(seriesOptions) {\n  var _a, _b, _c;\n  const groupMap = {};\n  const stackMap = {};\n  const defaultUnstackedGroup = \"default-ag-charts-group\";\n  const result = [];\n  for (const s of seriesOptions) {\n    const type = (_a = s.type) != null ? _a : \"line\";\n    const stackable = isStackableSeries(type);\n    const groupable = isGroupableSeries(type);\n    if (!stackable && !groupable) {\n      result.push({\n        type: \"ungrouped\",\n        opts: [s]\n      });\n      continue;\n    }\n    const {\n      stacked: sStacked,\n      stackGroup: sStackGroup,\n      grouped: sGrouped = void 0,\n      xKey\n    } = s;\n    const stacked = sStackGroup != null || sStacked === true;\n    const grouped = sGrouped === true;\n    let groupingKey = [sStackGroup != null ? sStackGroup : sStacked === true ? \"stacked\" : void 0, grouped ? \"grouped\" : void 0].filter(v => v != null).join(\"-\");\n    if (!groupingKey) {\n      groupingKey = defaultUnstackedGroup;\n    }\n    const indexKey = `${type}-${xKey}-${groupingKey}`;\n    if (stacked && stackable) {\n      const updated = (_b = stackMap[indexKey]) != null ? _b : stackMap[indexKey] = {\n        type: \"stack\",\n        opts: []\n      };\n      if (updated.opts.length === 0) result.push(updated);\n      updated.opts.push(s);\n    } else if (grouped && groupable) {\n      const updated = (_c = groupMap[indexKey]) != null ? _c : groupMap[indexKey] = {\n        type: \"group\",\n        opts: []\n      };\n      if (updated.opts.length === 0) result.push(updated);\n      updated.opts.push(s);\n    } else {\n      result.push({\n        type: \"ungrouped\",\n        opts: [s]\n      });\n    }\n  }\n  return result;\n}\nfunction processSeriesOptions(_opts, seriesOptions) {\n  var _a;\n  const result = [];\n  const preprocessed = seriesOptions.map(series => {\n    var _a2;\n    const sType = (_a2 = series.type) != null ? _a2 : \"line\";\n    const groupable = isGroupableSeries(sType);\n    const stackable = isStackableSeries(sType);\n    const stackedByDefault = isSeriesStackedByDefault(sType);\n    if (series.grouped && !groupable) {\n      Logger.warnOnce(`unsupported grouping of series type: ${sType}`);\n    }\n    if (series.stacked && !stackable) {\n      Logger.warnOnce(`unsupported stacking of series type: ${sType}`);\n    }\n    if (!groupable && !stackable) {\n      return series;\n    }\n    let stacked = false;\n    let grouped2 = false;\n    if (series.stacked === void 0 && series.grouped === void 0) {\n      stacked = stackable && stackedByDefault;\n      grouped2 = groupable && !stacked;\n    } else if (series.stacked === void 0) {\n      stacked = stackable && stackedByDefault && !(series.grouped && groupable);\n      grouped2 = groupable && !stacked && !!series.grouped;\n    } else if (series.grouped === void 0) {\n      stacked = stackable && series.stacked;\n      grouped2 = groupable && !stacked;\n    } else {\n      stacked = stackable && series.stacked;\n      grouped2 = groupable && !stacked && series.grouped;\n    }\n    return __spreadProps(__spreadValues({}, series), {\n      stacked,\n      grouped: grouped2\n    });\n  });\n  const grouped = groupSeriesByType(preprocessed);\n  const groupCount2 = grouped.reduce((result2, next) => {\n    var _a2, _b;\n    if (next.type === \"ungrouped\") return result2;\n    const seriesType = (_a2 = next.opts[0].type) != null ? _a2 : \"line\";\n    (_b = result2[seriesType]) != null ? _b : result2[seriesType] = 0;\n    result2[seriesType] += next.type === \"stack\" ? 1 : next.opts.length;\n    return result2;\n  }, {});\n  const groupIdx = {};\n  const addSeriesGroupingMeta = group2 => {\n    var _a2, _b;\n    let stackIdx = 0;\n    const seriesType = (_a2 = group2.opts[0].type) != null ? _a2 : \"line\";\n    (_b = groupIdx[seriesType]) != null ? _b : groupIdx[seriesType] = 0;\n    if (group2.type === \"stack\") {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = {\n          groupIndex: groupIdx[seriesType],\n          groupCount: groupCount2[seriesType],\n          stackIndex: stackIdx++,\n          stackCount: group2.opts.length\n        };\n      }\n      groupIdx[seriesType]++;\n    } else if (group2.type === \"group\") {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = {\n          groupIndex: groupIdx[seriesType],\n          groupCount: groupCount2[seriesType],\n          stackIndex: 0,\n          stackCount: 0\n        };\n        groupIdx[seriesType]++;\n      }\n    } else {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = void 0;\n      }\n    }\n    return group2.opts;\n  };\n  Debug.create(true, \"opts\")(\"processSeriesOptions() - series grouping: \", grouped);\n  for (const group2 of grouped) {\n    const seriesType = (_a = group2.opts[0].type) != null ? _a : \"line\";\n    if (isGroupableSeries(seriesType) || isStackableSeries(seriesType)) {\n      result.push(...addSeriesGroupingMeta(group2));\n    } else {\n      result.push(...group2.opts);\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/chart/themes/darkTheme.ts\nvar DEFAULT_DARK_BACKGROUND_FILL = \"#192232\";\nvar DEFAULT_DARK_FILLS = {\n  BLUE: \"#5090dc\",\n  ORANGE: \"#ffa03a\",\n  GREEN: \"#459d55\",\n  CYAN: \"#34bfe1\",\n  YELLOW: \"#e1cc00\",\n  VIOLET: \"#9669cb\",\n  GRAY: \"#b5b5b5\",\n  MAGENTA: \"#bd5aa7\",\n  BROWN: \"#8a6224\",\n  RED: \"#ef5452\"\n};\nvar DEFAULT_DARK_STROKES = {\n  BLUE: \"#74a8e6\",\n  ORANGE: \"#ffbe70\",\n  GREEN: \"#6cb176\",\n  CYAN: \"#75d4ef\",\n  YELLOW: \"#f6e559\",\n  VIOLET: \"#aa86d8\",\n  GRAY: \"#a1a1a1\",\n  MAGENTA: \"#ce7ab9\",\n  BROWN: \"#997b52\",\n  RED: \"#ff7872\"\n};\nvar palette2 = {\n  fills: Array.from(Object.values(DEFAULT_DARK_FILLS)),\n  strokes: Array.from(Object.values(DEFAULT_DARK_STROKES))\n};\nvar DarkTheme = class _DarkTheme extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.BLUE,\n      stroke: DEFAULT_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.ORANGE,\n      stroke: DEFAULT_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.GRAY,\n      stroke: DEFAULT_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _DarkTheme.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _DarkTheme.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _DarkTheme.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _DarkTheme.getWaterfallSeriesDefaultTotalColors().stroke);\n    result.properties.set(DEFAULT_POLAR_SERIES_STROKE, DEFAULT_DARK_BACKGROUND_FILL);\n    result.properties.set(DEFAULT_LABEL_COLOUR, \"white\");\n    result.properties.set(DEFAULT_MUTED_LABEL_COLOUR, \"#7D91A0\");\n    result.properties.set(DEFAULT_AXIS_GRID_COLOUR, \"#545A6E\");\n    result.properties.set(DEFAULT_CROSS_LINES_COLOUR, \"white\");\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [DEFAULT_DARK_FILLS.ORANGE, DEFAULT_DARK_FILLS.YELLOW, DEFAULT_DARK_FILLS.GREEN]);\n    result.properties.set(DEFAULT_HIERARCHY_FILLS, [\"#192834\", \"#253746\", \"#324859\", \"#3f596c\", \"#4d6a80\"]);\n    result.properties.set(DEFAULT_HIERARCHY_STROKES, [\"#192834\", \"#3b5164\", \"#496275\", \"#577287\", \"#668399\"]);\n    result.properties.set(DEFAULT_BACKGROUND_COLOUR, DEFAULT_DARK_BACKGROUND_FILL);\n    result.properties.set(DEFAULT_INSIDE_SERIES_LABEL_COLOUR, DEFAULT_DARK_BACKGROUND_FILL);\n    return result;\n  }\n  getPalette() {\n    return palette2;\n  }\n  constructor(options) {\n    super(options);\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/materialDark.ts\nvar MATERIAL_DARK_FILLS = {\n  BLUE: \"#2196F3\",\n  ORANGE: \"#FF9800\",\n  GREEN: \"#4CAF50\",\n  CYAN: \"#00BCD4\",\n  YELLOW: \"#FFEB3B\",\n  VIOLET: \"#7E57C2\",\n  GRAY: \"#9E9E9E\",\n  MAGENTA: \"#F06292\",\n  BROWN: \"#795548\",\n  RED: \"#F44336\"\n};\nvar MATERIAL_DARK_STROKES = {\n  BLUE: \"#90CAF9\",\n  ORANGE: \"#FFCC80\",\n  GREEN: \"#A5D6A7\",\n  CYAN: \"#80DEEA\",\n  YELLOW: \"#FFF9C4\",\n  VIOLET: \"#B39DDB\",\n  GRAY: \"#E0E0E0\",\n  MAGENTA: \"#F48FB1\",\n  BROWN: \"#A1887F\",\n  RED: \"#EF9A9A\"\n};\nvar palette3 = {\n  fills: Array.from(Object.values(MATERIAL_DARK_FILLS)),\n  strokes: Array.from(Object.values(MATERIAL_DARK_STROKES))\n};\nvar MaterialDark = class _MaterialDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.BLUE,\n      stroke: MATERIAL_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.RED,\n      stroke: MATERIAL_DARK_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.GRAY,\n      stroke: MATERIAL_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _MaterialDark.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _MaterialDark.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _MaterialDark.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [MATERIAL_DARK_FILLS.ORANGE, MATERIAL_DARK_FILLS.YELLOW, MATERIAL_DARK_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _MaterialDark.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette3;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/materialLight.ts\nvar MATERIAL_LIGHT_FILLS = {\n  BLUE: \"#2196F3\",\n  ORANGE: \"#FF9800\",\n  GREEN: \"#4CAF50\",\n  CYAN: \"#00BCD4\",\n  YELLOW: \"#FFEB3B\",\n  VIOLET: \"#7E57C2\",\n  GRAY: \"#9E9E9E\",\n  MAGENTA: \"#F06292\",\n  BROWN: \"#795548\",\n  RED: \"#F44336\"\n};\nvar MATERIAL_LIGHT_STROKES = {\n  BLUE: \"#1565C0\",\n  ORANGE: \"#E65100\",\n  GREEN: \"#2E7D32\",\n  CYAN: \"#00838F\",\n  YELLOW: \"#F9A825\",\n  VIOLET: \"#4527A0\",\n  GRAY: \"#616161\",\n  MAGENTA: \"#C2185B\",\n  BROWN: \"#4E342E\",\n  RED: \"#B71C1C\"\n};\nvar palette4 = {\n  fills: Array.from(Object.values(MATERIAL_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(MATERIAL_LIGHT_STROKES))\n};\nvar MaterialLight = class _MaterialLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.BLUE,\n      stroke: MATERIAL_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.RED,\n      stroke: MATERIAL_LIGHT_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.GRAY,\n      stroke: MATERIAL_LIGHT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _MaterialLight.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _MaterialLight.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _MaterialLight.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [MATERIAL_LIGHT_FILLS.ORANGE, MATERIAL_LIGHT_FILLS.YELLOW, MATERIAL_LIGHT_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _MaterialLight.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette4;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/polychromaDark.ts\nvar POLYCHROMA_DARK_FILLS = {\n  BLUE: \"#436ff4\",\n  PURPLE: \"#9a7bff\",\n  MAGENTA: \"#d165d2\",\n  PINK: \"#f0598b\",\n  RED: \"#f47348\",\n  ORANGE: \"#f2a602\",\n  YELLOW: \"#e9e201\",\n  GREEN: \"#21b448\",\n  CYAN: \"#00b9a2\",\n  MODERATE_BLUE: \"#00aee4\"\n};\nvar POLYCHROMA_DARK_STROKES = {\n  BLUE: \"#6698ff\",\n  PURPLE: \"#c0a3ff\",\n  MAGENTA: \"#fc8dfc\",\n  PINK: \"#ff82b1\",\n  RED: \"#ff9b70\",\n  ORANGE: \"#ffcf4e\",\n  YELLOW: \"#ffff58\",\n  GREEN: \"#58dd70\",\n  CYAN: \"#51e2c9\",\n  MODERATE_BLUE: \"#4fd7ff\"\n};\nvar POLYCHROMA_DARK_FILL_GRAY = \"#bbbbbb\";\nvar POLYCHROMA_DARK_STROKE_GRAY = \"#eeeeee\";\nvar palette5 = {\n  fills: Array.from(Object.values(POLYCHROMA_DARK_FILLS)),\n  strokes: Array.from(Object.values(POLYCHROMA_DARK_STROKES))\n};\nvar PolychromaDark = class _PolychromaDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILLS.BLUE,\n      stroke: POLYCHROMA_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILLS.RED,\n      stroke: POLYCHROMA_DARK_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILL_GRAY,\n      stroke: POLYCHROMA_DARK_STROKE_GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _PolychromaDark.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _PolychromaDark.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _PolychromaDark.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [POLYCHROMA_DARK_FILLS.BLUE, POLYCHROMA_DARK_FILLS.RED]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _PolychromaDark.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette5;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/polychromaLight.ts\nvar POLYCHROMA_LIGHT_FILLS = {\n  BLUE: \"#436ff4\",\n  PURPLE: \"#9a7bff\",\n  MAGENTA: \"#d165d2\",\n  PINK: \"#f0598b\",\n  RED: \"#f47348\",\n  ORANGE: \"#f2a602\",\n  YELLOW: \"#e9e201\",\n  GREEN: \"#21b448\",\n  CYAN: \"#00b9a2\",\n  MODERATE_BLUE: \"#00aee4\"\n};\nvar POLYCHROMA_LIGHT_STROKES = {\n  BLUE: \"#2346c9\",\n  PURPLE: \"#7653d4\",\n  MAGENTA: \"#a73da9\",\n  PINK: \"#c32d66\",\n  RED: \"#c84b1c\",\n  ORANGE: \"#c87f00\",\n  YELLOW: \"#c1b900\",\n  GREEN: \"#008c1c\",\n  CYAN: \"#00927c\",\n  MODERATE_BLUE: \"#0087bb\"\n};\nvar POLYCHROMA_LIGHT_FILL_GRAY = \"#bbbbbb\";\nvar POLYCHROMA_LIGHT_STROKE_GRAY = \"#888888\";\nvar palette6 = {\n  fills: Array.from(Object.values(POLYCHROMA_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(POLYCHROMA_LIGHT_STROKES))\n};\nvar PolychromaLight = class _PolychromaLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILLS.BLUE,\n      stroke: POLYCHROMA_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILLS.RED,\n      stroke: POLYCHROMA_LIGHT_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILL_GRAY,\n      stroke: POLYCHROMA_LIGHT_STROKE_GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _PolychromaLight.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _PolychromaLight.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _PolychromaLight.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [POLYCHROMA_LIGHT_FILLS.BLUE, POLYCHROMA_LIGHT_FILLS.RED]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _PolychromaLight.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette6;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/sheetsDark.ts\nvar SHEETS_DARK_FILLS = {\n  BLUE: \"#4472C4\",\n  ORANGE: \"#ED7D31\",\n  GRAY: \"#A5A5A5\",\n  YELLOW: \"#FFC000\",\n  MODERATE_BLUE: \"#5B9BD5\",\n  GREEN: \"#70AD47\",\n  DARK_GRAY: \"#7B7B7B\",\n  DARK_BLUE: \"#264478\",\n  VERY_DARK_GRAY: \"#636363\",\n  DARK_YELLOW: \"#997300\"\n};\nvar SHEETS_DARK_STROKES = {\n  BLUE: \"#6899ee\",\n  ORANGE: \"#ffa55d\",\n  GRAY: \"#cdcdcd\",\n  YELLOW: \"#ffea53\",\n  MODERATE_BLUE: \"#82c3ff\",\n  GREEN: \"#96d56f\",\n  DARK_GRAY: \"#a1a1a1\",\n  DARK_BLUE: \"#47689f\",\n  VERY_DARK_GRAY: \"#878787\",\n  DARK_YELLOW: \"#c0993d\"\n};\nvar palette7 = {\n  fills: Array.from(Object.values(SHEETS_DARK_FILLS)),\n  strokes: Array.from(Object.values(SHEETS_DARK_STROKES))\n};\nvar SheetsDark = class _SheetsDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.BLUE,\n      stroke: SHEETS_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.ORANGE,\n      stroke: SHEETS_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.GRAY,\n      stroke: SHEETS_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _SheetsDark.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _SheetsDark.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _SheetsDark.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [SHEETS_DARK_FILLS.ORANGE, SHEETS_DARK_FILLS.YELLOW, SHEETS_DARK_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _SheetsDark.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette7;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/sheetsLight.ts\nvar SHEETS_LIGHT_FILLS = {\n  BLUE: \"#5281d5\",\n  ORANGE: \"#ff8d44\",\n  GRAY: \"#b5b5b5\",\n  YELLOW: \"#ffd02f\",\n  MODERATE_BLUE: \"#6aabe6\",\n  GREEN: \"#7fbd57\",\n  DARK_GRAY: \"#8a8a8a\",\n  DARK_BLUE: \"#335287\",\n  VERY_DARK_GRAY: \"#717171\",\n  DARK_YELLOW: \"#a98220\"\n};\nvar SHEETS_LIGHT_STROKES = {\n  BLUE: \"#214d9b\",\n  ORANGE: \"#c25600\",\n  GRAY: \"#7f7f7f\",\n  YELLOW: \"#d59800\",\n  MODERATE_BLUE: \"#3575ac\",\n  GREEN: \"#4b861a\",\n  DARK_GRAY: \"#575757\",\n  DARK_BLUE: \"#062253\",\n  VERY_DARK_GRAY: \"#414141\",\n  DARK_YELLOW: \"#734f00\"\n};\nvar palette8 = {\n  fills: Array.from(Object.values(SHEETS_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(SHEETS_LIGHT_STROKES))\n};\nvar SheetsLight = class _SheetsLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.BLUE,\n      stroke: SHEETS_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.ORANGE,\n      stroke: SHEETS_LIGHT_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.GRAY,\n      stroke: SHEETS_LIGHT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _SheetsLight.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _SheetsLight.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _SheetsLight.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [SHEETS_LIGHT_FILLS.ORANGE, SHEETS_LIGHT_FILLS.YELLOW, SHEETS_LIGHT_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _SheetsLight.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette8;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/vividDark.ts\nvar VIVID_DARK_FILLS = {\n  BLUE: \"#0083ff\",\n  ORANGE: \"#ff6600\",\n  GREEN: \"#00af00\",\n  CYAN: \"#00ccff\",\n  YELLOW: \"#f7c700\",\n  VIOLET: \"#ac26ff\",\n  GRAY: \"#a7a7b7\",\n  MAGENTA: \"#e800c5\",\n  BROWN: \"#b54300\",\n  RED: \"#ff0000\"\n};\nvar VIVID_DARK_STROKES = {\n  BLUE: \"#67b7ff\",\n  ORANGE: \"#ffc24d\",\n  GREEN: \"#5cc86f\",\n  CYAN: \"#54ebff\",\n  VIOLET: \"#c18aff\",\n  YELLOW: \"#fff653\",\n  GRAY: \"#aeaeae\",\n  MAGENTA: \"#f078d4\",\n  BROWN: \"#ba8438\",\n  RED: \"#ff726e\"\n};\nvar palette9 = {\n  fills: Array.from(Object.values(VIVID_DARK_FILLS)),\n  strokes: Array.from(Object.values(VIVID_DARK_STROKES))\n};\nvar VividDark = class _VividDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: VIVID_DARK_FILLS.BLUE,\n      stroke: VIVID_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: VIVID_DARK_FILLS.ORANGE,\n      stroke: VIVID_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: VIVID_DARK_FILLS.GRAY,\n      stroke: VIVID_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _VividDark.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _VividDark.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _VividDark.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [VIVID_DARK_FILLS.ORANGE, VIVID_DARK_FILLS.YELLOW, VIVID_DARK_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _VividDark.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette9;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/vividLight.ts\nvar VIVID_FILLS = {\n  BLUE: \"#0083ff\",\n  ORANGE: \"#ff6600\",\n  GREEN: \"#00af00\",\n  CYAN: \"#00ccff\",\n  YELLOW: \"#f7c700\",\n  VIOLET: \"#ac26ff\",\n  GRAY: \"#a7a7b7\",\n  MAGENTA: \"#e800c5\",\n  BROWN: \"#b54300\",\n  RED: \"#ff0000\"\n};\nvar VIVID_STROKES = {\n  BLUE: \"#0f68c0\",\n  ORANGE: \"#d47100\",\n  GREEN: \"#007922\",\n  CYAN: \"#009ac2\",\n  VIOLET: \"#bca400\",\n  YELLOW: \"#753cac\",\n  GRAY: \"#646464\",\n  MAGENTA: \"#9b2685\",\n  BROWN: \"#6c3b00\",\n  RED: \"#cb0021\"\n};\nvar palette10 = {\n  fills: Array.from(Object.values(VIVID_FILLS)),\n  strokes: Array.from(Object.values(VIVID_STROKES))\n};\nvar VividLight = class _VividLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: VIVID_FILLS.BLUE,\n      stroke: VIVID_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: VIVID_FILLS.ORANGE,\n      stroke: VIVID_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: VIVID_FILLS.GRAY,\n      stroke: VIVID_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _VividLight.getWaterfallSeriesDefaultPositiveColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _VividLight.getWaterfallSeriesDefaultNegativeColors());\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _VividLight.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [VIVID_FILLS.ORANGE, VIVID_FILLS.YELLOW, VIVID_FILLS.GREEN]);\n    result.properties.set(DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE, _VividLight.getWaterfallSeriesDefaultTotalColors().stroke);\n    return result;\n  }\n  getPalette() {\n    return palette10;\n  }\n};\n\n// packages/ag-charts-community/src/chart/mapping/themes.ts\nvar lightTheme = () => new ChartTheme();\nvar darkTheme = () => new DarkTheme();\nvar lightThemes = {\n  undefined: lightTheme,\n  null: lightTheme,\n  \"ag-default\": lightTheme,\n  \"ag-sheets\": () => new SheetsLight(),\n  \"ag-polychroma\": () => new PolychromaLight(),\n  \"ag-vivid\": () => new VividLight(),\n  \"ag-material\": () => new MaterialLight()\n};\nvar darkThemes = {\n  undefined: darkTheme,\n  null: darkTheme,\n  \"ag-default-dark\": darkTheme,\n  \"ag-sheets-dark\": () => new SheetsDark(),\n  \"ag-polychroma-dark\": () => new PolychromaDark(),\n  \"ag-vivid-dark\": () => new VividDark(),\n  \"ag-material-dark\": () => new MaterialDark()\n};\nvar themes = __spreadValues(__spreadValues({}, darkThemes), lightThemes);\nfunction validateChartThemeObject(unknownObject) {\n  if (unknownObject === null) {\n    return void 0;\n  }\n  let valid = true;\n  const {\n    baseTheme,\n    palette: palette11,\n    overrides\n  } = unknownObject;\n  if (baseTheme !== void 0 && typeof baseTheme !== \"string\" && typeof baseTheme !== \"object\") {\n    Logger.warn(`invalid theme.baseTheme type ${typeof baseTheme}, expected (string | object).`);\n    valid = false;\n  }\n  if (overrides !== void 0 && typeof overrides !== \"object\") {\n    Logger.warn(`invalid theme.overrides type ${typeof overrides}, expected object.`);\n    valid = false;\n  }\n  if (typeof palette11 === \"object\") {\n    if (palette11 !== null) {\n      const {\n        fills,\n        strokes\n      } = palette11;\n      if (fills !== void 0 && !Array.isArray(fills)) {\n        Logger.warn(`theme.overrides.fills must be undefined or an array`);\n        valid = false;\n      }\n      if (strokes !== void 0 && !Array.isArray(strokes)) {\n        Logger.warn(`theme.overrides.strokes must be undefined or an array`);\n        valid = false;\n      }\n    }\n  } else if (palette11 !== void 0) {\n    Logger.warn(`invalid theme.palette type ${typeof palette11}, expected object.`);\n    valid = false;\n  }\n  if (valid) {\n    return unknownObject;\n  }\n  return void 0;\n}\nfunction validateChartTheme(value) {\n  if (value === void 0 || typeof value === \"string\" || value instanceof ChartTheme) {\n    return value;\n  }\n  if (typeof value === \"object\") {\n    return validateChartThemeObject(value);\n  }\n  Logger.warn(`invalid theme value type ${typeof value}, expected object.`);\n  return void 0;\n}\nfunction getChartTheme(unvalidatedValue) {\n  var _a;\n  let value = validateChartTheme(unvalidatedValue);\n  if (value instanceof ChartTheme) {\n    return value;\n  }\n  if (value === void 0 || typeof value === \"string\") {\n    const stockTheme = themes[value];\n    if (stockTheme) {\n      return stockTheme();\n    }\n    Logger.warnOnce(`the theme [${value}] is invalid, using [ag-default] instead.`);\n    return lightTheme();\n  }\n  const overrides = [];\n  let palette11;\n  while (typeof value === \"object\") {\n    overrides.push((_a = value.overrides) != null ? _a : {});\n    if (value.palette && palette11 == null) {\n      palette11 = value.palette;\n    }\n    value = value.baseTheme;\n  }\n  overrides.reverse();\n  const flattenedTheme = __spreadValues({\n    baseTheme: value,\n    overrides: jsonMerge(overrides)\n  }, palette11 ? {\n    palette: palette11\n  } : {});\n  const baseTheme = flattenedTheme.baseTheme ? getChartTheme(flattenedTheme.baseTheme) : lightTheme();\n  return new baseTheme.constructor(flattenedTheme);\n}\n\n// packages/ag-charts-community/src/chart/mapping/prepare.ts\nfunction takeColours(context, colours, maxCount) {\n  const result = [];\n  for (let count2 = 0; count2 < maxCount; count2++) {\n    result.push(colours[(count2 + context.colourIndex) % colours.length]);\n  }\n  return result;\n}\nvar noDataCloneMergeOptions = {\n  avoidDeepClone: [\"data\"]\n};\nfunction getGlobalTooltipPositionOptions(position) {\n  if (position === void 0 || typeof position !== \"object\" || position === null) {\n    return {};\n  }\n  const {\n    type,\n    xOffset,\n    yOffset\n  } = position;\n  const AgTooltipPositionTypeMap = {\n    pointer: true,\n    node: true\n  };\n  const result = {};\n  const isTooltipPositionType = value => Object.keys(AgTooltipPositionTypeMap).includes(value);\n  if (typeof type === \"string\" && isTooltipPositionType(type)) {\n    result.type = type;\n  }\n  if (typeof xOffset === \"number\" && !isNaN(xOffset) && isFinite(xOffset)) {\n    result.xOffset = xOffset;\n  }\n  if (typeof yOffset === \"number\" && !isNaN(yOffset) && isFinite(yOffset)) {\n    result.yOffset = yOffset;\n  }\n  return result;\n}\nfunction prepareOptions(options) {\n  var _a, _b, _c, _d;\n  sanityCheckOptions(options);\n  const type = optionsType(options);\n  const checkSeriesType = type2 => {\n    if (type2 != null && !(isSeriesOptionType(type2) || isEnterpriseSeriesType(type2) || getSeriesDefaults(type2))) {\n      throw new Error(`AG Charts - unknown series type: ${type2}; expected one of: ${CHART_TYPES.seriesTypes}`);\n    }\n  };\n  for (const {\n    type: seriesType\n  } of (_a = options.series) != null ? _a : []) {\n    if (seriesType == null) continue;\n    checkSeriesType(seriesType);\n  }\n  options = validateSoloSeries(options);\n  let defaultSeriesType = \"line\";\n  if (isAgCartesianChartOptions(options)) {\n    defaultSeriesType = \"line\";\n  } else if (isAgHierarchyChartOptions(options)) {\n    defaultSeriesType = \"treemap\";\n  } else if (isAgPolarChartOptions(options)) {\n    defaultSeriesType = \"pie\";\n  }\n  let defaultOverrides = getSeriesDefaults(type);\n  if (isDefaultAxisSwapNeeded(options)) {\n    defaultOverrides = swapAxes(defaultOverrides);\n  }\n  defaultOverrides = executeCustomDefaultsFunctions(options, defaultOverrides);\n  const conflictOverrides = resolveModuleConflicts(options);\n  removeDisabledOptions(options);\n  const globalTooltipPositionOptions = getGlobalTooltipPositionOptions((_b = options.tooltip) == null ? void 0 : _b.position);\n  const {\n    context,\n    mergedOptions,\n    axesThemes,\n    seriesThemes,\n    theme\n  } = prepareMainOptions(defaultOverrides, options, conflictOverrides);\n  mergedOptions.series = processSeriesOptions(mergedOptions, ((_c = mergedOptions.series) != null ? _c : []).map(s => {\n    var _a2;\n    const type2 = (_a2 = s.type) != null ? _a2 : defaultSeriesType;\n    const mergedSeries = mergeSeriesOptions(s, type2, seriesThemes, globalTooltipPositionOptions);\n    if (type2 === \"pie\") {\n      preparePieOptions(seriesThemes.pie, s, mergedSeries);\n    }\n    return mergedSeries;\n  })).map(s => prepareSeries(context, s)).map(s => theme.templateTheme(s));\n  const checkAxisType = type2 => {\n    const isAxisType = isAxisOptionType(type2);\n    if (!isAxisType) {\n      Logger.warnOnce(`unknown axis type: ${type2}; expected one of: ${AXIS_TYPES.axesTypes}, ignoring.`);\n    }\n    return isAxisType;\n  };\n  if (\"axes\" in mergedOptions) {\n    let validAxesTypes = true;\n    for (const {\n      type: axisType\n    } of (_d = mergedOptions.axes) != null ? _d : []) {\n      validAxesTypes && (validAxesTypes = checkAxisType(axisType));\n    }\n    const axisSource = validAxesTypes ? mergedOptions.axes : defaultOverrides.axes;\n    mergedOptions.axes = axisSource == null ? void 0 : axisSource.map(axis => {\n      var _a2, _b2, _c2, _d2, _e;\n      const axisType = axis.type;\n      let axisDefaults;\n      if (validAxesTypes) {\n        axisDefaults = (_a2 = defaultOverrides.axes) == null ? void 0 : _a2.find(({\n          type: type2\n        }) => type2 === axisType);\n      }\n      const axesTheme = jsonMerge([(_b2 = axesThemes[axisType]) != null ? _b2 : {}, (_e = (_d2 = axesThemes[axisType]) == null ? void 0 : _d2[(_c2 = axis.position) != null ? _c2 : \"unknown\"]) != null ? _e : {}, axisDefaults]);\n      return prepareAxis(axis, axesTheme);\n    });\n    prepareLegendEnabledOption(options, mergedOptions);\n  }\n  prepareEnabledOptions(options, mergedOptions);\n  return mergedOptions;\n}\nfunction sanityCheckOptions(options) {\n  const deprecatedArrayProps = {\n    yKeys: \"yKey\",\n    yNames: \"yName\"\n  };\n  Object.entries(deprecatedArrayProps).forEach(([oldProp, newProp]) => {\n    var _a;\n    if ((_a = options.series) == null ? void 0 : _a.some(s => s[oldProp] != null)) {\n      Logger.warnOnce(`Property [series.${oldProp}] is deprecated, please use [series.${newProp}] and multiple series instead.`);\n    }\n  });\n}\nfunction hasSoloSeries(options) {\n  return options.some(series => isSoloSeries(series.type));\n}\nfunction validateSoloSeries(options) {\n  if (options.series === void 0 || options.series.length <= 1 || !hasSoloSeries(options.series)) {\n    return options;\n  }\n  let series = [...options.series];\n  if (isSoloSeries(series[0].type)) {\n    Logger.warn(`series[0] of type '${series[0].type}' is incompatible with other series types. Only processing series[0]`);\n    series = series.slice(0, 1);\n  } else {\n    const rejects = Array.from(new Set(series.filter(s => isSoloSeries(s.type)).map(s => s.type)));\n    Logger.warnOnce(`Unable to mix these series types with the lead series type: ${rejects}`);\n    series = series.filter(s => !isSoloSeries(s.type));\n  }\n  return __spreadProps(__spreadValues({}, options), {\n    series\n  });\n}\nfunction mergeSeriesOptions(series, type, seriesThemes, globalTooltipPositionOptions) {\n  var _a, _b;\n  const mergedTooltipPosition = jsonMerge([__spreadValues({}, globalTooltipPositionOptions), (_a = series.tooltip) == null ? void 0 : _a.position], noDataCloneMergeOptions);\n  return jsonMerge([(_b = seriesThemes[type]) != null ? _b : {}, __spreadProps(__spreadValues({}, series), {\n    type,\n    tooltip: __spreadProps(__spreadValues({}, series.tooltip), {\n      position: mergedTooltipPosition\n    })\n  })], noDataCloneMergeOptions);\n}\nfunction prepareMainOptions(defaultOverrides, options, conflictOverrides) {\n  const {\n    theme,\n    cleanedTheme,\n    axesThemes,\n    seriesThemes,\n    userPalette: partialPalette\n  } = prepareTheme(options);\n  const userPalette = resolvePartialPalette(partialPalette, theme.palette);\n  const context = {\n    colourIndex: 0,\n    palette: theme.palette,\n    userPalette,\n    theme\n  };\n  defaultOverrides = theme.templateTheme(defaultOverrides);\n  const mergedOptions = jsonMerge([defaultOverrides, cleanedTheme, options, conflictOverrides], noDataCloneMergeOptions);\n  if (!enterpriseModule.isEnterprise) {\n    removeUsedEnterpriseOptions(mergedOptions);\n  }\n  return {\n    context,\n    mergedOptions,\n    axesThemes,\n    seriesThemes,\n    theme\n  };\n}\nfunction prepareTheme(options) {\n  var _a;\n  const theme = getChartTheme(options.theme);\n  const themeConfig = theme.config[optionsType(options)];\n  const seriesThemes = Object.entries(theme.config).reduce((result, [seriesType, {\n    series\n  }]) => {\n    result[seriesType] = series;\n    return result;\n  }, {});\n  const userTheme = options.theme;\n  const userPalette = typeof userTheme === \"object\" && userTheme.palette ? userTheme.palette : null;\n  return {\n    theme,\n    axesThemes: (_a = themeConfig == null ? void 0 : themeConfig[\"axes\"]) != null ? _a : {},\n    seriesThemes,\n    cleanedTheme: jsonMerge([themeConfig != null ? themeConfig : {}, {\n      axes: DELETE,\n      series: DELETE\n    }]),\n    userPalette\n  };\n}\nfunction prepareSeries(context, input, ...defaults) {\n  const paletteOptions = calculateSeriesPalette(context, input);\n  const removeOptions = {\n    stacked: DELETE,\n    grouped: DELETE\n  };\n  return jsonMerge([...defaults, paletteOptions, input, removeOptions], noDataCloneMergeOptions);\n}\nfunction calculateSeriesPalette(context, input) {\n  const paletteFactory = getSeriesPaletteFactory(input.type);\n  if (!paletteFactory) {\n    return {};\n  }\n  const {\n    palette: {\n      fills = [],\n      strokes = []\n    },\n    userPalette,\n    theme\n  } = context;\n  const colorsCount = Math.max(fills.length, strokes.length);\n  return paletteFactory({\n    userPalette,\n    themeTemplateParameters: theme.getTemplateParameters(),\n    colorsCount,\n    takeColors: count2 => {\n      const colors = {\n        fills: takeColours(context, fills, count2),\n        strokes: takeColours(context, strokes, count2)\n      };\n      context.colourIndex += count2;\n      return colors;\n    }\n  });\n}\nfunction prepareAxis(axis, axisTheme) {\n  var _a, _b;\n  const removeOptions = {\n    top: DELETE,\n    bottom: DELETE,\n    left: DELETE,\n    right: DELETE\n  };\n  if (axis.crossLines) {\n    if (!Array.isArray(axis.crossLines)) {\n      Logger.warn(\"axis[].crossLines should be an array.\");\n      axis.crossLines = [];\n    }\n    axis.crossLines = axis.crossLines.map(crossLine => {\n      var _a2;\n      return jsonMerge([(_a2 = axisTheme.crossLines) != null ? _a2 : {}, crossLine]);\n    });\n  }\n  const gridLineStyle = (_a = axisTheme.gridLine) == null ? void 0 : _a.style;\n  if (((_b = axis.gridLine) == null ? void 0 : _b.style) !== void 0 && gridLineStyle !== void 0 && gridLineStyle.length > 0) {\n    if (!Array.isArray(axis.gridLine.style)) {\n      Logger.warn(\"axis[].gridLine.style should be an array.\");\n      axis.gridLine.style = [];\n    }\n    axis.gridLine.style = axis.gridLine.style.map((userStyle, index) => {\n      if (userStyle.stroke === void 0 && userStyle.lineDash === void 0) {\n        return userStyle;\n      }\n      const themeStyle = gridLineStyle[index % gridLineStyle.length];\n      return jsonMerge([themeStyle, userStyle]);\n    });\n  }\n  const cleanTheme = {\n    crossLines: DELETE\n  };\n  return jsonMerge([axisTheme, cleanTheme, axis, removeOptions], noDataCloneMergeOptions);\n}\nfunction removeDisabledOptions(options) {\n  jsonWalk(options, userOptionsNode => {\n    if (\"enabled\" in userOptionsNode && userOptionsNode.enabled === false) {\n      Object.keys(userOptionsNode).forEach(key => {\n        if (key === \"enabled\") return;\n        delete userOptionsNode[key];\n      });\n    }\n  }, {\n    skip: [\"data\", \"theme\"]\n  });\n}\nfunction prepareLegendEnabledOption(options, mergedOptions) {\n  var _a, _b, _c, _d;\n  if (!isDefined((_a = options.legend) == null ? void 0 : _a.enabled) && !isDefined((_b = mergedOptions.legend) == null ? void 0 : _b.enabled)) {\n    (_c = mergedOptions.legend) != null ? _c : mergedOptions.legend = {};\n    mergedOptions.legend.enabled = ((_d = options.series) != null ? _d : []).length > 1;\n  }\n}\nfunction prepareEnabledOptions(options, mergedOptions) {\n  jsonWalk(options, (visitingUserOpts, visitingMergedOpts) => {\n    if (visitingMergedOpts && \"enabled\" in visitingMergedOpts && !visitingMergedOpts._enabledFromTheme && visitingUserOpts.enabled == null) {\n      visitingMergedOpts.enabled = true;\n    }\n  }, {\n    skip: [\"data\", \"theme\"]\n  }, mergedOptions);\n  jsonWalk(mergedOptions, visitingMergedOpts => {\n    if (visitingMergedOpts._enabledFromTheme != null) {\n      delete visitingMergedOpts._enabledFromTheme;\n    }\n  }, {\n    skip: [\"data\", \"theme\"]\n  });\n}\nfunction preparePieOptions(pieSeriesTheme, seriesOptions, mergedSeries) {\n  if (isArray(seriesOptions.innerLabels)) {\n    mergedSeries.innerLabels = seriesOptions.innerLabels.map(innerLabel => jsonMerge([pieSeriesTheme.innerLabels, innerLabel]));\n  } else {\n    mergedSeries.innerLabels = DELETE;\n  }\n}\n\n// packages/ag-charts-community/src/chart/mapping/prepareAxis.ts\nvar CARTESIAN_AXIS_POSITIONS2 = [\"top\", \"right\", \"bottom\", \"left\"];\nvar CARTESIAN_AXIS_TYPES2 = [\"category\", \"grouped-category\", \"number\", \"log\", \"time\"];\nfunction hasCartesianAxisPosition(axis) {\n  const allowedTypes = CARTESIAN_AXIS_TYPES2;\n  return allowedTypes.includes(axis.type);\n}\nfunction isCartesianAxisOptions(options) {\n  const allowedTypes = CARTESIAN_AXIS_TYPES2;\n  return allowedTypes.includes(options.type);\n}\nfunction isAxisPosition(position) {\n  const allowedPositions = CARTESIAN_AXIS_POSITIONS2;\n  return typeof position === \"string\" && allowedPositions.includes(position);\n}\nvar AxisPositionGuesser = class {\n  constructor() {\n    this.result = [];\n    this.valid = [];\n    this.invalid = [];\n  }\n  push(axis, options) {\n    const {\n      result,\n      valid,\n      invalid\n    } = this;\n    if (isCartesianAxisOptions(options)) {\n      if (isAxisPosition(options.position)) {\n        valid.push(axis);\n      } else {\n        invalid.push(axis);\n      }\n    }\n    result.push(axis);\n  }\n  guessInvalidPositions() {\n    const takenPosition = this.valid.filter(v => hasCartesianAxisPosition(v)).map(v => v.position).filter(v => v !== void 0);\n    const guesses = [\"top\", \"right\", \"bottom\", \"left\"];\n    for (const invalidAxis of this.invalid) {\n      let nextGuess = guesses.pop();\n      while (takenPosition.includes(nextGuess) && nextGuess !== void 0) {\n        nextGuess = guesses.pop();\n      }\n      if (nextGuess === void 0) break;\n      invalidAxis.position = nextGuess;\n    }\n    return this.result;\n  }\n};\n\n// packages/ag-charts-community/src/chart/polarChart.ts\nvar _PolarChart = class _PolarChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    this.padding = new Padding(40);\n    this.axisGroup.zIndex = 5 /* AXIS_FOREGROUND_ZINDEX */;\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_PolarChart.prototype, this, \"performLayout\").call(this);\n      const fullSeriesRect = shrinkRect.clone();\n      this.computeSeriesRect(shrinkRect);\n      yield this.computeCircle(shrinkRect);\n      this.axes.forEach(axis => axis.update());\n      this.hoverRect = shrinkRect;\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: {\n          width: this.scene.width,\n          height: this.scene.height\n        },\n        clipSeries: false,\n        series: {\n          rect: fullSeriesRect,\n          paddedRect: shrinkRect,\n          visible: true\n        },\n        axes: []\n      });\n      return shrinkRect;\n    });\n  }\n  updateAxes(cx, cy, radius) {\n    var _a, _b;\n    const angleAxis = this.axes.find(axis => axis.direction === \"x\" /* X */);\n    const radiusAxis = this.axes.find(axis => axis.direction === \"y\" /* Y */);\n    if (!(angleAxis instanceof PolarAxis) || !(radiusAxis instanceof PolarAxis)) {\n      return;\n    }\n    const angleScale = angleAxis.scale;\n    const angles = (_a = angleScale.ticks) == null ? void 0 : _a.call(angleScale).map(value => angleScale.convert(value));\n    const innerRadiusRatio = radiusAxis.innerRadiusRatio;\n    angleAxis.innerRadiusRatio = innerRadiusRatio;\n    (_b = angleAxis.computeRange) == null ? void 0 : _b.call(angleAxis);\n    angleAxis.gridLength = radius;\n    radiusAxis.gridAngles = angles;\n    radiusAxis.gridRange = angleAxis.range;\n    radiusAxis.range = [radius, radius * innerRadiusRatio];\n    [angleAxis, radiusAxis].forEach(axis => {\n      axis.translation.x = cx;\n      axis.translation.y = cy;\n      axis.calculateLayout();\n    });\n  }\n  computeSeriesRect(shrinkRect) {\n    const {\n      seriesArea: {\n        padding\n      }\n    } = this;\n    shrinkRect.shrink(padding.left, \"left\");\n    shrinkRect.shrink(padding.top, \"top\");\n    shrinkRect.shrink(padding.right, \"right\");\n    shrinkRect.shrink(padding.bottom, \"bottom\");\n    this.seriesRect = shrinkRect;\n    this.animationRect = shrinkRect;\n  }\n  computeCircle(seriesBox) {\n    return __async(this, null, function* () {\n      const polarSeries = this.series.filter(series => {\n        return series instanceof PolarSeries;\n      });\n      const polarAxes = this.axes.filter(axis => {\n        return axis instanceof PolarAxis;\n      });\n      const setSeriesCircle = (cx, cy, r) => {\n        this.updateAxes(cx, cy, r);\n        polarSeries.forEach(series => {\n          series.centerX = cx;\n          series.centerY = cy;\n          series.radius = r;\n        });\n        const pieSeries = polarSeries.filter(s => s instanceof PieSeries);\n        if (pieSeries.length > 1) {\n          const innerRadii = pieSeries.map(series => {\n            const innerRadius = series.getInnerRadius();\n            return {\n              series,\n              innerRadius\n            };\n          }).sort((a, b) => a.innerRadius - b.innerRadius);\n          innerRadii[innerRadii.length - 1].series.surroundingRadius = void 0;\n          for (let i = 0; i < innerRadii.length - 1; i++) {\n            innerRadii[i].series.surroundingRadius = innerRadii[i + 1].innerRadius;\n          }\n        }\n      };\n      const centerX = seriesBox.x + seriesBox.width / 2;\n      const centerY = seriesBox.y + seriesBox.height / 2;\n      const initialRadius = Math.max(0, Math.min(seriesBox.width, seriesBox.height) / 2);\n      let radius = initialRadius;\n      setSeriesCircle(centerX, centerY, radius);\n      const shake = (..._0) => __async(this, [..._0], function* ({\n        hideWhenNecessary = false\n      } = {}) {\n        const labelBoxes = [];\n        for (const series of [...polarAxes, ...polarSeries]) {\n          const box = yield series.computeLabelsBBox({\n            hideWhenNecessary\n          }, seriesBox);\n          if (box) {\n            labelBoxes.push(box);\n          }\n        }\n        if (labelBoxes.length === 0) {\n          setSeriesCircle(centerX, centerY, initialRadius);\n          return;\n        }\n        const labelBox = BBox.merge(labelBoxes);\n        const refined = this.refineCircle(labelBox, radius, seriesBox);\n        setSeriesCircle(refined.centerX, refined.centerY, refined.radius);\n        if (refined.radius === radius) {\n          return;\n        }\n        radius = refined.radius;\n      });\n      yield shake();\n      yield shake();\n      yield shake();\n      yield shake({\n        hideWhenNecessary: true\n      });\n      yield shake({\n        hideWhenNecessary: true\n      });\n      return {\n        radius,\n        centerX,\n        centerY\n      };\n    });\n  }\n  refineCircle(labelsBox, radius, seriesBox) {\n    const minCircleRatio = 0.5;\n    const circleLeft = -radius;\n    const circleTop = -radius;\n    const circleRight = radius;\n    const circleBottom = radius;\n    let padLeft = Math.max(0, circleLeft - labelsBox.x);\n    let padTop = Math.max(0, circleTop - labelsBox.y);\n    let padRight = Math.max(0, labelsBox.x + labelsBox.width - circleRight);\n    let padBottom = Math.max(0, labelsBox.y + labelsBox.height - circleBottom);\n    padLeft = padRight = Math.max(padLeft, padRight);\n    padTop = padBottom = Math.max(padTop, padBottom);\n    const availCircleWidth = seriesBox.width - padLeft - padRight;\n    const availCircleHeight = seriesBox.height - padTop - padBottom;\n    let newRadius = Math.min(availCircleWidth, availCircleHeight) / 2;\n    const minHorizontalRadius = minCircleRatio * seriesBox.width / 2;\n    const minVerticalRadius = minCircleRatio * seriesBox.height / 2;\n    const minRadius = Math.min(minHorizontalRadius, minVerticalRadius);\n    if (newRadius < minRadius) {\n      newRadius = minRadius;\n      const horizontalPadding = padLeft + padRight;\n      const verticalPadding = padTop + padBottom;\n      if (2 * newRadius + verticalPadding > seriesBox.height) {\n        const padHeight = seriesBox.height - 2 * newRadius;\n        if (Math.min(padTop, padBottom) * 2 > padHeight) {\n          padTop = padHeight / 2;\n          padBottom = padHeight / 2;\n        } else if (padTop > padBottom) {\n          padTop = padHeight - padBottom;\n        } else {\n          padBottom = padHeight - padTop;\n        }\n      }\n      if (2 * newRadius + horizontalPadding > seriesBox.width) {\n        const padWidth = seriesBox.width - 2 * newRadius;\n        if (Math.min(padLeft, padRight) * 2 > padWidth) {\n          padLeft = padWidth / 2;\n          padRight = padWidth / 2;\n        } else if (padLeft > padRight) {\n          padLeft = padWidth - padRight;\n        } else {\n          padRight = padWidth - padLeft;\n        }\n      }\n    }\n    const newWidth = padLeft + 2 * newRadius + padRight;\n    const newHeight = padTop + 2 * newRadius + padBottom;\n    return {\n      centerX: seriesBox.x + (seriesBox.width - newWidth) / 2 + padLeft + newRadius,\n      centerY: seriesBox.y + (seriesBox.height - newHeight) / 2 + padTop + newRadius,\n      radius: newRadius\n    };\n  }\n};\n_PolarChart.className = \"PolarChart\";\n_PolarChart.type = \"polar\";\nvar PolarChart = _PolarChart;\n\n// packages/ag-charts-community/src/chart/agChartV2.ts\nvar debug = Debug.create(true, \"opts\");\nfunction chartType(options) {\n  if (isAgCartesianChartOptions(options)) {\n    return \"cartesian\";\n  } else if (isAgPolarChartOptions(options)) {\n    return \"polar\";\n  } else if (isAgHierarchyChartOptions(options)) {\n    return \"hierarchy\";\n  }\n  throw new Error(`AG Chart - unknown type of chart for options with type: ${options.type}`);\n}\nvar _AgCharts = class _AgCharts {\n  static licenseCheck(options) {\n    var _a, _b, _c, _d;\n    if (this.licenseChecked) return;\n    this.licenseManager = (_b = (_a = enterpriseModule).licenseManager) == null ? void 0 : _b.call(_a, options);\n    (_c = this.licenseManager) == null ? void 0 : _c.setLicenseKey(this.licenseKey);\n    (_d = this.licenseManager) == null ? void 0 : _d.validateLicense();\n    this.licenseChecked = true;\n  }\n  static setLicenseKey(licenseKey) {\n    this.licenseKey = licenseKey;\n  }\n  /**\n   * Returns the `AgChartInstance` for a DOM node, if there is one.\n   */\n  static getInstance(element2) {\n    return AgChartsInternal.getInstance(element2);\n  }\n  /**\n   * Create a new `AgChartInstance` based upon the given configuration options.\n   */\n  static create(options) {\n    var _a, _b, _c, _d;\n    this.licenseCheck(options);\n    const chart = AgChartsInternal.createOrUpdate(options);\n    if ((_a = this.licenseManager) == null ? void 0 : _a.isDisplayWatermark()) {\n      (_d = (_c = enterpriseModule).injectWatermark) == null ? void 0 : _d.call(_c, (_b = options.document) != null ? _b : document, chart.chart.element, this.licenseManager.getWatermarkMessage());\n    }\n    return chart;\n  }\n  /**\n   * Update an existing `AgChartInstance`. Options provided should be complete and not\n   * partial.\n   *\n   * __NOTE__: As each call could trigger a chart redraw, multiple calls to update options in\n   * quick succession could result in undesirable flickering, so callers should batch up and/or\n   * debounce changes to avoid unintended partial update renderings.\n   */\n  static update(chart, options) {\n    if (!AgChartInstanceProxy.isInstance(chart)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.createOrUpdate(options, chart);\n  }\n  /**\n   * Update an existing `AgChartInstance` by applying a partial set of option changes.\n   *\n   * __NOTE__: As each call could trigger a chart redraw, each individual delta options update\n   * should leave the chart in a valid options state. Also, multiple calls to update options in\n   * quick succession could result in undesirable flickering, so callers should batch up and/or\n   * debounce changes to avoid unintended partial update renderings.\n   */\n  static updateDelta(chart, deltaOptions) {\n    if (!AgChartInstanceProxy.isInstance(chart)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.updateUserDelta(chart, deltaOptions);\n  }\n  /**\n   * Starts a browser-based image download for the given `AgChartInstance`.\n   */\n  static download(chart, options) {\n    if (!(chart instanceof AgChartInstanceProxy)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.download(chart, options);\n  }\n  /**\n   * Returns a base64-encoded image data URL for the given `AgChartInstance`.\n   */\n  static getImageDataURL(chart, options) {\n    if (!(chart instanceof AgChartInstanceProxy)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    return AgChartsInternal.getImageDataURL(chart, options);\n  }\n};\n_AgCharts.INVALID_CHART_REF_MESSAGE = \"AG Charts - invalid chart reference passed\";\n_AgCharts.licenseChecked = false;\nvar AgCharts = _AgCharts;\nvar AgChart = class _AgChart {\n  static warnDeprecated(memberName) {\n    const warnDeprecated = createDeprecationWarning();\n    warnDeprecated(`AgChart.${memberName}`, `Use AgCharts.${memberName} instead`);\n  }\n  static create(options) {\n    _AgChart.warnDeprecated(\"create\");\n    return AgCharts.create(options);\n  }\n  static update(chart, options) {\n    _AgChart.warnDeprecated(\"update\");\n    return AgCharts.update(chart, options);\n  }\n  static updateDelta(chart, deltaOptions) {\n    _AgChart.warnDeprecated(\"updateDelta\");\n    return AgCharts.updateDelta(chart, deltaOptions);\n  }\n  static download(chart, options) {\n    _AgChart.warnDeprecated(\"download\");\n    return AgCharts.download(chart, options);\n  }\n  static getImageDataURL(chart, options) {\n    _AgChart.warnDeprecated(\"getImageDataURL\");\n    return AgCharts.getImageDataURL(chart, options);\n  }\n};\nvar proxyInstances = /* @__PURE__ */new WeakMap();\nvar _AgChartsInternal = class _AgChartsInternal {\n  static getInstance(element2) {\n    const chart = Chart.getInstance(element2);\n    return chart != null ? proxyInstances.get(chart) : void 0;\n  }\n  static initialiseModules() {\n    if (_AgChartsInternal.initialised) return;\n    registerInbuiltModules();\n    setupModules();\n    _AgChartsInternal.initialised = true;\n  }\n  static createOrUpdate(userOptions, proxy) {\n    var _b;\n    _AgChartsInternal.initialiseModules();\n    debug(\">>> AgChartV2.createOrUpdate() user options\", userOptions);\n    const _a = userOptions,\n      {\n        overrideDevicePixelRatio,\n        document: document2,\n        window: userWindow\n      } = _a,\n      chartOptions = __objRest(_a, [\"overrideDevicePixelRatio\", \"document\", \"window\"]);\n    const specialOverrides = {\n      overrideDevicePixelRatio,\n      document: document2,\n      window: userWindow\n    };\n    const processedOptions = prepareOptions(chartOptions);\n    let chart = proxy == null ? void 0 : proxy.chart;\n    if (chart != null) {\n      proxyInstances.delete(chart);\n    }\n    if (chart == null || chartType(chartOptions) !== chartType(chart.processedOptions)) {\n      chart = _AgChartsInternal.createChartInstance(processedOptions, specialOverrides, chart);\n    }\n    if (proxy == null) {\n      proxy = new AgChartInstanceProxy(chart);\n    } else {\n      proxy.chart = chart;\n    }\n    proxyInstances.set(chart, proxy);\n    if (Debug.check() && typeof window !== \"undefined\") {\n      (_b = window.agChartInstances) != null ? _b : window.agChartInstances = {};\n      window.agChartInstances[chart.id] = chart;\n    }\n    const chartToUpdate = chart;\n    chartToUpdate.queuedUserOptions.push(chartOptions);\n    const dequeue = () => {\n      const queuedOptionsIdx = chartToUpdate.queuedUserOptions.indexOf(chartOptions);\n      chartToUpdate.queuedUserOptions.splice(0, queuedOptionsIdx);\n    };\n    chartToUpdate.requestFactoryUpdate(() => __async(this, null, function* () {\n      if (chartToUpdate.destroyed) return;\n      const deltaOptions = jsonDiff(chartToUpdate.processedOptions, processedOptions);\n      if (deltaOptions == null) {\n        dequeue();\n        return;\n      }\n      yield _AgChartsInternal.updateDelta(chartToUpdate, deltaOptions, chartOptions);\n      dequeue();\n    }));\n    return proxy;\n  }\n  static updateUserDelta(proxy, deltaOptions) {\n    var _a;\n    const {\n      chart,\n      chart: {\n        queuedUserOptions\n      }\n    } = proxy;\n    const lastUpdateOptions = (_a = queuedUserOptions[queuedUserOptions.length - 1]) != null ? _a : chart.userOptions;\n    const userOptions = jsonMerge([lastUpdateOptions, deltaOptions]);\n    debug(\">>> AgChartV2.updateUserDelta() user delta\", deltaOptions);\n    debug(\"AgChartV2.updateUserDelta() - base options\", lastUpdateOptions);\n    _AgChartsInternal.createOrUpdate(userOptions, proxy);\n  }\n  /**\n   * Returns the content of the current canvas as an image.\n   * @param opts The download options including `width` and `height` of the image as well as `fileName` and `fileFormat`.\n   */\n  static download(proxy, opts) {\n    const asyncDownload = () => __async(this, null, function* () {\n      const maybeClone = yield _AgChartsInternal.prepareResizedChart(proxy, opts);\n      const {\n        chart\n      } = maybeClone;\n      chart.scene.download(opts == null ? void 0 : opts.fileName, opts == null ? void 0 : opts.fileFormat);\n      if (maybeClone !== proxy) {\n        maybeClone.destroy();\n      }\n    });\n    asyncDownload().catch(e => Logger.errorOnce(e));\n  }\n  static getImageDataURL(proxy, opts) {\n    return __async(this, null, function* () {\n      const maybeClone = yield _AgChartsInternal.prepareResizedChart(proxy, opts);\n      const {\n        chart\n      } = maybeClone;\n      const result = chart.scene.canvas.getDataURL(opts == null ? void 0 : opts.fileFormat);\n      if (maybeClone !== proxy) {\n        maybeClone.destroy();\n      }\n      return result;\n    });\n  }\n  static prepareResizedChart(proxy, opts) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        chart\n      } = proxy;\n      let {\n        width,\n        height\n      } = opts != null ? opts : {};\n      const currentWidth = chart.width;\n      const currentHeight = chart.height;\n      const unchanged = width === void 0 && height === void 0 || chart.scene.canvas.pixelRatio === 1 && currentWidth === width && currentHeight === height;\n      if (unchanged) {\n        return proxy;\n      }\n      width != null ? width : width = currentWidth;\n      height != null ? height : height = currentHeight;\n      const options = __spreadProps(__spreadValues({}, chart.userOptions), {\n        container: document.createElement(\"div\"),\n        width,\n        height,\n        autoSize: false,\n        overrideDevicePixelRatio: 1\n      });\n      if (hasRegisteredEnterpriseModules()) {\n        (_a = options.animation) != null ? _a : options.animation = {};\n        options.animation.enabled = false;\n      }\n      const clonedChart = _AgChartsInternal.createOrUpdate(options);\n      yield clonedChart.chart.waitForUpdate();\n      return clonedChart;\n    });\n  }\n  static createChartInstance(options, specialOverrides, oldChart) {\n    const transferableResource = oldChart == null ? void 0 : oldChart.destroy({\n      keepTransferableResources: true\n    });\n    if (isAgCartesianChartOptions(options)) {\n      return new CartesianChart(specialOverrides, transferableResource);\n    } else if (isAgHierarchyChartOptions(options)) {\n      return new HierarchyChart(specialOverrides, transferableResource);\n    } else if (isAgPolarChartOptions(options)) {\n      return new PolarChart(specialOverrides, transferableResource);\n    }\n    throw new Error(`AG Charts - couldn't apply configuration, check options are correctly structured and series types are specified`);\n  }\n  static updateDelta(chart, processedOptions, userOptions) {\n    return __async(this, null, function* () {\n      var _a;\n      if (processedOptions.type == null) {\n        processedOptions = __spreadProps(__spreadValues({}, processedOptions), {\n          type: (_a = chart.processedOptions.type) != null ? _a : optionsType(processedOptions)\n        });\n      }\n      if (chart.destroyed) return;\n      debug(\"AgChartV2.updateDelta() - applying delta\", processedOptions);\n      applyChartOptions(chart, processedOptions, userOptions);\n    });\n  }\n};\n_AgChartsInternal.initialised = false;\nvar AgChartsInternal = _AgChartsInternal;\nfunction applyChartOptions(chart, processedOptions, userOptions) {\n  var _a, _b, _c;\n  const completeOptions = jsonMerge([(_a = chart.processedOptions) != null ? _a : {}, processedOptions], noDataCloneMergeOptions);\n  const modulesChanged = applyModules(chart, completeOptions);\n  const skip = [\"type\", \"data\", \"series\", \"listeners\", \"theme\", \"legend.listeners\"];\n  if (isAgCartesianChartOptions(processedOptions) || isAgPolarChartOptions(processedOptions)) {\n    skip.push(\"axes\");\n  } else if (isAgHierarchyChartOptions(processedOptions)) {} else {\n    throw new Error(`AG Charts - couldn't apply configuration, check type of options and chart: ${processedOptions[\"type\"]}`);\n  }\n  if (processedOptions.listeners) {\n    registerListeners(chart, processedOptions.listeners);\n  }\n  applyOptionValues(chart, chart.getModuleContext(), processedOptions, {\n    skip\n  });\n  let forceNodeDataRefresh = false;\n  let seriesRecreated = false;\n  if (processedOptions.series && processedOptions.series.length > 0) {\n    seriesRecreated = applySeries(chart, processedOptions);\n    forceNodeDataRefresh = true;\n  }\n  if (\"axes\" in completeOptions && Array.isArray(completeOptions.axes)) {\n    const axesPresent = applyAxes(chart, completeOptions, seriesRecreated);\n    if (axesPresent) {\n      forceNodeDataRefresh = true;\n    }\n  }\n  const seriesOpts = processedOptions.series;\n  const seriesDataUpdate = !!processedOptions.data || (seriesOpts == null ? void 0 : seriesOpts.some(s => s.data != null));\n  const legendKeys = getLegendKeys();\n  const optionsHaveLegend = Object.values(legendKeys).some(legendKey => processedOptions[legendKey] != null);\n  const otherRefreshUpdate = processedOptions.title != null && processedOptions.subtitle != null;\n  forceNodeDataRefresh = forceNodeDataRefresh || seriesDataUpdate || optionsHaveLegend || otherRefreshUpdate;\n  if (processedOptions.data) {\n    chart.data = processedOptions.data;\n  }\n  if ((_b = processedOptions.legend) == null ? void 0 : _b.listeners) {\n    Object.assign(chart.legend.listeners, processedOptions.legend.listeners);\n  }\n  if (processedOptions.listeners) {\n    chart.updateAllSeriesListeners();\n  }\n  chart.processedOptions = completeOptions;\n  chart.userOptions = jsonMerge([(_c = chart.userOptions) != null ? _c : {}, userOptions], noDataCloneMergeOptions);\n  const majorChange = forceNodeDataRefresh || modulesChanged;\n  const updateType = majorChange ? 1 /* PROCESS_DATA */ : 2 /* PERFORM_LAYOUT */;\n  debug(\"AgChartV2.applyChartOptions() - update type\", ChartUpdateType[updateType]);\n  chart.update(updateType, {\n    forceNodeDataRefresh,\n    newAnimationBatch: true\n  });\n}\nfunction applyModules(chart, options) {\n  const matchingChartType = ({\n    chartTypes\n  }) => chart instanceof CartesianChart && chartTypes.includes(\"cartesian\") || chart instanceof PolarChart && chartTypes.includes(\"polar\") || chart instanceof HierarchyChart && chartTypes.includes(\"hierarchy\");\n  let modulesChanged = false;\n  for (const module of REGISTERED_MODULES) {\n    if (module.type !== \"root\" && module.type !== \"legend\") {\n      continue;\n    }\n    const shouldBeEnabled = matchingChartType(module) && options[module.optionsKey] != null;\n    const isEnabled = chart.isModuleEnabled(module);\n    if (shouldBeEnabled === isEnabled) {\n      continue;\n    }\n    if (shouldBeEnabled) {\n      chart.addModule(module);\n      chart[module.optionsKey] = chart.modules.get(module.optionsKey);\n    } else {\n      chart.removeModule(module);\n      delete chart[module.optionsKey];\n    }\n    modulesChanged = true;\n  }\n  return modulesChanged;\n}\nfunction applySeries(chart, options) {\n  const optSeries = options.series;\n  if (!optSeries) {\n    return false;\n  }\n  const keysToConsider = [\"direction\", \"xKey\", \"yKey\", \"sizeKey\", \"angleKey\", \"stacked\", \"stackGroup\"];\n  let matchingTypes = chart.series.length === optSeries.length;\n  for (let i = 0; i < chart.series.length && matchingTypes; i++) {\n    matchingTypes && (matchingTypes = chart.series[i].type === optSeries[i].type);\n    for (const key of keysToConsider) {\n      matchingTypes && (matchingTypes = chart.series[i].properties[key] === optSeries[i][key]);\n    }\n  }\n  if (matchingTypes) {\n    chart.series.forEach((s, i) => {\n      var _a, _b, _c, _d;\n      const previousOpts = (_c = (_b = (_a = chart.processedOptions) == null ? void 0 : _a.series) == null ? void 0 : _b[i]) != null ? _c : {};\n      const seriesDiff = jsonDiff(previousOpts, (_d = optSeries[i]) != null ? _d : {});\n      if (!seriesDiff) {\n        return;\n      }\n      debug(`AgChartV2.applySeries() - applying series diff idx ${i}`, seriesDiff);\n      applySeriesValues(s, seriesDiff);\n      s.markNodeDataDirty();\n    });\n    return false;\n  }\n  debug(`AgChartV2.applySeries() - creating new series instances`);\n  chart.series = createSeries(chart, optSeries);\n  return true;\n}\nfunction applyAxes(chart, options, forceRecreate) {\n  const optAxes = options.axes;\n  if (!optAxes) {\n    return false;\n  }\n  const matchingTypes = !forceRecreate && chart.axes.length === optAxes.length && chart.axes.every((a, i) => a.type === optAxes[i].type);\n  if (matchingTypes) {\n    const oldOpts = chart.processedOptions;\n    const moduleContext = chart.getModuleContext();\n    if (isAgCartesianChartOptions(oldOpts)) {\n      chart.axes.forEach((a, i) => {\n        var _a, _b;\n        const previousOpts = (_b = (_a = oldOpts.axes) == null ? void 0 : _a[i]) != null ? _b : {};\n        const axisDiff = jsonDiff(previousOpts, optAxes[i]);\n        debug(`AgChartV2.applyAxes() - applying axis diff idx ${i}`, axisDiff);\n        const path = `axes[${i}]`;\n        const skip = [\"axes[].type\"];\n        applyOptionValues(a, moduleContext, axisDiff, {\n          path,\n          skip\n        });\n      });\n      return true;\n    }\n  }\n  chart.axes = createAxis(chart, optAxes);\n  return true;\n}\nfunction createSeries(chart, options) {\n  var _a;\n  const series = [];\n  const moduleContext = chart.getModuleContext();\n  for (const seriesOptions of options != null ? options : []) {\n    const type = (_a = seriesOptions.type) != null ? _a : \"unknown\";\n    if (isEnterpriseSeriesType(type) && !isEnterpriseSeriesTypeLoaded(type)) {\n      continue;\n    }\n    const seriesInstance = getSeries(type, moduleContext);\n    applySeriesOptionModules(seriesInstance, seriesOptions);\n    applySeriesValues(seriesInstance, seriesOptions);\n    series.push(seriesInstance);\n  }\n  return series;\n}\nfunction applySeriesOptionModules(series, options) {\n  const seriesOptionModules = REGISTERED_MODULES.filter(m => m.type === \"series-option\");\n  const moduleContext = series.createModuleContext();\n  const moduleMap = series.getModuleMap();\n  for (const module of seriesOptionModules) {\n    const supportedSeriesTypes = module.seriesTypes;\n    if (module.optionsKey in options && supportedSeriesTypes.includes(series.type)) {\n      moduleMap.addModule(module, module2 => new module2.instanceConstructor(moduleContext));\n      series[module.optionsKey] = moduleMap.getModule(module);\n    }\n  }\n}\nfunction createAxis(chart, options) {\n  const guesser = new AxisPositionGuesser();\n  const moduleContext = chart.getModuleContext();\n  const skip = [\"axes[].type\"];\n  let index = 0;\n  for (const axisOptions of options != null ? options : []) {\n    const axis = getAxis(axisOptions.type, moduleContext);\n    const path = `axes[${index++}]`;\n    applyAxisModules(axis, axisOptions);\n    applyOptionValues(axis, moduleContext, axisOptions, {\n      path,\n      skip\n    });\n    guesser.push(axis, axisOptions);\n  }\n  return guesser.guessInvalidPositions();\n}\nfunction applyAxisModules(axis, options) {\n  let modulesChanged = false;\n  const rootModules = REGISTERED_MODULES.filter(m => m.type === \"axis-option\");\n  const moduleContext = axis.createModuleContext();\n  for (const module of rootModules) {\n    const shouldBeEnabled = options[module.optionsKey] != null;\n    const moduleMap = axis.getModuleMap();\n    const isEnabled = moduleMap.isModuleEnabled(module);\n    if (shouldBeEnabled === isEnabled) continue;\n    modulesChanged = true;\n    if (shouldBeEnabled) {\n      moduleMap.addModule(module, module2 => new module2.instanceConstructor(moduleContext));\n      axis[module.optionsKey] = moduleMap.getModule(module);\n    } else {\n      moduleMap.removeModule(module);\n      delete axis[module.optionsKey];\n    }\n  }\n  return modulesChanged;\n}\nfunction registerListeners(source, listeners) {\n  source.clearEventListeners();\n  const entries = Object.entries(listeners != null ? listeners : {});\n  for (const [property, listener] of entries) {\n    if (typeof listener !== \"function\") continue;\n    source.addEventListener(property, listener);\n  }\n}\nfunction applyOptionValues(target, moduleContext, options, {\n  skip,\n  path\n} = {}) {\n  const applyOpts = __spreadValues(__spreadProps(__spreadValues({}, getJsonApplyOptions(moduleContext)), {\n    skip\n  }), path ? {\n    path\n  } : {});\n  return jsonApply(target, options, applyOpts);\n}\nfunction applySeriesValues(target, options) {\n  const moduleMap = target.getModuleMap();\n  const _a = options,\n    {\n      type,\n      data,\n      errorBar,\n      listeners,\n      seriesGrouping\n    } = _a,\n    seriesOptions = __objRest(_a, [\"type\", \"data\", \"errorBar\", \"listeners\", \"seriesGrouping\"]);\n  target.properties.set(seriesOptions);\n  if (\"data\" in options) {\n    target.data = options.data;\n  }\n  if (\"errorBar\" in options && moduleMap.isModuleEnabled(\"errorBar\")) {\n    moduleMap.getModule(\"errorBar\").properties.set(options.errorBar);\n  }\n  if ((options == null ? void 0 : options.listeners) != null) {\n    registerListeners(target, options.listeners);\n  }\n  if (\"seriesGrouping\" in options) {\n    target.seriesGrouping = seriesGrouping ? Object.freeze(__spreadValues(__spreadValues({}, target.seriesGrouping), seriesGrouping)) : void 0;\n  }\n}\n\n// packages/ag-charts-community/src/version.ts\nvar VERSION = \"9.0.2\";\n\n// packages/ag-charts-community/src/integrated-charts-theme.ts\nvar integrated_charts_theme_exports = {};\n__export(integrated_charts_theme_exports, {\n  BOTTOM: () => BOTTOM,\n  CARTESIAN_AXIS_POSITIONS: () => CARTESIAN_AXIS_POSITIONS,\n  CARTESIAN_AXIS_TYPES: () => CARTESIAN_AXIS_TYPES,\n  CIRCLE: () => CIRCLE,\n  ChartTheme: () => ChartTheme,\n  DEFAULT_AXIS_GRID_COLOUR: () => DEFAULT_AXIS_GRID_COLOUR,\n  DEFAULT_AXIS_LINE_COLOUR: () => DEFAULT_AXIS_LINE_COLOUR,\n  DEFAULT_BACKGROUND_COLOUR: () => DEFAULT_BACKGROUND_COLOUR,\n  DEFAULT_CROSS_LINES_COLOUR: () => DEFAULT_CROSS_LINES_COLOUR,\n  DEFAULT_DIVERGING_SERIES_COLOUR_RANGE: () => DEFAULT_DIVERGING_SERIES_COLOUR_RANGE,\n  DEFAULT_FONT_FAMILY: () => DEFAULT_FONT_FAMILY,\n  DEFAULT_HIERARCHY_FILLS: () => DEFAULT_HIERARCHY_FILLS,\n  DEFAULT_HIERARCHY_STROKES: () => DEFAULT_HIERARCHY_STROKES,\n  DEFAULT_INSIDE_SERIES_LABEL_COLOUR: () => DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n  DEFAULT_INVERTED_LABEL_COLOUR: () => DEFAULT_INVERTED_LABEL_COLOUR,\n  DEFAULT_LABEL_COLOUR: () => DEFAULT_LABEL_COLOUR,\n  DEFAULT_MUTED_LABEL_COLOUR: () => DEFAULT_MUTED_LABEL_COLOUR,\n  DEFAULT_POLAR_SERIES_STROKE: () => DEFAULT_POLAR_SERIES_STROKE,\n  DEFAULT_SHADOW_COLOUR: () => DEFAULT_SHADOW_COLOUR,\n  DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE: () => DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n  DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS: () => DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n  DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS: () => DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n  DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS: () => DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n  EXTENDS_AXES_DEFAULTS: () => EXTENDS_AXES_DEFAULTS,\n  EXTENDS_AXES_GRID_LINE_DEFAULTS: () => EXTENDS_AXES_GRID_LINE_DEFAULTS,\n  EXTENDS_AXES_LABEL_DEFAULTS: () => EXTENDS_AXES_LABEL_DEFAULTS,\n  EXTENDS_AXES_LINE_DEFAULTS: () => EXTENDS_AXES_LINE_DEFAULTS,\n  EXTENDS_AXES_TICK_DEFAULTS: () => EXTENDS_AXES_TICK_DEFAULTS,\n  EXTENDS_CARTESIAN_MARKER_DEFAULTS: () => EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n  EXTENDS_CHART_DEFAULTS: () => EXTENDS_CHART_DEFAULTS,\n  EXTENDS_LEGEND_DEFAULTS: () => EXTENDS_LEGEND_DEFAULTS,\n  EXTENDS_LEGEND_ITEM_DEFAULTS: () => EXTENDS_LEGEND_ITEM_DEFAULTS,\n  EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS: () => EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS,\n  EXTENDS_SERIES_DEFAULTS: () => EXTENDS_SERIES_DEFAULTS,\n  FONT_SIZE: () => FONT_SIZE,\n  FONT_WEIGHT: () => FONT_WEIGHT2,\n  OVERRIDE_SERIES_LABEL_DEFAULTS: () => OVERRIDE_SERIES_LABEL_DEFAULTS,\n  POLAR_AXIS_TYPES: () => POLAR_AXIS_TYPES,\n  getChartTheme: () => getChartTheme,\n  themes: () => themes2\n});\nvar themes2 = Object.entries(themes).reduce((obj, [name, factory]) => {\n  obj[name] = factory();\n  return obj;\n}, {});\n\n// packages/ag-charts-community/src/sparklines-scale.ts\nvar sparklines_scale_exports = {};\n__export(sparklines_scale_exports, {\n  BandScale: () => BandScale,\n  ColorScale: () => ColorScale,\n  ContinuousScale: () => ContinuousScale,\n  Invalidating: () => Invalidating,\n  LinearScale: () => LinearScale,\n  TimeScale: () => TimeScale\n});\nexport { AgChart, AgCharts, AgErrorBarSupportedSeriesTypes, Marker, VERSION, module_support_exports as _ModuleSupport, sparklines_scale_exports as _Scale, integrated_charts_scene_exports as _Scene, integrated_charts_theme_exports as _Theme, sparklines_util_exports as _Util, __FORCE_MODULE_DETECTION, time_exports as time };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__reflectGet","Reflect","get","__knownSymbol","name","symbol","Symbol","for","__pow","Math","pow","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","__export","all","__decorateClass","decorators","kind","result","i","length","decorator","__superGet","cls","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","x","done","then","apply","__await","promise","isYieldStar","__yieldStar","isAwait","method","it","k","v","TypeError","AgErrorBarSupportedSeriesTypes","__FORCE_MODULE_DETECTION","time_exports","day","friday","hour","millisecond","minute","monday","month","saturday","second","sunday","thursday","tuesday","utcDay","utcHour","utcMinute","utcMonth","utcYear","wednesday","year","TimeInterval","constructor","_encode","_decode","_rangeCallback","floor","date","d","Date","ceil","Number","range","start","stop","extend","_a","rangeCallback","e0","e1","range3","push","CountableTimeInterval","getOffset","snapTo","s","every","options","offset4","initialOffset","encode13","decode13","encoded","encode","getTime","decode","millisecond_default","epochYear","getFullYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","offset","getTimezoneOffset","encode2","decode2","second_default","offset2","encode3","decode3","minute_default","offset3","encode4","decode4","hour_default","encode5","tzOffsetMs","decode5","setDate","getDate","day_default","weekday","weekStart","thursday2","dayShift","week_default","encode6","getMonth","decode6","year2","month2","month_default","encode7","decode7","setFullYear","setMonth","setHours","year_default","encode8","decode8","encode9","decode9","encode10","decode10","setUTCDate","getUTCDate","setUTCHours","encode11","getUTCFullYear","getUTCMonth","decode11","UTC","encode12","decode12","setUTCFullYear","setUTCMonth","enterpriseModule","isEnterprise","BaseModuleInstance","destroyFns","destroy","destroyFn","REGISTERED_MODULES","registerModule","module","otherModule","find","other","type","optionsKey","identifier","packageType","index","splice","hasRegisteredEnterpriseModules","some","m","MODULE_CONFLICTS","Map","registerModuleConflicts","targets","set","extent","values","min","Infinity","max","extent2","isFinite","normalisedExtent","normalisedExtentWithMetadata","clipped","NaN","isNaN","arraysEqual","Array","isArray","toArray","unique","array","from","Set","doOnceFlags","doOnce","func","Logger","log","logContent","console","warn","message","error","table","warnOnce","errorOnce","windowValue","WINDOW","window","LONG_TIME_PERIOD_THRESHOLD","timeOfLastLog","now","logTimeGap","timeSinceLastLog","prettyDuration","toFixed","Debug","create","debugSelectors","check","chartDebug","selector","includes","BREAK_TRANSFORM_CHAIN","CONFIG_KEY","initialiseConfig","propertyKeyOrSymbol","config","propertyKey","toString","valuesMap","WeakMap","setters","getters","descriptor","prevSet","prevGet","getter","transformFn","setter","oldValue","f","addTransformToInstanceProperty","setTransform","getTransform","configMetadata","unshift","assign","isDecoratedObject","listDecoratedProperties","add","flatMap","configMap","keys","extractDecoratedProperties","reduce","extractDecoratedPropertyMetadata","hasOwn","createDeprecationWarning","msg","filter","Boolean","join","Deprecated","opts","warnDeprecated","def","default","_","DeprecatedAndRenamedTo","newPropName","mapValue","RedrawType","RedrawType2","functionConstructorAvailable","Function","STRING_FUNCTION_USEABLE","SceneChangeDetection","changeCb","convertor","privateKey","prepareFastGetSet","prepareSlowGetSet","redraw","checkDirtyOnAssignment","setterJs","getterJs","markDirty","markDirtyTransform","_dirtyPath","_dirtyFont","_dirty","ChangeDetectable","_source","markClean","_opts","isDirty","isDefined","val","isBoolean","isDate","isValidDate","isFunction","isObject","isObjectLike","isPlainObject","isString","isNumber","isFiniteNumber","isHtmlElement","HTMLElement","BaseProperties","className","properties","has","self","isProperties","PropertiesArray","reset","delete","unknownKey","isValid","optional","toJson","object","_PropertiesArray","itemFactory","CLASS_INSTANCE_TYPE","jsonDiff","allKeys","diff2","jsonClone","map","entries","DELETE","NOT_SPECIFIED","jsonMerge","json","avoidDeepClone","jsonTypes","classify","finalValue","props","r","n","concat","nextProp","j","lastValue","types","t","jsonApply","params","_b","_c","path","matcherPath","replace","skip","constructors","constructedArrays","allowedTypes","idx","Error","targetAny","targetType","property","propertyMatcherPath","newValue","propertyPath","targetClass","currentValue","ctr","currentValueType","newValueType","allowableTypes","newValueArray","idx2","jsonWalk","visit","jsons","forEach","node","keyMapper","data","dataObject","twoPi","PI","normalizeAngle360","radians","normalizeAngle360Inclusive","normalizeAngle180","toRadians","degrees","toDegrees","angleBetween","angle0","angle1","Invalidating","mappedProperty","String","invalid","clamp","BandScale","interval","ordinalRange","_domain","_bandwidth","_step","_rawBandwidth","_paddingInner","_paddingOuter","round","refresh","update","domain","ticks","abs","convert","invert","position","findIndex","p","bandwidth","rawBandwidth","padding","paddingInner","paddingOuter","count2","round3","r0","r1","width","rawStep","fullBandWidth","x0","bw","clamp2","clampArray","isEqual","epsilon2","isNegative","sign","is","isReal","decimals","fractionOrSignificantDigits","power","LN10","toReal","mod","countFractionDigits","maxFractionDigits","decimal","srgbToLinear","srgbFromLinear","_Color","g","validColorString","str","parseHex","stringToRgba","nameToHex","toLowerCase","fromString","fromHexString","hex","fromRgbaString","tryParseFromString","fromArray","input","slice","parts","parseInt","split","po","pc","c","contents","substring","rgba","part","parseFloat","arr","fromHSB","h","alpha","rgb","HSBtoRGB","fromHSL","l","HSLtoRGB","fromOKLCH","OKLCHtoRGB","padHex","toHexString","toRgbaString","fractionDigits","components","toHSB","RGBtoHSB","RGBtoOKLCH","LSRGB0","LSRGB1","LSRGB2","LMS0","cbrt","LMS1","LMS2","OKLAB0","OKLAB1","OKLAB2","hue","atan2","OKLCH0","OKLCH1","hypot","OKLCH2","cos","sin","SRGB0","SRGB1","SRGB2","RGBtoHSL","delta","q","hueToRgb","S","H","rc","gc","bc","B","derive","hueShift","saturationFactor","brightnessFactor","opacityFactor","hsb","brighter","darker","interpolate","color","c0","c1","y","didDebug","freeze","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","transparent","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","Validate","predicate","context","cleanKey","targetName","stringify","getPredicateMessage","AND","predicates","messages","predicateWithMessage","ctx","OR","getPredicateMessageMapper","OBJECT","attachObjectRestrictions","BOOLEAN","FUNCTION","STRING","NUMBER","attachNumberRestrictions","NAN","POSITIVE_NUMBER","restrict","RATIO","DEGREE","NUMBER_OR_NAN","ARRAY","attachArrayRestrictions","ARRAY_OF","item","arrayMessage","isComparable","LESS_THAN","otherField","GREATER_THAN","DATE","DATE_OR_DATETIME_MS","colorMessage","COLOR_STRING","COLOR_STRING_ARRAY","BOOLEAN_ARRAY","NUMBER_ARRAY","STRING_ARRAY","DATE_ARRAY","OBJECT_ARRAY","LINE_CAP","UNION","LINE_JOIN","LINE_DASH","POSITION","FONT_STYLE","FONT_WEIGHT","TEXT_WRAP","TEXT_ALIGN","VERTICAL_ALIGN","OVERFLOW_STRATEGY","DIRECTION","PLACEMENT","INTERACTION_RANGE","joinUnionOptions","MIN_SPACING","MAX_SPACING","option","pop","minLength","hasMin","hasMax","objectType","isInstanceOf","JSON","ChartAxisDirection","ChartAxisDirection2","ID_MAP","resetIds","createId","instance","nextId","nearestSquared","point","objects","maxDistanceSquared","nearest","distanceSquared","thisDistance","nearestSquaredInContainer","container","tpoint","transformPoint","child","children","_BBox","height","clone","equals","containsPoint","collidesBBox","isInfinite","dx","dy","nearestBox","boxes","shrink","amount","pos","amt","grow","paddingCopy","merge","left","top","right","bottom","box","zero","BBox","_Matrix","elements","setElements","identity","AxB","A","C","multiplySelf","multiply","preMultiplySelf","inverse","el","rD","inverseTo","invertSelf","transformBBox","bbox","xx","xy","yx","yy","h_w","h_h","cx","cy","w","toContext","transform","flyweight","sourceMatrix","updateTransformMatrix","matrix","scalingX","scalingY","rotation","translationX","translationY","bbcx","bbcy","sx","sy","scx","scy","scalingCenterX","scalingCenterY","rcx","rcy","rotationCenterX","rotationCenterY","tx","ty","tx4","ty4","fromContext","domMatrix","Matrix","PointerEvents","PointerEvents2","zIndexChangedCallback","o","parent","dirtyZIndex","zIndexChanged","_Node","isVirtual","tag","serialNumber","_nextSerialNumber","id","isContainerNode","_virtualChildren","_children","childSet","inverseMatrix","dirtyTransform","visible","zIndex","zIndexSubOrder","pointerEvents","datum","_datum","_parent","previousDatum","_previousDatum","_setLayerManager","_layerManager","_debug","debug","layerManager","virtualChildren","hasVirtualChildren","setProperties","styles","pickKeys","append","nodes","appendChild","removeChild","calculateCumulativeMatrix","computeTransformMatrix","inverseTransformPoint","inverseTransformBBox","_x","_y","pickNode","computeTransformedBBox","hit","findNodes","childResult","computeBBox","render","renderCtx","stats","nodesRendered","clearBBox","topLeft","bottomRight","clearRect","parentType","dirty","force","recursive","visibilityChanged","nodeCount","dirtyCount","visibleCount","countChild","count","childCount","childVisibleCount","childDirtyCount","Node","hasConstrainedCanvasMemory","navigator","iPhoneOSMatch","userAgent","match","versionString","major","minor","_HdpiCanvas","_enabled","_pixelRatio","_width","_height","document","document2","window2","domLayer","overrideDevicePixelRatio","element","createElement","realContext","getContext","imageSource","canvas","style","userSelect","display","opacity","setPixelRatio","resize","_container","remove","enabled","parentNode","snapshot","clear","save","resetTransform","restore","toImage","img","src","getDataURL","toDataURL","download","fileName","fileFormat","trim","dataUrl","href","body","click","pixelRatio","ratio","devicePixelRatio","overrideScale","pixelated","imageRendering","element2","textMeasuringContext","_textMeasuringContext","svgText","_svgText","xmlns","svg","createElementNS","setAttribute","classList","visibility","_has","isChrome","isFirefox","isSafari","textMetrics","measureText","actualBoundingBoxDescent","text","font","textBaseline","textAlign","getTextSize","metrics","actualBoundingBoxAscent","measureSvgText","cache","textSizeCache","fontCache","size2","textContent","getBBox","size","scale2","depth","overrides","$save","$restore","$setTransform","verifyDepthZero","globalThis","HdpiCanvas","Gradient","stops","LinearGradient","arguments","angle","createGradient","angleOffset","diagonal","sqrt","diagonalAngle","quarteredAngle","gradient","createLinearGradient","addColorStop","LINEAR_GRADIENT_REGEXP","_Shape","fillOpacity","strokeOpacity","fill","defaultStyles","stroke","strokeWidth","lineDash","lineDashOffset","lineCap","lineJoin","fillShadow","restoreOwnStyles","getOwnPropertyNames","updateGradient","linearGradientMatch","startsWith","exec","colors","colorsPart","colorRegex","align","alignedStart","fillStroke","renderFill","renderStroke","globalAlpha","applyFill","applyFillAlpha","applyShadow","shadowColor","fillStyle","shadowOffsetX","xOffset","shadowOffsetY","yOffset","shadowBlur","blur","strokeStyle","lineWidth","setLineDash","isPointInPath","Shape","ellipsis","SceneFontChangeDetection","_Text","lines","fontSize","fontFamily","lineHeight","_setLines","splitText","_font","getFont","getPreciseBBox","getApproximateBBox","getLineHeight","line","fontBoundingBoxAscent","emHeightAscent","fontBoundingBoxDescent","emHeightDescent","forceRender","nodesSkipped","renderLines","fillText","strokeText","renderCallback","lineHeights","totalHeight","offsetY","getVerticalOffset","wrapLines","maxWidth","maxHeight","textProps","wrapping","overflow","canOverflow","measurer","createTextMeasurer","truncated","text2","truncated2","truncateLine","wrappedLines","cumulativeHeight","wrappedLine","wrapLine","wrap","initialSize","words","wrapResult","wrapLineSequentially","wordsBrokenOrTruncated","linesTruncated","linesCount","balanced","wrapLineBalanced","wrappedText","ln","breakWord","word","firstLineWidth","hyphens","isPunctuationAt","punctuationMarks","breaks","partWidth","limit","ellipsisMode","trimEnd","ellipsisWidth","trunc","truncWidth","defaultLineHeightRatio","hyphenate","spaceWidth","currentLine","getReturnValue","truncateLastLine","lastLine","addNewLine","expectedHeight","wordWidth","expectedSpaceWidth","expectedLineWidth","availWidth","totalWordsWidth","sum2","totalSpaceWidth","averageLineWidth","newLine","setFont","fontStyle","fontWeight","setAlign","Text","getLineWidth","fontProps","baselineDistance","actualBoundingBoxLeft","firstLineHeight","lineSize","ProxyProperty","proxyProperties","getTarget","ProxyOnWrite","proxyProperty","ProxyPropertyOnWrite","childName","childProperty","ActionOnSet","newValueFn","oldValueFn","changeValue","changeValueFn","injectStyle","cssStyle","styleElement","innerHTML","head","insertBefore","querySelector","DEFAULT_TOOLTIP_CLASS","DEFAULT_TOOLTIP_DARK_CLASS","defaultTooltipCss","toTooltipHtml","defaults","content","title","backgroundColor","titleHtml","contentHtml","TooltipPosition","_Tooltip","canvasElement","enableInteraction","showArrow","class","lastClass","delay","lastVisibilityChange","showTimeout","_showArrow","tooltipRoot","IntersectionObserver","observer","entry","intersectionRatio","toggle","root","observe","tooltipDocuments","unobserve","isVisible","contains","updateClass","addCustomClass","newClass","wasVisible","nowVisible","timeSinceLastVisibilityChangeMs","toggleClass","include","animatedMoveThresholdMs","thrashingThresholdMs","noAnimation","updateWrapping","wrappingOptions","always","never","show","meta","html","instantly","_d","_e","_f","_g","low","actual","high","canvasRect","getBoundingClientRect","naiveLeft","offsetX","clientWidth","naiveTop","clientHeight","windowBounds","getWindowBoundingBox","maxLeft","maxTop","constrained","defaultShowArrow","updateShowArrow","setTimeout","innerWidth","innerHeight","clearTimeout","pointerLeftOntoTooltip","event","sourceEvent","relatedTarget","classes","classListContains","Tooltip","Caption","registerInteraction","moduleCtx","interactionManager","addListener","handleMouseMove","computeTextWrap","containerWidth","containerHeight","pageX","pageY","pointerInsideCaption","tooltipManager","removeTooltip","consume","updateTooltip","SMALL_PADDING","LARGE_PADDING","AxisTitle","spacing","JSON_APPLY_PLUGINS","assignJsonApplyConstructedArray","ctor","JSON_APPLY_OPTIONS","getJsonApplyOptions","CaptionWithContext","subtitle","footnote","_ContinuousScale","nice","tickCount","defaultTickCount","minTickCount","maxTickCount","niceDomain","defaultClampMode","transformInvert","calcBandwidth","smallestInterval","getDomain","maxRange","intervals","maxBands","bands","fromDomain","clampMode","d0","d1","d2","isReversed","rMin","rMax","toDomain","getPixelRange","sort","isDenseInterval","availableRange","defaultMaxTickCount","ContinuousScale","ascendingStringNumberUndefined","localeCompare","compoundAscending","comparator","toLiteral","_Group","lastBBox","layer","moveLayer","isLayer","scene","removeLayer","getComputedOpacity","getVisibility","addLayer","debug2","clipRect","clipBBox","resized","canvasCtxTransform","isChildDirty","isChildLayerDirty","group","currentBBox","counts","layersSkipped","groupVisible","ctxTransform","clipCtx","sortChildren","renderContextChanged","childRenderContext","skipped","layersRendered","beginPath","moveTo","lineTo","closePath","clip","setClipRectInGroupCoordinateSpace","Group","Range","x1","y1","x2","y2","startLine","endLine","isRange","fillActive","strokeActive","Label","calculateLabelRotation","parallelFlipRotation","regularFlipRotation","configuredRotation","parallelFlipFlag","regularFlipFlag","defaultRotation","parallel","getLabelSpacing","minSpacing","rotated","getTextBaseline","labelRotation","sideFlag","getTextAlign","labelAutoRotation","labelRotated","labelAutoRotated","alignFlag","calculateLabelBBox","labelX","labelY","labelMatrix","translatedBBox","label","Layers","Layers2","integrated_charts_scene_exports","Arc","Circle","Diamond","DropShadow","Image","Line","LinearGradientFill","LinearScale","Marker","Path","Path2D","Rect","Scene","ScenePathChangeDetection","Sector","Selection","Square","Triangle","easing","easing_exports","getMarker","motion","fromToMotion_exports","FROM_TO_MIXINS","NODE_UPDATE_PHASES","fromToMotion","staticFromToMotion","zipObject","zipped","interpolateNumber","interpolateColor","easeIn","easeInOut","easeInOutQuad","easeInQuad","easeOut","easeOutQuad","inverseEaseOut","linear","asin","QUICK_TRANSITION","INITIAL_LOAD","animationDuration","animationDelay","REMOVE_PHASE","UPDATE_PHASE","ADD_PHASE","LABEL_PHASE","RepeatType","RepeatType2","isNodeArray","deconstructSelectionsOrNodes","selectionsOrNodes","selections","Animation","elapsed","iteration","isPlaying","isReverse","_h","_i","_j","groupId","autoplay","duration","ease","repeat","repeatType","onComplete","onPlay","onStop","onRepeat","onUpdate","createInterpolator","to","play","pause","deltaState","time","interpolateValue","interpolatorEntries","interpolator","added","updated","removed","unknown","subId","animationManager","fns","getDatumId","defaultDuration","fromFn","toFn","intermediateFn","ids","processNodes","liveNodes","nodes2","prevFromProps","liveNodeIndex","nodeIndex","isLive","last","lastLive","prev","prevLive","nextLive","animationId","stopByAnimationId","status","calculateStatus","finish","toDelay","toDuration","toStart","toFinish","animate","selectionIndex","selection","isGarbage","cleanup","extraOpts","resetMotion_exports","resetMotion","propsFn","HdpiOffscreenCanvas","OffscreenCanvas","transferToImageBitmap","isSupported","close","advancedCompositeIdentifier","domCompositeIdentifier","layers","_nextZIndex","_nextLayerId","_root","mode","pendingSize","lessThanZero","nan","unchanged","layeredModes","advLayer","newLayer","sortLayers","domCanvases","newLayerIndex","lastLayer","insertAdjacentElement","newZIndex","newZIndexSubOrder","strip","debugSplitTimes","performance","extraDebugStats","redrawType","tree","buildTree","debugStats","debugNodes","canvasCleared","dirtyTree","paths","buildDirtyTree","drawImage","debugSceneNodeHighlight","renderCtxStats","end","pct","rendered","total","start2","end2","lastSplit","splits","extras","detailedStats","statsSize","width2","height2","fillRect","stat","regexpPredicate","matcher","test","stringPredicate","sceneNodeHighlight","strokeRect","virtualParentDirty","virtualParent","childTree","treeNodeName","childNode","selectedKey","childrenDirtyTree","_a2","_Selection","classOrFactory","autoCleanup","garbageBin","_nodesMap","_nodes","nodeFactory","isPrototypeOf","select","garbageCollection","selectAll","results","traverse","selectByClass","Class","node2","selectByTag","createNode","initializer","dataMap","datumId","newDatum","maxLength","hasGarbage","each","iterate","iterator","linearRoot","quadraticRoots","D","roots","t1","t2","cubicRoots","Q","R","third","T","Im","theta","acos","thirdA","twoSqrtQ","t3","segmentIntersection","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","ua","ub","cubicSegmentIntersections","px1","py1","px2","py2","px3","py3","px4","py4","intersections","bx","bezierCoefficients","by","tt","ttt","P1","P2","P3","P4","arcIntersections","startAngle","endAngle","counterClockwise","y0","i1x","i2x","isXInsideLine","a1","a2","a3","previousCommands","previousParams","previousClosedPath","commands","_closedPath","draw","command","bezierCurveTo","arc","rect","roundRect","radii","sAngle","eAngle","antiClockwise","endX","endY","cubicCurveTo","cx1","cy1","cx2","cy2","closedPath","trackChanges","cn","ox","oy","px","py","intersectionCount","ci","pi","getPoints","coords","clipScalingX","clipScalingY","dirtyPath","checkPathDirty","clipPath","isDirtyPath","updatePath","op","clipScale","scale","clipMode","centerX","centerY","radius","fullPie","convertColorStringToOklcha","interpolateOklch","xH","yH","deltaH","ColorScale","parsedRange","b2","direction","_mask","mask","newMask","pixelLength","maskBbox","colorScale","i0","i1","epsilon","cornerEdges","leadingEdge","trailingEdge","leadingInset","trailingInset","cornerRadius","leadingClipped","trailingClipped","leading0","leading1","trailing0","trailing1","drawCorner","move","insetCornerRadiusRect","cornerRadii","cornerRadiusBbox","topLeftCornerRadius","topRight","topRightCornerRadius","bottomRightCornerRadius","bottomLeft","bottomLeftCornerRadius","maxVerticalCornerRadius","maxHorizontalCornerRadius","borderScale","drawTopLeftCorner","drawTopRightCorner","drawBottomRightCorner","drawBottomLeftCorner","topLeftCorner","topRightCorner","bottomRightCorner","bottomLeftCorner","didMove","borderPath","crisp","lastUpdatePathStrokeWidth","effectiveStrokeWidth","microPixelEffectOpacity","pixelSize","lx","borderClipPath","ly","halfStrokeWidth","adjustedCornerRadiusBbox","borderActive","isPointInSector","sector","innerRadius","outerRadius","lineCollidesSector","outerStart","outerEnd","innerStart","innerEnd","boxCollidesSector","inset","sweep","innerAngleOffset","outerAngleOffset","outerAngleExceeded","innerAngleExceeded","midAngle","optionalGroup","nonCapturingGroup","formatRegEx","comma","precision","tilde","RegExp","surroundedRegEx","prefix","suffix","parseFormatter","formatter","surrounded","format","precisionIsNaN","formatBody","decimalTypes","integerTypes","formatterPrecision","removeTrailingZeros","insertSeparator","addSign","getSIPrefix","addPadding","absFloor","fromCharCode","X","toUpperCase","toExponential","E","F","log10","G","getSIPrefixPower","%","numString","separator","dotIndex","integerChars","fractionalPart","siPrefixes","minSIPrefix","maxSIPrefix","minusSign","num","signType","plusSign","padStart","padEnd","padWidth","padLeft","padRight","tickFormat","digits","exp","createNumericTicks","takingValues","ticks_default","minCount","maxCount","tickStep","tickMultipliers","multiplier","isWithinBounds","diffCount","singleTickDomain","roundStart","roundStop","fractionalDigits","updateNiceDomain","getTickStep","maxAttempts","prev0","prev1","specifier","half","applyPath","moves","mx","my","_Cross","Cross","_Diamond","Heart","rad","degree","_Plus","Plus","hs","_Triangle","MARKER_SHAPES","circle","cross","diamond","heart","plus","square","triangle","MARKER_SUPPORTED_SHAPES","isMarkerShape","shape","sourceImage","image","isString2","isStringObject","isDate2","isDiscrete","isContinuous","isNumberObject","isNumber2","valueOf","isDate3","checkDatum","isContinuousScale","MATCHING_CROSSLINE_TYPE","validateCrossLineValues","lineCrossLine","rangeCrossLine","isContinuous2","validStart","validEnd","horizontalCrosslineTranslationDirections","xTranslationDirection","yTranslationDirection","inside","insideLeft","insideRight","insideTop","insideBottom","insideTopLeft","insideBottomLeft","insideTopRight","insideBottomRight","verticalCrossLineTranslationDirections","calculateLabelTranslation","yDirection","crossLineTranslationDirections","xTranslation","yTranslation","calculateLabelChartPadding","chartPadding","POSITION_TOP_COORDINATES","xEnd","yStart","yEnd","POSITION_LEFT_COORDINATES","xStart","POSITION_RIGHT_COORDINATES","POSITION_BOTTOM_COORDINATES","POSITION_INSIDE_COORDINATES","POSITION_TOP_LEFT_COORDINATES","POSITION_BOTTOM_LEFT_COORDINATES","POSITION_TOP_RIGHT_COORDINATES","POSITION_BOTTOM_RIGHT_COORDINATES","labelDirectionHandling","CROSSLINE_LABEL_POSITION","CartesianCrossLineLabel","_CartesianCrossLine","clippedRange","gridLength","LINE_LAYER_ZINDEX","labelGroup","LABEL_LAYER_ZINDEX","crossLineRange","crossLineLabel","labelPoint","group2","getZIndex","updateNodes","calculateLayout","reversedAxis","dataCreated","createNodeData","crossLineBox","labelBox","computeLabelBBox","updateRangeNode","updateLabel","positionLabel","getRange","clampedYStart","clampedYEnd","validRange","RANGE_LAYER_ZINDEX","tempText","calculatePadding","labelPadding","crossLineLabelBBox","CartesianCrossLine","ModuleMap","moduleMap","addModule","moduleFactory","removeModule","moduleKey","isModuleEnabled","getModule","modules","mapValues","callback","StateMachine","initialState","states","preTransitionCb","state","transition","currentStateConfig","destinationTransition","destinationState","action","_LogScale","base","baseLog","basePow","updateLogFn","updatePowFn","log2","logBase","pow10","n0","n1","p0","p1","absDiff","ticks2","isBaseInteger","isDiffLarge","isPositive","availableSpacing","lastTickPosition","nextMagnitudeTickPosition","tickPosition","prevSpacing","nextSpacing","fits","LogScale","CONSTANTS","periods","days","shortDays","months","shortMonths","dayOfYear","startOfYear","startOffset","timeDiff","timeOneDay","weekOfYear","startDay","startOfYearDay","getDay","firstWeekStartOffset","SUNDAY","MONDAY","THURSDAY","isoWeekOfYear","firstOfYear","firstOfYearDay","firstThursdayOffset","timezone","unsignedOffset","pad","FORMATTERS","getMilliseconds","getHours","I","hours","M","getMinutes","L","getSeconds","u","day2","U","V","W","Y","Z","PADS","padChar","output","buildFormatter","formatString","formatParts","nextEscapeIdx","literalPart","maybePadSpecifier","maybePad","maybeFormatterSpecifier","maybeFormatter","dateTime","dateTimeAsDate","formatStrings","toNumber","TimeScale","week","tickIntervals","calculateDefaultTickFormat","defaultTimeFormat","updateFormat","format2","getLowestGranularityFormat","firstTick","lastTick","startYear","stopYear","yearChange","buildFormatString","formatStringArray","timeEndIndex","weekDayIndex","reverse","defaultTickFormat","getTickInterval","countableTimeInterval","diff0","diff1","t0","getTicksForInterval","getDefaultTicks","absInterval","reversedInterval","timeInterval","tickInterval","stopDate","setMilliseconds","updateNiceDomainIteration","intervalRange","sparklines_util_exports","Padding","isNumberEqual","sanitizeHtml","areArrayNumbersEqual","arrA","arrB","circleRectOverlap","edgeX","edgeY","rectRectOverlap","w2","h2","xOverlap","yOverlap","rectContainsRect","r2x","r2y","r2w","r2h","isPointLabelDatum","placeLabels","bounds","labels","withinBounds","overlapPoints","datum2","overlapLabels","labels2","l2","axisLabelsOverlap","GRID_STYLE_KEYS","GRID_STYLE","AxisGridLine","Default","defaultValue","replaces","__","AxisLabel","autoWrap","avoidCollisions","mirrored","getSideFlag","AxisLine","TICK_INTERVAL","AxisTick","prepareAxisAnimationContext","axis","requestedRangeMin","requestedRangeMax","fullCircle","halfCircle","normaliseEndRotation","directDistance","prepareAxisAnimationFunctions","outOfBounds","calculateStatus2","tick","_node","_status","group3","_group","resetAxisGroupFn","resetAxisSelectionFn","rangeVisible","resetAxisLabelSelectionFn","resetAxisLineSelectionFn","Tags","Tags2","_Axis","dataDomain","boundSeries","includeInvisibleDomains","axisGroup","lineNode","tickLineGroup","tickLabelGroup","crossLineGroup","gridGroup","gridLineGroup","tickLineGroupSelection","tickLabelGroupSelection","gridLineGroupSelection","createTick","gridLine","createLabel","defaultTickMinSpacing","translation","layout","visibleRange","_titleCaption","_gridLength","gridPadding","seriesAreaPadding","tickGenerationResult","maxThickness","refreshScale","checkAxisHover","animationState","empty","resetSelectionNodes","ready","animateReadyUpdate","_crossLines","assignCrossLineArrayConstructor","previousSize","layoutService","chart","updateService","minRect","crossLines","crossLine","detachCrossLine","attachCrossLine","initCrossLine","updateRange","rr","vr","span","shift","setCrossLinesVisible","attachAxis","axisNode","gridNode","detachAxis","inRange","tolerance","onLabelFormatChange","logScale","defaultLabelFormatter","labelFormatter","setDomain","setTickInterval","setTickCount","isInAxis","chartEventManager","axisHover","primaryTickCount","calculateRotations","updatePosition","lineData","getAxisLineCoordinates","tickData","combinedRotation","ticksResult","previousTicks","tickId","updateSelections","isSkipped","calculateUpdateDiff","updateAxisLine","updateLabels","updateVisibility","updateGridLines","updateTickLines","updateTitle","anyTickVisible","updateCrossLines","updateLayoutState","getTickLineCoordinates","getTickSize","getTickLabelProps","tickLabel","setTitleProps","caption","titleNode","titleRotationFlag","callbackCache","params2","getTitleFormatterParams","updateScale","generateTicks","lineBox","tickLineBox","labelProps","getTransformBox","bbox2","axisRotation","getAxisTransform","titleBox","transformedBBox","anySeriesActive","isAnySeriesActive","calculateDomain","secondaryAxis","initialRotation","estimateTickCount","maxSpacing","continuous","maxIterations","rawTicks","labelCount","autoRotation","labelOverlap","terminate","tickStrategies","getTickStrategies","strategy","rotation2","checkLabelOverlap","avoidLabelCollisions","filterTicks","autoRotate","strategies","tickGenerationType","tickGenerationStrategy","index2","createTickData","tickFilterStrategy","autoWrapStrategy","wrapLabels","autoRotateStrategy","getAutoRotation","regenerateTicks","prevTicks","getTicks","shouldTerminate","labelData","createLabelData","labelSpacing","tickDatum","labelDatum","autoRotateAngle","scaleDomain","updateSecondaryAxisTicks","createTicks","halfBandwidth","tickIdCounts","rawTick","formatTick","tickSpacing","keepEvery","rangeWithBleed","calculateRangeWithBleed","defaultMinSpacing","clampMaxTickCount","minRectDistance","calculateAvailableRange","visibleScale","linkedTo","visibleSeries","isEnabled","domains","series","normaliseDataDomain","_primaryTickCount","defaultMaxWidth","defaultMaxHeight","tickBBox","tickWidth","formatDatum","clipTickLines","clipGrid","_max","acc","getKeys","names","getNames","getLayoutState","tickSize","getModuleMap","createModuleContext","axisContext","createAxisContext","axisId","scaleValueFormatter","scaleBandwidth","scaleConvert","scaleInvert","selectionCtx","previous","tickMap","changed","Axis","CartesianAxisLabel","CartesianAxis","thickness","updateDirection","CategoryAxis","_paddingOverrideEnabled","groupPaddingInner","uniqueValues","paddings","getBandScalePadding","inner","outer","TreeNode","number","subtreeLeft","subtreeRight","screenX","screenY","leafCount","prelim","ancestor","change","getLeftSibling","getLeftmostSibling","nextLeft","thread","nextRight","getSiblings","ticksToTree","pad2","insertTick","pathParts","lastPartIndex","pathPart","partIndex","existingNode","isNotLeaf","moveSubtree","wm","wp","subtrees","vim","defaultAncestor","executeShifts","apportion","distance","vop","vip","vom","sip","sop","sim","som","firstWalk","midpoint","leftSibling","Dimensions","secondWalk","thirdWalk","treeLayout","TreeLayout","dimensions","leafNodes","nonLeafNodes","shiftX","shiftY","flipX","xSteps","ySteps","existingSpacingX","desiredSpacingX","existingSpacingY","desiredSpacingY","screenDimensions","GroupedCategoryAxisLabel","grid","GroupedCategoryAxis","tickScale","labelColor","gridLineSelection","axisLineSelection","separatorSelection","labelSelection","resizeTickTree","tickTreeLayout","isNumericX","domain2","domainExtent","normalisedDataDomain","tickTree","tickScaleDomain","computedLayout","updateTitleCaption","updateCategoryLabels","updateSeparators","updateAxisLines","updateCategoryGridLines","tickLabelLayout","separatorLayout","axisLineLayout","gridSelection","styleCount","computeLayout","rangeStart","rangeEnd","rangeLength","isHorizontal","treeLabels","isLabelTree","copyLabelProps","labelBBoxes","maxLeafLabelWidth","setLabelProps","isCaptionEnabled","isInRange","isLeaf","labelGrid","separatorData","minX","separatorBoxes","separatorBox","axisLineBoxes","lineCount","sleep","sleepTimeoutMs","CallbackCache","fn","serialisedParams","paramCache","invoke","invalidateCache","Mutex","available","acquireQueue","acquire","cb","dispatchNext","acquireImmediately","waitForClearAcquireQueue","Observable","eventListeners","addEventListener","eventType","listener","eventTypeListeners","removeEventListener","hasEventListener","clearEventListeners","fireEvent","debouncedAnimationFrame","buildScheduler","cb2","_delayMs","requestAnimationFrame","debouncedCallback","delayMs","scheduleFn","scheduleCount","promiseRunning","awaitingPromise","awaitingDone","busy","scheduleCb","maybePromise","catch","schedule","await","SizeMonitor","init","ResizeObserver","resizeObserver","contentRect","checkSize","checkClientSize","pollerHandler","defaultView","setInterval","ownerDocument","documentReady","readyState","readyEventFn","newState","oldState","queuedObserveRequests","clearInterval","disconnect","ChartHighlight","ChartUpdateType","ChartUpdateType2","DataDomain","continuousDomain","discreteDomain","extendDomain","toKeyString","round2","accuracy","isInteger","fixNumericExtentInternal","fixNumericExtent","fixedExtent","paddingMin","paddingMax","INVALID_VALUE","DataModel","dataVisible","missing","aggregates","groupProcessors","propertyProcessors","reducers","processors","verifyMatchGroupId","matchGroupIds","matchGroupId","verifyMatchIds","matchIds","matchId","scope","resolveProcessedDataIndexById","searchId","resolveProcessedDataDefById","resolveProcessedDataIndicesById","resolveProcessedDataDefsById","resolveProcessedDataDefsByIds","searchIds","defs","resolveProcessedDataDefsValues","processedData","searchScope","scopes","allDefs","matches","domainProp","firstMatch","processData","sources","groupByKeys","groupByFn","extractData","groupData","postProcessGroups","aggregateData","postProcessProperties","reduceData","postProcessData","logProcessedData","valueGroupIdxLookup","matchScope","defScope","defId","valueIdxLookup","noScopesToMatch","scopeMatch","compareTo","anyScope","noScopes","propId","idMatch","keyDefs","valueDefs","processValue","allScopesHaveSameDefs","initDataDomainProcessor","resultData","resultDataIdx","partialValidDataCount","datumIdx","sourceDatums","validScopes","keyIdx","sourcesById","valueDefIdx","valueDatum","useScopedValues","propertyDomain","groupingFn","dataEntry","groupStr","existingData","resultGroups","dataIndex","groups","aggDefs","resultAggValues","resultAggValueIndices","resultAggFns","aggregateFunction","resultGroupAggFns","groupAggregateFunction","resultFinalFns","finalFunction","aggValues","resultIdx","indices","scopeValid","matchScopes","as","groupAggValues","distinctValues","valuesToAgg","valueIdx","valuesAgg","finalValues","affectedIndices","updatedDomains","groupProcessorIndices","groupProcessorInitFns","processor","adjust","valueDef","valueType","updateDomains","valueIndex","valueIndexes","adjustFn","reducerDefs","reducer","accValues","initialValue","reducerIndex","accIdx","reduced","processorDefs","calculate","scopesCount","processorFns","initDataDomainKey","updateDataDomain","initDataDomain","accessors","buildAccessors","hasAccessor","valueInDatum","missingValue","forceValue","valueNegative","missingValueDef","valid","validation","invalidValue","isPath","fnBody","logValues","flattenedValues","_b2","skipKeys","skipAggValues","DataController","requested","request","resultCb","execute","validateRequests","merged","mergeRequested","debugMode","multipleSources","resultCbs","rejects","needsValueExtraction","dataModel","requestIdx","requestProcessedData","extractScopedData","splitResult","extractDatum","extractValues","groupByData","grouped","groupMatch","gr","propMatch","existing","updateKeyValueOpts","uniqueScopes","mergeOpts","Listeners","registeredListeners","handler","record","removeListener","eventSymbol","listeners","matchIndex","dispatch","getListenersByType","dispatchWrapHandlers","wrapFn","BaseManager","listenerSymbol","DEBUG_SELECTORS","AnimationManager","chartUpdateMutex","batch","AnimationBatch","requestId","skipAnimations","disableInteractions","immutable","controllers","failsafeOnError","random","controller","_a3","requestAnimation","resume","cancelAnimation","stopByAnimationGroupId","isActive","skipCurrentBatch","stack","isSkippingFrames","scheduleAnimationFrame","prevTime","onAnimationFrame","executeAnimationFrame","deltaTime","controllersCount","deltaMs","cancelAnimationFrame","startBatch","endBatch","ChartEventManager","legendItemClick","itemId","legendItemName","legendItemDoubleClick","numVisibleItems","CursorManager","updateCursor","callerId","applyStates","styleToApply","cursor","getCursor","HighlightManager","highlightStates","pickedStates","updateHighlight","highlightedDatum","applyHighlightStates","getActiveHighlight","activeHighlight","updatePicked","clickableDatum","applyPickedStates","getActivePicked","activePicked","previousHighlight","currentHighlight","WINDOW_EVENT_HANDLERS","EVENT_HANDLERS","CSS","_InteractionManager","eventHandler","processEvent","mouseDown","touchDown","pausers","animation","rootElement","passive","interactionDocuments","pauseType","decideInteractionEventTypes","dispatchEvent","calculateCoordinates","pauses","interactionEvent","bypassPause","consumed","buildEvent","dragStart","dragStartElement","isEventOverElement","mouseButtonDown","MouseEvent","buttons","parentElement","clientX","clientY","fixOffsets","TouchEvent","lastTouch","touches","changedTouches","NULL_COORDS","PageTransitionEvent","persisted","offsets","offsetLeft","offsetTop","offsetParent","offsetDragStart","offsetEvent","pageRect","builtEvent","InteractionManager","TooltipManager","tooltip","exclusiveAreas","checkExclusiveRects","updateExclusiveRect","area2","getTooltipMeta","newAppliedExclusiveArea","entryId","appliedExclusiveArea","contentToApply","metaToApply","appliedState","renderInstantly","makeTooltipMeta","refPoint","yBar","upperPoint","midPoint","contentGroup","scrollX","scrollY","interaction","ZoomManager","axes","updateAxes","removedAxes","AxisZoomManager","initialZoom","newZoom","updateZoom","getDirection","updateAxisZoom","getZoom","getAxisZoom","getAxisZooms","zoom","currentZoom","prevZoom","LayoutService","layoutComplete","isLayoutStage","isLayoutComplete","dispatchPerformLayout","stage","dispatchLayoutComplete","gridLayout","orientation","bboxes","itemPaddingY","itemPaddingX","forceResult","horizontal","primary","secondary","processedBBoxCount","rawPages","unprocessedBBoxes","processBBoxes","pageIndices","buildPages","indexOffset","minGuess","startingGuess","estimateStartingGuess","guess","calculatePage","primaryCount","sumSecondary","currentMaxSecondary","currentPrimaryIndices","maxPrimaryValues","bboxIndex","primaryValueIdx","primaryValue","currentSecondaryDimension","returnResult","sumPrimary","maxPageWidth","maxPageHeight","pages","transpose","endIndex","columns","colIndices","colBBoxes","columnHeight","columnWidth","pageWidth","pageHeight","column","startIndex","innerData","dataIdx","itemIdx","primarySum","MarkerLabel","_marker","_markerSize","_spacing","marker","markerSize","setSeriesStrokeOffset","xOff","lineEnd","markerEnd","PaginationLabel","PaginationMarkerStyle","PaginationMarker","onMarkerShapeChange","Pagination","chartUpdateCallback","pageUpdateCallback","cursorManager","labelNode","activeStyle","inactiveStyle","highlightStyle","totalPages","currentPage","nextButtonDisabled","previousButtonDisabled","_visible","_orientation","_nextButton","_previousButton","nextButton","previousButton","onPaginationClick","onPaginationMouseMove","updateMarkers","updateGroupVisibility","updatePositions","enableOrDisableButtons","updateLabelPosition","updateNextButtonPosition","markerPadding","labelBBox","highlightActive","buttonStyle","button","disabled","updateMarker","zeroPagesToDisplay","onLastPage","onFirstPage","nextButtonContainsPoint","previousButtonContainsPoint","incrementPage","onPaginationChanged","decrementPage","Marker2","attachPagination","LegendLabel","LegendMarker","_shape","LegendLine","LegendItem","paddingX","paddingY","toggleSeriesVisible","showSeriesStroke","LegendListeners","Legend","itemSelection","oldSize","maxPageSize","paginationTrackingIndex","truncatedItems","_data","reverseOrder","preventHidingAll","characterWidths","pagination","page","updatePageNumber","bypass","checkLegendClick","checkLegendDoubleClick","handleLegendMouseMove","positionLegend","shrinkRect","detachLegend","getOrientation","getCharacterWidths","cw","attachLegend","getItemLabel","seriesId","performLayout","markerShape","itemLine","itemMaxWidthPercentage","maxItemWidth","paddedMarkerWidth","markerLabel","markerEnabled","labelText","truncate","lineVisible","markerVisible","updatePagination","pageNumber","maxCharLength","ellipsis2","textChars","addEllipsis","labelWidth","truncatedText","cumulativeWidth","char","trackingIndex","paginationBBox","paginationVertical","calculatePagination","newCurrentPage","paginationComponentPadding","legendItemsWidth","legendItemsHeight","paginationX","paginationY","lastPassPaginationBBox","stableOutput","lastPassPaginationBBox2","visibleStart","visibleEnd","columnCount","rowCount","itemHeight","rowSumColumnWidths","pageIndex","columnIndex","rowIndex","itemMarker","markerFill","markerStroke","markerStrokeWidth","markerFillOpacity","markerStrokeOpacity","lineStroke","lineStrokeOpacity","lineStrokeWidth","lineLineDash","getDatumForPoint","visibleChildBBoxes","closestLeftTop","dist","childBBox","distX","distY","toTheLeftTop","pageBBox","computePagedBBox","actualBBox","chartService","highlightManager","legendBBox","pointerInsideLegend","newEnabled","series2","getLegendData","forceNodeDataRefresh","legendData","clickedItem","pointerOverLegendDatum","newShrinkRect","legendWidth","legendHeight","calculateLegendDimensions","calculateTranslationPerpendicularDimension","legendPadding","legendPositionedBBox","aspectRatio","maxCoefficient","minHeightCoefficient","minWidthCoefficient","heightCoefficient","widthCoefficient","Overlay","renderer","alignItems","boxSizing","justifyContent","margin","innerText","replaceChildren","hide","tagName","ChartOverlays","noData","noVisibleSeries","deepMerge","isPlainObject2","isObjectLike2","isObject2","mergeDefaults","partialAssign","keysToCopy","sumValues","accumulator","sum","groupSum","range2","groupCount","average","groupAverage","result2","area","aggFn","keyRange","keyWidth","accumulatedValue","onlyPositive","trailingAccumulatedValue","trailingValue2","memorizedFns","memo","fnGenerator","SMALLEST_KEY_INTERVAL","prevX","smallestSoFar","nextX","AGG_VALUES_EXTENT","SORT_DOMAIN_GROUPS","normaliseFnBuilder","normaliseTo","normalise","valuesExtent","valIdx","normaliseGroupTo","normalisePropertyFnBuilder","zeroDomain","rangeMin","rangeMax","normaliseSpan","pData","pIdx","groupValues","normalisePropertyTo","animationValidation","valueKeyIds","uniqueKeys","orderedKeys","valueKeys","processKey","keyValues","keyValue","buildGroupAccFn","separateNegative","currentVal","accIndex","buildGroupWindowAccFn","lastValues","firstRow","sumValue","accumulateGroup","modeParam","endsWith","diff","previousData","updateMovedDatums","moved","addedIndices","updatedIndices","removedIndices","prevId","createDatumId","SeriesNodePickMode","SeriesNodePickMode2","basicContinuousCheckDatumValidation","basicDiscreteCheckDatumValidation","keyProperty","propName","valueProperty","rangedValueProperty","defOpts","trailingValueProperty","trailingValue","accumulativeValueProperty","trailingAccumulatedValueProperty","groupAccumulativeValueProperty","rangeId","SeriesNodeClickEvent","Series","seriesOpts","seriesGrouping","NodeClickEvent","internalId","rootGroup","directions","nodeDataRefresh","_declarationOrder","seriesListeners","useLabelLayer","pickModes","directionKeys","directionNames","contentGroupVirtual","canHaveAxes","getGroupZIndexSubOrder","highlightGroup","highlightNode","highlightLabel","annotationGroup","onDataChange","_chartData","visibleChanged","setChartData","hasData","onSeriesGroupingChange","seriesStateManager","deregisterSeries","registerSeries","seriesLayerManager","changeGroup","type2","oldGrouping","subIndex","mainAdjust","main","addChartEventListeners","releaseGroup","getDirectionValues","resolvedDirection","resolveKeyDirection","addValues","items","seriesDomain","getSeriesDomain","moduleDomains","flat","markNodeDataDirty","getOpacity","defaultOpacity","dimOpacity","isItemIdHighlighted","getStrokeWidth","defaultStrokeWidth","getModuleTooltipParams","getTooltipParams","current","limitPickModes","pickMode","pickNodeExactShape","pickNodeMainAxisFirst","pickNodeClosestDatum","_point","_requireCategoryAxis","fireNodeClickEvent","fireNodeDoubleClickEvent","toggleSeriesItem","getLabelText","defaultFormatter","getMarkerStyle","defaultStyle","getStyle","defaultSize","markerStyle","updateMarkerStyle","markerNode","applyTranslation","getMinRect","nodeDataDependencies","_nodeDataDependencies","seriesRectWidth","seriesRectHeight","checkResize","newSeriesRect","newNodeDataDependencies","highlightedZIndex","newVal","oldVal","SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION","SeriesLayerManager","expectedSeriesCount","setSeriesCount","requestGroup","seriesConfig","seriesRootGroup","seriesHighlightGroup","seriesAnnotationGroup","groupIndex","lookupIndex","lookupIdx","groupInfo","seriesIds","highlight","annotation","layerState","leadSeriesConfig","SeriesStateManager","grouping","getVisiblePeerGroupIndex","visibleGroupCount","visibleGroups","BaseLayoutProcessor","chartLike","positionPadding","positionCaptions","clipSeries","paddedRect","seriesArea","seriesRoot","updateCaption","defaultCaptionHeight","captionLineHeight","computeX","positionTopAndShrinkBBox","baseY","bboxHeight","positionBottomAndShrinkBBox","defaultTitleSpacing","UpdateService","updateCallback","dispatchUpdateComplete","initialiseSpecialOverrides","globalWindow","global","globalDocument","sceneMode","SeriesArea","chartsInstances","Chart","specialOverrides","resources","processedOptions","userOptions","queuedUserOptions","_firstAutoSize","_seriesArea","_destroyed","_destroyFns","legends","_pendingFactoryUpdatesCount","_performUpdateNoRenderCount","_performUpdateType","_performUpdateSkipAnimations","updateShortcutCount","seriesToUpdate","updateMutex","updateRequestors","performUpdateTrigger","_0","performUpdate","_lastPerformUpdateError","_axes","_series","lastInteractionEvent","pointerScheduler","handlePointer","onSeriesNodeClick","seriesNodeClickEvent","onSeriesNodeDoubleClick","seriesNodeDoubleClick","axisGridGroup","autoSize","zoomManager","overlays","rawResize","onClick","onDoubleClick","onMouseMove","onLeave","disablePointer","changeHighlightDatum","legend","getInstance","getOptions","lastUpdateOptions","autoSizeChanged","_lastAutoSize","newArea","destroyed","moduleInstance","instanceConstructor","getModuleContext","legendType","legendConstructor","keepTransferableResources","removeAllSeries","highlightOnly","requestFactoryUpdate","performUpdateType","lastPerformUpdateError","newAnimationBatch","backOffMs","checkUpdateShortcut","checkFirstAutoSize","processLayout","seriesRect","seriesUpdates","tooltipMeta","isHovered","durationMs","checkUpdateType","maxShortcuts","addSeries","allSeries","canAdd","initSeries","addSeriesListeners","updateAllSeriesListeners","assignSeriesToAxes","seriesAxis","assignAxesToSeries","directionToAxesMap","directionAxes","seriesKeys","newAxis","findMatchingAxis","axisKeys","directionKey","autoWidth","authHeight","dataController","seriesPromises","updateLegend","getLabelData","isCategoryLegendData","showInLegend","validateCategoryLegendData","labelMarkerFills","seriesType","seriesMarkers","fills","oldRect","animationRect","handleOverlays","pickSeriesNode","exactMatchOnly","maxDistance","reverseSeries","lastPick","hoverRect","handlePointerTooltip","handlePointerNode","pixelRange","pick","isNewDatum","getTooltipHtml","isPixelRange","tooltipEnabled","exactlyMatched","rangeMatched","shouldUpdateTooltip","found","checkSeriesNodeRange","checkSeriesNodeClick","checkSeriesNodeDoubleClick","nearestNode","nodeClickRange","pickedNode","newSeries","lastSeries","lastDatum","updateAll","waitForUpdate","timeoutMs","hasNoData","toggleOverlay","hasNoVisibleSeries","overlay","minRects","removeAttribute","DataModelSeries","isContinuousX","isContinuousY","getModulePropertyDefinitions","mod2","getPropertyDefinitions","requestDataModel","isProcessedDataAnimatable","validationResults","checkProcessedDataAnimatable","SeriesItemHighlightStyle","SeriesHighlightStyle","TextHighlightStyle","HighlightStyle","SeriesProperties","DEFAULT_DIRECTION_KEYS","DEFAULT_DIRECTION_NAMES","CartesianSeriesNodeClickEvent","nativeEvent","xKey","yKey","CartesianSeriesProperties","CartesianSeries","pathsPerSeries","hasMarkers","hasHighlightedLabels","pathsZIndexSubOrderOffset","datumSelectionGarbageCollection","markerSelectionGarbageCollection","animationResetFns","otherOpts","useSeriesGroupLayer","_contextNodeData","highlightSelection","markerFactory","highlightLabelSelection","annotationSelections","subGroups","subGroupId","animateEmptyUpdateReady","updateData","animateReadyHighlight","highlightMarkers","animateReadyHighlightMarkers","animateReadyResize","waiting","animateWaitingUpdateReady","clearing","animateClearingUpdateEmpty","contextNodeData","onLegendItemClick","onLegendItemDoubleClick","previousContextData","seriesHighlighted","highlightItems","updateHighlightSelection","animationData","getAnimationData","anySeriesItemEnabled","isPathOrSelectionDirty","animationValid","nodeData","updateSeriesGroups","updateSeriesGroupSelections","subGroup","seriesIdx","datumSelection","markerSelection","contextData","updatePaths","updateDatumSelection","updateLabelSelection","updateMarkerSelection","MarkerShape","dataNodeGroup","markerGroup","totalGroups","pathOffset","superFn","highlightedItems","animationEnabled","subGroupOpacity","updateMarkerNodes","isHighlight","updateDatumNodes","updateLabelNodes","subGroupVisible","updatePathNodes","getHighlightLabelData","highlightedItem","labelItems","ld","getHighlightData","_nodeData","labelsEnabled","isLabelEnabled","updateHighlightSelectionItem","updateHighlightSelectionLabel","match2","pickNodeExact","xAxis","yAxis","hitPoint","minDistance","closestDatum","datumX","datumY","modPick","pickNodeNearest","requireCategoryAxis","directions2","primaryDirection","hitPointCoords","point2","newMinDistance","closestDistanceSquared","matchedLegendItemName","shouldFlipXY","resetAllAnimation","datumSelections","labelSelections","markerSelections","animationTransitionClear","calculateScaling","addScale","_CartesianChart","paired","_lastCrossLineIds","_lastAxisWidths","_lastVisibility","seriesPaddedRect","inputShrinkRect","crossLineIds","axesValid","axisWidths","liveAxisWidths","stableOutputs","otherAxisWidths","otherVisibility","otherW","ceilValues","records","out","lastPassAxisWidths","lastPassVisibility","primaryTickCounts","updateAxesPass","clipRectPadding","lastPassSeriesRect","visited","newAxisWidths","paddedBounds","applySeriesPadding","crossLinePadding","buildCrossLinePadding","axisBound","buildAxisBound","buildSeriesRect","newClipSeries","axisThickness","axisOffset","calculateAxisDimensions","addInterAxisPadding","positionAxis","side","reversedAxes","dir","axis2","horizontalPadding","verticalPadding","totalWidth","clampToOutsideSeriesRect","dimension","clampBounds","axisLeftRightRange","rangeClipped","paddedBoundsCoefficient","axisPadding","CartesianChart","AgChartInstanceProxy","_AgChartInstanceProxy","isInstance","validateImplementation","chartProps","signatureProps","calculateNiceSecondaryAxis","calculateNiceStart","segments","order","magnitude","stepPower","calculateNextNiceStep","NumberAxisTick","NumberAxis","NON_ZERO_NUMBER","LogAxis","isInverted","crossesZero","hasZeroExtent","invalidDomain","MAX_SPACING2","TimeAxisTick","TimeAxis","datumFormat","datumFormatter","_min","AXIS_CONSTRUCTORS","registerAxis","axisType","getAxis","axisConstructor","AXIS_TYPES","axesTypes","AXIS_THEME_TEMPLATES","registerAxisThemeTemplate","theme","getAxisThemeTemplate","EXPECTED_ENTERPRISE_MODULES","chartTypes","optionsInnerKey","isEnterpriseSeriesType","getEnterpriseSeriesChartTypes","isEnterpriseSeriesTypeLoaded","useCount","isEnterpriseCartesian","isEnterprisePolar","isEnterpriseHierarchy","verifyIfModuleExpected","stub","getUnusedExpectedModules","LEGEND_FACTORIES","category","LEGEND_KEYS","registerLegend","LEGEND_THEME_TEMPLATES","getLegendThemeTemplates","getLegendKeys","Background","rectNode","onLayoutComplete","BackgroundModule","NavigatorHandle","rh","gripLineGap","gripLineLength","rangeHandle","NavigatorMask","rm","rangeMask","RangeHandle","_fill","_stroke","_strokeWidth","_lineCap","_centerX","_centerY","_gripLineGap","_gripLineLength","ax","ay","axw","ayh","markDirtyOnChange","RangeMask","minRange","onRangeChange","computeVisibleRangeBBox","maxX","_RangeSelector","minHandle","maxHandle","updateHandles","RangeSelector","Navigator","rs","minHandleDragging","maxHandleDragging","panHandleOffset","interactionOpts","onDragStart","onDrag","onDragStop","navigatorTotalHeight","getRatio","stopHandleDragging","NavigatorModule","themeTemplate","singleSeriesPaletteFactory","takeColors","strokes","markerPaletteFactory","FONT_SIZE","SMALL","MEDIUM","LARGE","FONT_WEIGHT2","NORMAL","BOLD","BOLDER","LIGHTER","BOTTOM","LEFT","TOP","CARTESIAN_AXIS_POSITIONS","CATEGORY","NUMBER2","TIME","LOG","CARTESIAN_AXIS_TYPES","ANGLE_CATEGORY","ANGLE_NUMBER","RADIUS_CATEGORY","RADIUS_NUMBER","POLAR_AXIS_TYPES","CIRCLE","TYPES","DEFAULTS","CHART_TYPES","isCartesian","isPolar","isHierarchy","seriesTypes","cartesianTypes","polarTypes","hierarchyTypes","registerChartSeriesType","chartType2","registerChartDefaults","getChartDefaults","getChartType","optionsType","isAgCartesianChartOptions","specifiedType","isAgHierarchyChartOptions","isAgPolarChartOptions","isSeriesOptionType","isAxisOptionType","DEFAULT_CARTESIAN_CHART_OVERRIDES","swapAxes","axis0","axis1","resolveModuleConflicts","conflictOverrides","conflicts","conflict","EXTENDS_CHART_DEFAULTS","EXTENDS_LEGEND_DEFAULTS","EXTENDS_LEGEND_ITEM_DEFAULTS","EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS","EXTENDS_AXES_DEFAULTS","EXTENDS_AXES_LABEL_DEFAULTS","EXTENDS_AXES_LINE_DEFAULTS","EXTENDS_AXES_TICK_DEFAULTS","EXTENDS_AXES_GRID_LINE_DEFAULTS","EXTENDS_SERIES_DEFAULTS","EXTENDS_CARTESIAN_MARKER_DEFAULTS","OVERRIDE_SERIES_LABEL_DEFAULTS","DEFAULT_FONT_FAMILY","DEFAULT_LABEL_COLOUR","DEFAULT_INVERTED_LABEL_COLOUR","DEFAULT_INSIDE_SERIES_LABEL_COLOUR","DEFAULT_MUTED_LABEL_COLOUR","DEFAULT_AXIS_GRID_COLOUR","DEFAULT_AXIS_LINE_COLOUR","DEFAULT_CROSS_LINES_COLOUR","DEFAULT_BACKGROUND_COLOUR","DEFAULT_SHADOW_COLOUR","DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS","DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS","DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS","DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE","DEFAULT_POLAR_SERIES_STROKE","DEFAULT_DIVERGING_SERIES_COLOUR_RANGE","DEFAULT_HIERARCHY_FILLS","DEFAULT_HIERARCHY_STROKES","pathMotion","addPhaseFn","updatePhaseFn","removePhaseFn","phase","updateFn","preInit","seriesLabelFadeInAnimation","seriesLabelFadeOutAnimation","resetLabelFn","MARKER_SHAPE","SeriesMarker","getDiameter","SeriesTooltipInteraction","SeriesTooltip","AreaSeriesProperties","xName","shadow","connectMissingData","markerFadeInAnimation","markerScaleInAnimation","markerSwipeScaleInAnimation","seriesWidth","resetMarkerFn","resetMarkerPositionFn","prepareMarkerAnimation","pairMap","parentStatus","readFirstPair","xValue","markerStatus","minMax","intersectionOnLine","targetX","backfillPathPoint","process","processFn","prevMarkerIdx","nextMarkerIdx","toProcess","backfillPathPointData","splitMode","sIdx","eIdx","calculatePoint","xd","yd","xr","yr","renderPartialPath","pairData","ratios","linePath","previousTo","moveToRatio","midPointX","midPointY","pathSwipeInAnimation","pathFadeInAnimation","pathFadeOutAnimation","buildResetPathFn","updateClipPath","isContinuousScaling","scaling","isCategoryScaling","areEqual","areScalingEqual","domainRatio","matchingIndex","scalesChanged","newData","oldData","scales","closeMatch","an","bn","calculateMoveTo","pairContinuousData","backfillSplitMode","toNewScale","oldDatum","yValue","toOldScale","resultMap","pairUp","resultPoint","oldIdx","newIdx","minFromNode","maxFromNode","minToNode","maxToNode","fromShifted","toUnshifted","NA","pairCategoryData","multiDatum","resultMapSingle","resultMapMulti","previousResultPoint","previousXValue","addToResultMap","oldIndex","newIndex","isXUnordered","before","after","previousX","pathPoint","determinePathStatus","prepareLinePathPropertyAnimation","visibleToggleMode","_path","mixin","prepareLinePathAnimationFns","in","pathProperties","prepareLinePathAnimation","isCategoryBased","hasMotion","pathFns","AreaSeriesTag","AreaSeriesTag2","splitFillPoints","points","fillData","prepPoints","pairFillCategoryData","oldPoints","newPoints","pairOpts","pairFillContinuousData","prepareAreaPathAnimation","prepareMarkerPairs","prepareFillPairs","markerPairMap","_AreaSeries","stackCount","normalizedTo","extraProps","common","keyDef","yExtent","fixedYExtent","groupedData","seriesFill","seriesStroke","xScale","yScale","continuousY","createMovePoint","plainPoint","createPathCoordinates","lastYEnd","prevYCoordinate","currYCoordinate","createMarkerCoordinate","xDatum","rawYDatum","currY","markerData","strokeData","fillPoints","fillPhantomPoints","strokePoints","lastXDatum","lastYDatum","datumGroup","datumArray","valuesArray","seriesDatum","dataValues","yValueRaw","yDatum","yValueCumulative","yValueStart","yValueEnd","yValuePreviousStart","yValuePreviousEnd","validPoint","cumulativeValue","yName","xValid","yValid","prevTop","prevBottom","updateAreaPaths","updateFillPath","updateStrokePath","contextDataIndex","fillPath","strokePath","highlighted","baseStyle","labelEnabled","nodeDatum","xString","yString","AreaSeries","AreaSeriesModule","stackable","seriesDefaults","__extends__","paletteFactory","AbstractBarSeriesProperties","AbstractBarSeries","isVertical","getBarDirection","getCategoryDirection","getValueAxis","getCategoryAxis","BarSeriesLabel","placement","BarSeriesProperties","updateRect","getRectConfig","isHighlighted","checkCrisp","visibleMin","visibleMax","isZoomed","collapsedStartingBarPosition","startingX","startingY","getStartingValues","isDatumNegative","prevDatum","midpointStartingBarPosition","prepareBarAnimationFunctions","initPos","isRemoved","resetBarSelectionsFn","updateLabelNode","textNode","adjustLabelPlacement","_BarSeries","groupScale","smallestDataInterval","normalizedToAbs","stackGroupName","stackGroupTrailingName","visibleProps","smallestKeyInterval","smallestX","categoryAxis","valueAxis","scalePadding","keysExtent","d02","d12","yReversed","xBandWidth","groupIdx","barWidth","xIndex","yRawIndex","yStartIndex","yEndIndex","yRangeIndex","contexts","contextIndex","prevY","yRawValue","isUpward","yRange","barX","bottomY","barAlongX","bboxBottom","labelFontStyle","labelFontWeight","labelFontSize","labelFontFamily","value2","lengthRatioMultiplier","capDefaults","lengthMax","stackGroup","itemHighlightStyle","categoryAlongX","BarSeries","BarSeriesModule","groupable","swapDefaultAxesCondition","enterpriseThemeTemplate","errorBar","cap","lengthRatio","BubbleSeriesMarker","maxSize","BubbleSeriesProperties","colorRange","BubbleSeriesNodeClickEvent","sizeKey","_BubbleSeries","sizeScale","labelKey","colorDomain","colorKey","sizeKeyIdx","processedSize","colorKeyIdx","dataDef","sizeName","labelName","xDataIdx","yDataIdx","sizeDataIdx","colorDataIdx","labelDataIdx","sizeValue","placedLabels","BubbleSeries","BubbleSeriesModule","HistogramSeriesProperties","areaPlot","aggregation","defaultBinCount","_HistogramSeries","calculatedBins","deriveBins","xDomain","binCount","calculateNiceBins","binStarts","binSize","firstBinEnd","expandStartToBin","startGuess","getBins","bins","calculatePrecision","aggProp","dataSet","xExtent","nextBin","yDomain","xDomainMin","xDomainMax","negativeAgg","positiveAgg","frequency","xMinPx","xMaxPx","yZeroPx","yMaxPx","selectionDatumLabel","nodeMidPoint","aggregatedValue","isDatumHighlighted","seriesFillOpacity","highlightedFill","highlightFillOpacity","highlightedStroke","highlightedDatumStrokeWidth","HistogramSeries","HistogramSeriesModule","LineSeriesProperties","_LineSeries","xDef","xIdx","yIdx","nextPoint","color0","updateLinePaths","LineSeries","LineSeriesModule","ScatterSeriesProperties","_ScatterSeries","ScatterSeries","ScatterSeriesModule","DEFAULT_FILLS","BLUE","ORANGE","GREEN","CYAN","YELLOW","VIOLET","GRAY","MAGENTA","BROWN","RED","DEFAULT_STROKES","PieTitle","DoughnutInnerLabel","_reset","DoughnutInnerCircle","PieSeriesCalloutLabel","minAngle","maxCollisionOffset","PieSeriesSectorLabel","positionOffset","positionRatio","PieSeriesCalloutLine","PieSeriesProperties","outerRadiusOffset","outerRadiusRatio","innerRadiusOffset","innerRadiusRatio","sectorSpacing","innerLabels","innerCircle","calloutLabel","sectorLabel","calloutLine","__BACKGROUND_COLOR_DO_NOT_USE","preparePieSeriesAnimationFunctions","initialLoad","rotationDegrees","scaleFn","oldScaleFn","oldScale","scaleToNewRadius","scaleToOldRadius","sect","sectorFormat","_sect","resetPieSelectionsFn","PolarSeries","sectorGroup","computeLabelsBBox","_options","_seriesRect","PieSeriesNodeClickEvent","angleKey","radiusKey","calloutLabelKey","sectorLabelKey","PieSeries","previousRadiusScale","radiusScale","backgroundGroup","zerosumRingsGroup","zerosumOuterRing","zerosumInnerRing","innerCircleGroup","seriesItemEnabled","surroundingRadius","angleScale","pieCalloutLabels","pieSectorLabels","calloutLabelSelection","sectorLabelSelection","innerLabelsSelection","innerCircleSelection","processSeriesItemEnabled","legendItemKey","extraKeyProps","radiusMin","radiusMax","maybeRefreshNodeData","getProcessedDataIndexes","angleIdx","radiusIdx","calloutLabelIdx","sectorLabelIdx","legendItemIdx","currentStart","angleValue","radiusValue","legendItemValue","getLabels","getSectorFormat","midCos","midSin","skipDisabled","calloutLabelValue","sectorLabelValue","labelFormatterParams","angleName","radiusName","calloutLabelName","sectorLabelName","getTextAlignment","hidden","collisionTextAlign","collisionOffsetY","legendItem","quadrantTextOpts","midAngle180","quadrantStart","quadrantOffset","quadrant","quadrantIndex","formatIndex","getInnerRadius","getOuterRadius","updateRadiusScale","newRange","getTitleTranslationY","titleOffset","updateTitleNodes","bboxIntersectsSurroundingSeries","updateNodeMidPoint","oldTitle","updateGroupSelection","updateInnerCircleSelection","circleRadius","antiAliasingPadding","datums","updateSectorFn","_index","animationDisabled","updateCalloutLineNodes","updateCalloutLabelNodes","updateSectorLabelNodes","updateInnerLabelNodes","updateZerosumRings","calloutLength","calloutStrokeWidth","calloutColors","isMoved","paddedLength","getLabelOverflow","seriesLeft","seriesRight","seriesTop","seriesBottom","errPx","visibleTextPart","hasVerticalOverflow","textLength","hasSurroundingSeriesOverflow","corners","sur2","corner","computeCalloutLabelCollisionOffsets","shouldSkip","fullData","leftLabels","rightLabels","topLabels","bottomLabels","tempTextNode","getTextBBox","labelRadius","avoidNeighbourYCollision","collidesOrBehind","avoidYCollisions","midLabel","midIndex","avoidXCollisions","labelsCollideLabelsByY","paddedBoxes","labelsCollideLabelsByX","sectors","labelsCollideSectors","displayText","textBoxes","titleCleanArea","hideWhenNecessary","isTooShort","isDoughnut","singleVisibleSector","isTextVisible","shouldPutTextInCenter","sectorBounds","textBBoxes","margins","getMarginTop","getMarginBottom","labelsVisible","textBottoms","getDatumLegendName","titleText","labelParts","toggleOtherSeriesItems","datumToggledLegendItemValue","datumItemId","supportedDiff","hasKeys","hasUniqueKeys","getDatumIdFromData","PieSeriesModule","colorsCount","userPalette","registerInbuiltModules","module_support_exports","HierarchyNode","HierarchySeries","HierarchySeriesProperties","Motion","POLAR_AXIS_SHAPE","PolarAxis","__FORCE_MODULE_DETECTION2","invertShapeDirection","supportedShapes","_HierarchyNode","colorValue","sumSize","walk","Walk","PreOrder","PostOrder","rootNode","maxDepth","childrenKey","getIndex","minColor","maxColor","appendChildren","groupSelection","colorName","SERIES_FACTORIES","SERIES_DEFAULTS","SERIES_THEME_TEMPLATES","ENTERPRISE_SERIES_THEME_TEMPLATES","SERIES_PALETTE_FACTORIES","SOLO_SERIES_TYPES","STACKABLE_SERIES_TYPES","GROUPABLE_SERIES_TYPES","STACKED_BY_DEFAULT_SERIES_TYPES","SWAP_DEFAULT_AXES_CONDITIONS","CUSTOM_DEFAULTS_FUNCTIONS","cstr","enterpriseTheme","solo","stackedByDefault","customDefaultsFunction","registerSeriesThemeTemplate","addSeriesPaletteFactory","addSoloSeriesType","addStackableSeriesType","addGroupableSeriesType","addStackedByDefaultSeriesType","addSwapDefaultAxesCondition","addCustomDefaultsFunctions","existingTemplate","getSeries","seriesConstructor","getSeriesDefaults","getSeriesThemeTemplate","factory","getSeriesPaletteFactory","isSoloSeries","isStackableSeries","isGroupableSeries","isSeriesStackedByDefault","isDefaultAxisSwapNeeded","isDefaultAxisSwapped","executeCustomDefaultsFunctions","initialDefaults","setupModules","optionConstructors","axisTypes","axisTypeTheme","axisType2","expectedButUnused","_HierarchyChart","fullSeriesRect","HierarchyChart","removeUsedEnterpriseOptions","usedOptions","optionsChartType","optionValue","DEFAULT_BACKGROUND_FILL","palette","CHART_TYPE_CONFIG","cartesian","commonOptions","polar","hierarchy","CHART_TYPE_SPECIFIC_COMMON_OPTIONS","resolvePartialPalette","partialPalette","basePalette","_ChartTheme","getPalette","getAxisDefaults","getCartesianSeriesMarkerDefaults","getLegendItemMarkerDefaults","getCaptionWrappingDefaults","background","palette11","createChartConfigPerChartType","getDefaults","applyOverrides","overrideOpts","cleanedCommon","commonKey","templateTheme","nextType","typeDefaults","alias","getChartTypeDefaults","getOverridesByType","chartDefaults","template","template2","cartesianAxisDefault","themeInstance","extensions","getTemplateParameters","key2","getWaterfallSeriesDefaultPositiveColors","getWaterfallSeriesDefaultNegativeColors","getWaterfallSeriesDefaultTotalColors","ChartTheme","groupSeriesByType","seriesOptions","groupMap","stackMap","defaultUnstackedGroup","stacked","sStacked","sStackGroup","sGrouped","groupingKey","indexKey","processSeriesOptions","preprocessed","sType","grouped2","groupCount2","addSeriesGroupingMeta","stackIdx","stackIndex","DEFAULT_DARK_BACKGROUND_FILL","DEFAULT_DARK_FILLS","DEFAULT_DARK_STROKES","palette2","DarkTheme","_DarkTheme","MATERIAL_DARK_FILLS","MATERIAL_DARK_STROKES","palette3","MaterialDark","_MaterialDark","MATERIAL_LIGHT_FILLS","MATERIAL_LIGHT_STROKES","palette4","MaterialLight","_MaterialLight","POLYCHROMA_DARK_FILLS","PURPLE","PINK","MODERATE_BLUE","POLYCHROMA_DARK_STROKES","POLYCHROMA_DARK_FILL_GRAY","POLYCHROMA_DARK_STROKE_GRAY","palette5","PolychromaDark","_PolychromaDark","POLYCHROMA_LIGHT_FILLS","POLYCHROMA_LIGHT_STROKES","POLYCHROMA_LIGHT_FILL_GRAY","POLYCHROMA_LIGHT_STROKE_GRAY","palette6","PolychromaLight","_PolychromaLight","SHEETS_DARK_FILLS","DARK_GRAY","DARK_BLUE","VERY_DARK_GRAY","DARK_YELLOW","SHEETS_DARK_STROKES","palette7","SheetsDark","_SheetsDark","SHEETS_LIGHT_FILLS","SHEETS_LIGHT_STROKES","palette8","SheetsLight","_SheetsLight","VIVID_DARK_FILLS","VIVID_DARK_STROKES","palette9","VividDark","_VividDark","VIVID_FILLS","VIVID_STROKES","palette10","VividLight","_VividLight","lightTheme","darkTheme","lightThemes","undefined","null","ag-sheets","ag-polychroma","ag-vivid","ag-material","darkThemes","ag-sheets-dark","ag-polychroma-dark","ag-vivid-dark","ag-material-dark","themes","validateChartThemeObject","unknownObject","baseTheme","validateChartTheme","getChartTheme","unvalidatedValue","stockTheme","flattenedTheme","takeColours","colours","colourIndex","noDataCloneMergeOptions","getGlobalTooltipPositionOptions","AgTooltipPositionTypeMap","pointer","isTooltipPositionType","prepareOptions","sanityCheckOptions","checkSeriesType","validateSoloSeries","defaultSeriesType","defaultOverrides","removeDisabledOptions","globalTooltipPositionOptions","mergedOptions","axesThemes","seriesThemes","prepareMainOptions","mergedSeries","mergeSeriesOptions","preparePieOptions","pie","prepareSeries","checkAxisType","isAxisType","validAxesTypes","axisSource","_c2","_d2","axisDefaults","axesTheme","prepareAxis","prepareLegendEnabledOption","prepareEnabledOptions","deprecatedArrayProps","yKeys","yNames","oldProp","newProp","hasSoloSeries","mergedTooltipPosition","cleanedTheme","prepareTheme","themeConfig","userTheme","paletteOptions","calculateSeriesPalette","removeOptions","themeTemplateParameters","axisTheme","gridLineStyle","userStyle","themeStyle","cleanTheme","userOptionsNode","visitingUserOpts","visitingMergedOpts","_enabledFromTheme","pieSeriesTheme","innerLabel","CARTESIAN_AXIS_POSITIONS2","CARTESIAN_AXIS_TYPES2","hasCartesianAxisPosition","isCartesianAxisOptions","isAxisPosition","allowedPositions","AxisPositionGuesser","guessInvalidPositions","takenPosition","guesses","invalidAxis","nextGuess","_PolarChart","computeSeriesRect","computeCircle","angleAxis","radiusAxis","angles","computeRange","gridAngles","gridRange","seriesBox","polarSeries","polarAxes","setSeriesCircle","pieSeries","innerRadii","initialRadius","shake","labelBoxes","refined","refineCircle","labelsBox","minCircleRatio","circleLeft","circleTop","circleRight","circleBottom","padTop","padBottom","availCircleWidth","availCircleHeight","newRadius","minHorizontalRadius","minVerticalRadius","minRadius","padHeight","newWidth","newHeight","PolarChart","chartType","_AgCharts","licenseCheck","licenseChecked","licenseManager","setLicenseKey","licenseKey","validateLicense","AgChartsInternal","createOrUpdate","isDisplayWatermark","injectWatermark","getWatermarkMessage","INVALID_CHART_REF_MESSAGE","updateDelta","deltaOptions","updateUserDelta","getImageDataURL","AgCharts","AgChart","_AgChart","memberName","proxyInstances","_AgChartsInternal","initialiseModules","initialised","proxy","userWindow","chartOptions","createChartInstance","agChartInstances","chartToUpdate","dequeue","queuedOptionsIdx","asyncDownload","maybeClone","prepareResizedChart","currentWidth","currentHeight","clonedChart","oldChart","transferableResource","applyChartOptions","completeOptions","modulesChanged","applyModules","registerListeners","applyOptionValues","seriesRecreated","applySeries","axesPresent","applyAxes","seriesDataUpdate","legendKeys","optionsHaveLegend","legendKey","otherRefreshUpdate","majorChange","updateType","matchingChartType","shouldBeEnabled","optSeries","keysToConsider","matchingTypes","previousOpts","seriesDiff","applySeriesValues","createSeries","forceRecreate","optAxes","oldOpts","moduleContext","axisDiff","createAxis","seriesInstance","applySeriesOptionModules","seriesOptionModules","supportedSeriesTypes","module2","guesser","axisOptions","applyAxisModules","rootModules","applyOpts","VERSION","integrated_charts_theme_exports","themes2","sparklines_scale_exports","_ModuleSupport","_Scale","_Scene","_Theme","_Util"],"sources":["/Users/sonugupta/ReactJs/node_modules/ag-charts-community/dist/package/main.esm.mjs"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __reflectGet = Reflect.get;\nvar __knownSymbol = (name, symbol) => {\n  return (symbol = Symbol[name]) ? symbol : Symbol.for(\"Symbol.\" + name);\n};\nvar __pow = Math.pow;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __decorateClass = (decorators, target, key, kind) => {\n  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;\n  for (var i = decorators.length - 1, decorator; i >= 0; i--)\n    if (decorator = decorators[i])\n      result = (kind ? decorator(target, key, result) : decorator(result)) || result;\n  if (kind && result)\n    __defProp(target, key, result);\n  return result;\n};\nvar __superGet = (cls, obj, key) => __reflectGet(__getProtoOf(cls), key, obj);\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\nvar __await = function(promise, isYieldStar) {\n  this[0] = promise;\n  this[1] = isYieldStar;\n};\nvar __yieldStar = (value) => {\n  var obj = value[__knownSymbol(\"asyncIterator\")];\n  var isAwait = false;\n  var method;\n  var it = {};\n  if (obj == null) {\n    obj = value[__knownSymbol(\"iterator\")]();\n    method = (k) => it[k] = (x) => obj[k](x);\n  } else {\n    obj = obj.call(value);\n    method = (k) => it[k] = (v) => {\n      if (isAwait) {\n        isAwait = false;\n        if (k === \"throw\")\n          throw v;\n        return v;\n      }\n      isAwait = true;\n      return {\n        done: false,\n        value: new __await(new Promise((resolve) => {\n          var x = obj[k](v);\n          if (!(x instanceof Object))\n            throw TypeError(\"Object expected\");\n          resolve(x);\n        }), 1)\n      };\n    };\n  }\n  return it[__knownSymbol(\"iterator\")] = () => it, method(\"next\"), \"throw\" in obj ? method(\"throw\") : it.throw = (x) => {\n    throw x;\n  }, \"return\" in obj && method(\"return\"), it;\n};\n\n// packages/ag-charts-community/src/options/chart/errorBarOptions.ts\nvar AgErrorBarSupportedSeriesTypes = [\"bar\", \"line\", \"scatter\"];\n\n// packages/ag-charts-community/src/options/agChartOptions.ts\nvar __FORCE_MODULE_DETECTION = 0;\n\n// packages/ag-charts-community/src/util/time/index.ts\nvar time_exports = {};\n__export(time_exports, {\n  day: () => day,\n  friday: () => friday,\n  hour: () => hour,\n  millisecond: () => millisecond,\n  minute: () => minute,\n  monday: () => monday,\n  month: () => month,\n  saturday: () => saturday,\n  second: () => second,\n  sunday: () => sunday,\n  thursday: () => thursday,\n  tuesday: () => tuesday,\n  utcDay: () => utcDay,\n  utcHour: () => utcHour,\n  utcMinute: () => utcMinute,\n  utcMonth: () => utcMonth,\n  utcYear: () => utcYear,\n  wednesday: () => wednesday,\n  year: () => year\n});\n\n// packages/ag-charts-community/src/util/time/interval.ts\nvar TimeInterval = class {\n  constructor(_encode, _decode, _rangeCallback) {\n    this._encode = _encode;\n    this._decode = _decode;\n    this._rangeCallback = _rangeCallback;\n  }\n  /**\n   * Returns a new date representing the latest interval boundary date before or equal to date.\n   * For example, `day.floor(date)` typically returns 12:00 AM local time on the given date.\n   * @param date\n   */\n  floor(date) {\n    const d = new Date(date);\n    const e = this._encode(d);\n    return this._decode(e);\n  }\n  /**\n   * Returns a new date representing the earliest interval boundary date after or equal to date.\n   * @param date\n   */\n  ceil(date) {\n    const d = new Date(Number(date) - 1);\n    const e = this._encode(d);\n    return this._decode(e + 1);\n  }\n  /**\n   * Returns an array of dates representing every interval boundary after or equal to start (inclusive) and before stop (exclusive).\n   * @param start Range start.\n   * @param stop Range end.\n   * @param extend If specified, the requested range will be extended to the closest \"nice\" values.\n   */\n  range(start, stop, extend) {\n    var _a;\n    const rangeCallback = (_a = this._rangeCallback) == null ? void 0 : _a.call(this, start, stop);\n    const e0 = this._encode(extend ? this.floor(start) : this.ceil(start));\n    const e1 = this._encode(extend ? this.ceil(stop) : this.floor(stop));\n    if (e1 < e0) {\n      return [];\n    }\n    const range3 = [];\n    for (let e = e0; e <= e1; e++) {\n      const d = this._decode(e);\n      range3.push(d);\n    }\n    rangeCallback == null ? void 0 : rangeCallback();\n    return range3;\n  }\n};\nvar CountableTimeInterval = class extends TimeInterval {\n  getOffset(snapTo, step) {\n    const s = typeof snapTo === \"number\" || snapTo instanceof Date ? this._encode(new Date(snapTo)) : 0;\n    return Math.floor(s) % step;\n  }\n  /**\n   * Returns a filtered view of this interval representing every step'th date.\n   * It can be a number of minutes, hours, days etc.\n   * Must be a positive integer.\n   * @param step\n   */\n  every(step, options) {\n    let offset4 = 0;\n    let rangeCallback;\n    const { snapTo = \"start\" } = options != null ? options : {};\n    if (typeof snapTo === \"string\") {\n      const initialOffset = offset4;\n      rangeCallback = (start, stop) => {\n        const s = snapTo === \"start\" ? start : stop;\n        offset4 = this.getOffset(s, step);\n        return () => offset4 = initialOffset;\n      };\n    } else if (typeof snapTo === \"number\") {\n      offset4 = this.getOffset(new Date(snapTo), step);\n    } else if (snapTo instanceof Date) {\n      offset4 = this.getOffset(snapTo, step);\n    }\n    const encode13 = (date) => {\n      const e = this._encode(date);\n      return Math.floor((e - offset4) / step);\n    };\n    const decode13 = (encoded) => {\n      return this._decode(encoded * step + offset4);\n    };\n    return new TimeInterval(encode13, decode13, rangeCallback);\n  }\n};\n\n// packages/ag-charts-community/src/util/time/millisecond.ts\nfunction encode(date) {\n  return date.getTime();\n}\nfunction decode(encoded) {\n  return new Date(encoded);\n}\nvar millisecond = new CountableTimeInterval(encode, decode);\nvar millisecond_default = millisecond;\n\n// packages/ag-charts-community/src/util/time/duration.ts\nvar epochYear = (/* @__PURE__ */ new Date(0)).getFullYear();\nvar durationSecond = 1e3;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\n// packages/ag-charts-community/src/util/time/second.ts\nvar offset = (/* @__PURE__ */ new Date()).getTimezoneOffset() * durationMinute;\nfunction encode2(date) {\n  return Math.floor((date.getTime() - offset) / durationSecond);\n}\nfunction decode2(encoded) {\n  return new Date(offset + encoded * durationSecond);\n}\nvar second = new CountableTimeInterval(encode2, decode2);\nvar second_default = second;\n\n// packages/ag-charts-community/src/util/time/minute.ts\nvar offset2 = (/* @__PURE__ */ new Date()).getTimezoneOffset() * durationMinute;\nfunction encode3(date) {\n  return Math.floor((date.getTime() - offset2) / durationMinute);\n}\nfunction decode3(encoded) {\n  return new Date(offset2 + encoded * durationMinute);\n}\nvar minute = new CountableTimeInterval(encode3, decode3);\nvar minute_default = minute;\n\n// packages/ag-charts-community/src/util/time/hour.ts\nvar offset3 = (/* @__PURE__ */ new Date()).getTimezoneOffset() * durationMinute;\nfunction encode4(date) {\n  return Math.floor((date.getTime() - offset3) / durationHour);\n}\nfunction decode4(encoded) {\n  return new Date(offset3 + encoded * durationHour);\n}\nvar hour = new CountableTimeInterval(encode4, decode4);\nvar hour_default = hour;\n\n// packages/ag-charts-community/src/util/time/day.ts\nfunction encode5(date) {\n  const tzOffsetMs = date.getTimezoneOffset() * durationMinute;\n  return Math.floor((date.getTime() - tzOffsetMs) / durationDay);\n}\nfunction decode5(encoded) {\n  const d = new Date(1970, 0, 1);\n  d.setDate(d.getDate() + encoded);\n  return d;\n}\nvar day = new CountableTimeInterval(encode5, decode5);\nvar day_default = day;\n\n// packages/ag-charts-community/src/util/time/week.ts\nfunction weekday(weekStart) {\n  const thursday2 = 4;\n  const dayShift = (7 + weekStart - thursday2) % 7;\n  function encode13(date) {\n    const tzOffsetMs = date.getTimezoneOffset() * durationMinute;\n    return Math.floor((date.getTime() - tzOffsetMs) / durationWeek - dayShift / 7);\n  }\n  function decode13(encoded) {\n    const d = new Date(1970, 0, 1);\n    d.setDate(d.getDate() + encoded * 7 + dayShift);\n    return d;\n  }\n  return new CountableTimeInterval(encode13, decode13);\n}\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\nvar week_default = sunday;\n\n// packages/ag-charts-community/src/util/time/month.ts\nfunction encode6(date) {\n  return date.getFullYear() * 12 + date.getMonth();\n}\nfunction decode6(encoded) {\n  const year2 = Math.floor(encoded / 12);\n  const month2 = encoded - year2 * 12;\n  return new Date(year2, month2, 1);\n}\nvar month = new CountableTimeInterval(encode6, decode6);\nvar month_default = month;\n\n// packages/ag-charts-community/src/util/time/year.ts\nfunction encode7(date) {\n  return date.getFullYear();\n}\nfunction decode7(encoded) {\n  const d = /* @__PURE__ */ new Date();\n  d.setFullYear(encoded);\n  d.setMonth(0, 1);\n  d.setHours(0, 0, 0, 0);\n  return d;\n}\nvar year = new CountableTimeInterval(encode7, decode7);\nvar year_default = year;\n\n// packages/ag-charts-community/src/util/time/utcMinute.ts\nfunction encode8(date) {\n  return Math.floor(date.getTime() / durationMinute);\n}\nfunction decode8(encoded) {\n  return new Date(encoded * durationMinute);\n}\nvar utcMinute = new CountableTimeInterval(encode8, decode8);\n\n// packages/ag-charts-community/src/util/time/utcHour.ts\nfunction encode9(date) {\n  return Math.floor(date.getTime() / durationHour);\n}\nfunction decode9(encoded) {\n  return new Date(encoded * durationHour);\n}\nvar utcHour = new CountableTimeInterval(encode9, decode9);\n\n// packages/ag-charts-community/src/util/time/utcDay.ts\nfunction encode10(date) {\n  return Math.floor(date.getTime() / durationDay);\n}\nfunction decode10(encoded) {\n  const d = /* @__PURE__ */ new Date(0);\n  d.setUTCDate(d.getUTCDate() + encoded);\n  d.setUTCHours(0, 0, 0, 0);\n  return d;\n}\nvar utcDay = new CountableTimeInterval(encode10, decode10);\n\n// packages/ag-charts-community/src/util/time/utcMonth.ts\nfunction encode11(date) {\n  return date.getUTCFullYear() * 12 + date.getUTCMonth();\n}\nfunction decode11(encoded) {\n  const year2 = Math.floor(encoded / 12);\n  const month2 = encoded - year2 * 12;\n  return new Date(Date.UTC(year2, month2, 1));\n}\nvar utcMonth = new CountableTimeInterval(encode11, decode11);\n\n// packages/ag-charts-community/src/util/time/utcYear.ts\nfunction encode12(date) {\n  return date.getUTCFullYear();\n}\nfunction decode12(encoded) {\n  const d = /* @__PURE__ */ new Date();\n  d.setUTCFullYear(encoded);\n  d.setUTCMonth(0, 1);\n  d.setUTCHours(0, 0, 0, 0);\n  return d;\n}\nvar utcYear = new CountableTimeInterval(encode12, decode12);\n\n// packages/ag-charts-community/src/module/enterpriseModule.ts\nvar enterpriseModule = {\n  isEnterprise: false\n};\n\n// packages/ag-charts-community/src/module/module.ts\nvar BaseModuleInstance = class {\n  constructor() {\n    this.destroyFns = [];\n  }\n  destroy() {\n    for (const destroyFn of this.destroyFns) {\n      destroyFn();\n    }\n  }\n};\nvar REGISTERED_MODULES = [];\nfunction registerModule(module) {\n  const otherModule = REGISTERED_MODULES.find((other) => {\n    return module.type === other.type && module.optionsKey === other.optionsKey && module.identifier === other.identifier;\n  });\n  if (otherModule) {\n    if (module.packageType === \"enterprise\" && otherModule.packageType === \"community\") {\n      const index = REGISTERED_MODULES.indexOf(otherModule);\n      REGISTERED_MODULES.splice(index, 1, module);\n    } else {\n    }\n  } else {\n    REGISTERED_MODULES.push(module);\n  }\n}\nfunction hasRegisteredEnterpriseModules() {\n  return REGISTERED_MODULES.some((m) => m.packageType === \"enterprise\");\n}\nvar MODULE_CONFLICTS = /* @__PURE__ */ new Map();\nfunction registerModuleConflicts(source, targets) {\n  MODULE_CONFLICTS.set(source, targets);\n}\n\n// packages/ag-charts-community/src/util/array.ts\nfunction extent(values) {\n  const { length } = values;\n  if (length === 0) {\n    return void 0;\n  }\n  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < length; i++) {\n    let v = values[i];\n    if (v instanceof Date) {\n      v = v.getTime();\n    }\n    if (typeof v !== \"number\") {\n      continue;\n    }\n    if (v < min) {\n      min = v;\n    }\n    if (v > max) {\n      max = v;\n    }\n  }\n  const extent2 = [min, max];\n  if (extent2.some((v) => !isFinite(v))) {\n    return void 0;\n  }\n  return extent2;\n}\nfunction normalisedExtent(d, min, max) {\n  return normalisedExtentWithMetadata(d, min, max).extent;\n}\nfunction normalisedExtentWithMetadata(d, min, max) {\n  var _a;\n  let clipped = false;\n  if (d.length > 2) {\n    d = (_a = extent(d)) != null ? _a : [NaN, NaN];\n  }\n  if (!isNaN(min)) {\n    clipped || (clipped = min > d[0]);\n    d = [min, d[1]];\n  }\n  if (!isNaN(max)) {\n    clipped || (clipped = max < d[1]);\n    d = [d[0], max];\n  }\n  if (d[0] > d[1]) {\n    d = [];\n  }\n  return { extent: d, clipped };\n}\nfunction arraysEqual(a, b) {\n  if (a == null || b == null || a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (Array.isArray(a[i]) && Array.isArray(b[i])) {\n      if (!arraysEqual(a[i], b[i])) {\n        return false;\n      }\n    } else if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction toArray(value) {\n  if (typeof value === \"undefined\") {\n    return [];\n  }\n  return Array.isArray(value) ? value : [value];\n}\nfunction unique(array) {\n  return Array.from(new Set(array));\n}\n\n// packages/ag-charts-community/src/util/function.ts\nvar doOnceFlags = {};\nfunction doOnce(func, key) {\n  if (doOnceFlags[key]) {\n    return;\n  }\n  func();\n  doOnceFlags[key] = true;\n}\n\n// packages/ag-charts-community/src/util/logger.ts\nvar Logger = {\n  log(...logContent) {\n    console.log(...logContent);\n  },\n  warn(message, ...logContent) {\n    console.warn(`AG Charts - ${message}`, ...logContent);\n  },\n  error(message, ...logContent) {\n    if (typeof message === \"object\") {\n      console.error(`AG Charts error`, message, ...logContent);\n    } else {\n      console.error(`AG Charts - ${message}`, ...logContent);\n    }\n  },\n  table(...logContent) {\n    console.table(...logContent);\n  },\n  warnOnce(message, ...logContent) {\n    doOnce(() => Logger.warn(message, ...logContent), `Logger.warn: ${message}`);\n  },\n  errorOnce(message, ...logContent) {\n    doOnce(() => Logger.error(message, ...logContent), `Logger.error: ${message}`);\n  }\n};\n\n// packages/ag-charts-community/src/util/window.ts\nfunction windowValue(name) {\n  const WINDOW = typeof window !== \"undefined\" ? window : (\n    // typeof global !== 'undefined' ? (global as any) :\n    void 0\n  );\n  return WINDOW == null ? void 0 : WINDOW[name];\n}\n\n// packages/ag-charts-community/src/util/debug.ts\nvar LONG_TIME_PERIOD_THRESHOLD = 2e3;\nvar timeOfLastLog = Date.now();\nvar logTimeGap = () => {\n  const timeSinceLastLog = Date.now() - timeOfLastLog;\n  if (timeSinceLastLog > LONG_TIME_PERIOD_THRESHOLD) {\n    const prettyDuration = (Math.floor(timeSinceLastLog / 100) / 10).toFixed(1);\n    Logger.log(`**** ${prettyDuration}s since last log message ****`);\n  }\n  timeOfLastLog = Date.now();\n};\nvar Debug = {\n  create(...debugSelectors) {\n    return (...logContent) => {\n      if (Debug.check(...debugSelectors)) {\n        if (typeof logContent[0] === \"function\") {\n          logContent = toArray(logContent[0]());\n        }\n        logTimeGap();\n        Logger.log(...logContent);\n      }\n    };\n  },\n  check(...debugSelectors) {\n    if (debugSelectors.length === 0) {\n      debugSelectors.push(true);\n    }\n    const chartDebug = toArray(windowValue(\"agChartsDebug\"));\n    return chartDebug.some((selector) => debugSelectors.includes(selector));\n  }\n};\n\n// packages/ag-charts-community/src/util/decorator.ts\nvar BREAK_TRANSFORM_CHAIN = Symbol(\"BREAK\");\nvar CONFIG_KEY = \"__decorator_config\";\nfunction initialiseConfig(target, propertyKeyOrSymbol) {\n  if (Object.getOwnPropertyDescriptor(target, CONFIG_KEY) == null) {\n    Object.defineProperty(target, CONFIG_KEY, { value: {} });\n  }\n  const config = target[CONFIG_KEY];\n  const propertyKey = propertyKeyOrSymbol.toString();\n  if (typeof config[propertyKey] !== \"undefined\") {\n    return config[propertyKey];\n  }\n  const valuesMap = /* @__PURE__ */ new WeakMap();\n  config[propertyKey] = { setters: [], getters: [], valuesMap };\n  const descriptor = Object.getOwnPropertyDescriptor(target, propertyKeyOrSymbol);\n  const prevSet = descriptor == null ? void 0 : descriptor.set;\n  const prevGet = descriptor == null ? void 0 : descriptor.get;\n  const getter = function() {\n    let value = prevGet ? prevGet.call(this) : valuesMap.get(this);\n    for (const transformFn of config[propertyKey].getters) {\n      value = transformFn(this, propertyKeyOrSymbol, value);\n      if (value === BREAK_TRANSFORM_CHAIN) {\n        return;\n      }\n    }\n    return value;\n  };\n  const setter = function(value) {\n    const { setters } = config[propertyKey];\n    let oldValue;\n    if (setters.some((f) => f.length > 2)) {\n      oldValue = prevGet ? prevGet.call(this) : valuesMap.get(this);\n    }\n    for (const transformFn of setters) {\n      value = transformFn(this, propertyKeyOrSymbol, value, oldValue);\n      if (value === BREAK_TRANSFORM_CHAIN) {\n        return;\n      }\n    }\n    if (prevSet) {\n      prevSet.call(this, value);\n    } else {\n      valuesMap.set(this, value);\n    }\n  };\n  Object.defineProperty(target, propertyKeyOrSymbol, {\n    set: setter,\n    get: getter,\n    enumerable: true,\n    configurable: false\n  });\n  return config[propertyKey];\n}\nfunction addTransformToInstanceProperty(setTransform, getTransform, configMetadata) {\n  return (target, propertyKeyOrSymbol) => {\n    const config = initialiseConfig(target, propertyKeyOrSymbol);\n    config.setters.push(setTransform);\n    if (getTransform) {\n      config.getters.unshift(getTransform);\n    }\n    if (configMetadata) {\n      Object.assign(config, configMetadata);\n    }\n  };\n}\nfunction isDecoratedObject(target) {\n  return typeof target !== \"undefined\" && CONFIG_KEY in target;\n}\nfunction listDecoratedProperties(target) {\n  const targets = /* @__PURE__ */ new Set();\n  while (isDecoratedObject(target)) {\n    targets.add(target == null ? void 0 : target[CONFIG_KEY]);\n    target = Object.getPrototypeOf(target);\n  }\n  return Array.from(targets).flatMap((configMap) => Object.keys(configMap));\n}\nfunction extractDecoratedProperties(target) {\n  return listDecoratedProperties(target).reduce((result, key) => {\n    var _a;\n    result[key] = (_a = target[key]) != null ? _a : null;\n    return result;\n  }, {});\n}\nfunction extractDecoratedPropertyMetadata(target, propertyKeyOrSymbol) {\n  const propertyKey = propertyKeyOrSymbol.toString();\n  while (isDecoratedObject(target)) {\n    const config = target[CONFIG_KEY];\n    if (Object.hasOwn(config, propertyKey)) {\n      return config[propertyKey];\n    }\n    target = Object.getPrototypeOf(target);\n  }\n}\n\n// packages/ag-charts-community/src/util/deprecation.ts\nfunction createDeprecationWarning() {\n  return (key, message) => {\n    const msg = [`Property [${key}] is deprecated.`, message].filter(Boolean).join(\" \");\n    Logger.warnOnce(msg);\n  };\n}\nfunction Deprecated(message, opts) {\n  const warnDeprecated = createDeprecationWarning();\n  const def = opts == null ? void 0 : opts.default;\n  return addTransformToInstanceProperty((_, key, value) => {\n    if (value !== def) {\n      warnDeprecated(key.toString(), message);\n    }\n    return value;\n  });\n}\nfunction DeprecatedAndRenamedTo(newPropName, mapValue) {\n  const warnDeprecated = createDeprecationWarning();\n  return addTransformToInstanceProperty(\n    (target, key, value) => {\n      if (value !== target[newPropName]) {\n        warnDeprecated(key.toString(), `Use [${newPropName}] instead.`);\n        target[newPropName] = mapValue ? mapValue(value) : value;\n      }\n      return BREAK_TRANSFORM_CHAIN;\n    },\n    (target, key) => {\n      warnDeprecated(key.toString(), `Use [${newPropName}] instead.`);\n      return target[newPropName];\n    }\n  );\n}\n\n// packages/ag-charts-community/src/scene/changeDetectable.ts\nvar RedrawType = /* @__PURE__ */ ((RedrawType2) => {\n  RedrawType2[RedrawType2[\"NONE\"] = 0] = \"NONE\";\n  RedrawType2[RedrawType2[\"TRIVIAL\"] = 1] = \"TRIVIAL\";\n  RedrawType2[RedrawType2[\"MINOR\"] = 2] = \"MINOR\";\n  RedrawType2[RedrawType2[\"MAJOR\"] = 3] = \"MAJOR\";\n  return RedrawType2;\n})(RedrawType || {});\nfunction functionConstructorAvailable() {\n  try {\n    new Function(\"return true\");\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar STRING_FUNCTION_USEABLE = functionConstructorAvailable();\nfunction SceneChangeDetection(opts) {\n  const { changeCb, convertor } = opts != null ? opts : {};\n  return function(target, key) {\n    const privateKey = `__${key}`;\n    if (target[key]) {\n      return;\n    }\n    if (STRING_FUNCTION_USEABLE && changeCb == null && convertor == null) {\n      prepareFastGetSet(target, key, privateKey, opts);\n    } else {\n      prepareSlowGetSet(target, key, privateKey, opts);\n    }\n  };\n}\nfunction prepareFastGetSet(target, key, privateKey, opts) {\n  const { redraw = 1 /* TRIVIAL */, type = \"normal\", checkDirtyOnAssignment = false } = opts != null ? opts : {};\n  const setterJs = new Function(\n    \"value\",\n    `\n        const oldValue = this.${privateKey};\n        if (value !== oldValue) {\n            this.${privateKey} = value;\n            ${type === \"normal\" ? `this.markDirty(this, ${redraw});` : \"\"}\n            ${type === \"transform\" ? `this.markDirtyTransform(${redraw});` : \"\"}\n            ${type === \"path\" ? `if (!this._dirtyPath) { this._dirtyPath = true; this.markDirty(this, ${redraw}); }` : \"\"}\n            ${type === \"font\" ? `if (!this._dirtyFont) { this._dirtyFont = true; this.markDirty(this, ${redraw}); }` : \"\"}\n        }\n        ${checkDirtyOnAssignment ? `if (value != null && value._dirty > ${0 /* NONE */}) { this.markDirty(value, value._dirty); }` : \"\"}\n`\n  );\n  const getterJs = new Function(`return this.${privateKey};`);\n  Object.defineProperty(target, key, {\n    set: setterJs,\n    get: getterJs,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction prepareSlowGetSet(target, key, privateKey, opts) {\n  const {\n    redraw = 1 /* TRIVIAL */,\n    type = \"normal\",\n    changeCb,\n    convertor,\n    checkDirtyOnAssignment = false\n  } = opts != null ? opts : {};\n  const setter = function(value) {\n    const oldValue = this[privateKey];\n    value = convertor ? convertor(value) : value;\n    if (value !== oldValue) {\n      this[privateKey] = value;\n      if (type === \"normal\")\n        this.markDirty(this, redraw);\n      if (type === \"transform\")\n        this.markDirtyTransform(redraw);\n      if (type === \"path\" && !this._dirtyPath) {\n        this._dirtyPath = true;\n        this.markDirty(this, redraw);\n      }\n      if (type === \"font\" && !this._dirtyFont) {\n        this._dirtyFont = true;\n        this.markDirty(this, redraw);\n      }\n      if (changeCb)\n        changeCb(this);\n    }\n    if (checkDirtyOnAssignment && value != null && value._dirty > 0 /* NONE */)\n      this.markDirty(value, value._dirty);\n  };\n  const getter = function() {\n    return this[privateKey];\n  };\n  Object.defineProperty(target, key, {\n    set: setter,\n    get: getter,\n    enumerable: true,\n    configurable: true\n  });\n}\nvar ChangeDetectable = class {\n  constructor() {\n    this._dirty = 3 /* MAJOR */;\n  }\n  markDirty(_source, type = 1 /* TRIVIAL */) {\n    if (this._dirty > type) {\n      return;\n    }\n    this._dirty = type;\n  }\n  markClean(_opts) {\n    this._dirty = 0 /* NONE */;\n  }\n  isDirty() {\n    return this._dirty > 0 /* NONE */;\n  }\n};\n\n// packages/ag-charts-community/src/util/type-guards.ts\nfunction isDefined(val) {\n  return val != null;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\nfunction isDate(value) {\n  return value instanceof Date;\n}\nfunction isValidDate(value) {\n  return isDate(value) && !isNaN(Number(value));\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null && !isArray(value);\n}\nfunction isObjectLike(value) {\n  return typeof value === \"object\" && value !== null;\n}\nfunction isPlainObject(value) {\n  return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nfunction isString(value) {\n  return typeof value === \"string\";\n}\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isFiniteNumber(value) {\n  return isNumber(value) && Number.isFinite(value);\n}\nfunction isHtmlElement(value) {\n  return typeof window !== \"undefined\" && value instanceof HTMLElement;\n}\n\n// packages/ag-charts-community/src/util/properties.ts\nvar BaseProperties = class extends ChangeDetectable {\n  constructor(className) {\n    super();\n    this.className = className;\n  }\n  set(properties) {\n    const keys = new Set(Object.keys(properties));\n    for (const propertyKey of listDecoratedProperties(this)) {\n      if (keys.has(propertyKey)) {\n        const value = properties[propertyKey];\n        const self = this;\n        if (isProperties(self[propertyKey])) {\n          self[propertyKey] = self[propertyKey] instanceof PropertiesArray ? self[propertyKey].reset(value) : self[propertyKey].set(value);\n        } else {\n          self[propertyKey] = value;\n        }\n        keys.delete(propertyKey);\n      }\n    }\n    for (const unknownKey of keys) {\n      const { className = this.constructor.name } = this;\n      Logger.warn(`unable to set [${unknownKey}] in ${className} - property is unknown`);\n    }\n    return this;\n  }\n  isValid() {\n    return listDecoratedProperties(this).every((propertyKey) => {\n      const { optional } = extractDecoratedPropertyMetadata(this, propertyKey);\n      return optional || typeof this[propertyKey] !== \"undefined\";\n    });\n  }\n  toJson() {\n    return listDecoratedProperties(this).reduce((object, propertyKey) => {\n      object[propertyKey] = this[propertyKey];\n      return object;\n    }, {});\n  }\n};\nvar PropertiesArray = class _PropertiesArray extends Array {\n  constructor(itemFactory, ...properties) {\n    super(properties.length);\n    Object.defineProperty(this, \"itemFactory\", { value: itemFactory, enumerable: false, configurable: false });\n    this.set(properties);\n  }\n  set(properties) {\n    if (isArray(properties)) {\n      this.length = properties.length;\n      for (let i = 0; i < properties.length; i++) {\n        this[i] = new this.itemFactory().set(properties[i]);\n      }\n    }\n    return this;\n  }\n  reset(properties) {\n    return new _PropertiesArray(this.itemFactory, ...properties);\n  }\n};\nfunction isProperties(value) {\n  return value instanceof BaseProperties || value instanceof PropertiesArray;\n}\n\n// packages/ag-charts-community/src/util/json.ts\nvar CLASS_INSTANCE_TYPE = \"class-instance\";\nfunction jsonDiff(source, target) {\n  if (isArray(target)) {\n    if (!isArray(source) || source.length !== target.length || target.some((v, i) => jsonDiff(source[i], v) != null)) {\n      return target;\n    }\n  } else if (isObject(target)) {\n    if (!isObject(source) || !isPlainObject(target)) {\n      return target;\n    }\n    const result = {};\n    const allKeys = /* @__PURE__ */ new Set([\n      ...Object.keys(source),\n      ...Object.keys(target)\n    ]);\n    for (const key of allKeys) {\n      if (source[key] === target[key]) {\n        continue;\n      }\n      if (typeof source[key] !== typeof target[key]) {\n        result[key] = target[key];\n      } else {\n        const diff2 = jsonDiff(source[key], target[key]);\n        if (diff2 !== null) {\n          result[key] = diff2;\n        }\n      }\n    }\n    return Object.keys(result).length ? result : null;\n  } else if (source !== target) {\n    return target;\n  }\n  return null;\n}\nfunction jsonClone(source) {\n  if (isArray(source)) {\n    return source.map(jsonClone);\n  }\n  if (isPlainObject(source)) {\n    return Object.entries(source).reduce((result, [key, value]) => {\n      result[key] = jsonClone(value);\n      return result;\n    }, {});\n  }\n  return source;\n}\nvar DELETE = Symbol(\"<delete-property>\");\nvar NOT_SPECIFIED = Symbol(\"<unspecified-property>\");\nfunction jsonMerge(json, opts) {\n  var _a;\n  const avoidDeepClone = (_a = opts == null ? void 0 : opts.avoidDeepClone) != null ? _a : [];\n  const jsonTypes = json.map((v) => classify(v));\n  if (jsonTypes.some((v) => v === \"array\")) {\n    const finalValue = json[json.length - 1];\n    if (Array.isArray(finalValue)) {\n      return finalValue.map((v) => {\n        const type = classify(v);\n        if (type === \"array\")\n          return jsonMerge([[], v], opts);\n        if (type === \"object\")\n          return jsonMerge([{}, v], opts);\n        return v;\n      });\n    }\n    return finalValue;\n  }\n  const result = {};\n  const props = new Set(json.map((v) => v != null ? Object.keys(v) : []).reduce((r, n) => r.concat(n), []));\n  for (const nextProp of props) {\n    const values = json.map((j) => {\n      if (j != null && typeof j === \"object\" && nextProp in j) {\n        return j[nextProp];\n      }\n      return NOT_SPECIFIED;\n    }).filter((v) => v !== NOT_SPECIFIED);\n    if (values.length === 0) {\n      continue;\n    }\n    const lastValue = values[values.length - 1];\n    if (lastValue === DELETE) {\n      continue;\n    }\n    const types = values.map((v) => classify(v));\n    const type = types[0];\n    if (types.some((t) => t !== type)) {\n      result[nextProp] = lastValue;\n      continue;\n    }\n    if ((type === \"array\" || type === \"object\") && !avoidDeepClone.includes(nextProp)) {\n      result[nextProp] = jsonMerge(values, opts);\n    } else if (type === \"array\") {\n      result[nextProp] = [...lastValue];\n    } else {\n      result[nextProp] = lastValue;\n    }\n  }\n  return result;\n}\nfunction jsonApply(target, source, params = {}) {\n  var _a, _b, _c;\n  const {\n    path,\n    matcherPath = path ? path.replace(/(\\[[0-9+]+])/i, \"[]\") : void 0,\n    skip = [],\n    constructors = {},\n    constructedArrays = /* @__PURE__ */ new WeakMap(),\n    allowedTypes = {},\n    idx\n  } = params;\n  if (target == null) {\n    throw new Error(`AG Charts - target is uninitialised: ${path != null ? path : \"<root>\"}`);\n  }\n  if (source == null) {\n    return target;\n  }\n  if (isProperties(target)) {\n    return target.set(source);\n  }\n  const targetAny = target;\n  if (idx != null && \"_declarationOrder\" in targetAny) {\n    targetAny[\"_declarationOrder\"] = idx;\n  }\n  const targetType = classify(target);\n  for (const property in source) {\n    const propertyMatcherPath = `${matcherPath ? matcherPath + \".\" : \"\"}${property}`;\n    if (skip.indexOf(propertyMatcherPath) >= 0) {\n      continue;\n    }\n    const newValue = source[property];\n    const propertyPath = `${path ? path + \".\" : \"\"}${property}`;\n    const targetClass = targetAny.constructor;\n    const currentValue = targetAny[property];\n    let ctr = (_a = constructors[propertyMatcherPath]) != null ? _a : constructors[property];\n    try {\n      const currentValueType = classify(currentValue);\n      const newValueType = classify(newValue);\n      if (targetType === CLASS_INSTANCE_TYPE && !(property in target || Object.hasOwn(targetAny, property))) {\n        Logger.warn(`unable to set [${propertyPath}] in ${targetClass == null ? void 0 : targetClass.name} - property is unknown`);\n        continue;\n      }\n      const allowableTypes = (_b = allowedTypes[propertyMatcherPath]) != null ? _b : [currentValueType];\n      if (currentValueType === CLASS_INSTANCE_TYPE && newValueType === \"object\") {\n      } else if (currentValueType != null && newValueType != null && !allowableTypes.includes(newValueType)) {\n        Logger.warn(\n          `unable to set [${propertyPath}] in ${targetClass == null ? void 0 : targetClass.name} - can't apply type of [${newValueType}], allowed types are: [${allowableTypes}]`\n        );\n        continue;\n      }\n      if (newValueType === \"array\") {\n        ctr = (_c = ctr != null ? ctr : constructedArrays.get(currentValue)) != null ? _c : constructors[`${propertyMatcherPath}[]`];\n        if (isProperties(targetAny[property])) {\n          targetAny[property].set(newValue);\n        } else if (ctr != null) {\n          const newValueArray = newValue;\n          targetAny[property] = newValueArray.map(\n            (v, idx2) => jsonApply(new ctr(), v, __spreadProps(__spreadValues({}, params), {\n              path: propertyPath,\n              matcherPath: propertyMatcherPath + \"[]\",\n              idx: idx2\n            }))\n          );\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else if (newValueType === CLASS_INSTANCE_TYPE) {\n        targetAny[property] = newValue;\n      } else if (newValueType === \"object\") {\n        if (currentValue != null) {\n          jsonApply(currentValue, newValue, __spreadProps(__spreadValues({}, params), {\n            path: propertyPath,\n            matcherPath: propertyMatcherPath,\n            idx: void 0\n          }));\n        } else if (isProperties(targetAny[property])) {\n          targetAny[property].set(newValue);\n        } else if (ctr != null) {\n          const obj = new ctr();\n          if (isProperties(obj)) {\n            targetAny[property] = obj.set(newValue);\n          } else {\n            targetAny[property] = jsonApply(obj, newValue, __spreadProps(__spreadValues({}, params), {\n              path: propertyPath,\n              matcherPath: propertyMatcherPath,\n              idx: void 0\n            }));\n          }\n        } else {\n          targetAny[property] = newValue;\n        }\n      } else if (isProperties(targetAny[property])) {\n        targetAny[property].set(newValue);\n      } else {\n        targetAny[property] = newValue;\n      }\n    } catch (error) {\n      Logger.warn(`unable to set [${propertyPath}] in [${targetClass == null ? void 0 : targetClass.name}]; nested error is: ${error.message}`);\n    }\n  }\n  return target;\n}\nfunction jsonWalk(json, visit, opts, ...jsons) {\n  var _a;\n  if (isArray(json)) {\n    visit(json, ...jsons);\n    json.forEach((node, index) => {\n      jsonWalk(node, visit, opts, ...keyMapper(jsons, index));\n    });\n  } else if (isPlainObject(json)) {\n    visit(json, ...jsons);\n    for (const key of Object.keys(json)) {\n      if ((_a = opts == null ? void 0 : opts.skip) == null ? void 0 : _a.includes(key)) {\n        continue;\n      }\n      const value = json[key];\n      if (isArray(value) || isPlainObject(value)) {\n        jsonWalk(value, visit, opts, ...keyMapper(jsons, key));\n      }\n    }\n  }\n}\nfunction keyMapper(data, key) {\n  return data.map((dataObject) => dataObject == null ? void 0 : dataObject[key]);\n}\nfunction classify(value) {\n  if (value == null) {\n    return null;\n  }\n  if (isHtmlElement(value) || isDate(value)) {\n    return \"primitive\";\n  }\n  if (isArray(value)) {\n    return \"array\";\n  }\n  if (isObject(value)) {\n    return isPlainObject(value) ? \"object\" : CLASS_INSTANCE_TYPE;\n  }\n  if (isFunction(value)) {\n    return \"function\";\n  }\n  return \"primitive\";\n}\n\n// packages/ag-charts-community/src/util/angle.ts\nvar twoPi = Math.PI * 2;\nfunction normalizeAngle360(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  radians %= twoPi;\n  return radians;\n}\nfunction normalizeAngle360Inclusive(radians) {\n  radians %= twoPi;\n  radians += twoPi;\n  if (radians !== twoPi) {\n    radians %= twoPi;\n  }\n  return radians;\n}\nfunction normalizeAngle180(radians) {\n  radians %= twoPi;\n  if (radians < -Math.PI) {\n    radians += twoPi;\n  } else if (radians >= Math.PI) {\n    radians -= twoPi;\n  }\n  return radians;\n}\nfunction toRadians(degrees) {\n  return degrees / 180 * Math.PI;\n}\nfunction toDegrees(radians) {\n  return radians / Math.PI * 180;\n}\nfunction angleBetween(angle0, angle1) {\n  angle0 = normalizeAngle360(angle0);\n  angle1 = normalizeAngle360(angle1);\n  return angle1 - angle0 + (angle0 > angle1 ? 2 * Math.PI : 0);\n}\n\n// packages/ag-charts-community/src/scale/invalidating.ts\nvar Invalidating = (target, propertyKey) => {\n  const mappedProperty = Symbol(String(propertyKey));\n  target[mappedProperty] = void 0;\n  Object.defineProperty(target, propertyKey, {\n    get() {\n      return this[mappedProperty];\n    },\n    set(newValue) {\n      const oldValue = this[mappedProperty];\n      if (oldValue !== newValue) {\n        this[mappedProperty] = newValue;\n        this.invalid = true;\n      }\n    },\n    enumerable: true,\n    configurable: false\n  });\n};\n\n// packages/ag-charts-community/src/scale/bandScale.ts\nfunction clamp(x, min, max) {\n  return Math.max(min, Math.min(max, x));\n}\nvar BandScale = class {\n  constructor() {\n    this.type = \"band\";\n    this.invalid = true;\n    this.interval = 1;\n    /**\n     * Maps datum to its index in the {@link domain} array.\n     * Used to check for duplicate datums (not allowed).\n     */\n    this.index = /* @__PURE__ */ new Map();\n    /**\n     * The output range values for datum at each index.\n     */\n    this.ordinalRange = [];\n    /**\n     * Contains unique datums only. Since `{}` is used in place of `Map`\n     * for IE11 compatibility, the datums are converted `toString` before\n     * the uniqueness check.\n     */\n    this._domain = [];\n    this.range = [0, 1];\n    this._bandwidth = 1;\n    this._step = 1;\n    this._rawBandwidth = 1;\n    /**\n     * The ratio of the range that is reserved for space between bands.\n     */\n    this._paddingInner = 0;\n    /**\n     * The ratio of the range that is reserved for space before the first\n     * and after the last band.\n     */\n    this._paddingOuter = 0;\n    this.round = false;\n  }\n  refresh() {\n    if (!this.invalid)\n      return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n  set domain(values) {\n    this.invalid = true;\n    const domain = [];\n    this.index = /* @__PURE__ */ new Map();\n    const index = this.index;\n    values.forEach((value) => {\n      if (index.get(value) === void 0) {\n        index.set(value, domain.push(value) - 1);\n      }\n    });\n    this._domain = domain;\n  }\n  get domain() {\n    return this._domain;\n  }\n  ticks() {\n    this.refresh();\n    const { interval = 1 } = this;\n    const step = Math.abs(Math.round(interval));\n    return this._domain.filter((_, i) => i % step === 0);\n  }\n  convert(d) {\n    this.refresh();\n    const i = this.index.get(d);\n    if (i === void 0) {\n      return NaN;\n    }\n    const r = this.ordinalRange[i];\n    if (r === void 0) {\n      return NaN;\n    }\n    return r;\n  }\n  invert(position) {\n    this.refresh();\n    const index = this.ordinalRange.findIndex((p) => p === position);\n    return this.domain[index];\n  }\n  get bandwidth() {\n    this.refresh();\n    return this._bandwidth;\n  }\n  get step() {\n    this.refresh();\n    return this._step;\n  }\n  get rawBandwidth() {\n    this.refresh();\n    return this._rawBandwidth;\n  }\n  set padding(value) {\n    value = clamp(value, 0, 1);\n    this._paddingInner = value;\n    this._paddingOuter = value;\n  }\n  get padding() {\n    return this._paddingInner;\n  }\n  set paddingInner(value) {\n    this._paddingInner = clamp(value, 0, 1);\n  }\n  get paddingInner() {\n    return this._paddingInner;\n  }\n  set paddingOuter(value) {\n    this._paddingOuter = clamp(value, 0, 1);\n  }\n  get paddingOuter() {\n    return this._paddingOuter;\n  }\n  update() {\n    const count2 = this._domain.length;\n    if (count2 === 0) {\n      return;\n    }\n    const round3 = this.round;\n    const paddingInner = this._paddingInner;\n    const paddingOuter = this._paddingOuter;\n    const [r0, r1] = this.range;\n    const width = r1 - r0;\n    const rawStep = width / Math.max(1, count2 + 2 * paddingOuter - paddingInner);\n    const step = round3 ? Math.floor(rawStep) : rawStep;\n    const fullBandWidth = step * (count2 - paddingInner);\n    const x0 = r0 + (width - fullBandWidth) / 2;\n    const start = round3 ? Math.round(x0) : x0;\n    const bw = step * (1 - paddingInner);\n    const bandwidth = round3 ? Math.round(bw) : bw;\n    const rawBandwidth = rawStep * (1 - paddingInner);\n    const values = [];\n    for (let i = 0; i < count2; i++) {\n      values.push(start + step * i);\n    }\n    this._bandwidth = bandwidth;\n    this._rawBandwidth = rawBandwidth;\n    this._step = step;\n    this.ordinalRange = values;\n  }\n};\n__decorateClass([\n  Invalidating\n], BandScale.prototype, \"interval\", 2);\n__decorateClass([\n  Invalidating\n], BandScale.prototype, \"range\", 2);\n__decorateClass([\n  Invalidating\n], BandScale.prototype, \"round\", 2);\n\n// packages/ag-charts-community/src/util/number.ts\nfunction clamp2(min, value, max) {\n  return Math.min(max, Math.max(min, value));\n}\nfunction clampArray(value, array) {\n  return clamp2(Math.min(...array), value, Math.max(...array));\n}\nfunction isEqual(a, b, epsilon2 = 1e-10) {\n  return Math.abs(a - b) < epsilon2;\n}\nfunction isNegative(a) {\n  return Math.sign(a) < 0 || Object.is(a, -0);\n}\nfunction isReal(a) {\n  return isFinite(a) && !isNaN(a);\n}\nfunction round(value, decimals = 2) {\n  const pow = Math.pow(10, decimals);\n  return Math.round(value * pow) / pow;\n}\nfunction toFixed(value, fractionOrSignificantDigits = 2) {\n  const power = Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  if (power >= 0 || !isFinite(power)) {\n    return value.toFixed(fractionOrSignificantDigits);\n  }\n  return value.toFixed(Math.abs(power) - 1 + fractionOrSignificantDigits);\n}\nfunction toReal(value) {\n  return isReal(value) ? value : 0;\n}\nfunction mod(n, m) {\n  if (n >= 0) {\n    return Math.floor(n % m);\n  }\n  return Math.floor(n % m + m);\n}\nvar countFractionDigits = (value, maxFractionDigits = 10) => {\n  const decimal = (Math.abs(value) % 1).toFixed(maxFractionDigits);\n  for (let i = decimal.length - 1; i >= 2; i -= 1) {\n    if (decimal[i] !== \"0\") {\n      return maxFractionDigits - (decimal.length - 1 - i);\n    }\n  }\n  return 0;\n};\n\n// packages/ag-charts-community/src/util/color.ts\nvar srgbToLinear = (value) => {\n  const sign = value < 0 ? -1 : 1;\n  const abs = Math.abs(value);\n  if (abs <= 0.04045)\n    return value / 12.92;\n  return sign * __pow((abs + 0.055) / 1.055, 2.4);\n};\nvar srgbFromLinear = (value) => {\n  const sign = value < 0 ? -1 : 1;\n  const abs = Math.abs(value);\n  if (abs > 31308e-7) {\n    return sign * (1.055 * __pow(abs, 1 / 2.4) - 0.055);\n  }\n  return 12.92 * value;\n};\nvar _Color = class _Color {\n  /**\n   * Every color component should be in the [0, 1] range.\n   * Some easing functions (such as elastic easing) can overshoot the target value by some amount.\n   * So, when animating colors, if the source or target color components are already near\n   * or at the edge of the allowed [0, 1] range, it is possible for the intermediate color\n   * component value to end up outside of that range mid-animation. For this reason the constructor\n   * performs range checking/constraining.\n   * @param r Red component.\n   * @param g Green component.\n   * @param b Blue component.\n   * @param a Alpha (opacity) component.\n   */\n  constructor(r, g, b, a = 1) {\n    this.r = clamp2(0, r || 0, 1);\n    this.g = clamp2(0, g || 0, 1);\n    this.b = clamp2(0, b || 0, 1);\n    this.a = clamp2(0, a || 0, 1);\n  }\n  /**\n   * A color string can be in one of the following formats to be valid:\n   * - #rgb\n   * - #rrggbb\n   * - rgb(r, g, b)\n   * - rgba(r, g, b, a)\n   * - CSS color name such as 'white', 'orange', 'cyan', etc.\n   */\n  static validColorString(str) {\n    if (str.indexOf(\"#\") >= 0) {\n      return !!_Color.parseHex(str);\n    }\n    if (str.indexOf(\"rgb\") >= 0) {\n      return !!_Color.stringToRgba(str);\n    }\n    return !!_Color.nameToHex[str.toLowerCase()];\n  }\n  /**\n   * The given string can be in one of the following formats:\n   * - #rgb\n   * - #rrggbb\n   * - rgb(r, g, b)\n   * - rgba(r, g, b, a)\n   * - CSS color name such as 'white', 'orange', 'cyan', etc.\n   * @param str\n   */\n  static fromString(str) {\n    if (str.indexOf(\"#\") >= 0) {\n      return _Color.fromHexString(str);\n    }\n    const hex = _Color.nameToHex[str.toLowerCase()];\n    if (hex) {\n      return _Color.fromHexString(hex);\n    }\n    if (str.indexOf(\"rgb\") >= 0) {\n      return _Color.fromRgbaString(str);\n    }\n    throw new Error(`Invalid color string: '${str}'`);\n  }\n  static tryParseFromString(str) {\n    try {\n      return _Color.fromString(str);\n    } catch (e) {\n      Logger.warnOnce(`invalid color string: '${str}'.`);\n      return _Color.fromArray([0, 0, 0]);\n    }\n  }\n  // See https://drafts.csswg.org/css-color/#hex-notation\n  static parseHex(input) {\n    input = input.replace(/ /g, \"\").slice(1);\n    let parts;\n    switch (input.length) {\n      case 6:\n      case 8:\n        parts = [];\n        for (let i = 0; i < input.length; i += 2) {\n          parts.push(parseInt(`${input[i]}${input[i + 1]}`, 16));\n        }\n        break;\n      case 3:\n      case 4:\n        parts = input.split(\"\").map((p) => parseInt(p, 16)).map((p) => p + p * 16);\n        break;\n    }\n    if ((parts == null ? void 0 : parts.length) >= 3 && parts.every((p) => p >= 0)) {\n      if (parts.length === 3) {\n        parts.push(255);\n      }\n      return parts;\n    }\n  }\n  static fromHexString(str) {\n    const values = _Color.parseHex(str);\n    if (values) {\n      const [r, g, b, a] = values;\n      return new _Color(r / 255, g / 255, b / 255, a / 255);\n    }\n    throw new Error(`Malformed hexadecimal color string: '${str}'`);\n  }\n  static stringToRgba(str) {\n    let [po, pc] = [NaN, NaN];\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      if (!po && c === \"(\") {\n        po = i;\n      } else if (c === \")\") {\n        pc = i;\n        break;\n      }\n    }\n    const contents = po && pc && str.substring(po + 1, pc);\n    if (!contents) {\n      return;\n    }\n    const parts = contents.split(\",\");\n    const rgba = [];\n    for (let i = 0; i < parts.length; i++) {\n      const part = parts[i];\n      let value = parseFloat(part);\n      if (isNaN(value)) {\n        return;\n      }\n      if (part.indexOf(\"%\") >= 0) {\n        value = Math.max(0, Math.min(100, value));\n        value /= 100;\n      } else {\n        if (i === 3) {\n          value = Math.max(0, Math.min(1, value));\n        } else {\n          value = Math.max(0, Math.min(255, value));\n          value /= 255;\n        }\n      }\n      rgba.push(value);\n    }\n    return rgba;\n  }\n  static fromRgbaString(str) {\n    const rgba = _Color.stringToRgba(str);\n    if (rgba) {\n      if (rgba.length === 3) {\n        return new _Color(rgba[0], rgba[1], rgba[2]);\n      } else if (rgba.length === 4) {\n        return new _Color(rgba[0], rgba[1], rgba[2], rgba[3]);\n      }\n    }\n    throw new Error(`Malformed rgb/rgba color string: '${str}'`);\n  }\n  static fromArray(arr) {\n    if (arr.length === 4) {\n      return new _Color(arr[0], arr[1], arr[2], arr[3]);\n    }\n    if (arr.length === 3) {\n      return new _Color(arr[0], arr[1], arr[2]);\n    }\n    throw new Error(\"The given array should contain 3 or 4 color components (numbers).\");\n  }\n  static fromHSB(h, s, b, alpha = 1) {\n    const rgb = _Color.HSBtoRGB(h, s, b);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static fromHSL(h, s, l, alpha = 1) {\n    const rgb = _Color.HSLtoRGB(h, s, l);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static fromOKLCH(l, c, h, alpha = 1) {\n    const rgb = _Color.OKLCHtoRGB(l, c, h);\n    return new _Color(rgb[0], rgb[1], rgb[2], alpha);\n  }\n  static padHex(str) {\n    return str.length === 1 ? \"0\" + str : str;\n  }\n  toHexString() {\n    let hex = \"#\" + _Color.padHex(Math.round(this.r * 255).toString(16)) + _Color.padHex(Math.round(this.g * 255).toString(16)) + _Color.padHex(Math.round(this.b * 255).toString(16));\n    if (this.a < 1) {\n      hex += _Color.padHex(Math.round(this.a * 255).toString(16));\n    }\n    return hex;\n  }\n  toRgbaString(fractionDigits = 3) {\n    const components = [Math.round(this.r * 255), Math.round(this.g * 255), Math.round(this.b * 255)];\n    const k = Math.pow(10, fractionDigits);\n    if (this.a !== 1) {\n      components.push(Math.round(this.a * k) / k);\n      return `rgba(${components.join(\", \")})`;\n    }\n    return `rgb(${components.join(\", \")})`;\n  }\n  toString() {\n    if (this.a === 1) {\n      return this.toHexString();\n    }\n    return this.toRgbaString();\n  }\n  toHSB() {\n    return _Color.RGBtoHSB(this.r, this.g, this.b);\n  }\n  static RGBtoOKLCH(r, g, b) {\n    const LSRGB0 = srgbToLinear(r);\n    const LSRGB1 = srgbToLinear(g);\n    const LSRGB2 = srgbToLinear(b);\n    const LMS0 = Math.cbrt(0.4122214708 * LSRGB0 + 0.5363325363 * LSRGB1 + 0.0514459929 * LSRGB2);\n    const LMS1 = Math.cbrt(0.2119034982 * LSRGB0 + 0.6806995451 * LSRGB1 + 0.1073969566 * LSRGB2);\n    const LMS2 = Math.cbrt(0.0883024619 * LSRGB0 + 0.2817188376 * LSRGB1 + 0.6299787005 * LSRGB2);\n    const OKLAB0 = 0.2104542553 * LMS0 + 0.793617785 * LMS1 - 0.0040720468 * LMS2;\n    const OKLAB1 = 1.9779984951 * LMS0 - 2.428592205 * LMS1 + 0.4505937099 * LMS2;\n    const OKLAB2 = 0.0259040371 * LMS0 + 0.7827717662 * LMS1 - 0.808675766 * LMS2;\n    const hue = Math.atan2(OKLAB2, OKLAB1) * 180 / Math.PI;\n    const OKLCH0 = OKLAB0;\n    const OKLCH1 = Math.hypot(OKLAB1, OKLAB2);\n    const OKLCH2 = hue >= 0 ? hue : hue + 360;\n    return [OKLCH0, OKLCH1, OKLCH2];\n  }\n  static OKLCHtoRGB(l, c, h) {\n    const OKLAB0 = l;\n    const OKLAB1 = c * Math.cos(h * Math.PI / 180);\n    const OKLAB2 = c * Math.sin(h * Math.PI / 180);\n    const LMS0 = __pow(OKLAB0 + 0.3963377774 * OKLAB1 + 0.2158037573 * OKLAB2, 3);\n    const LMS1 = __pow(OKLAB0 - 0.1055613458 * OKLAB1 - 0.0638541728 * OKLAB2, 3);\n    const LMS2 = __pow(OKLAB0 - 0.0894841775 * OKLAB1 - 1.291485548 * OKLAB2, 3);\n    const LSRGB0 = 4.0767416621 * LMS0 - 3.3077115913 * LMS1 + 0.2309699292 * LMS2;\n    const LSRGB1 = -1.2684380046 * LMS0 + 2.6097574011 * LMS1 - 0.3413193965 * LMS2;\n    const LSRGB2 = -0.0041960863 * LMS0 - 0.7034186147 * LMS1 + 1.707614701 * LMS2;\n    const SRGB0 = srgbFromLinear(LSRGB0);\n    const SRGB1 = srgbFromLinear(LSRGB1);\n    const SRGB2 = srgbFromLinear(LSRGB2);\n    return [SRGB0, SRGB1, SRGB2];\n  }\n  static RGBtoHSL(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const l = (max + min) / 2;\n    let h;\n    let s;\n    if (max === min) {\n      h = NaN;\n      s = 0;\n    } else {\n      const delta = max - min;\n      s = l > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n      if (max === r) {\n        h = (g - b) / delta + (g < b ? 6 : 0);\n      } else if (max === g) {\n        h = (b - r) / delta + 2;\n      } else {\n        h = (r - g) / delta + 4;\n      }\n      h *= 360 / 6;\n    }\n    return [h, s, l];\n  }\n  static HSLtoRGB(h, s, l) {\n    if (s === 0) {\n      return [l, l, l];\n    }\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    function hueToRgb(t) {\n      if (t < 0)\n        t += 1;\n      if (t > 1)\n        t -= 1;\n      if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n      if (t < 1 / 2)\n        return q;\n      if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    const r = hueToRgb(h / 360 + 1 / 3);\n    const g = hueToRgb(h / 360);\n    const b = hueToRgb(h / 360 - 1 / 3);\n    return [r, g, b];\n  }\n  /**\n   * Converts the given RGB triple to an array of HSB (HSV) components.\n   * The hue component will be `NaN` for achromatic colors.\n   */\n  static RGBtoHSB(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const S = max !== 0 ? (max - min) / max : 0;\n    let H = NaN;\n    if (min !== max) {\n      const delta = max - min;\n      const rc = (max - r) / delta;\n      const gc = (max - g) / delta;\n      const bc = (max - b) / delta;\n      if (r === max) {\n        H = bc - gc;\n      } else if (g === max) {\n        H = 2 + rc - bc;\n      } else {\n        H = 4 + gc - rc;\n      }\n      H /= 6;\n      if (H < 0) {\n        H = H + 1;\n      }\n    }\n    return [H * 360, S, max];\n  }\n  /**\n   * Converts the given HSB (HSV) triple to an array of RGB components.\n   */\n  static HSBtoRGB(H, S, B) {\n    if (isNaN(H)) {\n      H = 0;\n    }\n    H = (H % 360 + 360) % 360 / 360;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    if (S === 0) {\n      r = g = b = B;\n    } else {\n      const h = (H - Math.floor(H)) * 6;\n      const f = h - Math.floor(h);\n      const p = B * (1 - S);\n      const q = B * (1 - S * f);\n      const t = B * (1 - S * (1 - f));\n      switch (h >> 0) {\n        case 0:\n          r = B;\n          g = t;\n          b = p;\n          break;\n        case 1:\n          r = q;\n          g = B;\n          b = p;\n          break;\n        case 2:\n          r = p;\n          g = B;\n          b = t;\n          break;\n        case 3:\n          r = p;\n          g = q;\n          b = B;\n          break;\n        case 4:\n          r = t;\n          g = p;\n          b = B;\n          break;\n        case 5:\n          r = B;\n          g = p;\n          b = q;\n          break;\n      }\n    }\n    return [r, g, b];\n  }\n  derive(hueShift, saturationFactor, brightnessFactor, opacityFactor) {\n    const hsb = _Color.RGBtoHSB(this.r, this.g, this.b);\n    let b = hsb[2];\n    if (b == 0 && brightnessFactor > 1) {\n      b = 0.05;\n    }\n    const h = ((hsb[0] + hueShift) % 360 + 360) % 360;\n    const s = Math.max(Math.min(hsb[1] * saturationFactor, 1), 0);\n    b = Math.max(Math.min(b * brightnessFactor, 1), 0);\n    const a = Math.max(Math.min(this.a * opacityFactor, 1), 0);\n    const rgba = _Color.HSBtoRGB(h, s, b);\n    rgba.push(a);\n    return _Color.fromArray(rgba);\n  }\n  brighter() {\n    return this.derive(0, 1, 1 / 0.7, 1);\n  }\n  darker() {\n    return this.derive(0, 1, 0.7, 1);\n  }\n  static interpolate(color, other) {\n    const c0 = _Color.tryParseFromString(color);\n    const c1 = _Color.tryParseFromString(other);\n    return (t) => {\n      const i = (x, y) => x * (1 - t) + y * t;\n      const c = new _Color(i(c0.r, c1.r), i(c0.g, c1.g), i(c0.b, c1.b), i(c0.a, c1.a));\n      return c.toString();\n    };\n  }\n};\n_Color.didDebug = false;\n/**\n * CSS Color Module Level 4:\n * https://drafts.csswg.org/css-color/#named-colors\n */\n_Color.nameToHex = Object.freeze({\n  aliceblue: \"#F0F8FF\",\n  antiquewhite: \"#FAEBD7\",\n  aqua: \"#00FFFF\",\n  aquamarine: \"#7FFFD4\",\n  azure: \"#F0FFFF\",\n  beige: \"#F5F5DC\",\n  bisque: \"#FFE4C4\",\n  black: \"#000000\",\n  blanchedalmond: \"#FFEBCD\",\n  blue: \"#0000FF\",\n  blueviolet: \"#8A2BE2\",\n  brown: \"#A52A2A\",\n  burlywood: \"#DEB887\",\n  cadetblue: \"#5F9EA0\",\n  chartreuse: \"#7FFF00\",\n  chocolate: \"#D2691E\",\n  coral: \"#FF7F50\",\n  cornflowerblue: \"#6495ED\",\n  cornsilk: \"#FFF8DC\",\n  crimson: \"#DC143C\",\n  cyan: \"#00FFFF\",\n  darkblue: \"#00008B\",\n  darkcyan: \"#008B8B\",\n  darkgoldenrod: \"#B8860B\",\n  darkgray: \"#A9A9A9\",\n  darkgreen: \"#006400\",\n  darkgrey: \"#A9A9A9\",\n  darkkhaki: \"#BDB76B\",\n  darkmagenta: \"#8B008B\",\n  darkolivegreen: \"#556B2F\",\n  darkorange: \"#FF8C00\",\n  darkorchid: \"#9932CC\",\n  darkred: \"#8B0000\",\n  darksalmon: \"#E9967A\",\n  darkseagreen: \"#8FBC8F\",\n  darkslateblue: \"#483D8B\",\n  darkslategray: \"#2F4F4F\",\n  darkslategrey: \"#2F4F4F\",\n  darkturquoise: \"#00CED1\",\n  darkviolet: \"#9400D3\",\n  deeppink: \"#FF1493\",\n  deepskyblue: \"#00BFFF\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  dodgerblue: \"#1E90FF\",\n  firebrick: \"#B22222\",\n  floralwhite: \"#FFFAF0\",\n  forestgreen: \"#228B22\",\n  fuchsia: \"#FF00FF\",\n  gainsboro: \"#DCDCDC\",\n  ghostwhite: \"#F8F8FF\",\n  gold: \"#FFD700\",\n  goldenrod: \"#DAA520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#ADFF2F\",\n  grey: \"#808080\",\n  honeydew: \"#F0FFF0\",\n  hotpink: \"#FF69B4\",\n  indianred: \"#CD5C5C\",\n  indigo: \"#4B0082\",\n  ivory: \"#FFFFF0\",\n  khaki: \"#F0E68C\",\n  lavender: \"#E6E6FA\",\n  lavenderblush: \"#FFF0F5\",\n  lawngreen: \"#7CFC00\",\n  lemonchiffon: \"#FFFACD\",\n  lightblue: \"#ADD8E6\",\n  lightcoral: \"#F08080\",\n  lightcyan: \"#E0FFFF\",\n  lightgoldenrodyellow: \"#FAFAD2\",\n  lightgray: \"#D3D3D3\",\n  lightgreen: \"#90EE90\",\n  lightgrey: \"#D3D3D3\",\n  lightpink: \"#FFB6C1\",\n  lightsalmon: \"#FFA07A\",\n  lightseagreen: \"#20B2AA\",\n  lightskyblue: \"#87CEFA\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  lightsteelblue: \"#B0C4DE\",\n  lightyellow: \"#FFFFE0\",\n  lime: \"#00FF00\",\n  limegreen: \"#32CD32\",\n  linen: \"#FAF0E6\",\n  magenta: \"#FF00FF\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66CDAA\",\n  mediumblue: \"#0000CD\",\n  mediumorchid: \"#BA55D3\",\n  mediumpurple: \"#9370DB\",\n  mediumseagreen: \"#3CB371\",\n  mediumslateblue: \"#7B68EE\",\n  mediumspringgreen: \"#00FA9A\",\n  mediumturquoise: \"#48D1CC\",\n  mediumvioletred: \"#C71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#F5FFFA\",\n  mistyrose: \"#FFE4E1\",\n  moccasin: \"#FFE4B5\",\n  navajowhite: \"#FFDEAD\",\n  navy: \"#000080\",\n  oldlace: \"#FDF5E6\",\n  olive: \"#808000\",\n  olivedrab: \"#6B8E23\",\n  orange: \"#FFA500\",\n  orangered: \"#FF4500\",\n  orchid: \"#DA70D6\",\n  palegoldenrod: \"#EEE8AA\",\n  palegreen: \"#98FB98\",\n  paleturquoise: \"#AFEEEE\",\n  palevioletred: \"#DB7093\",\n  papayawhip: \"#FFEFD5\",\n  peachpuff: \"#FFDAB9\",\n  peru: \"#CD853F\",\n  pink: \"#FFC0CB\",\n  plum: \"#DDA0DD\",\n  powderblue: \"#B0E0E6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#FF0000\",\n  rosybrown: \"#BC8F8F\",\n  royalblue: \"#4169E1\",\n  saddlebrown: \"#8B4513\",\n  salmon: \"#FA8072\",\n  sandybrown: \"#F4A460\",\n  seagreen: \"#2E8B57\",\n  seashell: \"#FFF5EE\",\n  sienna: \"#A0522D\",\n  silver: \"#C0C0C0\",\n  skyblue: \"#87CEEB\",\n  slateblue: \"#6A5ACD\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  snow: \"#FFFAFA\",\n  springgreen: \"#00FF7F\",\n  steelblue: \"#4682B4\",\n  tan: \"#D2B48C\",\n  teal: \"#008080\",\n  thistle: \"#D8BFD8\",\n  tomato: \"#FF6347\",\n  transparent: \"#00000000\",\n  turquoise: \"#40E0D0\",\n  violet: \"#EE82EE\",\n  wheat: \"#F5DEB3\",\n  white: \"#FFFFFF\",\n  whitesmoke: \"#F5F5F5\",\n  yellow: \"#FFFF00\",\n  yellowgreen: \"#9ACD32\"\n});\nvar Color = _Color;\n\n// packages/ag-charts-community/src/util/validation.ts\nfunction Validate(predicate, options = {}) {\n  const { optional = false } = options;\n  return addTransformToInstanceProperty(\n    (target, property, value) => {\n      var _a;\n      const context = __spreadProps(__spreadValues({}, options), { target, property });\n      if (optional && typeof value === \"undefined\" || predicate(value, context)) {\n        if (isProperties(target[property]) && !isProperties(value)) {\n          target[property].set(value);\n          return target[property];\n        }\n        return value;\n      }\n      const cleanKey = String(property).replace(/^_*/, \"\");\n      const targetName = (_a = target.constructor.className) != null ? _a : target.constructor.name.replace(/Properties$/, \"\");\n      Logger.warn(\n        `Property [${cleanKey}] of [${targetName}] cannot be set to [${stringify(value)}]${predicate.message ? `; expecting ${getPredicateMessage(predicate, context)}` : \"\"}, ignoring.`\n      );\n      return BREAK_TRANSFORM_CHAIN;\n    },\n    void 0,\n    { optional }\n  );\n}\nvar AND = (...predicates) => {\n  const messages = [];\n  return predicateWithMessage(\n    (value, ctx) => {\n      messages.length = 0;\n      return predicates.every((predicate) => {\n        const isValid = predicate(value, ctx);\n        if (!isValid) {\n          messages.push(getPredicateMessage(predicate, ctx));\n        }\n        return isValid;\n      });\n    },\n    () => messages.filter(Boolean).join(\" AND \")\n  );\n};\nvar OR = (...predicates) => predicateWithMessage(\n  (value, ctx) => predicates.some((predicate) => predicate(value, ctx)),\n  (ctx) => predicates.map(getPredicateMessageMapper(ctx)).filter(Boolean).join(\" OR \")\n);\nvar OBJECT = attachObjectRestrictions(\n  predicateWithMessage(\n    (value, ctx) => isProperties(value) || isObject(value) && isProperties(ctx.target[ctx.property]),\n    \"an object\"\n  )\n);\nvar BOOLEAN = predicateWithMessage(isBoolean, \"a boolean\");\nvar FUNCTION = predicateWithMessage(isFunction, \"a function\");\nvar STRING = predicateWithMessage(isString, \"a string\");\nvar NUMBER = attachNumberRestrictions(predicateWithMessage(isFiniteNumber, \"a number\"));\nvar NAN = predicateWithMessage((value) => isNumber(value) && isNaN(value), \"NaN\");\nvar POSITIVE_NUMBER = NUMBER.restrict({ min: 0 });\nvar RATIO = NUMBER.restrict({ min: 0, max: 1 });\nvar DEGREE = NUMBER.restrict({ min: -360, max: 360 });\nvar NUMBER_OR_NAN = OR(NUMBER, NAN);\nvar ARRAY = attachArrayRestrictions(predicateWithMessage(isArray, \"an array\"));\nvar ARRAY_OF = (predicate, message) => predicateWithMessage(\n  (value, ctx) => isArray(value) && value.every((item) => predicate(item, ctx)),\n  (ctx) => {\n    var _a;\n    const arrayMessage = (_a = getPredicateMessage(ARRAY, ctx)) != null ? _a : \"\";\n    return message ? `${arrayMessage} of ${message}` : arrayMessage;\n  }\n);\nvar isComparable = (value) => isFiniteNumber(value) || isValidDate(value);\nvar LESS_THAN = (otherField) => predicateWithMessage(\n  (v, ctx) => !isComparable(v) || !isComparable(ctx.target[otherField]) || v < ctx.target[otherField],\n  `expected to be less than ${otherField}`\n);\nvar GREATER_THAN = (otherField) => predicateWithMessage(\n  (v, ctx) => !isComparable(v) || !isComparable(ctx.target[otherField]) || v > ctx.target[otherField],\n  `expected to be greater than ${otherField}`\n);\nvar DATE = predicateWithMessage(isValidDate, \"Date object\");\nvar DATE_OR_DATETIME_MS = OR(DATE, POSITIVE_NUMBER);\nvar colorMessage = `A color string can be in one of the following formats to be valid: #rgb, #rrggbb, rgb(r, g, b), rgba(r, g, b, a) or a CSS color name such as 'white', 'orange', 'cyan', etc`;\nvar COLOR_STRING = predicateWithMessage(\n  (v) => isString(v) && Color.validColorString(v),\n  `color String. ${colorMessage}`\n);\nvar COLOR_STRING_ARRAY = predicateWithMessage(ARRAY_OF(COLOR_STRING), `color strings. ${colorMessage}`);\nvar BOOLEAN_ARRAY = ARRAY_OF(BOOLEAN, \"boolean values\");\nvar NUMBER_ARRAY = ARRAY_OF(NUMBER, \"numbers\");\nvar STRING_ARRAY = ARRAY_OF(STRING, \"strings\");\nvar DATE_ARRAY = predicateWithMessage(ARRAY_OF(DATE), \"Date objects\");\nvar OBJECT_ARRAY = predicateWithMessage(ARRAY_OF(OBJECT), \"objects\");\nvar LINE_CAP = UNION([\"butt\", \"round\", \"square\"], \"a line cap\");\nvar LINE_JOIN = UNION([\"round\", \"bevel\", \"miter\"], \"a line join\");\nvar LINE_DASH = predicateWithMessage(\n  ARRAY_OF(POSITIVE_NUMBER),\n  \"numbers specifying the length in pixels of alternating dashes and gaps, for example, [6, 3] means dashes with a length of 6 pixels with gaps between of 3 pixels.\"\n);\nvar POSITION = UNION([\"top\", \"right\", \"bottom\", \"left\"], \"a position\");\nvar FONT_STYLE = UNION([\"normal\", \"italic\", \"oblique\"], \"a font style\");\nvar FONT_WEIGHT = OR(\n  UNION([\"normal\", \"bold\", \"bolder\", \"lighter\"], \"a font weight\"),\n  NUMBER.restrict({ min: 1, max: 1e3 })\n);\nvar TEXT_WRAP = UNION([\"never\", \"always\", \"hyphenate\", \"on-space\"], \"a text wrap strategy\");\nvar TEXT_ALIGN = UNION([\"left\", \"center\", \"right\"], \"a text align\");\nvar VERTICAL_ALIGN = UNION([\"top\", \"middle\", \"bottom\"], \"a vertical align\");\nvar OVERFLOW_STRATEGY = UNION([\"ellipsis\", \"hide\"], \"an overflow strategy\");\nvar DIRECTION = UNION([\"horizontal\", \"vertical\"], \"a direction\");\nvar PLACEMENT = UNION([\"inside\", \"outside\"], \"a placement\");\nvar INTERACTION_RANGE = OR(UNION([\"exact\", \"nearest\"], \"interaction range\"), NUMBER);\nfunction UNION(options, message = \"a\") {\n  return predicateWithMessage(\n    (v) => options.includes(v),\n    `${message} keyword such as ${joinUnionOptions(options)}`\n  );\n}\nvar MIN_SPACING = OR(AND(NUMBER.restrict({ min: 1 }), LESS_THAN(\"maxSpacing\")), NAN);\nvar MAX_SPACING = OR(AND(NUMBER.restrict({ min: 1 }), GREATER_THAN(\"minSpacing\")), NAN);\nfunction predicateWithMessage(predicate, message) {\n  predicate.message = message;\n  return predicate;\n}\nfunction joinUnionOptions(options) {\n  const values = options.map((option) => `'${option}'`);\n  if (values.length === 1) {\n    return values[0];\n  }\n  const lastValue = values.pop();\n  return `${values.join(\", \")} or ${lastValue}`;\n}\nfunction getPredicateMessage(predicate, ctx) {\n  return isFunction(predicate.message) ? predicate.message(ctx) : predicate.message;\n}\nfunction getPredicateMessageMapper(ctx) {\n  return (predicate) => getPredicateMessage(predicate, ctx);\n}\nfunction attachArrayRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict({ length, minLength } = {}) {\n      return predicateWithMessage(\n        (value) => isArray(value) && (isNumber(length) ? value.length === length : true) && (isNumber(minLength) ? value.length >= minLength : true),\n        isNumber(minLength) && minLength > 0 ? \"a non-empty array\" : isNumber(length) ? `an array of length ${length}` : \"an array\"\n      );\n    }\n  });\n}\nfunction attachNumberRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict({ min, max } = {}) {\n      const message = [\"a number\"];\n      const hasMin = isNumber(min);\n      const hasMax = isNumber(max);\n      if (hasMin && hasMax) {\n        message.push(`between ${min} and ${max} inclusive`);\n      } else if (hasMin) {\n        message.push(`greater than or equal to ${min}`);\n      } else if (hasMax) {\n        message.push(`less than or equal to ${max}`);\n      }\n      return predicateWithMessage(\n        (value) => isFiniteNumber(value) && (hasMin ? value >= min : true) && (hasMax ? value <= max : true),\n        message.join(\" \")\n      );\n    }\n  });\n}\nfunction attachObjectRestrictions(predicate) {\n  return Object.assign(predicate, {\n    restrict(objectType) {\n      const isInstanceOf = (value) => isProperties(value) && value instanceof objectType;\n      return predicateWithMessage(\n        (value, ctx) => isInstanceOf(value) || isObject(value) && isInstanceOf(ctx.target[ctx.property]),\n        (ctx) => {\n          var _a;\n          return (_a = getPredicateMessage(predicate, ctx)) != null ? _a : \"an object\";\n        }\n      );\n    }\n  });\n}\nfunction stringify(value) {\n  if (typeof value === \"number\") {\n    if (isNaN(value))\n      return \"NaN\";\n    if (value === Infinity)\n      return \"Infinity\";\n    if (value === -Infinity)\n      return \"-Infinity\";\n  }\n  return JSON.stringify(value);\n}\n\n// packages/ag-charts-community/src/chart/chartAxisDirection.ts\nvar ChartAxisDirection = /* @__PURE__ */ ((ChartAxisDirection2) => {\n  ChartAxisDirection2[\"X\"] = \"x\";\n  ChartAxisDirection2[\"Y\"] = \"y\";\n  return ChartAxisDirection2;\n})(ChartAxisDirection || {});\n\n// packages/ag-charts-community/src/util/id.ts\nvar ID_MAP = {};\nfunction resetIds() {\n  for (const key in ID_MAP) {\n    delete ID_MAP[key];\n  }\n}\nfunction createId(instance) {\n  var _a;\n  const constructor = instance.constructor;\n  const className = Object.hasOwn(constructor, \"className\") ? constructor.className : constructor.name;\n  if (!className) {\n    throw new Error(`The ${constructor} is missing the 'className' property.`);\n  }\n  const nextId = ((_a = ID_MAP[className]) != null ? _a : 0) + 1;\n  ID_MAP[className] = nextId;\n  return className + \"-\" + nextId;\n}\n\n// packages/ag-charts-community/src/scene/nearest.ts\nfunction nearestSquared(point, objects, maxDistanceSquared = Infinity) {\n  const result = { nearest: void 0, distanceSquared: maxDistanceSquared };\n  for (const obj of objects) {\n    const thisDistance = obj.distanceSquared(point);\n    if (thisDistance === 0) {\n      return { nearest: obj, distanceSquared: 0 };\n    } else if (thisDistance < result.distanceSquared) {\n      result.nearest = obj;\n      result.distanceSquared = thisDistance;\n    }\n  }\n  return result;\n}\nfunction nearestSquaredInContainer(point, container, maxDistanceSquared = Infinity) {\n  const tpoint = container.transformPoint(point.x, point.y);\n  const result = { nearest: void 0, distanceSquared: maxDistanceSquared };\n  for (const child of container.children) {\n    const { nearest, distanceSquared } = child.nearestSquared(tpoint, result.distanceSquared);\n    if (distanceSquared === 0) {\n      return { nearest, distanceSquared };\n    } else if (distanceSquared < result.distanceSquared) {\n      result.nearest = nearest;\n      result.distanceSquared = distanceSquared;\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/scene/bbox.ts\nvar _BBox = class _BBox {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n  clone() {\n    const { x, y, width, height } = this;\n    return new _BBox(x, y, width, height);\n  }\n  equals(other) {\n    return this.x === other.x && this.y === other.y && this.width === other.width && this.height === other.height;\n  }\n  containsPoint(x, y) {\n    return x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height;\n  }\n  collidesBBox(other) {\n    return this.x < other.x + other.width && this.x + this.width > other.x && this.y < other.y + other.height && this.y + this.height > other.y;\n  }\n  isInfinite() {\n    return Math.abs(this.x) === Infinity || Math.abs(this.y) === Infinity || Math.abs(this.width) === Infinity || Math.abs(this.height) === Infinity;\n  }\n  distanceSquared(point) {\n    if (this.containsPoint(point.x, point.y)) {\n      return 0;\n    }\n    const dx = point.x - Math.max(this.x, Math.min(point.x, this.x + this.width));\n    const dy = point.y - Math.max(this.y, Math.min(point.y, this.y + this.height));\n    return dx * dx + dy * dy;\n  }\n  static nearestBox(point, boxes) {\n    return nearestSquared(point, boxes);\n  }\n  shrink(amount, position) {\n    const apply = (pos, amt) => {\n      switch (pos) {\n        case \"top\":\n          this.y += amt;\n        case \"bottom\":\n          this.height -= amt;\n          break;\n        case \"left\":\n          this.x += amt;\n        case \"right\":\n          this.width -= amt;\n          break;\n        case \"vertical\":\n          this.y += amt;\n          this.height -= amt * 2;\n          break;\n        case \"horizontal\":\n          this.x += amt;\n          this.width -= amt * 2;\n          break;\n        case void 0:\n          this.x += amt;\n          this.width -= amt * 2;\n          this.y += amt;\n          this.height -= amt * 2;\n          break;\n        default:\n      }\n    };\n    if (typeof amount === \"number\") {\n      apply(position, amount);\n    } else if (typeof amount === \"object\") {\n      Object.entries(amount).forEach(([pos, amt]) => apply(pos, amt));\n    }\n    return this;\n  }\n  grow(amount, position) {\n    if (typeof amount === \"number\") {\n      this.shrink(-amount, position);\n    } else {\n      const paddingCopy = __spreadValues({}, amount);\n      for (const key in paddingCopy) {\n        paddingCopy[key] *= -1;\n      }\n      this.shrink(paddingCopy);\n    }\n    return this;\n  }\n  static merge(boxes) {\n    let left = Infinity;\n    let top = Infinity;\n    let right = -Infinity;\n    let bottom = -Infinity;\n    boxes.forEach((box) => {\n      if (box.x < left) {\n        left = box.x;\n      }\n      if (box.y < top) {\n        top = box.y;\n      }\n      if (box.x + box.width > right) {\n        right = box.x + box.width;\n      }\n      if (box.y + box.height > bottom) {\n        bottom = box.y + box.height;\n      }\n    });\n    return new _BBox(left, top, right - left, bottom - top);\n  }\n};\n_BBox.zero = new _BBox(0, 0, 0, 0);\nvar BBox = _BBox;\n\n// packages/ag-charts-community/src/scene/matrix.ts\nvar _Matrix = class _Matrix {\n  get e() {\n    return [...this.elements];\n  }\n  constructor(elements = [1, 0, 0, 1, 0, 0]) {\n    this.elements = elements;\n  }\n  setElements(elements) {\n    const e = this.elements;\n    e[0] = elements[0];\n    e[1] = elements[1];\n    e[2] = elements[2];\n    e[3] = elements[3];\n    e[4] = elements[4];\n    e[5] = elements[5];\n    return this;\n  }\n  get identity() {\n    const e = this.elements;\n    return e[0] === 1 && e[1] === 0 && e[2] === 0 && e[3] === 1 && e[4] === 0 && e[5] === 0;\n  }\n  /**\n   * Performs the AxB matrix multiplication and saves the result\n   * to `C`, if given, or to `A` otherwise.\n   */\n  AxB(A, B, C) {\n    const a = A[0] * B[0] + A[2] * B[1], b = A[1] * B[0] + A[3] * B[1], c = A[0] * B[2] + A[2] * B[3], d = A[1] * B[2] + A[3] * B[3], e = A[0] * B[4] + A[2] * B[5] + A[4], f = A[1] * B[4] + A[3] * B[5] + A[5];\n    C = C != null ? C : A;\n    C[0] = a;\n    C[1] = b;\n    C[2] = c;\n    C[3] = d;\n    C[4] = e;\n    C[5] = f;\n  }\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns the current matrix.\n   * @param other\n   */\n  multiplySelf(other) {\n    this.AxB(this.elements, other.elements);\n    return this;\n  }\n  /**\n   * The `other` matrix gets post-multiplied to the current matrix.\n   * Returns a new matrix.\n   * @param other\n   */\n  multiply(other) {\n    const elements = new Array(6);\n    this.AxB(this.elements, other.elements, elements);\n    return new _Matrix(elements);\n  }\n  preMultiplySelf(other) {\n    this.AxB(other.elements, this.elements, this.elements);\n    return this;\n  }\n  /**\n   * Returns the inverse of this matrix as a new matrix.\n   */\n  inverse() {\n    const el = this.elements;\n    let a = el[0], b = el[1], c = el[2], d = el[3];\n    const e = el[4], f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    return new _Matrix([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n  }\n  /**\n   * Save the inverse of this matrix to the given matrix.\n   */\n  inverseTo(other) {\n    const el = this.elements;\n    let a = el[0], b = el[1], c = el[2], d = el[3];\n    const e = el[4], f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    other.setElements([d, -b, -c, a, c * f - d * e, b * e - a * f]);\n    return this;\n  }\n  invertSelf() {\n    const el = this.elements;\n    let a = el[0], b = el[1], c = el[2], d = el[3];\n    const e = el[4], f = el[5];\n    const rD = 1 / (a * d - b * c);\n    a *= rD;\n    b *= rD;\n    c *= rD;\n    d *= rD;\n    el[0] = d;\n    el[1] = -b;\n    el[2] = -c;\n    el[3] = a;\n    el[4] = c * f - d * e;\n    el[5] = b * e - a * f;\n    return this;\n  }\n  transformPoint(x, y) {\n    const e = this.elements;\n    return {\n      x: x * e[0] + y * e[2] + e[4],\n      y: x * e[1] + y * e[3] + e[5]\n    };\n  }\n  transformBBox(bbox, target) {\n    const elements = this.elements;\n    const xx = elements[0];\n    const xy = elements[1];\n    const yx = elements[2];\n    const yy = elements[3];\n    const h_w = bbox.width * 0.5;\n    const h_h = bbox.height * 0.5;\n    const cx = bbox.x + h_w;\n    const cy = bbox.y + h_h;\n    const w = Math.abs(h_w * xx) + Math.abs(h_h * yx);\n    const h = Math.abs(h_w * xy) + Math.abs(h_h * yy);\n    if (!target) {\n      target = new BBox(0, 0, 0, 0);\n    }\n    target.x = cx * xx + cy * yx + elements[4] - w;\n    target.y = cx * xy + cy * yy + elements[5] - h;\n    target.width = w + w;\n    target.height = h + h;\n    return target;\n  }\n  toContext(ctx) {\n    if (this.identity) {\n      return;\n    }\n    const e = this.elements;\n    ctx.transform(e[0], e[1], e[2], e[3], e[4], e[5]);\n  }\n  static flyweight(sourceMatrix) {\n    return _Matrix.instance.setElements(sourceMatrix.elements);\n  }\n  static updateTransformMatrix(matrix, scalingX, scalingY, rotation, translationX, translationY, opts) {\n    const [bbcx, bbcy] = [0, 0];\n    const sx = scalingX;\n    const sy = scalingY;\n    let scx;\n    let scy;\n    if (sx === 1 && sy === 1) {\n      scx = 0;\n      scy = 0;\n    } else {\n      scx = (opts == null ? void 0 : opts.scalingCenterX) == null ? bbcx : opts == null ? void 0 : opts.scalingCenterX;\n      scy = (opts == null ? void 0 : opts.scalingCenterY) == null ? bbcy : opts == null ? void 0 : opts.scalingCenterY;\n    }\n    const r = rotation;\n    const cos = Math.cos(r);\n    const sin = Math.sin(r);\n    let rcx;\n    let rcy;\n    if (r === 0) {\n      rcx = 0;\n      rcy = 0;\n    } else {\n      rcx = (opts == null ? void 0 : opts.rotationCenterX) == null ? bbcx : opts == null ? void 0 : opts.rotationCenterX;\n      rcy = (opts == null ? void 0 : opts.rotationCenterY) == null ? bbcy : opts == null ? void 0 : opts.rotationCenterY;\n    }\n    const tx = translationX;\n    const ty = translationY;\n    const tx4 = scx * (1 - sx) - rcx;\n    const ty4 = scy * (1 - sy) - rcy;\n    matrix.setElements([\n      cos * sx,\n      sin * sx,\n      -sin * sy,\n      cos * sy,\n      cos * tx4 - sin * ty4 + rcx + tx,\n      sin * tx4 + cos * ty4 + rcy + ty\n    ]);\n    return matrix;\n  }\n  static fromContext(ctx) {\n    const domMatrix = ctx.getTransform();\n    return new _Matrix([domMatrix.a, domMatrix.b, domMatrix.c, domMatrix.d, domMatrix.e, domMatrix.f]);\n  }\n};\n_Matrix.instance = new _Matrix();\nvar Matrix = _Matrix;\n\n// packages/ag-charts-community/src/scene/node.ts\nvar PointerEvents = /* @__PURE__ */ ((PointerEvents2) => {\n  PointerEvents2[PointerEvents2[\"All\"] = 0] = \"All\";\n  PointerEvents2[PointerEvents2[\"None\"] = 1] = \"None\";\n  return PointerEvents2;\n})(PointerEvents || {});\nvar zIndexChangedCallback = (o) => {\n  if (o.parent) {\n    o.parent.dirtyZIndex = true;\n  }\n  o.zIndexChanged();\n};\nvar _Node = class _Node extends ChangeDetectable {\n  constructor({ isVirtual, tag } = {}) {\n    super();\n    /** Unique number to allow creation order to be easily determined. */\n    this.serialNumber = _Node._nextSerialNumber++;\n    /**\n     * Unique node ID in the form `ClassName-NaturalNumber`.\n     */\n    this.id = createId(this);\n    /**\n     * To simplify the type system (especially in Selections) we don't have the `Parent` node\n     * (one that has children). Instead, we mimic HTML DOM, where any node can have children.\n     * But we still need to distinguish regular leaf nodes from container leafs somehow.\n     */\n    this.isContainerNode = false;\n    this._virtualChildren = [];\n    this._children = [];\n    // Used to check for duplicate nodes.\n    this.childSet = {};\n    // These matrices may need to have package level visibility\n    // for performance optimization purposes.\n    this.matrix = new Matrix();\n    this.inverseMatrix = new Matrix();\n    this.dirtyTransform = false;\n    this.scalingX = 1;\n    this.scalingY = 1;\n    this.scalingCenterX = null;\n    this.scalingCenterY = null;\n    this.rotationCenterX = null;\n    this.rotationCenterY = null;\n    this.rotation = 0;\n    this.translationX = 0;\n    this.translationY = 0;\n    this.visible = true;\n    this.dirtyZIndex = false;\n    this.zIndex = 0;\n    /** Discriminators for render order within a zIndex. */\n    this.zIndexSubOrder = void 0;\n    this.pointerEvents = 0 /* All */;\n    this.isVirtual = isVirtual != null ? isVirtual : false;\n    this.tag = tag != null ? tag : NaN;\n  }\n  /**\n   * Some arbitrary data bound to the node.\n   */\n  get datum() {\n    var _a, _b;\n    return (_b = this._datum) != null ? _b : (_a = this._parent) == null ? void 0 : _a.datum;\n  }\n  get previousDatum() {\n    return this._previousDatum;\n  }\n  set datum(datum) {\n    if (this._datum !== datum)\n      this._previousDatum = this._datum;\n    this._datum = datum;\n  }\n  _setLayerManager(value) {\n    this._layerManager = value;\n    this._debug = value == null ? void 0 : value.debug;\n    for (const child of this._children) {\n      child._setLayerManager(value);\n    }\n    for (const child of this._virtualChildren) {\n      child._setLayerManager(value);\n    }\n  }\n  get layerManager() {\n    return this._layerManager;\n  }\n  get parent() {\n    return this._parent;\n  }\n  get children() {\n    if (this._virtualChildren.length === 0)\n      return this._children;\n    const result = [...this._children];\n    for (const next of this._virtualChildren) {\n      result.push(...next.children);\n    }\n    return result;\n  }\n  get virtualChildren() {\n    return this._virtualChildren;\n  }\n  hasVirtualChildren() {\n    return this._virtualChildren.length > 0;\n  }\n  // new Set<Node>()\n  setProperties(styles, pickKeys) {\n    const keys = pickKeys != null ? pickKeys : Object.keys(styles);\n    for (const key of keys) {\n      this[key] = styles[key];\n    }\n    return this;\n  }\n  /**\n   * Appends one or more new node instances to this parent.\n   * If one needs to:\n   * - move a child to the end of the list of children\n   * - move a child from one parent to another (including parents in other scenes)\n   * one should use the {@link insertBefore} method instead.\n   * @param nodes A node or nodes to append.\n   */\n  append(nodes) {\n    if (!Array.isArray(nodes)) {\n      nodes = [nodes];\n    }\n    for (const node of nodes) {\n      if (node.parent) {\n        throw new Error(`${node} already belongs to another parent: ${node.parent}.`);\n      }\n      if (node.layerManager) {\n        throw new Error(`${node} already belongs to a scene: ${node.layerManager}.`);\n      }\n      if (this.childSet[node.id]) {\n        throw new Error(`Duplicate ${node.constructor.name} node: ${node}`);\n      }\n      if (node.isVirtual) {\n        this._virtualChildren.push(node);\n      } else {\n        this._children.push(node);\n      }\n      this.childSet[node.id] = true;\n      node._parent = this;\n      node._setLayerManager(this.layerManager);\n    }\n    this.dirtyZIndex = true;\n    this.markDirty(this, 3 /* MAJOR */);\n  }\n  appendChild(node) {\n    this.append(node);\n    return node;\n  }\n  removeChild(node) {\n    const error = () => {\n      throw new Error(`The node to be removed is not a child of this node.`);\n    };\n    if (node.parent !== this) {\n      error();\n    }\n    if (node.isVirtual) {\n      const i = this._virtualChildren.indexOf(node);\n      if (i < 0)\n        error();\n      this._virtualChildren.splice(i, 1);\n    } else {\n      const i = this._children.indexOf(node);\n      if (i < 0)\n        error();\n      this._children.splice(i, 1);\n    }\n    delete this.childSet[node.id];\n    node._parent = void 0;\n    node._setLayerManager();\n    this.dirtyZIndex = true;\n    this.markDirty(node, 3 /* MAJOR */);\n    return node;\n  }\n  calculateCumulativeMatrix() {\n    this.computeTransformMatrix();\n    const matrix = Matrix.flyweight(this.matrix);\n    let parent = this.parent;\n    while (parent) {\n      parent.computeTransformMatrix();\n      matrix.preMultiplySelf(parent.matrix);\n      parent = parent.parent;\n    }\n    return matrix;\n  }\n  transformPoint(x, y) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.invertSelf().transformPoint(x, y);\n  }\n  inverseTransformPoint(x, y) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.transformPoint(x, y);\n  }\n  transformBBox(bbox) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.invertSelf().transformBBox(bbox);\n  }\n  inverseTransformBBox(bbox) {\n    const matrix = this.calculateCumulativeMatrix();\n    return matrix.transformBBox(bbox);\n  }\n  markDirtyTransform() {\n    this.dirtyTransform = true;\n    this.markDirty(this, 3 /* MAJOR */);\n  }\n  containsPoint(_x, _y) {\n    return false;\n  }\n  /**\n   * Hit testing method.\n   * Recursively checks if the given point is inside this node or any of its children.\n   * Returns the first matching node or `undefined`.\n   * Nodes that render later (show on top) are hit tested first.\n   */\n  pickNode(x, y) {\n    var _a;\n    if (!this.visible || this.pointerEvents === 1 /* None */ || !this.containsPoint(x, y)) {\n      return;\n    }\n    const children = this.children;\n    if (children.length > 1e3) {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        const containsPoint = (_a = child.computeTransformedBBox()) == null ? void 0 : _a.containsPoint(x, y);\n        const hit = containsPoint ? child.pickNode(x, y) : void 0;\n        if (hit) {\n          return hit;\n        }\n      }\n    } else if (children.length) {\n      for (let i = children.length - 1; i >= 0; i--) {\n        const hit = children[i].pickNode(x, y);\n        if (hit) {\n          return hit;\n        }\n      }\n    } else if (!this.isContainerNode) {\n      return this;\n    }\n  }\n  findNodes(predicate) {\n    const result = predicate(this) ? [this] : [];\n    for (const child of this.children) {\n      const childResult = child.findNodes(predicate);\n      if (childResult) {\n        result.push(...childResult);\n      }\n    }\n    return result;\n  }\n  computeBBox() {\n    return;\n  }\n  computeTransformedBBox() {\n    const bbox = this.computeBBox();\n    if (!bbox) {\n      return void 0;\n    }\n    this.computeTransformMatrix();\n    const matrix = Matrix.flyweight(this.matrix);\n    let parent = this.parent;\n    while (parent) {\n      parent.computeTransformMatrix();\n      matrix.preMultiplySelf(parent.matrix);\n      parent = parent.parent;\n    }\n    matrix.transformBBox(bbox, bbox);\n    return bbox;\n  }\n  computeTransformMatrix() {\n    if (!this.dirtyTransform) {\n      return;\n    }\n    const {\n      matrix,\n      scalingX,\n      scalingY,\n      rotation,\n      translationX,\n      translationY,\n      scalingCenterX,\n      scalingCenterY,\n      rotationCenterX,\n      rotationCenterY\n    } = this;\n    Matrix.updateTransformMatrix(matrix, scalingX, scalingY, rotation, translationX, translationY, {\n      scalingCenterX,\n      scalingCenterY,\n      rotationCenterX,\n      rotationCenterY\n    });\n    matrix.inverseTo(this.inverseMatrix);\n    this.dirtyTransform = false;\n  }\n  render(renderCtx) {\n    const { stats } = renderCtx;\n    this._dirty = 0 /* NONE */;\n    if (stats)\n      stats.nodesRendered++;\n  }\n  clearBBox(ctx) {\n    const bbox = this.computeBBox();\n    if (bbox == null) {\n      return;\n    }\n    const { x, y, width, height } = bbox;\n    const topLeft = this.transformPoint(x, y);\n    const bottomRight = this.transformPoint(x + width, y + height);\n    ctx.clearRect(topLeft.x, topLeft.y, bottomRight.x - topLeft.x, bottomRight.y - topLeft.y);\n  }\n  markDirty(_source, type = 1 /* TRIVIAL */, parentType = type) {\n    if (this._dirty > type) {\n      return;\n    }\n    if (this._dirty === type && type === parentType) {\n      return;\n    }\n    this._dirty = type;\n    if (this.parent) {\n      this.parent.markDirty(this, parentType);\n    } else if (this.layerManager) {\n      this.layerManager.markDirty();\n    }\n  }\n  get dirty() {\n    return this._dirty;\n  }\n  markClean(opts) {\n    const { force = false, recursive = true } = opts != null ? opts : {};\n    if (this._dirty === 0 /* NONE */ && !force) {\n      return;\n    }\n    this._dirty = 0 /* NONE */;\n    if (recursive !== false) {\n      for (const child of this._virtualChildren) {\n        child.markClean({ force });\n      }\n    }\n    if (recursive === true) {\n      for (const child of this._children) {\n        child.markClean({ force });\n      }\n    }\n  }\n  visibilityChanged() {\n  }\n  get nodeCount() {\n    let count2 = 1;\n    let dirtyCount = this._dirty >= 0 /* NONE */ || this.dirtyTransform ? 1 : 0;\n    let visibleCount = this.visible ? 1 : 0;\n    const countChild = (child) => {\n      const { count: childCount, visibleCount: childVisibleCount, dirtyCount: childDirtyCount } = child.nodeCount;\n      count2 += childCount;\n      visibleCount += childVisibleCount;\n      dirtyCount += childDirtyCount;\n    };\n    for (const child of this._children) {\n      countChild(child);\n    }\n    for (const child of this._virtualChildren) {\n      countChild(child);\n    }\n    return { count: count2, visibleCount, dirtyCount };\n  }\n  zIndexChanged() {\n  }\n};\n_Node._nextSerialNumber = 0;\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"scalingX\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"scalingY\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"scalingCenterX\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"scalingCenterY\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"rotationCenterX\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"rotationCenterY\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"rotation\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"translationX\", 2);\n__decorateClass([\n  SceneChangeDetection({ type: \"transform\" })\n], _Node.prototype, \"translationY\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */, changeCb: (o) => o.visibilityChanged() })\n], _Node.prototype, \"visible\", 2);\n__decorateClass([\n  SceneChangeDetection({\n    redraw: 1 /* TRIVIAL */,\n    changeCb: zIndexChangedCallback\n  })\n], _Node.prototype, \"zIndex\", 2);\n__decorateClass([\n  SceneChangeDetection({\n    redraw: 1 /* TRIVIAL */,\n    changeCb: zIndexChangedCallback\n  })\n], _Node.prototype, \"zIndexSubOrder\", 2);\nvar Node = _Node;\n\n// packages/ag-charts-community/src/util/userAgent.ts\nfunction hasConstrainedCanvasMemory() {\n  if (typeof navigator === \"undefined\")\n    return false;\n  const iPhoneOSMatch = navigator.userAgent.match(/\\(iPhone; CPU iPhone OS (\\d+_\\d+_\\d+) like Mac OS X\\)/);\n  if (iPhoneOSMatch == null)\n    return false;\n  const versionString = iPhoneOSMatch[1].split(\"_\");\n  const major = Number(versionString[0]);\n  if (major > 16) {\n    return false;\n  } else if (major === 16) {\n    const minor = Number(versionString[1]);\n    return minor < 6;\n  }\n  return true;\n}\n\n// packages/ag-charts-community/src/scene/canvas/hdpiCanvas.ts\nvar _HdpiCanvas = class _HdpiCanvas {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  constructor(opts) {\n    this._enabled = true;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    const {\n      document: document2,\n      window: window2,\n      width = 600,\n      height = 300,\n      domLayer = false,\n      zIndex = 0,\n      name = void 0,\n      overrideDevicePixelRatio = void 0\n    } = opts;\n    this.document = document2;\n    this.window = window2;\n    _HdpiCanvas.document = document2;\n    this.element = document2.createElement(\"canvas\");\n    this.element.width = width;\n    this.element.height = height;\n    this.realContext = this.element.getContext(\"2d\");\n    this.imageSource = this.realContext.canvas;\n    const { style } = this.element;\n    style.userSelect = \"none\";\n    style.display = \"block\";\n    if (domLayer) {\n      style.position = \"absolute\";\n      style.zIndex = String(zIndex);\n      style.top = \"0\";\n      style.left = \"0\";\n      style.pointerEvents = \"none\";\n      style.opacity = `1`;\n      if (name) {\n        this.element.id = name;\n      }\n    }\n    this.context = this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  set container(value) {\n    if (this._container !== value) {\n      this.remove();\n      if (value) {\n        value.appendChild(this.element);\n      }\n      this._container = value;\n    }\n  }\n  get container() {\n    return this._container;\n  }\n  set enabled(value) {\n    this.element.style.display = value ? \"block\" : \"none\";\n    this._enabled = !!value;\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  remove() {\n    const { parentNode } = this.element;\n    if (parentNode != null) {\n      parentNode.removeChild(this.element);\n    }\n  }\n  destroy() {\n    this.element.remove();\n    this.element.width = 0;\n    this.element.height = 0;\n    this.context.clearRect(0, 0, 0, 0);\n    Object.freeze(this);\n  }\n  snapshot() {\n  }\n  clear() {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  }\n  toImage() {\n    const img = this.document.createElement(\"img\");\n    img.src = this.getDataURL();\n    return img;\n  }\n  getDataURL(type) {\n    return this.element.toDataURL(type);\n  }\n  /**\n   * @param fileName The name of the downloaded file.\n   * @param fileFormat The file format, the default is `image/png`\n   */\n  download(fileName, fileFormat = \"image/png\") {\n    fileName = (fileName != null ? fileName : \"\").trim() || \"image\";\n    const dataUrl = this.getDataURL(fileFormat);\n    const document2 = this.document;\n    const a = document2.createElement(\"a\");\n    a.href = dataUrl;\n    a.download = fileName;\n    a.style.display = \"none\";\n    document2.body.appendChild(a);\n    a.click();\n    document2.body.removeChild(a);\n  }\n  get pixelRatio() {\n    return this._pixelRatio;\n  }\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  setPixelRatio(ratio) {\n    let pixelRatio = ratio != null ? ratio : this.window.devicePixelRatio;\n    if (hasConstrainedCanvasMemory()) {\n      pixelRatio = 1;\n    }\n    this._pixelRatio = pixelRatio;\n    return _HdpiCanvas.overrideScale(this.realContext, pixelRatio);\n  }\n  set pixelated(value) {\n    this.element.style.imageRendering = value ? \"pixelated\" : \"auto\";\n  }\n  get pixelated() {\n    return this.element.style.imageRendering === \"pixelated\";\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  resize(width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    const { element: element2, context, pixelRatio } = this;\n    element2.width = Math.round(width * pixelRatio);\n    element2.height = Math.round(height * pixelRatio);\n    element2.style.width = width + \"px\";\n    element2.style.height = height + \"px\";\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  }\n  static get textMeasuringContext() {\n    if (this._textMeasuringContext) {\n      return this._textMeasuringContext;\n    }\n    const canvas = this.document.createElement(\"canvas\");\n    this._textMeasuringContext = canvas.getContext(\"2d\");\n    return this._textMeasuringContext;\n  }\n  static get svgText() {\n    if (this._svgText) {\n      return this._svgText;\n    }\n    const xmlns = \"http://www.w3.org/2000/svg\";\n    const svg = document.createElementNS(xmlns, \"svg\");\n    svg.setAttribute(\"width\", \"100\");\n    svg.setAttribute(\"height\", \"100\");\n    if (svg.classList) {\n      svg.classList.add(\"text-measuring-svg\");\n    } else {\n      svg.setAttribute(\"class\", \"text-measuring-svg\");\n    }\n    svg.style.position = \"absolute\";\n    svg.style.top = \"-1000px\";\n    svg.style.visibility = \"hidden\";\n    const svgText = document.createElementNS(xmlns, \"text\");\n    svgText.setAttribute(\"x\", \"0\");\n    svgText.setAttribute(\"y\", \"30\");\n    svgText.setAttribute(\"text\", \"black\");\n    svg.appendChild(svgText);\n    document.body.appendChild(svg);\n    this._svgText = svgText;\n    return svgText;\n  }\n  static get has() {\n    if (this._has) {\n      return this._has;\n    }\n    const isChrome = typeof navigator === \"undefined\" || navigator.userAgent.indexOf(\"Chrome\") > -1;\n    const isFirefox = typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"Firefox\") > -1;\n    const isSafari = !isChrome && typeof navigator !== \"undefined\" && navigator.userAgent.indexOf(\"Safari\") > -1;\n    this._has = Object.freeze({\n      textMetrics: this.textMeasuringContext.measureText(\"test\").actualBoundingBoxDescent !== void 0 && // Firefox implemented advanced TextMetrics object in v74:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1102584\n      // but it's buggy, so we'll keep using the SVG for text measurement in Firefox for now.\n      !isFirefox && !isSafari,\n      getTransform: this.textMeasuringContext.getTransform !== void 0\n    });\n    return this._has;\n  }\n  static measureText(text, font, textBaseline, textAlign) {\n    const ctx = this.textMeasuringContext;\n    ctx.font = font;\n    ctx.textBaseline = textBaseline;\n    ctx.textAlign = textAlign;\n    return ctx.measureText(text);\n  }\n  /**\n   * Returns the width and height of the measured text.\n   * @param text The single-line text to measure.\n   * @param font The font shorthand string.\n   */\n  static getTextSize(text, font) {\n    if (this.has.textMetrics) {\n      const ctx = this.textMeasuringContext;\n      ctx.font = font;\n      const metrics = ctx.measureText(text);\n      return {\n        width: metrics.width,\n        height: metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent\n      };\n    } else {\n      return this.measureSvgText(text, font);\n    }\n  }\n  static measureSvgText(text, font) {\n    const cache = this.textSizeCache;\n    const fontCache = cache[font];\n    if (fontCache) {\n      const size2 = fontCache[text];\n      if (size2) {\n        return size2;\n      }\n    } else {\n      cache[font] = {};\n    }\n    const svgText = this.svgText;\n    svgText.style.font = font;\n    svgText.textContent = text;\n    const bbox = svgText.getBBox();\n    const size = {\n      width: bbox.width,\n      height: bbox.height\n    };\n    cache[font][text] = size;\n    return size;\n  }\n  static overrideScale(ctx, scale2) {\n    let depth = 0;\n    const overrides = {\n      save() {\n        this.$save();\n        depth++;\n      },\n      restore() {\n        if (depth > 0) {\n          this.$restore();\n          depth--;\n        } else {\n          throw new Error(\"AG Charts - Unable to restore() past depth 0\");\n        }\n      },\n      setTransform(a, b, c, d, e, f) {\n        if (typeof a === \"object\") {\n          this.$setTransform(a);\n        } else {\n          this.$setTransform(a * scale2, b * scale2, c * scale2, d * scale2, e * scale2, f * scale2);\n        }\n      },\n      resetTransform() {\n        this.$setTransform(scale2, 0, 0, scale2, 0, 0);\n      },\n      verifyDepthZero() {\n        if (depth !== 0) {\n          throw new Error(\"AG Charts - Save/restore depth is non-zero: \" + depth);\n        }\n      }\n    };\n    for (const name in overrides) {\n      if (Object.hasOwn(overrides, name)) {\n        if (!ctx[\"$\" + name]) {\n          ctx[\"$\" + name] = ctx[name];\n        }\n        ctx[name] = overrides[name];\n      }\n    }\n    return ctx;\n  }\n};\n_HdpiCanvas.document = globalThis.document;\n_HdpiCanvas.textSizeCache = {};\nvar HdpiCanvas = _HdpiCanvas;\n\n// packages/ag-charts-community/src/scene/gradient/gradient.ts\nvar Gradient = class {\n  constructor() {\n    this.stops = [];\n  }\n};\n\n// packages/ag-charts-community/src/scene/gradient/linearGradient.ts\nvar LinearGradient = class extends Gradient {\n  constructor() {\n    super(...arguments);\n    this.angle = 0;\n  }\n  createGradient(ctx, bbox) {\n    const angleOffset = 90;\n    const { stops, angle } = this;\n    const radians = normalizeAngle360(toRadians(angle + angleOffset));\n    const cos = Math.cos(radians);\n    const sin = Math.sin(radians);\n    const w = bbox.width;\n    const h = bbox.height;\n    const cx = bbox.x + w * 0.5;\n    const cy = bbox.y + h * 0.5;\n    if (w > 0 && h > 0) {\n      const diagonal = Math.sqrt(h * h + w * w) / 2;\n      const diagonalAngle = Math.atan2(h, w);\n      let quarteredAngle;\n      if (radians < Math.PI / 2) {\n        quarteredAngle = radians;\n      } else if (radians < Math.PI) {\n        quarteredAngle = Math.PI - radians;\n      } else if (radians < 3 * Math.PI / 2) {\n        quarteredAngle = radians - Math.PI;\n      } else {\n        quarteredAngle = 2 * Math.PI - radians;\n      }\n      const l = diagonal * Math.abs(Math.cos(quarteredAngle - diagonalAngle));\n      const gradient = ctx.createLinearGradient(cx + cos * l, cy + sin * l, cx - cos * l, cy - sin * l);\n      stops.forEach((stop) => {\n        gradient.addColorStop(stop.offset, stop.color);\n      });\n      return gradient;\n    }\n    return \"black\";\n  }\n};\n\n// packages/ag-charts-community/src/scene/shape/shape.ts\nvar LINEAR_GRADIENT_REGEXP = /^linear-gradient\\((.*?)deg,\\s*(.*?)\\s*\\)$/i;\nvar _Shape = class _Shape extends Node {\n  constructor() {\n    super(...arguments);\n    this.fillOpacity = 1;\n    this.strokeOpacity = 1;\n    this.fill = _Shape.defaultStyles.fill;\n    this.stroke = _Shape.defaultStyles.stroke;\n    this.strokeWidth = _Shape.defaultStyles.strokeWidth;\n    this.lineDash = _Shape.defaultStyles.lineDash;\n    this.lineDashOffset = _Shape.defaultStyles.lineDashOffset;\n    this.lineCap = _Shape.defaultStyles.lineCap;\n    this.lineJoin = _Shape.defaultStyles.lineJoin;\n    this.opacity = _Shape.defaultStyles.opacity;\n    this.fillShadow = _Shape.defaultStyles.fillShadow;\n  }\n  /**\n   * Restores the default styles introduced by this subclass.\n   */\n  restoreOwnStyles() {\n    const styles = this.constructor.defaultStyles;\n    const keys = Object.getOwnPropertyNames(styles);\n    for (let i = 0, n = keys.length; i < n; i++) {\n      const key = keys[i];\n      this[key] = styles[key];\n    }\n  }\n  updateGradient() {\n    const { fill } = this;\n    let linearGradientMatch;\n    if ((fill == null ? void 0 : fill.startsWith(\"linear-gradient\")) && (linearGradientMatch = LINEAR_GRADIENT_REGEXP.exec(fill))) {\n      const angle = parseFloat(linearGradientMatch[1]);\n      const colors = [];\n      const colorsPart = linearGradientMatch[2];\n      const colorRegex = /(#[0-9a-f]+)|(rgba?\\(.+?\\))|([a-z]+)/gi;\n      let c;\n      while (c = colorRegex.exec(colorsPart)) {\n        colors.push(c[0]);\n      }\n      this.gradient = new LinearGradient();\n      this.gradient.angle = angle;\n      this.gradient.stops = colors.map((color, index) => {\n        const offset4 = index / (colors.length - 1);\n        return { offset: offset4, color };\n      });\n    } else {\n      this.gradient = void 0;\n    }\n  }\n  /**\n   * Returns a device-pixel aligned coordinate (or length if length is supplied).\n   *\n   * NOTE: Not suitable for strokes, since the stroke needs to be offset to the middle\n   * of a device pixel.\n   */\n  align(start, length) {\n    var _a, _b, _c;\n    const pixelRatio = (_c = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas) == null ? void 0 : _b.pixelRatio) != null ? _c : 1;\n    const alignedStart = Math.round(start * pixelRatio) / pixelRatio;\n    if (length == void 0) {\n      return alignedStart;\n    }\n    if (length === 0) {\n      return 0;\n    }\n    if (length < 1) {\n      return Math.ceil(length * pixelRatio) / pixelRatio;\n    }\n    return Math.round((length + start) * pixelRatio) / pixelRatio - alignedStart;\n  }\n  fillStroke(ctx) {\n    this.renderFill(ctx);\n    this.renderStroke(ctx);\n  }\n  renderFill(ctx) {\n    if (this.fill) {\n      const { globalAlpha } = ctx;\n      this.applyFill(ctx);\n      this.applyFillAlpha(ctx);\n      this.applyShadow(ctx);\n      ctx.fill();\n      ctx.globalAlpha = globalAlpha;\n    }\n    ctx.shadowColor = \"rgba(0, 0, 0, 0)\";\n  }\n  applyFill(ctx) {\n    if (this.gradient) {\n      ctx.fillStyle = this.gradient.createGradient(ctx, this.computeBBox());\n    } else {\n      ctx.fillStyle = this.fill;\n    }\n  }\n  applyFillAlpha(ctx) {\n    const { globalAlpha } = ctx;\n    ctx.globalAlpha = globalAlpha * this.opacity * this.fillOpacity;\n  }\n  applyShadow(ctx) {\n    var _a, _b;\n    const pixelRatio = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas.pixelRatio) != null ? _b : 1;\n    const fillShadow = this.fillShadow;\n    if (fillShadow == null ? void 0 : fillShadow.enabled) {\n      ctx.shadowColor = fillShadow.color;\n      ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n      ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n      ctx.shadowBlur = fillShadow.blur * pixelRatio;\n    }\n  }\n  renderStroke(ctx) {\n    if (this.stroke && this.strokeWidth) {\n      const { globalAlpha } = ctx;\n      ctx.strokeStyle = this.stroke;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.strokeOpacity;\n      ctx.lineWidth = this.strokeWidth;\n      if (this.lineDash) {\n        ctx.setLineDash(this.lineDash);\n      }\n      if (this.lineDashOffset) {\n        ctx.lineDashOffset = this.lineDashOffset;\n      }\n      if (this.lineCap) {\n        ctx.lineCap = this.lineCap;\n      }\n      if (this.lineJoin) {\n        ctx.lineJoin = this.lineJoin;\n      }\n      ctx.stroke();\n      ctx.globalAlpha = globalAlpha;\n    }\n  }\n  containsPoint(x, y) {\n    return this.isPointInPath(x, y);\n  }\n};\n/**\n * Defaults for style properties. Note that properties that affect the position\n * and shape of the node are not considered style properties, for example:\n * `x`, `y`, `width`, `height`, `radius`, `rotation`, etc.\n * Can be used to reset to the original styling after some custom styling\n * has been applied (using the `restoreOwnStyles` method).\n * These static defaults are meant to be inherited by subclasses.\n */\n_Shape.defaultStyles = Object.assign(\n  {},\n  {\n    fill: \"black\",\n    stroke: void 0,\n    strokeWidth: 0,\n    lineDash: void 0,\n    lineDashOffset: 0,\n    lineCap: void 0,\n    lineJoin: void 0,\n    opacity: 1,\n    fillShadow: void 0\n  }\n);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */, changeCb: (s) => s.updateGradient() })\n], _Shape.prototype, \"fill\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"stroke\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"lineDash\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"lineCap\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], _Shape.prototype, \"lineJoin\", 2);\n__decorateClass([\n  SceneChangeDetection({\n    redraw: 2 /* MINOR */,\n    convertor: (v) => Math.min(1, Math.max(0, v))\n  })\n], _Shape.prototype, \"opacity\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */, checkDirtyOnAssignment: true })\n], _Shape.prototype, \"fillShadow\", 2);\nvar Shape = _Shape;\n\n// packages/ag-charts-community/src/scene/shape/text.ts\nvar ellipsis = \"\\u2026\";\nfunction SceneFontChangeDetection(opts) {\n  const { redraw = 3 /* MAJOR */, changeCb } = opts != null ? opts : {};\n  return SceneChangeDetection({ redraw, type: \"font\", changeCb });\n}\nvar _Text = class _Text extends Shape {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.lines = [];\n    this.text = void 0;\n    this._dirtyFont = true;\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.textAlign = _Text.defaultStyles.textAlign;\n    this.textBaseline = _Text.defaultStyles.textBaseline;\n    this.lineHeight = void 0;\n  }\n  _setLines() {\n    this.lines = splitText(this.text);\n  }\n  get font() {\n    if (this._font == null || this._dirtyFont) {\n      this._dirtyFont = false;\n      this._font = getFont(this);\n    }\n    return this._font;\n  }\n  computeBBox() {\n    return HdpiCanvas.has.textMetrics ? getPreciseBBox(this.lines, this.x, this.y, this) : getApproximateBBox(this.lines, this.x, this.y, this);\n  }\n  getLineHeight(line) {\n    var _a, _b;\n    if (this.lineHeight)\n      return this.lineHeight;\n    if (HdpiCanvas.has.textMetrics) {\n      const metrics = HdpiCanvas.measureText(line, this.font, this.textBaseline, this.textAlign);\n      return ((_a = metrics.fontBoundingBoxAscent) != null ? _a : metrics.emHeightAscent) + ((_b = metrics.fontBoundingBoxDescent) != null ? _b : metrics.emHeightDescent);\n    }\n    return HdpiCanvas.getTextSize(line, this.font).height;\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox ? bbox.containsPoint(point.x, point.y) : false;\n  }\n  render(renderCtx) {\n    const { ctx, forceRender, stats } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    if (!this.lines.length || !this.layerManager) {\n      if (stats)\n        stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const { fill, stroke, strokeWidth } = this;\n    ctx.font = this.font;\n    ctx.textAlign = this.textAlign;\n    ctx.textBaseline = this.textBaseline;\n    const pixelRatio = this.layerManager.canvas.pixelRatio || 1;\n    const { globalAlpha } = ctx;\n    if (fill) {\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.fillOpacity;\n      const { fillShadow } = this;\n      if (fillShadow == null ? void 0 : fillShadow.enabled) {\n        ctx.shadowColor = fillShadow.color;\n        ctx.shadowOffsetX = fillShadow.xOffset * pixelRatio;\n        ctx.shadowOffsetY = fillShadow.yOffset * pixelRatio;\n        ctx.shadowBlur = fillShadow.blur * pixelRatio;\n      }\n      this.renderLines((line, x, y) => ctx.fillText(line, x, y));\n    }\n    if (stroke && strokeWidth) {\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = strokeWidth;\n      ctx.globalAlpha = globalAlpha * this.opacity * this.strokeOpacity;\n      const { lineDash, lineDashOffset, lineCap, lineJoin } = this;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      this.renderLines((line, x, y) => ctx.strokeText(line, x, y));\n    }\n    super.render(renderCtx);\n  }\n  renderLines(renderCallback) {\n    const { lines, x, y } = this;\n    const lineHeights = this.lines.map((line) => this.getLineHeight(line));\n    const totalHeight = lineHeights.reduce((a, b) => a + b, 0);\n    let offsetY = -(totalHeight - lineHeights[0]) * getVerticalOffset(this.textBaseline);\n    for (let i = 0; i < lines.length; i++) {\n      renderCallback(lines[i], x, y + offsetY);\n      offsetY += lineHeights[i];\n    }\n  }\n  static wrapLines(text, maxWidth, maxHeight, textProps, wrapping, overflow) {\n    const canOverflow = overflow !== \"hide\";\n    const font = getFont(textProps);\n    const measurer = createTextMeasurer(font);\n    const lines = text.split(/\\r?\\n/g);\n    if (lines.length === 0) {\n      return { lines: void 0, truncated: false };\n    }\n    if (wrapping === \"never\") {\n      const { text: text2, truncated: truncated2 } = _Text.truncateLine(lines[0], maxWidth, measurer, canOverflow ? \"auto\" : \"never\");\n      return { lines: text2 != null ? [text2] : void 0, truncated: truncated2 };\n    }\n    const wrappedLines = [];\n    let cumulativeHeight = 0;\n    let truncated = false;\n    for (const line of lines) {\n      const wrappedLine = _Text.wrapLine(\n        line,\n        maxWidth,\n        maxHeight,\n        measurer,\n        textProps,\n        wrapping,\n        cumulativeHeight,\n        canOverflow\n      );\n      if (wrappedLine == null) {\n        return { lines: void 0, truncated: false };\n      }\n      wrappedLines.push(...wrappedLine.result);\n      cumulativeHeight = wrappedLine.cumulativeHeight;\n      if (wrappedLine.truncated) {\n        truncated = true;\n        break;\n      }\n    }\n    return { lines: wrappedLines, truncated };\n  }\n  static wrap(text, maxWidth, maxHeight, textProps, wrapping, overflow = \"ellipsis\") {\n    const { lines, truncated } = _Text.wrapLines(text, maxWidth, maxHeight, textProps, wrapping, overflow);\n    return { text: lines != null ? lines.join(\"\\n\").trim() : \"\", truncated };\n  }\n  static wrapLine(text, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow) {\n    text = text.trim();\n    if (!text) {\n      return { result: [], truncated: false, cumulativeHeight };\n    }\n    const initialSize = measurer.size(text);\n    if (initialSize.width <= maxWidth) {\n      return {\n        result: [text],\n        truncated: false,\n        cumulativeHeight: cumulativeHeight + initialSize.height\n      };\n    }\n    if (initialSize.height > maxHeight || measurer.width(\"W\") > maxWidth) {\n      return canOverflow ? { result: [], truncated: true, cumulativeHeight } : void 0;\n    }\n    const words = text.split(/\\s+/g);\n    const wrapResult = _Text.wrapLineSequentially(\n      words,\n      maxWidth,\n      maxHeight,\n      measurer,\n      textProps,\n      wrapping,\n      cumulativeHeight,\n      canOverflow\n    );\n    if (wrapResult == null) {\n      return void 0;\n    }\n    cumulativeHeight = wrapResult.cumulativeHeight;\n    let { lines } = wrapResult;\n    if (!(wrapResult.wordsBrokenOrTruncated || wrapResult.linesTruncated)) {\n      const linesCount = wrapResult.lines.length;\n      const balanced = _Text.wrapLineBalanced(words, maxWidth, measurer, linesCount);\n      if (balanced.length === lines.length) {\n        lines = balanced;\n      }\n    }\n    const wrappedText = lines.map((ln) => ln.join(\" \"));\n    return { result: wrappedText, truncated: wrapResult.linesTruncated, cumulativeHeight };\n  }\n  static breakWord(word, firstLineWidth, maxWidth, hyphens, measurer) {\n    const isPunctuationAt = (index) => _Text.punctuationMarks.includes(word[index]);\n    const h = hyphens ? measurer.width(\"-\") : 0;\n    const breaks = [];\n    let partWidth = 0;\n    let p = 0;\n    for (let i = 0; i < word.length; i++) {\n      const c = word[i];\n      const w = measurer.width(c);\n      const limit = p === 0 ? firstLineWidth : maxWidth;\n      if (partWidth + w + h > limit) {\n        breaks.push(i);\n        partWidth = 0;\n        p++;\n      }\n      partWidth += w;\n    }\n    const parts = [];\n    let start = 0;\n    for (const index of breaks) {\n      let part = word.substring(start, index);\n      if (hyphens && part.length > 0 && !isPunctuationAt(index - 1) && !isPunctuationAt(index)) {\n        part += \"-\";\n      }\n      parts.push(part);\n      start = index;\n    }\n    parts.push(word.substring(start));\n    return parts;\n  }\n  static truncateLine(text, maxWidth, measurer, ellipsisMode) {\n    text = text.trimEnd();\n    const lineWidth = measurer.width(text);\n    if (lineWidth > maxWidth && ellipsisMode === \"never\") {\n      return { text: void 0, truncated: false };\n    } else if (lineWidth <= maxWidth && ellipsisMode !== \"force\") {\n      return { text, truncated: false };\n    }\n    const ellipsisWidth = measurer.width(ellipsis);\n    let trunc = text;\n    let truncWidth = lineWidth;\n    while (trunc.length > 0 && truncWidth + ellipsisWidth > maxWidth) {\n      trunc = trunc.slice(0, -1).trimEnd();\n      truncWidth = measurer.width(trunc);\n    }\n    if (truncWidth + ellipsisWidth <= maxWidth) {\n      return { text: `${trunc}${ellipsis}`, truncated: true };\n    } else {\n      return { text: void 0, truncated: false };\n    }\n  }\n  static wrapLineSequentially(words, maxWidth, maxHeight, measurer, textProps, wrapping, cumulativeHeight, canOverflow) {\n    const { fontSize = 0, lineHeight = fontSize * _Text.defaultLineHeightRatio } = textProps;\n    const breakWord = wrapping === \"always\" || wrapping === \"hyphenate\";\n    const hyphenate = wrapping === \"hyphenate\";\n    const spaceWidth = measurer.width(\" \");\n    let wordsBrokenOrTruncated = false;\n    let linesTruncated = false;\n    const lines = [];\n    let currentLine = [];\n    let lineWidth = 0;\n    const getReturnValue = () => ({\n      lines,\n      linesTruncated,\n      wordsBrokenOrTruncated,\n      cumulativeHeight\n    });\n    const truncateLastLine = () => {\n      if (!canOverflow) {\n        return void 0;\n      }\n      const lastLine = currentLine.join(\" \");\n      const { text } = _Text.truncateLine(lastLine, maxWidth, measurer, \"force\");\n      if (text == null) {\n        return void 0;\n      }\n      currentLine.splice(0, currentLine.length, text);\n      linesTruncated = true;\n      return getReturnValue();\n    };\n    const addNewLine = () => {\n      const expectedHeight = cumulativeHeight + lineHeight;\n      if (expectedHeight >= maxHeight) {\n        return false;\n      }\n      currentLine = [];\n      lineWidth = 0;\n      cumulativeHeight = expectedHeight;\n      lines.push(currentLine);\n      return true;\n    };\n    if (!addNewLine()) {\n      return truncateLastLine();\n    }\n    for (let i = 0; i < words.length; i++) {\n      const word = words[i];\n      const wordWidth = measurer.width(word);\n      const expectedSpaceWidth = currentLine.length === 0 ? 0 : spaceWidth;\n      const expectedLineWidth = lineWidth + expectedSpaceWidth + wordWidth;\n      if (expectedLineWidth <= maxWidth) {\n        currentLine.push(word);\n        lineWidth = expectedLineWidth;\n        continue;\n      }\n      if (wordWidth <= maxWidth) {\n        if (!addNewLine()) {\n          return truncateLastLine();\n        }\n        currentLine.push(word);\n        lineWidth = wordWidth;\n        continue;\n      }\n      wordsBrokenOrTruncated = true;\n      if (breakWord) {\n        const availWidth = maxWidth - lineWidth - expectedSpaceWidth;\n        const parts = _Text.breakWord(word, availWidth, maxWidth, hyphenate, measurer);\n        for (let p = 0; p < parts.length; p++) {\n          const part = parts[p];\n          part && currentLine.push(part);\n          if (p === parts.length - 1) {\n            lineWidth = measurer.width(part);\n          } else if (!addNewLine()) {\n            return truncateLastLine();\n          }\n        }\n      } else if (canOverflow) {\n        if (!addNewLine()) {\n          return truncateLastLine();\n        }\n        const { text } = _Text.truncateLine(word, maxWidth, measurer, \"force\");\n        if (text == null) {\n          return void 0;\n        }\n        currentLine.push(text);\n        if (i < words.length - 1) {\n          linesTruncated = true;\n        }\n        break;\n      } else {\n        return void 0;\n      }\n    }\n    return getReturnValue();\n  }\n  static wrapLineBalanced(words, maxWidth, measurer, linesCount) {\n    const totalWordsWidth = words.reduce((sum2, w) => sum2 + measurer.width(w), 0);\n    const spaceWidth = measurer.width(\" \");\n    const totalSpaceWidth = spaceWidth * (words.length - linesCount - 2);\n    const averageLineWidth = (totalWordsWidth + totalSpaceWidth) / linesCount;\n    const lines = [];\n    let currentLine = [];\n    let lineWidth = measurer.width(words[0]);\n    let newLine = true;\n    for (const word of words) {\n      const width = measurer.width(word);\n      if (newLine) {\n        currentLine = [];\n        currentLine.push(word);\n        lineWidth = width;\n        newLine = false;\n        lines.push(currentLine);\n        continue;\n      }\n      const expectedLineWidth = lineWidth + spaceWidth + width;\n      if (expectedLineWidth <= averageLineWidth) {\n        currentLine.push(word);\n        lineWidth = expectedLineWidth;\n      } else if (expectedLineWidth <= maxWidth) {\n        currentLine.push(word);\n        newLine = true;\n      } else {\n        currentLine = [word];\n        lineWidth = width;\n        lines.push(currentLine);\n      }\n    }\n    return lines;\n  }\n  setFont(props) {\n    this.fontFamily = props.fontFamily;\n    this.fontSize = props.fontSize;\n    this.fontStyle = props.fontStyle;\n    this.fontWeight = props.fontWeight;\n  }\n  setAlign(props) {\n    this.textAlign = props.textAlign;\n    this.textBaseline = props.textBaseline;\n  }\n};\n_Text.className = \"Text\";\n// The default line spacing for document editors is usually 1.15\n_Text.defaultLineHeightRatio = 1.15;\n_Text.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  textAlign: \"start\",\n  fontStyle: void 0,\n  fontWeight: void 0,\n  fontSize: 10,\n  fontFamily: \"sans-serif\",\n  textBaseline: \"alphabetic\"\n});\n_Text.ellipsis = ellipsis;\n_Text.punctuationMarks = [\".\", \",\", \"-\", \":\", \";\", \"!\", \"?\", `'`, '\"', \"(\", \")\"];\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], _Text.prototype, \"x\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], _Text.prototype, \"y\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */, changeCb: (o) => o._setLines() })\n], _Text.prototype, \"text\", 2);\n__decorateClass([\n  SceneFontChangeDetection()\n], _Text.prototype, \"fontStyle\", 2);\n__decorateClass([\n  SceneFontChangeDetection()\n], _Text.prototype, \"fontWeight\", 2);\n__decorateClass([\n  SceneFontChangeDetection()\n], _Text.prototype, \"fontSize\", 2);\n__decorateClass([\n  SceneFontChangeDetection()\n], _Text.prototype, \"fontFamily\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], _Text.prototype, \"textAlign\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], _Text.prototype, \"textBaseline\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], _Text.prototype, \"lineHeight\", 2);\nvar Text = _Text;\nfunction createTextMeasurer(font) {\n  const cache = /* @__PURE__ */ new Map();\n  const getTextSize = (text) => HdpiCanvas.getTextSize(text, font);\n  const getLineWidth = (text) => {\n    if (cache.has(text)) {\n      return cache.get(text);\n    }\n    const { width } = getTextSize(text);\n    cache.set(text, width);\n    return width;\n  };\n  return { size: getTextSize, width: getLineWidth };\n}\nfunction getFont(fontProps) {\n  const { fontFamily, fontSize, fontStyle, fontWeight } = fontProps;\n  return [fontStyle != null ? fontStyle : \"\", fontWeight != null ? fontWeight : \"\", fontSize + \"px\", fontFamily].join(\" \").trim();\n}\nfunction measureText(lines, x, y, textProps) {\n  return HdpiCanvas.has.textMetrics ? getPreciseBBox(lines, x, y, textProps) : getApproximateBBox(lines, x, y, textProps);\n}\nfunction getPreciseBBox(lines, x, y, textProps) {\n  var _a, _b;\n  let left = 0;\n  let top = 0;\n  let width = 0;\n  let height = 0;\n  let baselineDistance = 0;\n  const font = getFont(textProps);\n  const {\n    lineHeight,\n    textBaseline = Text.defaultStyles.textBaseline,\n    textAlign = Text.defaultStyles.textAlign\n  } = textProps;\n  for (let i = 0; i < lines.length; i++) {\n    const metrics = HdpiCanvas.measureText(lines[i], font, textBaseline, textAlign);\n    left = Math.max(left, metrics.actualBoundingBoxLeft);\n    width = Math.max(width, metrics.width);\n    if (i == 0) {\n      top += metrics.actualBoundingBoxAscent;\n      height += metrics.actualBoundingBoxAscent;\n    } else {\n      baselineDistance += (_a = metrics.fontBoundingBoxAscent) != null ? _a : metrics.emHeightAscent;\n    }\n    if (i == lines.length - 1) {\n      height += metrics.actualBoundingBoxDescent;\n    } else {\n      baselineDistance += (_b = metrics.fontBoundingBoxDescent) != null ? _b : metrics.emHeightDescent;\n    }\n  }\n  if (lineHeight !== void 0) {\n    baselineDistance = (lines.length - 1) * lineHeight;\n  }\n  height += baselineDistance;\n  top += baselineDistance * getVerticalOffset(textBaseline);\n  return new BBox(x - left, y - top, width, height);\n}\nfunction getApproximateBBox(lines, x, y, textProps) {\n  let width = 0;\n  let firstLineHeight = 0;\n  let baselineDistance = 0;\n  const font = getFont(textProps);\n  const {\n    lineHeight,\n    textBaseline = Text.defaultStyles.textBaseline,\n    textAlign = Text.defaultStyles.textAlign\n  } = textProps;\n  if (lines.length > 0) {\n    const lineSize = HdpiCanvas.getTextSize(lines[0], font);\n    width = lineSize.width;\n    firstLineHeight = lineSize.height;\n  }\n  for (let i = 1; i < lines.length; i++) {\n    const lineSize = HdpiCanvas.getTextSize(lines[i], font);\n    width = Math.max(width, lineSize.width);\n    baselineDistance += lineHeight != null ? lineHeight : lineSize.height;\n  }\n  switch (textAlign) {\n    case \"end\":\n    case \"right\":\n      x -= width;\n      break;\n    case \"center\":\n      x -= width / 2;\n  }\n  switch (textBaseline) {\n    case \"alphabetic\":\n      y -= firstLineHeight * 0.7 + baselineDistance * 0.5;\n      break;\n    case \"middle\":\n      y -= firstLineHeight * 0.45 + baselineDistance * 0.5;\n      break;\n    case \"ideographic\":\n      y -= firstLineHeight + baselineDistance;\n      break;\n    case \"hanging\":\n      y -= firstLineHeight * 0.2 + baselineDistance * 0.5;\n      break;\n    case \"bottom\":\n      y -= firstLineHeight + baselineDistance;\n      break;\n  }\n  return new BBox(x, y, width, firstLineHeight + baselineDistance);\n}\nfunction getVerticalOffset(textBaseline) {\n  switch (textBaseline) {\n    case \"top\":\n    case \"hanging\":\n      return 0;\n    case \"bottom\":\n    case \"alphabetic\":\n    case \"ideographic\":\n      return 1;\n    case \"middle\":\n      return 0.5;\n  }\n}\nfunction splitText(text) {\n  return typeof text === \"string\" ? text.split(/\\r?\\n/g) : [];\n}\n\n// packages/ag-charts-community/src/util/proxy.ts\nfunction ProxyProperty(...proxyProperties) {\n  const property = proxyProperties[proxyProperties.length - 1];\n  if (proxyProperties.length === 1) {\n    return addTransformToInstanceProperty(\n      (target, _, value) => {\n        target[property] = value;\n        return value;\n      },\n      (target, _) => {\n        return target[property];\n      }\n    );\n  }\n  const getTarget = (target) => {\n    let value = target;\n    for (let i = 0; i < proxyProperties.length - 1; i += 1) {\n      value = value[proxyProperties[i]];\n    }\n    return value;\n  };\n  return addTransformToInstanceProperty(\n    (target, _, value) => {\n      getTarget(target)[property] = value;\n      return value;\n    },\n    (target, _) => {\n      return getTarget(target)[property];\n    }\n  );\n}\nfunction ProxyOnWrite(proxyProperty) {\n  return addTransformToInstanceProperty((target, _, value) => {\n    target[proxyProperty] = value;\n    return value;\n  });\n}\nfunction ProxyPropertyOnWrite(childName, childProperty) {\n  return addTransformToInstanceProperty((target, key, value) => {\n    target[childName][childProperty != null ? childProperty : key] = value;\n    return value;\n  });\n}\nfunction ActionOnSet(opts) {\n  const { newValue: newValueFn, oldValue: oldValueFn, changeValue: changeValueFn } = opts;\n  return addTransformToInstanceProperty((target, _, newValue, oldValue) => {\n    if (newValue !== oldValue) {\n      if (oldValue !== void 0) {\n        oldValueFn == null ? void 0 : oldValueFn.call(target, oldValue);\n      }\n      if (newValue !== void 0) {\n        newValueFn == null ? void 0 : newValueFn.call(target, newValue);\n      }\n      changeValueFn == null ? void 0 : changeValueFn.call(target, newValue, oldValue);\n    }\n    return newValue;\n  });\n}\n\n// packages/ag-charts-community/src/util/dom.ts\nfunction injectStyle(document2, cssStyle) {\n  const styleElement = document2.createElement(\"style\");\n  styleElement.innerHTML = cssStyle;\n  document2.head.insertBefore(styleElement, document2.head.querySelector(\"style\"));\n}\n\n// packages/ag-charts-community/src/chart/tooltip/tooltip.ts\nvar DEFAULT_TOOLTIP_CLASS = \"ag-chart-tooltip\";\nvar DEFAULT_TOOLTIP_DARK_CLASS = \"ag-chart-dark-tooltip\";\nvar defaultTooltipCss = `\n.${DEFAULT_TOOLTIP_CLASS} {\n    transition: transform 0.1s ease;\n    max-width: 100%;\n    position: fixed;\n    left: 0px;\n    top: 0px;\n    z-index: 99999;\n    font: 12px Verdana, sans-serif;\n    color: rgb(70, 70, 70);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-always {\n    overflow-wrap: break-word;\n    word-break: break-word;\n    hyphens: none;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-hyphenate {\n    overflow-wrap: break-word;\n    word-break: break-word;\n    hyphens: auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-on-space {\n    overflow-wrap: normal;\n    word-break: normal;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-wrap-never {\n    white-space: pre;\n    text-overflow: ellipsis;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-no-interaction {\n    pointer-events: none;\n    user-select: none;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-no-animation {\n    transition: none !important;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-hidden {\n    visibility: hidden;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-title {\n    overflow: hidden;\n    position: relative;\n    padding: 8px 14px;\n    border-top-left-radius: 2px;\n    border-top-right-radius: 2px;\n    color: white;\n    background-color: #888888;\n    z-index: 1;\n    text-overflow: inherit;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-title:only-child {\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-content {\n    overflow: hidden;\n    padding: 6px 14px;\n    line-height: 1.7em;\n    background: white;\n    border-bottom-left-radius: 2px;\n    border-bottom-right-radius: 2px;\n    border: 1px solid rgba(0, 0, 0, 0.15);\n    overflow: hidden;\n    text-overflow: inherit;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-arrow::before {\n    content: \"\";\n\n    position: absolute;\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 5px solid #d9d9d9;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}-arrow::after {\n    content: \"\";\n\n    position: absolute;\n    top: calc(100% - 1px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    border: 5px solid white;\n\n    border-left-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n\n    width: 0;\n    height: 0;\n\n    margin: 0 auto;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}.${DEFAULT_TOOLTIP_DARK_CLASS} {\n    color: white;\n    background: #15181c;\n}\n\n.${DEFAULT_TOOLTIP_CLASS}.${DEFAULT_TOOLTIP_DARK_CLASS} .${DEFAULT_TOOLTIP_CLASS}-content {\n    border-color: rgba(255, 255, 255, 0.15);\n}\n\n.ag-chart-wrapper {\n    box-sizing: border-box;\n    overflow: hidden;\n}\n`;\nfunction toTooltipHtml(input, defaults) {\n  var _a, _b, _c;\n  if (typeof input === \"string\") {\n    return input;\n  }\n  const {\n    content = (_a = defaults == null ? void 0 : defaults.content) != null ? _a : \"\",\n    title = defaults == null ? void 0 : defaults.title,\n    color = (_b = defaults == null ? void 0 : defaults.color) != null ? _b : \"white\",\n    backgroundColor = (_c = defaults == null ? void 0 : defaults.backgroundColor) != null ? _c : \"#888\"\n  } = input;\n  const titleHtml = title ? `<div class=\"${DEFAULT_TOOLTIP_CLASS}-title\"\n        style=\"color: ${color}; background-color: ${backgroundColor}\">${title}</div>` : \"\";\n  const contentHtml = content ? `<div class=\"${DEFAULT_TOOLTIP_CLASS}-content\">${content}</div>` : \"\";\n  return `${titleHtml}${contentHtml}`;\n}\nvar TooltipPosition = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    /** The type of positioning for the tooltip. By default, the tooltip follows the pointer. */\n    this.type = \"pointer\";\n    /** The horizontal offset in pixels for the position of the tooltip. */\n    this.xOffset = 0;\n    /** The vertical offset in pixels for the position of the tooltip. */\n    this.yOffset = 0;\n  }\n};\n__decorateClass([\n  Validate(UNION([\"pointer\", \"node\"], \"a position type\"))\n], TooltipPosition.prototype, \"type\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], TooltipPosition.prototype, \"xOffset\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], TooltipPosition.prototype, \"yOffset\", 2);\nvar _Tooltip = class _Tooltip {\n  constructor(canvasElement, document2, window2, container) {\n    this.enableInteraction = false;\n    this.enabled = true;\n    this.showArrow = void 0;\n    this.class = void 0;\n    this.lastClass = void 0;\n    this.delay = 0;\n    this.range = \"nearest\";\n    this.wrapping = \"hyphenate\";\n    this.lastVisibilityChange = Date.now();\n    this.position = new TooltipPosition();\n    this.showTimeout = 0;\n    this._showArrow = true;\n    this.tooltipRoot = container;\n    this.window = window2;\n    const element2 = document2.createElement(\"div\");\n    this.element = this.tooltipRoot.appendChild(element2);\n    this.element.classList.add(DEFAULT_TOOLTIP_CLASS);\n    this.canvasElement = canvasElement;\n    if (typeof IntersectionObserver !== \"undefined\") {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          for (const entry of entries) {\n            if (entry.target === this.canvasElement && entry.intersectionRatio === 0) {\n              this.toggle(false);\n            }\n          }\n        },\n        { root: this.tooltipRoot }\n      );\n      observer.observe(this.canvasElement);\n      this.observer = observer;\n    }\n    if (_Tooltip.tooltipDocuments.indexOf(document2) < 0) {\n      injectStyle(document2, defaultTooltipCss);\n      _Tooltip.tooltipDocuments.push(document2);\n    }\n  }\n  destroy() {\n    const { parentNode } = this.element;\n    if (parentNode) {\n      parentNode.removeChild(this.element);\n    }\n    if (this.observer) {\n      this.observer.unobserve(this.canvasElement);\n    }\n  }\n  isVisible() {\n    const { element: element2 } = this;\n    return !element2.classList.contains(DEFAULT_TOOLTIP_CLASS + \"-hidden\");\n  }\n  updateClass(visible, showArrow, addCustomClass = true) {\n    const { element: element2, class: newClass, lastClass, enableInteraction, lastVisibilityChange } = this;\n    const wasVisible = this.isVisible();\n    const nowVisible = !!visible;\n    let timeSinceLastVisibilityChangeMs = Infinity;\n    if (wasVisible !== nowVisible) {\n      const now = Date.now();\n      timeSinceLastVisibilityChangeMs = now - lastVisibilityChange;\n      this.lastVisibilityChange = now;\n    }\n    const toggleClass = (name, include) => {\n      const className = `${DEFAULT_TOOLTIP_CLASS}-${name}`;\n      if (include) {\n        element2.classList.add(className);\n      } else {\n        element2.classList.remove(className);\n      }\n    };\n    const animatedMoveThresholdMs = 100;\n    const thrashingThresholdMs = 5;\n    const noAnimation = !wasVisible && nowVisible && timeSinceLastVisibilityChangeMs > animatedMoveThresholdMs;\n    if (timeSinceLastVisibilityChangeMs > thrashingThresholdMs) {\n      toggleClass(\"no-animation\", noAnimation);\n    }\n    toggleClass(\"no-interaction\", !enableInteraction);\n    toggleClass(\"hidden\", !visible);\n    toggleClass(\"arrow\", !!showArrow);\n    this.updateWrapping();\n    if (addCustomClass) {\n      if (newClass !== lastClass) {\n        if (lastClass) {\n          element2.classList.remove(lastClass);\n        }\n        if (newClass) {\n          element2.classList.add(newClass);\n        }\n      }\n      this.lastClass = newClass;\n    } else {\n      if (lastClass) {\n        element2.classList.remove(lastClass);\n      }\n      this.lastClass = void 0;\n    }\n  }\n  updateWrapping() {\n    const { element: element2, wrapping } = this;\n    const wrappingOptions = {\n      always: false,\n      hyphenate: false,\n      \"on-space\": false,\n      never: false\n    };\n    wrappingOptions[wrapping] = true;\n    Object.entries(wrappingOptions).forEach(([name, force]) => {\n      element2.classList.toggle(`${DEFAULT_TOOLTIP_CLASS}-wrap-${name}`, force);\n    });\n  }\n  /**\n   * Shows tooltip at the given event's coordinates.\n   * If the `html` parameter is missing, moves the existing tooltip to the new position.\n   */\n  show(meta, html, instantly = false) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const { element: element2, canvasElement } = this;\n    if (html !== void 0) {\n      element2.innerHTML = html;\n    } else if (!element2.innerHTML) {\n      this.toggle(false);\n      return;\n    }\n    const limit = (low, actual, high) => {\n      return Math.max(Math.min(actual, high), low);\n    };\n    const xOffset = (_b = (_a = meta.position) == null ? void 0 : _a.xOffset) != null ? _b : 0;\n    const yOffset = (_d = (_c = meta.position) == null ? void 0 : _c.yOffset) != null ? _d : 0;\n    const canvasRect = canvasElement.getBoundingClientRect();\n    const naiveLeft = canvasRect.left + meta.offsetX - element2.clientWidth / 2 + xOffset;\n    const naiveTop = canvasRect.top + meta.offsetY - element2.clientHeight - 8 + yOffset;\n    const windowBounds = this.getWindowBoundingBox();\n    const maxLeft = windowBounds.x + windowBounds.width - element2.clientWidth - 1;\n    const maxTop = windowBounds.y + windowBounds.height - element2.clientHeight;\n    const left = limit(windowBounds.x, naiveLeft, maxLeft);\n    const top = limit(windowBounds.y, naiveTop, maxTop);\n    const constrained = left !== naiveLeft || top !== naiveTop;\n    const defaultShowArrow = !constrained && !xOffset && !yOffset;\n    const showArrow = (_f = (_e = meta.showArrow) != null ? _e : this.showArrow) != null ? _f : defaultShowArrow;\n    this.updateShowArrow(showArrow);\n    element2.style.transform = `translate(${Math.round(left)}px, ${Math.round(top)}px)`;\n    this.enableInteraction = (_g = meta.enableInteraction) != null ? _g : false;\n    if (this.delay > 0 && !instantly) {\n      this.toggle(false);\n      this.showTimeout = this.window.setTimeout(() => {\n        this.toggle(true, meta.addCustomClass);\n      }, this.delay);\n      return;\n    }\n    this.toggle(true, meta.addCustomClass);\n  }\n  getWindowBoundingBox() {\n    return new BBox(0, 0, this.window.innerWidth, this.window.innerHeight);\n  }\n  toggle(visible, addCustomClass) {\n    if (!visible) {\n      this.window.clearTimeout(this.showTimeout);\n    }\n    this.updateClass(visible, this._showArrow, addCustomClass);\n  }\n  pointerLeftOntoTooltip(event) {\n    var _a;\n    if (!this.enableInteraction)\n      return false;\n    const classList = (_a = event.sourceEvent.relatedTarget) == null ? void 0 : _a.classList;\n    const classes = [\"\", \"-title\", \"-content\"];\n    const classListContains = Boolean(classes.filter((c) => classList == null ? void 0 : classList.contains(`${DEFAULT_TOOLTIP_CLASS}${c}`)));\n    return classList !== void 0 && classListContains;\n  }\n  updateShowArrow(show) {\n    this._showArrow = show;\n  }\n};\n_Tooltip.tooltipDocuments = [];\n__decorateClass([\n  Validate(BOOLEAN)\n], _Tooltip.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], _Tooltip.prototype, \"showArrow\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], _Tooltip.prototype, \"class\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], _Tooltip.prototype, \"delay\", 2);\n__decorateClass([\n  Validate(INTERACTION_RANGE)\n], _Tooltip.prototype, \"range\", 2);\n__decorateClass([\n  Validate(TEXT_WRAP)\n], _Tooltip.prototype, \"wrapping\", 2);\nvar Tooltip = _Tooltip;\n\n// packages/ag-charts-community/src/chart/caption.ts\nvar Caption = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.id = createId(this);\n    this.node = new Text().setProperties({\n      textAlign: \"center\",\n      pointerEvents: 1 /* None */\n    });\n    this.enabled = false;\n    this.textAlign = \"center\";\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.wrapping = \"always\";\n    this.truncated = false;\n  }\n  registerInteraction(moduleCtx) {\n    return moduleCtx.interactionManager.addListener(\"hover\", (event) => this.handleMouseMove(moduleCtx, event));\n  }\n  computeTextWrap(containerWidth, containerHeight) {\n    var _a, _b;\n    const { text, wrapping } = this;\n    const maxWidth = Math.min((_a = this.maxWidth) != null ? _a : Infinity, containerWidth);\n    const maxHeight = (_b = this.maxHeight) != null ? _b : containerHeight;\n    if (!isFinite(maxWidth) && !isFinite(maxHeight)) {\n      this.node.text = text;\n      return;\n    }\n    const { text: wrappedText, truncated } = Text.wrap(text != null ? text : \"\", maxWidth, maxHeight, this, wrapping);\n    this.node.text = wrappedText;\n    this.truncated = truncated;\n  }\n  handleMouseMove(moduleCtx, event) {\n    if (!this.enabled) {\n      return;\n    }\n    const bbox = this.node.computeBBox();\n    const { pageX, pageY, offsetX, offsetY } = event;\n    const pointerInsideCaption = this.node.visible && bbox.containsPoint(offsetX, offsetY);\n    if (!pointerInsideCaption) {\n      moduleCtx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    event.consume();\n    if (!this.truncated) {\n      moduleCtx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    moduleCtx.tooltipManager.updateTooltip(\n      this.id,\n      { pageX, pageY, offsetX, offsetY, event, showArrow: false, addCustomClass: false },\n      toTooltipHtml({ content: this.text })\n    );\n  }\n};\nCaption.SMALL_PADDING = 10;\nCaption.LARGE_PADDING = 20;\n__decorateClass([\n  Validate(BOOLEAN)\n], Caption.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true }),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"text\", 2);\n__decorateClass([\n  Validate(TEXT_ALIGN, { optional: true }),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"textAlign\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true }),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true }),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING),\n  ProxyPropertyOnWrite(\"node\")\n], Caption.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true }),\n  ProxyPropertyOnWrite(\"node\", \"fill\")\n], Caption.prototype, \"color\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Caption.prototype, \"spacing\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Caption.prototype, \"lineHeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Caption.prototype, \"maxWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Caption.prototype, \"maxHeight\", 2);\n__decorateClass([\n  Validate(TEXT_WRAP)\n], Caption.prototype, \"wrapping\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisTitle.ts\nvar AxisTitle = class {\n  constructor() {\n    this.enabled = false;\n    this.spacing = Caption.SMALL_PADDING;\n    this.fontSize = 10;\n    this.fontFamily = \"sans-serif\";\n    this.wrapping = \"always\";\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisTitle.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], AxisTitle.prototype, \"text\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], AxisTitle.prototype, \"spacing\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], AxisTitle.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], AxisTitle.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisTitle.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], AxisTitle.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], AxisTitle.prototype, \"color\", 2);\n__decorateClass([\n  Validate(TEXT_WRAP)\n], AxisTitle.prototype, \"wrapping\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], AxisTitle.prototype, \"formatter\", 2);\n\n// packages/ag-charts-community/src/chart/chartOptions.ts\nvar JSON_APPLY_PLUGINS = {\n  constructors: {},\n  constructedArrays: /* @__PURE__ */ new WeakMap()\n};\nfunction assignJsonApplyConstructedArray(array, ctor) {\n  var _a;\n  (_a = JSON_APPLY_PLUGINS.constructedArrays) == null ? void 0 : _a.set(array, ctor);\n}\nvar JSON_APPLY_OPTIONS = {\n  constructors: {\n    \"axes[].title\": AxisTitle\n  },\n  allowedTypes: {\n    \"legend.pagination.marker.shape\": [\"primitive\", \"function\"],\n    \"axis[].tick.count\": [\"primitive\", \"class-instance\"]\n  }\n};\nfunction getJsonApplyOptions(ctx) {\n  class CaptionWithContext extends Caption {\n    constructor() {\n      super();\n      this.registerInteraction(ctx);\n    }\n  }\n  return {\n    constructors: __spreadValues(__spreadProps(__spreadValues({}, JSON_APPLY_OPTIONS.constructors), {\n      title: CaptionWithContext,\n      subtitle: CaptionWithContext,\n      footnote: CaptionWithContext\n    }), JSON_APPLY_PLUGINS.constructors),\n    constructedArrays: JSON_APPLY_PLUGINS.constructedArrays,\n    allowedTypes: __spreadValues({}, JSON_APPLY_OPTIONS.allowedTypes)\n  };\n}\n\n// packages/ag-charts-community/src/scale/continuousScale.ts\nvar _ContinuousScale = class _ContinuousScale {\n  constructor(domain, range3) {\n    this.invalid = true;\n    this.nice = false;\n    this.interval = void 0;\n    this.tickCount = _ContinuousScale.defaultTickCount;\n    this.minTickCount = 0;\n    this.maxTickCount = Infinity;\n    this.niceDomain = [];\n    this.defaultClampMode = \"raw\";\n    this.domain = domain;\n    this.range = range3;\n  }\n  static is(value) {\n    return value instanceof _ContinuousScale;\n  }\n  transform(x) {\n    return x;\n  }\n  transformInvert(x) {\n    return x;\n  }\n  calcBandwidth(smallestInterval = 1) {\n    const domain = this.getDomain();\n    const maxRange = Math.max(...this.range);\n    const intervals = Math.abs(domain[1] - domain[0]) / smallestInterval + 1;\n    const maxBands = Math.floor(maxRange);\n    const bands = Math.min(intervals, maxBands);\n    return maxRange / Math.max(1, bands);\n  }\n  fromDomain(d) {\n    if (typeof d === \"number\") {\n      return d;\n    } else if (d instanceof Date) {\n      return d.getTime();\n    }\n    return NaN;\n  }\n  getDomain() {\n    if (this.nice) {\n      this.refresh();\n      if (this.niceDomain.length) {\n        return this.niceDomain;\n      }\n    }\n    return this.domain;\n  }\n  convert(x, opts) {\n    var _a;\n    const clampMode = (_a = opts == null ? void 0 : opts.clampMode) != null ? _a : this.defaultClampMode;\n    if (!this.domain || this.domain.length < 2) {\n      return NaN;\n    }\n    this.refresh();\n    const domain = this.getDomain().map((d) => this.transform(d));\n    const [d0, d1] = domain;\n    const { range: range3 } = this;\n    const [r0, r1] = range3;\n    x = this.transform(x);\n    if (clampMode === \"clamped\") {\n      const start = Math.min(this.fromDomain(d0), this.fromDomain(d1));\n      const stop = Math.max(this.fromDomain(d0), this.fromDomain(d1));\n      if (this.fromDomain(x) < start) {\n        return r0;\n      } else if (this.fromDomain(x) > stop) {\n        return r1;\n      }\n    }\n    if (d0 === d1) {\n      return (r0 + r1) / 2;\n    } else if (x === d0) {\n      return r0;\n    } else if (x === d1) {\n      return r1;\n    }\n    return r0 + (this.fromDomain(x) - this.fromDomain(d0)) / (this.fromDomain(d1) - this.fromDomain(d0)) * (r1 - r0);\n  }\n  invert(x) {\n    this.refresh();\n    const domain = this.getDomain().map((d2) => this.transform(d2));\n    const [d0, d1] = domain;\n    const { range: range3 } = this;\n    const [r0, r1] = range3;\n    const isReversed = r0 > r1;\n    const rMin = isReversed ? r1 : r0;\n    const rMax = isReversed ? r0 : r1;\n    let d;\n    if (x < rMin) {\n      return isReversed ? d1 : d0;\n    } else if (x > rMax) {\n      return isReversed ? d0 : d1;\n    } else if (r0 === r1) {\n      d = this.toDomain((this.fromDomain(d0) + this.fromDomain(d1)) / 2);\n    } else {\n      d = this.toDomain(\n        this.fromDomain(d0) + (x - r0) / (r1 - r0) * (this.fromDomain(d1) - this.fromDomain(d0))\n      );\n    }\n    return this.transformInvert(d);\n  }\n  refresh() {\n    if (!this.invalid)\n      return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n  getPixelRange() {\n    const range3 = this.range.slice().sort((a, b) => a - b);\n    return range3[1] - range3[0];\n  }\n  isDenseInterval({\n    start,\n    stop,\n    interval,\n    count: count2\n  }) {\n    const domain = stop - start;\n    const availableRange = this.getPixelRange();\n    const step = typeof interval === \"number\" ? interval : 1;\n    count2 != null ? count2 : count2 = domain / step;\n    if (count2 >= availableRange) {\n      Logger.warn(\n        `the configured interval results in more than 1 item per pixel, ignoring. Supply a larger interval or omit this configuration`\n      );\n      return true;\n    }\n    return false;\n  }\n};\n_ContinuousScale.defaultTickCount = 5;\n_ContinuousScale.defaultMaxTickCount = 6;\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"domain\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"range\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"nice\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"interval\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"tickCount\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"minTickCount\", 2);\n__decorateClass([\n  Invalidating\n], _ContinuousScale.prototype, \"maxTickCount\", 2);\nvar ContinuousScale = _ContinuousScale;\n\n// packages/ag-charts-community/src/util/compare.ts\nfunction ascendingStringNumberUndefined(a, b) {\n  let diff2 = 0;\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    diff2 = a - b;\n  } else if (typeof a === \"string\" && typeof b === \"string\") {\n    diff2 = a.localeCompare(b);\n  } else if (a == null && b == null) {\n  } else if (a == null) {\n    diff2 = -1;\n  } else if (b == null) {\n    diff2 = 1;\n  } else {\n    diff2 = String(a).localeCompare(String(b));\n  }\n  return diff2;\n}\nfunction compoundAscending(a, b, comparator) {\n  const toLiteral = (v) => {\n    if (typeof v === \"function\") {\n      return v();\n    }\n    return v;\n  };\n  for (const idx in a) {\n    const diff2 = comparator(toLiteral(a[idx]), toLiteral(b[idx]));\n    if (diff2 !== 0) {\n      return diff2;\n    }\n  }\n  return 0;\n}\n\n// packages/ag-charts-community/src/scene/group.ts\nvar _Group = class _Group extends Node {\n  constructor(opts) {\n    var _a;\n    super({ isVirtual: opts == null ? void 0 : opts.isVirtual });\n    this.opts = opts;\n    this.opacity = 1;\n    this.lastBBox = void 0;\n    const { zIndex, zIndexSubOrder } = opts != null ? opts : {};\n    this.isContainerNode = true;\n    if (zIndex !== void 0) {\n      this.zIndex = zIndex;\n    }\n    if (zIndexSubOrder !== void 0) {\n      this.zIndexSubOrder = zIndexSubOrder;\n    }\n    this.name = (_a = this.opts) == null ? void 0 : _a.name;\n  }\n  zIndexChanged() {\n    var _a;\n    if (this.layer) {\n      (_a = this._layerManager) == null ? void 0 : _a.moveLayer(this.layer, this.zIndex, this.zIndexSubOrder);\n    }\n  }\n  isLayer() {\n    return this.layer != null;\n  }\n  _setLayerManager(scene) {\n    var _a, _b;\n    if (this._layerManager && this.layer) {\n      this._layerManager.removeLayer(this.layer);\n      this.layer = void 0;\n    }\n    if (this.layer) {\n      throw new Error(\"AG Charts - unable to deregister scene rendering layer!\");\n    }\n    super._setLayerManager(scene);\n    if (scene && ((_a = this.opts) == null ? void 0 : _a.layer)) {\n      const { zIndex, zIndexSubOrder, name } = (_b = this.opts) != null ? _b : {};\n      const getComputedOpacity = () => this.getComputedOpacity();\n      const getVisibility = () => this.getVisibility();\n      this.layer = scene.addLayer({\n        zIndex,\n        zIndexSubOrder,\n        name,\n        getComputedOpacity,\n        getVisibility\n      });\n    }\n  }\n  getComputedOpacity() {\n    let opacity = 1;\n    let node = this;\n    do {\n      if (node instanceof _Group) {\n        opacity *= node.opacity;\n      }\n    } while (node = node.parent);\n    return opacity;\n  }\n  getVisibility() {\n    let node = this;\n    let visible = this.visible;\n    while (node = node.parent) {\n      if (node.visible) {\n        continue;\n      }\n      visible = node.visible;\n    }\n    return visible;\n  }\n  visibilityChanged() {\n    if (this.layer) {\n      this.layer.enabled = this.visible;\n    }\n  }\n  markDirty(source, type = 1 /* TRIVIAL */) {\n    if (this.isVirtual) {\n      super.markDirty(source, type);\n      return;\n    }\n    let parentType = type;\n    if (type < 2 /* MINOR */ || this.layer != null) {\n      parentType = 1 /* TRIVIAL */;\n    }\n    super.markDirty(source, type, parentType);\n  }\n  // We consider a group to be boundless, thus any point belongs to it.\n  containsPoint(_x, _y) {\n    return true;\n  }\n  computeBBox() {\n    this.computeTransformMatrix();\n    return _Group.computeBBox(this.children);\n  }\n  computeTransformedBBox() {\n    return this.computeBBox();\n  }\n  render(renderCtx) {\n    var _a, _b;\n    const { opts: { name = void 0 } = {}, _debug: debug2 = () => {\n    } } = this;\n    const { dirty, dirtyZIndex, layer, children, clipRect, dirtyTransform } = this;\n    let { ctx, forceRender, clipBBox } = renderCtx;\n    const { resized, stats } = renderCtx;\n    const canvasCtxTransform = ctx.getTransform();\n    const isDirty = dirty >= 2 /* MINOR */ || dirtyZIndex || resized;\n    let isChildDirty = isDirty;\n    let isChildLayerDirty = false;\n    for (const child of children) {\n      isChildDirty || (isChildDirty = child.layerManager == null && child.dirty >= 1 /* TRIVIAL */);\n      isChildLayerDirty || (isChildLayerDirty = child.layerManager != null && child.dirty >= 1 /* TRIVIAL */);\n      if (isChildDirty) {\n        break;\n      }\n    }\n    if (name) {\n      debug2({ name, group: this, isDirty, isChildDirty, dirtyTransform, renderCtx, forceRender });\n    }\n    if (dirtyTransform) {\n      forceRender = \"dirtyTransform\";\n    } else if (layer) {\n      const currentBBox = this.computeBBox();\n      if (this.lastBBox === void 0 || !this.lastBBox.equals(currentBBox)) {\n        forceRender = \"dirtyTransform\";\n        this.lastBBox = currentBBox;\n      }\n    }\n    if (!isDirty && !isChildDirty && !isChildLayerDirty && !forceRender) {\n      if (name && stats) {\n        debug2({ name, result: \"skipping\", renderCtx, counts: this.nodeCount, group: this });\n      }\n      if (layer && stats) {\n        stats.layersSkipped++;\n        stats.nodesSkipped += this.nodeCount.count;\n      }\n      this.markClean({ recursive: false });\n      return;\n    }\n    const groupVisible = this.visible;\n    if (layer) {\n      ctx = layer.context;\n      ctx.save();\n      ctx.resetTransform();\n      if (forceRender !== \"dirtyTransform\") {\n        forceRender = isChildDirty || dirtyZIndex;\n      }\n      if (forceRender)\n        layer.clear();\n      if (clipBBox) {\n        const { width, height, x, y } = clipBBox;\n        debug2(() => ({\n          name,\n          clipBBox,\n          ctxTransform: ctx.getTransform(),\n          renderCtx,\n          group: this\n        }));\n        this.clipCtx(ctx, x, y, width, height);\n      }\n      ctx.setTransform(canvasCtxTransform);\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    if (clipRect) {\n      const { x, y, width, height } = clipRect;\n      ctx.save();\n      debug2(() => ({ name, clipRect, ctxTransform: ctx.getTransform(), renderCtx, group: this }));\n      this.clipCtx(ctx, x, y, width, height);\n      clipBBox = this.matrix.transformBBox(clipRect);\n    }\n    const hasVirtualChildren = this.hasVirtualChildren();\n    if (dirtyZIndex) {\n      this.sortChildren(children);\n      if (forceRender !== \"dirtyTransform\")\n        forceRender = true;\n    } else if (hasVirtualChildren) {\n      this.sortChildren(children);\n    }\n    const renderContextChanged = forceRender !== renderCtx.forceRender || clipBBox !== renderCtx.clipBBox || ctx !== renderCtx.ctx;\n    const childRenderContext = renderContextChanged ? __spreadProps(__spreadValues({}, renderCtx), { ctx, forceRender, clipBBox }) : renderCtx;\n    let skipped = 0;\n    for (const child of children) {\n      if (!child.visible || !groupVisible) {\n        child.markClean();\n        if (stats)\n          skipped += child.nodeCount.count;\n        continue;\n      }\n      if (!forceRender && child.dirty === 0 /* NONE */) {\n        if (stats)\n          skipped += child.nodeCount.count;\n        continue;\n      }\n      ctx.save();\n      child.render(childRenderContext);\n      ctx.restore();\n    }\n    if (stats)\n      stats.nodesSkipped += skipped;\n    super.render(renderCtx);\n    if (clipRect) {\n      ctx.restore();\n    }\n    if (hasVirtualChildren) {\n      for (const child of this.virtualChildren) {\n        child.markClean({ recursive: \"virtual\" });\n      }\n    }\n    if (layer) {\n      if (stats)\n        stats.layersRendered++;\n      ctx.restore();\n      if (forceRender)\n        layer.snapshot();\n      (_b = (_a = layer.context).verifyDepthZero) == null ? void 0 : _b.call(_a);\n    }\n    if (name && stats) {\n      debug2({ name, result: \"rendered\", skipped, renderCtx, counts: this.nodeCount, group: this });\n    }\n  }\n  sortChildren(children) {\n    this.dirtyZIndex = false;\n    children.sort((a, b) => {\n      var _a, _b;\n      return compoundAscending(\n        [a.zIndex, ...(_a = a.zIndexSubOrder) != null ? _a : [void 0, void 0], a.serialNumber],\n        [b.zIndex, ...(_b = b.zIndexSubOrder) != null ? _b : [void 0, void 0], b.serialNumber],\n        ascendingStringNumberUndefined\n      );\n    });\n  }\n  clipCtx(ctx, x, y, width, height) {\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x, y + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n  static computeBBox(nodes) {\n    let left = Infinity;\n    let right = -Infinity;\n    let top = Infinity;\n    let bottom = -Infinity;\n    nodes.forEach((n) => {\n      if (!n.visible) {\n        return;\n      }\n      const bbox = n.computeTransformedBBox();\n      if (!bbox) {\n        return;\n      }\n      const x = bbox.x;\n      const y = bbox.y;\n      if (x < left) {\n        left = x;\n      }\n      if (y < top) {\n        top = y;\n      }\n      if (x + bbox.width > right) {\n        right = x + bbox.width;\n      }\n      if (y + bbox.height > bottom) {\n        bottom = y + bbox.height;\n      }\n    });\n    return new BBox(left, top, right - left, bottom - top);\n  }\n  /**\n   * Transforms bbox given in the canvas coordinate space to bbox in this group's coordinate space and\n   * sets this group's clipRect to the transformed bbox.\n   * @param bbox clipRect bbox in the canvas coordinate space.\n   */\n  setClipRectInGroupCoordinateSpace(bbox) {\n    this.clipRect = bbox ? this.transformBBox(bbox) : void 0;\n  }\n};\n_Group.className = \"Group\";\n__decorateClass([\n  SceneChangeDetection({\n    redraw: 3 /* MAJOR */,\n    convertor: (v) => Math.min(1, Math.max(0, v))\n  })\n], _Group.prototype, \"opacity\", 2);\nvar Group = _Group;\n\n// packages/ag-charts-community/src/scene/shape/range.ts\nvar Range = class extends Shape {\n  constructor(opts = {}) {\n    super(opts);\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.startLine = false;\n    this.endLine = false;\n    this.isRange = false;\n    this.restoreOwnStyles();\n  }\n  computeBBox() {\n    return new BBox(this.x1, this.y1, this.x2 - this.x1, this.y2 - this.y1);\n  }\n  isPointInPath(_x, _y) {\n    return false;\n  }\n  render(renderCtx) {\n    var _a;\n    const { ctx, forceRender, stats } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    let { x1, y1, x2, y2 } = this;\n    x1 = this.align(x1);\n    y1 = this.align(y1);\n    x2 = this.align(x2);\n    y2 = this.align(y2);\n    const { fill, opacity, isRange } = this;\n    const fillActive = !!(isRange && fill);\n    if (fillActive) {\n      const { fillOpacity } = this;\n      ctx.fillStyle = fill;\n      ctx.globalAlpha = opacity * fillOpacity;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y1);\n      ctx.lineTo(x2, y2);\n      ctx.lineTo(x1, y2);\n      ctx.closePath();\n      ctx.fill();\n    }\n    const { stroke, strokeWidth, startLine, endLine } = this;\n    const strokeActive = !!((startLine || endLine) && stroke && strokeWidth);\n    if (strokeActive) {\n      const { strokeOpacity, lineDash, lineDashOffset, lineCap, lineJoin } = this;\n      ctx.strokeStyle = stroke;\n      ctx.globalAlpha = opacity * strokeOpacity;\n      ctx.lineWidth = strokeWidth;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      ctx.beginPath();\n      if (startLine) {\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y1);\n      }\n      if (endLine) {\n        ctx.moveTo(x2, y2);\n        ctx.lineTo(x1, y2);\n      }\n      ctx.stroke();\n    }\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nRange.className = \"Range\";\nRange.defaultStyles = __spreadProps(__spreadValues({}, Shape.defaultStyles), {\n  strokeWidth: 1\n});\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"x1\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"y1\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"x2\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"y2\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"startLine\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"endLine\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 2 /* MINOR */ })\n], Range.prototype, \"isRange\", 2);\n\n// packages/ag-charts-community/src/chart/label.ts\nvar Label = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.color = \"#464646\";\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n  }\n  getFont() {\n    return getFont(this);\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], Label.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], Label.prototype, \"color\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], Label.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], Label.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Label.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], Label.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], Label.prototype, \"formatter\", 2);\nfunction calculateLabelRotation(opts) {\n  const { parallelFlipRotation = 0, regularFlipRotation = 0 } = opts;\n  const configuredRotation = opts.rotation ? normalizeAngle360(toRadians(opts.rotation)) : 0;\n  const parallelFlipFlag = !configuredRotation && parallelFlipRotation >= 0 && parallelFlipRotation <= Math.PI ? -1 : 1;\n  const regularFlipFlag = !configuredRotation && regularFlipRotation >= 0 && regularFlipRotation <= Math.PI ? -1 : 1;\n  let defaultRotation = 0;\n  if (opts.parallel) {\n    defaultRotation = parallelFlipFlag * Math.PI / 2;\n  } else if (regularFlipFlag === -1) {\n    defaultRotation = Math.PI;\n  }\n  return { configuredRotation, defaultRotation, parallelFlipFlag, regularFlipFlag };\n}\nfunction getLabelSpacing(minSpacing, rotated) {\n  if (!isNaN(minSpacing)) {\n    return minSpacing;\n  }\n  return rotated ? 0 : 10;\n}\nfunction getTextBaseline(parallel, labelRotation, sideFlag, parallelFlipFlag) {\n  if (parallel && !labelRotation) {\n    return sideFlag * parallelFlipFlag === -1 ? \"hanging\" : \"bottom\";\n  }\n  return \"middle\";\n}\nfunction getTextAlign(parallel, labelRotation, labelAutoRotation, sideFlag, regularFlipFlag) {\n  const labelRotated = labelRotation > 0 && labelRotation <= Math.PI;\n  const labelAutoRotated = labelAutoRotation > 0 && labelAutoRotation <= Math.PI;\n  const alignFlag = labelRotated || labelAutoRotated ? -1 : 1;\n  if (parallel) {\n    if (labelRotation || labelAutoRotation) {\n      if (sideFlag * alignFlag === -1) {\n        return \"end\";\n      }\n    } else {\n      return \"center\";\n    }\n  } else if (sideFlag * regularFlipFlag === -1) {\n    return \"end\";\n  }\n  return \"start\";\n}\nfunction calculateLabelBBox(text, bbox, labelX, labelY, labelMatrix) {\n  const { width, height } = bbox;\n  const translatedBBox = new BBox(labelX, labelY, 0, 0);\n  labelMatrix.transformBBox(translatedBBox, bbox);\n  const { x = 0, y = 0 } = bbox;\n  bbox.width = width;\n  bbox.height = height;\n  return {\n    point: { x, y, size: 0 },\n    label: { width, height, text }\n  };\n}\n\n// packages/ag-charts-community/src/chart/layers.ts\nvar Layers = /* @__PURE__ */ ((Layers2) => {\n  Layers2[Layers2[\"SERIES_BACKGROUND_ZINDEX\"] = 0] = \"SERIES_BACKGROUND_ZINDEX\";\n  Layers2[Layers2[\"AXIS_GRID_ZINDEX\"] = 1] = \"AXIS_GRID_ZINDEX\";\n  Layers2[Layers2[\"AXIS_ZINDEX\"] = 2] = \"AXIS_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSLINE_RANGE_ZINDEX\"] = 3] = \"SERIES_CROSSLINE_RANGE_ZINDEX\";\n  Layers2[Layers2[\"SERIES_LAYER_ZINDEX\"] = 4] = \"SERIES_LAYER_ZINDEX\";\n  Layers2[Layers2[\"AXIS_FOREGROUND_ZINDEX\"] = 5] = \"AXIS_FOREGROUND_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSHAIR_ZINDEX\"] = 6] = \"SERIES_CROSSHAIR_ZINDEX\";\n  Layers2[Layers2[\"SERIES_LABEL_ZINDEX\"] = 7] = \"SERIES_LABEL_ZINDEX\";\n  Layers2[Layers2[\"SERIES_CROSSLINE_LINE_ZINDEX\"] = 8] = \"SERIES_CROSSLINE_LINE_ZINDEX\";\n  Layers2[Layers2[\"LEGEND_ZINDEX\"] = 9] = \"LEGEND_ZINDEX\";\n  return Layers2;\n})(Layers || {});\n\n// packages/ag-charts-community/src/integrated-charts-scene.ts\nvar integrated_charts_scene_exports = {};\n__export(integrated_charts_scene_exports, {\n  Arc: () => Arc,\n  BBox: () => BBox,\n  BandScale: () => BandScale,\n  Caption: () => Caption,\n  Circle: () => Circle,\n  ContinuousScale: () => ContinuousScale,\n  Diamond: () => Diamond,\n  DropShadow: () => DropShadow,\n  Group: () => Group,\n  HdpiCanvas: () => HdpiCanvas,\n  Image: () => Image,\n  Label: () => Label,\n  Line: () => Line,\n  LinearGradientFill: () => LinearGradientFill,\n  LinearScale: () => LinearScale,\n  Marker: () => Marker,\n  Node: () => Node,\n  Path: () => Path,\n  Path2D: () => Path2D,\n  PointerEvents: () => PointerEvents,\n  Rect: () => Rect,\n  RedrawType: () => RedrawType,\n  Scene: () => Scene,\n  SceneChangeDetection: () => SceneChangeDetection,\n  ScenePathChangeDetection: () => ScenePathChangeDetection,\n  Sector: () => Sector,\n  Selection: () => Selection,\n  Shape: () => Shape,\n  Square: () => Square,\n  Text: () => Text,\n  Tooltip: () => Tooltip,\n  Triangle: () => Triangle,\n  easing: () => easing_exports,\n  getFont: () => getFont,\n  getMarker: () => getMarker,\n  motion: () => motion,\n  nearestSquared: () => nearestSquared,\n  nearestSquaredInContainer: () => nearestSquaredInContainer,\n  toRadians: () => toRadians,\n  toTooltipHtml: () => toTooltipHtml\n});\n\n// packages/ag-charts-community/src/motion/fromToMotion.ts\nvar fromToMotion_exports = {};\n__export(fromToMotion_exports, {\n  FROM_TO_MIXINS: () => FROM_TO_MIXINS,\n  NODE_UPDATE_PHASES: () => NODE_UPDATE_PHASES,\n  fromToMotion: () => fromToMotion,\n  staticFromToMotion: () => staticFromToMotion\n});\n\n// packages/ag-charts-community/src/util/zip.ts\nfunction zipObject(keys, values) {\n  const zipped = {};\n  if (Array.isArray(values)) {\n    for (let i = 0; i < keys.length; i++) {\n      zipped[`${keys[i]}`] = values[i];\n    }\n  } else {\n    for (let i = 0; i < keys.length; i++) {\n      zipped[`${keys[i]}`] = values;\n    }\n  }\n  return zipped;\n}\n\n// packages/ag-charts-community/src/interpolate.ts\nfunction interpolateNumber(a, b) {\n  return (d) => Number(a) * (1 - d) + Number(b) * d;\n}\nfunction interpolateColor(a, b) {\n  if (typeof a === \"string\") {\n    try {\n      a = Color.fromString(a);\n    } catch (e) {\n      a = Color.fromArray([0, 0, 0]);\n    }\n  }\n  if (typeof b === \"string\") {\n    try {\n      b = Color.fromString(b);\n    } catch (e) {\n      b = Color.fromArray([0, 0, 0]);\n    }\n  }\n  const red = interpolateNumber(a.r, b.r);\n  const green = interpolateNumber(a.g, b.g);\n  const blue = interpolateNumber(a.b, b.b);\n  const alpha = interpolateNumber(a.a, b.a);\n  return (d) => Color.fromArray([red(d), green(d), blue(d), alpha(d)]).toRgbaString();\n}\n\n// packages/ag-charts-community/src/motion/easing.ts\nvar easing_exports = {};\n__export(easing_exports, {\n  easeIn: () => easeIn,\n  easeInOut: () => easeInOut,\n  easeInOutQuad: () => easeInOutQuad,\n  easeInQuad: () => easeInQuad,\n  easeOut: () => easeOut,\n  easeOutQuad: () => easeOutQuad,\n  inverseEaseOut: () => inverseEaseOut,\n  linear: () => linear\n});\nvar linear = (n) => n;\nvar easeIn = (n) => 1 - Math.cos(n * Math.PI / 2);\nvar easeOut = (n) => Math.sin(n * Math.PI / 2);\nvar easeInOut = (n) => -(Math.cos(n * Math.PI) - 1) / 2;\nvar easeInQuad = (n) => n * n;\nvar easeOutQuad = (n) => 1 - __pow(1 - n, 2);\nvar easeInOutQuad = (n) => n < 0.5 ? 2 * n * n : 1 - __pow(-2 * n + 2, 2) / 2;\nvar inverseEaseOut = (x) => 2 * Math.asin(x) / Math.PI;\n\n// packages/ag-charts-community/src/motion/animation.ts\nvar QUICK_TRANSITION = 0.2;\nvar INITIAL_LOAD = {\n  animationDuration: 1,\n  animationDelay: 0\n};\nvar REMOVE_PHASE = {\n  animationDuration: 0.25,\n  animationDelay: 0\n};\nvar UPDATE_PHASE = {\n  animationDuration: 0.5,\n  animationDelay: 0.25\n};\nvar ADD_PHASE = {\n  animationDuration: 0.25,\n  animationDelay: 0.75\n};\nvar LABEL_PHASE = {\n  animationDuration: QUICK_TRANSITION,\n  animationDelay: 1\n};\nvar RepeatType = /* @__PURE__ */ ((RepeatType2) => {\n  RepeatType2[\"Loop\"] = \"loop\";\n  RepeatType2[\"Reverse\"] = \"reverse\";\n  return RepeatType2;\n})(RepeatType || {});\nfunction isNodeArray(array) {\n  return array.every((n) => n instanceof Node);\n}\nfunction deconstructSelectionsOrNodes(selectionsOrNodes) {\n  return isNodeArray(selectionsOrNodes) ? { nodes: selectionsOrNodes, selections: [] } : { nodes: [], selections: selectionsOrNodes };\n}\nvar Animation = class {\n  constructor(opts) {\n    this.elapsed = 0;\n    this.iteration = 0;\n    this.isPlaying = false;\n    this.isReverse = false;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;\n    this.id = opts.id;\n    this.groupId = opts.groupId;\n    this.autoplay = (_a = opts.autoplay) != null ? _a : true;\n    this.delay = (_b = opts.delay) != null ? _b : 0;\n    this.duration = (_c = opts.duration) != null ? _c : 1e3;\n    this.ease = (_d = opts.ease) != null ? _d : linear;\n    this.repeat = (_e = opts.repeat) != null ? _e : 0;\n    this.repeatType = (_f = opts.repeatType) != null ? _f : \"loop\" /* Loop */;\n    this.onComplete = opts.onComplete;\n    this.onPlay = opts.onPlay;\n    this.onStop = opts.onStop;\n    this.onRepeat = opts.onRepeat;\n    this.onUpdate = opts.onUpdate;\n    this.interpolate = this.createInterpolator(opts.from, opts.to);\n    if (opts.skip === true) {\n      (_g = this.onUpdate) == null ? void 0 : _g.call(this, opts.to, false, this);\n      (_h = this.onStop) == null ? void 0 : _h.call(this, this);\n      (_i = this.onComplete) == null ? void 0 : _i.call(this, this);\n    } else if (this.autoplay) {\n      this.play();\n      (_j = this.onUpdate) == null ? void 0 : _j.call(this, opts.from, true, this);\n    }\n  }\n  play() {\n    var _a;\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      (_a = this.onPlay) == null ? void 0 : _a.call(this, this);\n    }\n    return this;\n  }\n  pause() {\n    if (this.isPlaying) {\n      this.isPlaying = false;\n    }\n    return this;\n  }\n  stop() {\n    var _a;\n    if (this.isPlaying) {\n      this.isPlaying = false;\n      (_a = this.onStop) == null ? void 0 : _a.call(this, this);\n    }\n    return this;\n  }\n  reset(opts) {\n    const deltaState = this.interpolate(this.isReverse ? 1 - this.delta : this.delta);\n    this.interpolate = this.createInterpolator(deltaState, opts.to);\n    this.elapsed = 0;\n    this.iteration = 0;\n    if (typeof opts.delay === \"number\") {\n      this.delay = opts.delay;\n    }\n    if (typeof opts.duration === \"number\") {\n      this.duration = opts.duration;\n    }\n    if (typeof opts.ease === \"function\") {\n      this.ease = opts.ease;\n    }\n    return this;\n  }\n  update(time) {\n    var _a, _b, _c;\n    this.elapsed += time;\n    if (this.elapsed <= this.delay) {\n      return this;\n    }\n    const value = this.interpolate(this.isReverse ? 1 - this.delta : this.delta);\n    (_a = this.onUpdate) == null ? void 0 : _a.call(this, value, false, this);\n    if (this.elapsed - this.delay >= this.duration) {\n      if (this.iteration < this.repeat) {\n        this.iteration++;\n        this.elapsed = (this.elapsed - this.delay) % this.duration + this.delay;\n        if (this.repeatType === \"reverse\" /* Reverse */) {\n          this.isReverse = !this.isReverse;\n        }\n        (_b = this.onRepeat) == null ? void 0 : _b.call(this, this);\n      } else {\n        this.stop();\n        (_c = this.onComplete) == null ? void 0 : _c.call(this, this);\n      }\n    }\n    return this;\n  }\n  get delta() {\n    return this.ease(clamp2(0, (this.elapsed - this.delay) / this.duration, 1));\n  }\n  createInterpolator(from, to) {\n    if (typeof to !== \"object\") {\n      return this.interpolateValue(from, to);\n    }\n    const interpolatorEntries = [];\n    for (const key in to) {\n      const interpolator = this.interpolateValue(from[key], to[key]);\n      if (interpolator != null) {\n        interpolatorEntries.push([key, interpolator]);\n      }\n    }\n    return (d) => {\n      const result = {};\n      for (const [key, interpolator] of interpolatorEntries) {\n        result[key] = interpolator(d);\n      }\n      return result;\n    };\n  }\n  interpolateValue(a, b) {\n    if (a === void 0 || b === void 0) {\n      return void 0;\n    }\n    try {\n      switch (typeof a) {\n        case \"number\":\n          return interpolateNumber(a, b);\n        case \"string\":\n          return interpolateColor(a, b);\n      }\n    } catch (e) {\n    }\n    throw new Error(`Unable to interpolate values: ${a}, ${b}`);\n  }\n};\n\n// packages/ag-charts-community/src/motion/fromToMotion.ts\nvar NODE_UPDATE_PHASES = [\"removed\", \"updated\", \"added\"];\nvar FROM_TO_MIXINS = {\n  added: ADD_PHASE,\n  updated: UPDATE_PHASE,\n  removed: REMOVE_PHASE,\n  unknown: INITIAL_LOAD\n};\nfunction fromToMotion(groupId, subId, animationManager, selectionsOrNodes, fns, getDatumId, diff2) {\n  const { defaultDuration } = animationManager;\n  const { fromFn, toFn, intermediateFn } = fns;\n  const { nodes, selections } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  const ids = { added: {}, removed: {} };\n  if (getDatumId && diff2) {\n    ids.added = zipObject(diff2.added, true);\n    ids.removed = zipObject(diff2.removed, true);\n  }\n  const processNodes = (liveNodes, nodes2) => {\n    var _c, _d;\n    let prevFromProps;\n    let liveNodeIndex = 0;\n    let nodeIndex = 0;\n    for (const node of nodes2) {\n      const isLive = liveNodes[liveNodeIndex] === node;\n      const ctx = {\n        last: nodeIndex >= nodes2.length - 1,\n        lastLive: liveNodeIndex >= liveNodes.length - 1,\n        prev: nodes2[nodeIndex - 1],\n        prevFromProps,\n        prevLive: liveNodes[liveNodeIndex - 1],\n        next: nodes2[nodeIndex + 1],\n        nextLive: liveNodes[liveNodeIndex + (isLive ? 1 : 0)]\n      };\n      const animationId = `${groupId}_${subId}_${node.id}`;\n      animationManager.stopByAnimationId(animationId);\n      let status = \"unknown\";\n      if (!isLive) {\n        status = \"removed\";\n      } else if (getDatumId && diff2) {\n        status = calculateStatus(node, node.datum, getDatumId, ids);\n      }\n      const _a = fromFn(node, node.datum, status, ctx), {\n        animationDelay: delay,\n        animationDuration: duration,\n        start = {},\n        finish = {}\n      } = _a, from = __objRest(_a, [\n        \"animationDelay\",\n        \"animationDuration\",\n        \"start\",\n        \"finish\"\n      ]);\n      const _b = toFn(node, node.datum, status, ctx), {\n        animationDelay: toDelay,\n        animationDuration: toDuration,\n        start: toStart = {},\n        finish: toFinish = {}\n      } = _b, to = __objRest(_b, [\n        \"animationDelay\",\n        \"animationDuration\",\n        \"start\",\n        \"finish\"\n      ]);\n      animationManager.animate({\n        id: animationId,\n        groupId,\n        from,\n        to,\n        ease: easeOut,\n        onPlay: () => {\n          node.setProperties(__spreadValues(__spreadValues({}, start), toStart));\n        },\n        onUpdate(props) {\n          node.setProperties(props);\n          if (intermediateFn) {\n            node.setProperties(intermediateFn(node, node.datum, status, ctx));\n          }\n        },\n        onStop: () => {\n          node.setProperties(__spreadValues(__spreadValues(__spreadValues({}, to), finish), toFinish));\n        },\n        duration: ((_c = duration != null ? duration : toDuration) != null ? _c : 1) * defaultDuration,\n        delay: ((_d = delay != null ? delay : toDelay) != null ? _d : 0) * defaultDuration\n      });\n      if (isLive) {\n        liveNodeIndex++;\n      }\n      nodeIndex++;\n      prevFromProps = from;\n    }\n  };\n  let selectionIndex = 0;\n  for (const selection of selections) {\n    const nodes2 = selection.nodes();\n    const liveNodes = nodes2.filter((n) => !selection.isGarbage(n));\n    processNodes(liveNodes, nodes2);\n    animationManager.animate({\n      id: `${groupId}_${subId}_selection_${selectionIndex}`,\n      groupId,\n      from: 0,\n      to: 1,\n      ease: easeOut,\n      onStop() {\n        selection.cleanup();\n      }\n    });\n    selectionIndex++;\n  }\n  processNodes(nodes, nodes);\n}\nfunction staticFromToMotion(groupId, subId, animationManager, selectionsOrNodes, from, to, extraOpts = {}) {\n  const { nodes, selections } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  const { animationDelay = 0, animationDuration = 1, start = {}, finish = {} } = extraOpts;\n  const { defaultDuration } = animationManager;\n  animationManager.animate({\n    id: `${groupId}_${subId}`,\n    groupId,\n    from,\n    to,\n    ease: easeOut,\n    onPlay: () => {\n      for (const node of nodes) {\n        node.setProperties(start);\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(start);\n        }\n      }\n    },\n    onUpdate(props) {\n      for (const node of nodes) {\n        node.setProperties(props);\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(props);\n        }\n      }\n    },\n    onStop: () => {\n      for (const node of nodes) {\n        node.setProperties(__spreadValues(__spreadValues({}, to), finish));\n      }\n      for (const selection of selections) {\n        for (const node of selection.nodes()) {\n          node.setProperties(__spreadValues(__spreadValues({}, to), finish));\n        }\n      }\n    },\n    duration: animationDuration * defaultDuration,\n    delay: animationDelay * defaultDuration\n  });\n}\nfunction calculateStatus(node, datum, getDatumId, ids) {\n  const id = getDatumId(node, datum);\n  if (ids.added[id]) {\n    return \"added\";\n  } else if (ids.removed[id]) {\n    return \"removed\";\n  }\n  return \"updated\";\n}\n\n// packages/ag-charts-community/src/motion/resetMotion.ts\nvar resetMotion_exports = {};\n__export(resetMotion_exports, {\n  resetMotion: () => resetMotion\n});\nfunction resetMotion(selectionsOrNodes, propsFn) {\n  const { nodes, selections } = deconstructSelectionsOrNodes(selectionsOrNodes);\n  for (const selection of selections) {\n    for (const node of selection.nodes()) {\n      const from = propsFn(node, node.datum);\n      node.setProperties(from);\n    }\n    selection.cleanup();\n  }\n  for (const node of nodes) {\n    const from = propsFn(node, node.datum);\n    node.setProperties(from);\n  }\n}\n\n// packages/ag-charts-community/src/scene/dropShadow.ts\nvar DropShadow = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.color = \"rgba(0, 0, 0, 0.5)\";\n    this.xOffset = 0;\n    this.yOffset = 0;\n    this.blur = 5;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], DropShadow.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(COLOR_STRING),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], DropShadow.prototype, \"color\", 2);\n__decorateClass([\n  Validate(NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], DropShadow.prototype, \"xOffset\", 2);\n__decorateClass([\n  Validate(NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], DropShadow.prototype, \"yOffset\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], DropShadow.prototype, \"blur\", 2);\n\n// packages/ag-charts-community/src/scene/canvas/hdpiOffscreenCanvas.ts\nvar HdpiOffscreenCanvas = class {\n  // The width/height attributes of the Canvas element default to\n  // 300/150 according to w3.org.\n  constructor({ width = 600, height = 300, overrideDevicePixelRatio }) {\n    this.enabled = true;\n    // `NaN` is deliberate here, so that overrides are always applied\n    // and the `resetTransform` inside the `resize` method works in IE11.\n    this._pixelRatio = NaN;\n    this._width = 0;\n    this._height = 0;\n    this.canvas = new OffscreenCanvas(width, height);\n    this.realContext = this.canvas.getContext(\"2d\");\n    this.imageSource = this.canvas.transferToImageBitmap();\n    this.context = this.setPixelRatio(overrideDevicePixelRatio);\n    this.resize(width, height);\n  }\n  static isSupported() {\n    return typeof OffscreenCanvas !== \"undefined\" && OffscreenCanvas.prototype.transferToImageBitmap != null;\n  }\n  snapshot() {\n    this.imageSource.close();\n    this.imageSource = this.canvas.transferToImageBitmap();\n  }\n  destroy() {\n    this.imageSource.close();\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    this.context.clearRect(0, 0, 0, 0);\n  }\n  clear() {\n    this.context.save();\n    this.context.resetTransform();\n    this.context.clearRect(0, 0, this.width, this.height);\n    this.context.restore();\n  }\n  get pixelRatio() {\n    return this._pixelRatio;\n  }\n  /**\n   * Changes the pixel ratio of the Canvas element to the given value,\n   * or uses the window.devicePixelRatio (default), then resizes the Canvas\n   * element accordingly (default).\n   */\n  setPixelRatio(ratio) {\n    let pixelRatio = ratio != null ? ratio : window.devicePixelRatio;\n    if (hasConstrainedCanvasMemory()) {\n      pixelRatio = 1;\n    }\n    this._pixelRatio = pixelRatio;\n    return HdpiCanvas.overrideScale(this.realContext, pixelRatio);\n  }\n  get width() {\n    return this._width;\n  }\n  get height() {\n    return this._height;\n  }\n  resize(width, height) {\n    if (!(width > 0 && height > 0)) {\n      return;\n    }\n    const { canvas, context, pixelRatio } = this;\n    canvas.width = Math.round(width * pixelRatio);\n    canvas.height = Math.round(height * pixelRatio);\n    context.resetTransform();\n    this._width = width;\n    this._height = height;\n  }\n};\n\n// packages/ag-charts-community/src/scene/scene.ts\nvar advancedCompositeIdentifier = \"adv-composite\";\nvar domCompositeIdentifier = \"dom-composite\";\nvar Scene = class {\n  constructor(opts) {\n    this.id = createId(this);\n    this.layers = [];\n    this._nextZIndex = 0;\n    this._nextLayerId = 0;\n    this._dirty = false;\n    this._root = null;\n    this.debug = Debug.create(true, \"scene\" /* SCENE */);\n    var _a;\n    const {\n      document: document2,\n      window: window2,\n      mode = (_a = windowValue(\"agChartsSceneRenderModel\")) != null ? _a : advancedCompositeIdentifier,\n      width,\n      height,\n      overrideDevicePixelRatio = void 0\n    } = opts;\n    this.overrideDevicePixelRatio = overrideDevicePixelRatio;\n    this.opts = { document: document2, window: window2, mode };\n    this.canvas = new HdpiCanvas({ document: document2, window: window2, width, height, overrideDevicePixelRatio });\n  }\n  set container(value) {\n    this.canvas.container = value;\n  }\n  get container() {\n    return this.canvas.container;\n  }\n  download(fileName, fileFormat) {\n    this.canvas.download(fileName, fileFormat);\n  }\n  getDataURL(type) {\n    return this.canvas.getDataURL(type);\n  }\n  get width() {\n    return this.pendingSize ? this.pendingSize[0] : this.canvas.width;\n  }\n  get height() {\n    return this.pendingSize ? this.pendingSize[1] : this.canvas.height;\n  }\n  resize(width, height) {\n    width = Math.round(width);\n    height = Math.round(height);\n    const lessThanZero = width <= 0 || height <= 0;\n    const nan = isNaN(width) || isNaN(height);\n    const unchanged = width === this.width && height === this.height;\n    if (unchanged || nan || lessThanZero) {\n      return false;\n    }\n    this.pendingSize = [width, height];\n    this.markDirty();\n    return true;\n  }\n  addLayer(opts) {\n    var _a;\n    const { mode } = this.opts;\n    const layeredModes = [\"composite\", domCompositeIdentifier, advancedCompositeIdentifier];\n    if (!layeredModes.includes(mode)) {\n      return void 0;\n    }\n    const { zIndex = this._nextZIndex++, name, zIndexSubOrder, getComputedOpacity, getVisibility } = opts;\n    const { width, height, overrideDevicePixelRatio } = this;\n    const domLayer = mode === domCompositeIdentifier;\n    const advLayer = mode === advancedCompositeIdentifier;\n    const canvas = !advLayer || !HdpiOffscreenCanvas.isSupported() ? new HdpiCanvas({\n      document: this.opts.document,\n      window: this.opts.window,\n      width,\n      height,\n      domLayer,\n      zIndex,\n      name,\n      overrideDevicePixelRatio\n    }) : new HdpiOffscreenCanvas({\n      width,\n      height,\n      overrideDevicePixelRatio\n    });\n    const newLayer = {\n      id: this._nextLayerId++,\n      name,\n      zIndex,\n      zIndexSubOrder,\n      canvas,\n      getComputedOpacity,\n      getVisibility\n    };\n    if (zIndex >= this._nextZIndex) {\n      this._nextZIndex = zIndex + 1;\n    }\n    this.layers.push(newLayer);\n    this.sortLayers();\n    if (domLayer) {\n      const domCanvases = this.layers.map((v) => v.canvas).filter((v) => v instanceof HdpiCanvas);\n      const newLayerIndex = domCanvases.findIndex((v) => v === canvas);\n      const lastLayer = (_a = domCanvases[newLayerIndex - 1]) != null ? _a : this.canvas;\n      lastLayer.element.insertAdjacentElement(\"afterend\", canvas.element);\n    }\n    this.debug(\"Scene.addLayer() - layers\", this.layers);\n    return newLayer.canvas;\n  }\n  removeLayer(canvas) {\n    const index = this.layers.findIndex((l) => l.canvas === canvas);\n    if (index >= 0) {\n      this.layers.splice(index, 1);\n      canvas.destroy();\n      this.markDirty();\n      this.debug(\"Scene.removeLayer() -  layers\", this.layers);\n    }\n  }\n  moveLayer(canvas, newZIndex, newZIndexSubOrder) {\n    const layer = this.layers.find((l) => l.canvas === canvas);\n    if (layer) {\n      layer.zIndex = newZIndex;\n      layer.zIndexSubOrder = newZIndexSubOrder;\n      this.sortLayers();\n      this.markDirty();\n      this.debug(\"Scene.moveLayer() -  layers\", this.layers);\n    }\n  }\n  sortLayers() {\n    this.layers.sort((a, b) => {\n      var _a, _b;\n      return compoundAscending(\n        [a.zIndex, ...(_a = a.zIndexSubOrder) != null ? _a : [void 0, void 0], a.id],\n        [b.zIndex, ...(_b = b.zIndexSubOrder) != null ? _b : [void 0, void 0], b.id],\n        ascendingStringNumberUndefined\n      );\n    });\n  }\n  markDirty() {\n    this._dirty = true;\n  }\n  get dirty() {\n    return this._dirty;\n  }\n  set root(node) {\n    var _a;\n    if (node === this._root) {\n      return;\n    }\n    (_a = this._root) == null ? void 0 : _a._setLayerManager();\n    this._root = node;\n    if (node) {\n      node._setLayerManager({\n        addLayer: (opts) => this.addLayer(opts),\n        moveLayer: (...opts) => this.moveLayer(...opts),\n        removeLayer: (...opts) => this.removeLayer(...opts),\n        markDirty: () => this.markDirty(),\n        canvas: this.canvas,\n        debug: Debug.create(\"scene\" /* SCENE */)\n      });\n    }\n    this.markDirty();\n  }\n  get root() {\n    return this._root;\n  }\n  /** Alternative to destroy() that preserves re-usable resources. */\n  strip() {\n    const { layers } = this;\n    for (const layer of layers) {\n      layer.canvas.destroy();\n      delete layer[\"canvas\"];\n    }\n    layers.splice(0, layers.length);\n    this.root = null;\n    this._dirty = false;\n    this.canvas.context.resetTransform();\n  }\n  destroy() {\n    this.container = void 0;\n    this.strip();\n    this.canvas.destroy();\n    Object.assign(this, { canvas: void 0, ctx: void 0 });\n  }\n  render(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const { debugSplitTimes = { start: performance.now() }, extraDebugStats = {} } = opts != null ? opts : {};\n      const {\n        canvas,\n        canvas: { context: ctx },\n        root,\n        layers,\n        pendingSize,\n        opts: { mode }\n      } = this;\n      if (pendingSize) {\n        this.canvas.resize(...pendingSize);\n        this.layers.forEach((layer) => layer.canvas.resize(...pendingSize));\n        this.pendingSize = void 0;\n      }\n      if (root && !root.visible) {\n        this._dirty = false;\n        return;\n      }\n      if (root && !this.dirty) {\n        this.debug(\"Scene.render() - no-op\", {\n          redrawType: RedrawType[root.dirty],\n          tree: this.buildTree(root)\n        });\n        this.debugStats(debugSplitTimes, ctx, void 0, extraDebugStats);\n        return;\n      }\n      const renderCtx = {\n        ctx,\n        devicePixelRatio: (_a = this.canvas.pixelRatio) != null ? _a : 1,\n        forceRender: true,\n        resized: !!pendingSize,\n        debugNodes: {}\n      };\n      if (Debug.check(\"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */)) {\n        renderCtx.stats = { layersRendered: 0, layersSkipped: 0, nodesRendered: 0, nodesSkipped: 0 };\n      }\n      let canvasCleared = false;\n      if (!root || root.dirty >= 1 /* TRIVIAL */) {\n        canvasCleared = true;\n        canvas.clear();\n      }\n      if (root) {\n        const { dirtyTree, paths } = this.buildDirtyTree(root);\n        Debug.create(\"scene:dirtyTree\" /* SCENE_DIRTY_TREE */)(\"Scene.render() - dirtyTree\", {\n          dirtyTree,\n          paths\n        });\n      }\n      if (root && canvasCleared) {\n        this.debug(\"Scene.render() - before\", {\n          redrawType: RedrawType[root.dirty],\n          canvasCleared,\n          tree: this.buildTree(root)\n        });\n        if (root.visible) {\n          ctx.save();\n          root.render(renderCtx);\n          ctx.restore();\n        }\n      }\n      debugSplitTimes[\"\\u270D\\uFE0F\"] = performance.now();\n      if (mode !== domCompositeIdentifier && layers.length > 0 && canvasCleared) {\n        this.sortLayers();\n        ctx.save();\n        ctx.setTransform(1 / canvas.pixelRatio, 0, 0, 1 / canvas.pixelRatio, 0, 0);\n        layers.forEach(({ canvas: { imageSource, enabled }, getComputedOpacity, getVisibility }) => {\n          if (!enabled || !getVisibility()) {\n            return;\n          }\n          ctx.globalAlpha = getComputedOpacity();\n          ctx.drawImage(imageSource, 0, 0);\n        });\n        ctx.restore();\n        debugSplitTimes[\"\\u26D9\"] = performance.now();\n      }\n      (_b = ctx.verifyDepthZero) == null ? void 0 : _b.call(ctx);\n      this._dirty = false;\n      this.debugStats(debugSplitTimes, ctx, renderCtx.stats, extraDebugStats);\n      this.debugSceneNodeHighlight(ctx, renderCtx.debugNodes);\n      if (root) {\n        this.debug(\"Scene.render() - after\", {\n          redrawType: RedrawType[root.dirty],\n          canvasCleared,\n          tree: this.buildTree(root)\n        });\n      }\n    });\n  }\n  debugStats(debugSplitTimes, ctx, renderCtxStats, extraDebugStats = {}) {\n    if (Debug.check(\"scene:stats\" /* SCENE_STATS */, \"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */)) {\n      const end = performance.now();\n      const start = debugSplitTimes[\"start\"];\n      debugSplitTimes[\"end\"] = performance.now();\n      const pct = (rendered, skipped) => {\n        const total = rendered + skipped;\n        return `${rendered} / ${total} (${Math.round(100 * rendered / total)}%)`;\n      };\n      const time = (name, start2, end2) => {\n        return `${name}: ${Math.round((end2 - start2) * 100) / 100}ms`;\n      };\n      const { layersRendered = 0, layersSkipped = 0, nodesRendered = 0, nodesSkipped = 0 } = renderCtxStats != null ? renderCtxStats : {};\n      let lastSplit = 0;\n      const splits = Object.entries(debugSplitTimes).filter(([n]) => n !== \"end\").map(([n, t], i) => {\n        const result = i > 0 ? time(n, lastSplit, t) : null;\n        lastSplit = t;\n        return result;\n      }).filter((v) => v != null).join(\" + \");\n      const extras = Object.entries(extraDebugStats).map(([k, v]) => `${k}: ${v}`).join(\" ; \");\n      const detailedStats = Debug.check(\"scene:stats:verbose\" /* SCENE_STATS_VERBOSE */);\n      const stats = [\n        `${time(\"\\u23F1\\uFE0F\", start, end)} (${splits})`,\n        `${extras}`,\n        `Layers: ${detailedStats ? pct(layersRendered, layersSkipped) : this.layers.length}`,\n        detailedStats ? `Nodes: ${pct(nodesRendered, nodesSkipped)}` : null\n      ].filter((v) => v != null);\n      const statsSize = stats.map((t) => [t, HdpiCanvas.getTextSize(t, ctx.font)]);\n      const width = Math.max(...statsSize.map(([, { width: width2 }]) => width2));\n      const height = statsSize.reduce((total, [, { height: height2 }]) => total + height2, 0);\n      ctx.save();\n      ctx.fillStyle = \"white\";\n      ctx.fillRect(0, 0, width, height);\n      ctx.fillStyle = \"black\";\n      let y = 0;\n      for (const [stat, size] of statsSize) {\n        y += size.height;\n        ctx.fillText(stat, 2, y);\n      }\n      ctx.restore();\n    }\n  }\n  debugSceneNodeHighlight(ctx, debugNodes) {\n    var _a;\n    const regexpPredicate = (matcher) => (n) => {\n      if (matcher.test(n.id)) {\n        return true;\n      }\n      return n instanceof Group && n.name != null && matcher.test(n.name);\n    };\n    const stringPredicate = (match) => (n) => {\n      if (match === n.id) {\n        return true;\n      }\n      return n instanceof Group && n.name != null && match === n.name;\n    };\n    const sceneNodeHighlight = toArray(windowValue(\"agChartsSceneDebug\")).flatMap(\n      (name) => name === \"layout\" ? [\"seriesRoot\", \"legend\", \"root\", /.*Axis-\\d+-axis.*/] : name\n    );\n    for (const next of sceneNodeHighlight) {\n      if (typeof next === \"string\" && debugNodes[next] != null)\n        continue;\n      const predicate = typeof next === \"string\" ? stringPredicate(next) : regexpPredicate(next);\n      const nodes = (_a = this.root) == null ? void 0 : _a.findNodes(predicate);\n      if (!nodes || nodes.length === 0) {\n        Logger.log(`Scene.render() - no debugging node with id [${next}] in scene graph.`);\n        continue;\n      }\n      for (const node of nodes) {\n        if (node instanceof Group && node.name) {\n          debugNodes[node.name] = node;\n        } else {\n          debugNodes[node.id] = node;\n        }\n      }\n    }\n    ctx.save();\n    for (const [name, node] of Object.entries(debugNodes)) {\n      const bbox = node.computeTransformedBBox();\n      if (!bbox) {\n        Logger.log(`Scene.render() - no bbox for debugged node [${name}].`);\n        continue;\n      }\n      ctx.globalAlpha = 0.8;\n      ctx.strokeStyle = \"red\";\n      ctx.lineWidth = 1;\n      ctx.strokeRect(bbox.x, bbox.y, bbox.width, bbox.height);\n      ctx.fillStyle = \"red\";\n      ctx.strokeStyle = \"white\";\n      ctx.font = \"16px sans-serif\";\n      ctx.textBaseline = \"top\";\n      ctx.textAlign = \"left\";\n      ctx.lineWidth = 2;\n      ctx.strokeText(name, bbox.x, bbox.y, bbox.width);\n      ctx.fillText(name, bbox.x, bbox.y, bbox.width);\n    }\n    ctx.restore();\n  }\n  buildTree(node) {\n    var _a, _b;\n    const name = (_a = node instanceof Group ? node.name : null) != null ? _a : node.id;\n    return __spreadValues(__spreadValues({\n      name,\n      node,\n      dirty: RedrawType[node.dirty]\n    }, ((_b = node.parent) == null ? void 0 : _b.isVirtual) ? {\n      virtualParentDirty: RedrawType[node.parent.dirty],\n      virtualParent: node.parent\n    } : {}), node.children.map((c) => this.buildTree(c)).reduce((result, childTree) => {\n      let { name: treeNodeName } = childTree;\n      const {\n        node: { visible, opacity, zIndex, zIndexSubOrder },\n        node: childNode,\n        virtualParent\n      } = childTree;\n      if (!visible || opacity <= 0) {\n        treeNodeName = `(${treeNodeName})`;\n      }\n      if (childNode instanceof Group && childNode.isLayer()) {\n        treeNodeName = `*${treeNodeName}*`;\n      }\n      const key = [\n        `${treeNodeName != null ? treeNodeName : \"<unknown>\"}`,\n        `z: ${zIndex}`,\n        zIndexSubOrder && `zo: ${zIndexSubOrder.map((v) => typeof v === \"function\" ? `${v()} (fn)` : v).join(\" / \")}`,\n        virtualParent && `(virtual parent)`\n      ].filter((v) => !!v).join(\" \");\n      let selectedKey = key;\n      let index = 1;\n      while (result[selectedKey] != null && index < 100) {\n        selectedKey = `${key} (${index++})`;\n      }\n      result[selectedKey] = childTree;\n      return result;\n    }, {}));\n  }\n  buildDirtyTree(node) {\n    var _a;\n    if (node.dirty === 0 /* NONE */) {\n      return { dirtyTree: {}, paths: [] };\n    }\n    const childrenDirtyTree = node.children.map((c) => this.buildDirtyTree(c)).filter((c) => c.paths.length > 0);\n    const name = (_a = node instanceof Group ? node.name : null) != null ? _a : node.id;\n    const paths = childrenDirtyTree.length === 0 ? [name] : childrenDirtyTree.map((c) => c.paths).reduce((r, p) => r.concat(p), []).map((p) => `${name}.${p}`);\n    return {\n      dirtyTree: __spreadValues({\n        name,\n        node,\n        dirty: RedrawType[node.dirty]\n      }, childrenDirtyTree.map((c) => c.dirtyTree).filter((t) => t.dirty !== void 0).reduce((result, childTree) => {\n        var _a2;\n        result[(_a2 = childTree.name) != null ? _a2 : \"<unknown>\"] = childTree;\n        return result;\n      }, {})),\n      paths\n    };\n  }\n};\nScene.className = \"Scene\";\n\n// packages/ag-charts-community/src/scene/selection.ts\nvar Selection = class _Selection {\n  constructor(parentNode, classOrFactory, autoCleanup = true) {\n    this.parentNode = parentNode;\n    this.autoCleanup = autoCleanup;\n    this.garbageBin = /* @__PURE__ */ new Set();\n    this._nodesMap = /* @__PURE__ */ new Map();\n    this._nodes = [];\n    this.data = [];\n    this.debug = Debug.create(true, \"scene\", \"scene:selections\");\n    this.nodeFactory = Object.prototype.isPrototypeOf.call(Node, classOrFactory) ? () => new classOrFactory() : classOrFactory;\n  }\n  static select(parent, classOrFactory, garbageCollection = true) {\n    return new _Selection(parent, classOrFactory, garbageCollection);\n  }\n  static selectAll(parent, predicate) {\n    const results = [];\n    const traverse = (node) => {\n      if (predicate(node)) {\n        results.push(node);\n      }\n      node.children.forEach(traverse);\n    };\n    traverse(parent);\n    return results;\n  }\n  static selectByClass(node, Class) {\n    return _Selection.selectAll(node, (node2) => node2 instanceof Class);\n  }\n  static selectByTag(node, tag) {\n    return _Selection.selectAll(node, (node2) => node2.tag === tag);\n  }\n  createNode(datum, initializer, idx) {\n    const node = this.nodeFactory(datum);\n    node.datum = datum;\n    initializer == null ? void 0 : initializer(node);\n    if (idx != null) {\n      this._nodes.splice(idx, 0, node);\n    } else {\n      this._nodes.push(node);\n    }\n    this.parentNode.appendChild(node);\n    return node;\n  }\n  /**\n   * Update the data in a selection. If an `getDatumId()` function is provided, maintain a list of ids related to\n   * the nodes. Otherwise, take the more efficient route of simply creating and destroying nodes at the end\n   * of the array.\n   */\n  update(data, initializer, getDatumId) {\n    if (this.garbageBin.size > 0) {\n      this.debug(`Selection - update() called with pending garbage: ${data}`);\n    }\n    if (getDatumId) {\n      const dataMap = new Map(\n        data.map((datum, idx) => [getDatumId(datum), [datum, idx]])\n      );\n      for (const [node, datumId] of this._nodesMap.entries()) {\n        if (dataMap.has(datumId)) {\n          const [newDatum] = dataMap.get(datumId);\n          node.datum = newDatum;\n          this.garbageBin.delete(node);\n          dataMap.delete(datumId);\n        } else {\n          this.garbageBin.add(node);\n        }\n      }\n      for (const [datumId, [datum, idx]] of dataMap.entries()) {\n        this._nodesMap.set(this.createNode(datum, initializer, idx), datumId);\n      }\n    } else {\n      const maxLength = Math.max(data.length, this.data.length);\n      for (let i = 0; i < maxLength; i++) {\n        if (i >= data.length) {\n          this.garbageBin.add(this._nodes[i]);\n        } else if (i >= this._nodes.length) {\n          this.createNode(data[i], initializer);\n        } else {\n          this._nodes[i].datum = data[i];\n          this.garbageBin.delete(this._nodes[i]);\n        }\n      }\n    }\n    this.data = data.slice();\n    if (this.autoCleanup) {\n      this.cleanup();\n    }\n    return this;\n  }\n  cleanup() {\n    if (this.garbageBin.size === 0) {\n      return this;\n    }\n    this._nodes = this._nodes.filter((node) => {\n      if (this.garbageBin.has(node)) {\n        this._nodesMap.delete(node);\n        this.garbageBin.delete(node);\n        this.parentNode.removeChild(node);\n        return false;\n      }\n      return true;\n    });\n    return this;\n  }\n  clear() {\n    this.update([]);\n    return this;\n  }\n  isGarbage(node) {\n    return this.garbageBin.has(node);\n  }\n  hasGarbage() {\n    return this.garbageBin.size > 0;\n  }\n  each(iterate) {\n    this._nodes.forEach((node, i) => iterate(node, node.datum, i));\n    return this;\n  }\n  *[Symbol.iterator]() {\n    for (let index = 0; index < this._nodes.length; index++) {\n      const node = this._nodes[index];\n      const datum = this._nodes[index].datum;\n      yield { node, datum, index };\n    }\n  }\n  select(predicate) {\n    return _Selection.selectAll(this.parentNode, predicate);\n  }\n  selectByClass(Class) {\n    return _Selection.selectByClass(this.parentNode, Class);\n  }\n  selectByTag(tag) {\n    return _Selection.selectByTag(this.parentNode, tag);\n  }\n  nodes() {\n    return this._nodes;\n  }\n};\n\n// packages/ag-charts-community/src/scene/polyRoots.ts\nfunction linearRoot(a, b) {\n  const t = -b / a;\n  return a !== 0 && t >= 0 && t <= 1 ? [t] : [];\n}\nfunction quadraticRoots(a, b, c) {\n  if (a === 0) {\n    return linearRoot(b, c);\n  }\n  const D = b * b - 4 * a * c;\n  const roots = [];\n  if (D === 0) {\n    const t = -b / (2 * a);\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n  } else if (D > 0) {\n    const rD = Math.sqrt(D);\n    const t1 = (-b - rD) / (2 * a);\n    const t2 = (-b + rD) / (2 * a);\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n  }\n  return roots;\n}\nfunction cubicRoots(a, b, c, d) {\n  if (a === 0) {\n    return quadraticRoots(b, c, d);\n  }\n  const A = b / a;\n  const B = c / a;\n  const C = d / a;\n  const Q = (3 * B - A * A) / 9;\n  const R = (9 * A * B - 27 * C - 2 * A * A * A) / 54;\n  const D = Q * Q * Q + R * R;\n  const third = 1 / 3;\n  const roots = [];\n  if (D >= 0) {\n    const rD = Math.sqrt(D);\n    const S = Math.sign(R + rD) * Math.pow(Math.abs(R + rD), third);\n    const T = Math.sign(R - rD) * Math.pow(Math.abs(R - rD), third);\n    const Im = Math.abs(Math.sqrt(3) * (S - T) / 2);\n    const t = -third * A + (S + T);\n    if (t >= 0 && t <= 1) {\n      roots.push(t);\n    }\n    if (Im === 0) {\n      const t2 = -third * A - (S + T) / 2;\n      if (t2 >= 0 && t2 <= 1) {\n        roots.push(t2);\n      }\n    }\n  } else {\n    const theta = Math.acos(R / Math.sqrt(-Q * Q * Q));\n    const thirdA = third * A;\n    const twoSqrtQ = 2 * Math.sqrt(-Q);\n    const t1 = twoSqrtQ * Math.cos(third * theta) - thirdA;\n    const t2 = twoSqrtQ * Math.cos(third * (theta + 2 * Math.PI)) - thirdA;\n    const t3 = twoSqrtQ * Math.cos(third * (theta + 4 * Math.PI)) - thirdA;\n    if (t1 >= 0 && t1 <= 1) {\n      roots.push(t1);\n    }\n    if (t2 >= 0 && t2 <= 1) {\n      roots.push(t2);\n    }\n    if (t3 >= 0 && t3 <= 1) {\n      roots.push(t3);\n    }\n  }\n  return roots;\n}\n\n// packages/ag-charts-community/src/scene/intersection.ts\nfunction segmentIntersection(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n  const d = (ax2 - ax1) * (by2 - by1) - (ay2 - ay1) * (bx2 - bx1);\n  if (d === 0) {\n    return null;\n  }\n  const ua = ((bx2 - bx1) * (ay1 - by1) - (ax1 - bx1) * (by2 - by1)) / d;\n  const ub = ((ax2 - ax1) * (ay1 - by1) - (ay2 - ay1) * (ax1 - bx1)) / d;\n  if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n    return {\n      x: ax1 + ua * (ax2 - ax1),\n      y: ay1 + ua * (ay2 - ay1)\n    };\n  }\n  return null;\n}\nfunction cubicSegmentIntersections(px1, py1, px2, py2, px3, py3, px4, py4, x1, y1, x2, y2) {\n  const intersections = [];\n  const A = y1 - y2;\n  const B = x2 - x1;\n  const C = x1 * (y2 - y1) - y1 * (x2 - x1);\n  const bx = bezierCoefficients(px1, px2, px3, px4);\n  const by = bezierCoefficients(py1, py2, py3, py4);\n  const a = A * bx[0] + B * by[0];\n  const b = A * bx[1] + B * by[1];\n  const c = A * bx[2] + B * by[2];\n  const d = A * bx[3] + B * by[3] + C;\n  const roots = cubicRoots(a, b, c, d);\n  for (const t of roots) {\n    const tt = t * t;\n    const ttt = t * tt;\n    const x = bx[0] * ttt + bx[1] * tt + bx[2] * t + bx[3];\n    const y = by[0] * ttt + by[1] * tt + by[2] * t + by[3];\n    let s;\n    if (x1 !== x2) {\n      s = (x - x1) / (x2 - x1);\n    } else {\n      s = (y - y1) / (y2 - y1);\n    }\n    if (s >= 0 && s <= 1) {\n      intersections.push({ x, y });\n    }\n  }\n  return intersections;\n}\nfunction bezierCoefficients(P1, P2, P3, P4) {\n  return [\n    // Bézier expressed as matrix operations:\n    -P1 + 3 * P2 - 3 * P3 + P4,\n    //                 |-1  3 -3  1| |P1|\n    3 * P1 - 6 * P2 + 3 * P3,\n    //   [t^3 t^2 t 1] | 3 -6  3  0| |P2|\n    -3 * P1 + 3 * P2,\n    //                 |-3  3  0  0| |P3|\n    P1\n    //                 | 1  0  0  0| |P4|\n  ];\n}\nfunction arcIntersections(cx, cy, r, startAngle, endAngle, counterClockwise, x1, y1, x2, y2) {\n  const k = (y2 - y1) / (x2 - x1);\n  const y0 = y1 - k * x1;\n  const a = Math.pow(k, 2) + 1;\n  const b = 2 * (k * (y0 - cy) - cx);\n  const c = Math.pow(cx, 2) + Math.pow(y0 - cy, 2) - Math.pow(r, 2);\n  const d = Math.pow(b, 2) - 4 * a * c;\n  if (d < 0) {\n    return [];\n  }\n  const i1x = (-b + Math.sqrt(d)) / 2 / a;\n  const i2x = (-b - Math.sqrt(d)) / 2 / a;\n  const intersections = [];\n  [i1x, i2x].forEach((x) => {\n    const isXInsideLine = x >= Math.min(x1, x2) && x <= Math.max(x1, x2);\n    if (!isXInsideLine) {\n      return;\n    }\n    const y = k * x + y0;\n    const a1 = normalizeAngle360(startAngle);\n    let a2 = normalizeAngle360(endAngle);\n    let a3 = normalizeAngle360(Math.atan2(y, x));\n    if (a2 <= a1) {\n      a2 += 2 * Math.PI;\n    }\n    if (a3 < a1) {\n      a3 += 2 * Math.PI;\n    }\n    if (counterClockwise !== (a3 >= a1 && a3 <= a2)) {\n      intersections.push({ x, y });\n    }\n  });\n  return intersections;\n}\n\n// packages/ag-charts-community/src/scene/path2D.ts\nvar Path2D = class {\n  constructor() {\n    this.previousCommands = [];\n    this.previousParams = [];\n    this.previousClosedPath = false;\n    this.commands = [];\n    this.params = [];\n    this._closedPath = false;\n  }\n  isDirty() {\n    if (this._closedPath !== this.previousClosedPath) {\n      return true;\n    }\n    if (this.previousCommands.length !== this.commands.length) {\n      return true;\n    }\n    if (this.previousParams.length !== this.params.length) {\n      return true;\n    }\n    for (let i = 0; i < this.commands.length; i++) {\n      if (this.commands[i] !== this.previousCommands[i]) {\n        return true;\n      }\n    }\n    for (let i = 0; i < this.params.length; i++) {\n      if (this.params[i] !== this.previousParams[i]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  draw(ctx) {\n    const commands = this.commands;\n    const params = this.params;\n    let j = 0;\n    ctx.beginPath();\n    for (const command of commands) {\n      switch (command) {\n        case 0 /* Move */:\n          ctx.moveTo(params[j++], params[j++]);\n          break;\n        case 1 /* Line */:\n          ctx.lineTo(params[j++], params[j++]);\n          break;\n        case 3 /* Curve */:\n          ctx.bezierCurveTo(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++]);\n          break;\n        case 2 /* Arc */:\n          ctx.arc(params[j++], params[j++], params[j++], params[j++], params[j++], params[j++] === 1);\n          break;\n        case 4 /* ClosePath */:\n          ctx.closePath();\n          break;\n      }\n    }\n    if (commands.length === 0) {\n      ctx.closePath();\n    }\n  }\n  moveTo(x, y) {\n    if (this.xy) {\n      this.xy[0] = x;\n      this.xy[1] = y;\n    } else {\n      this.xy = [x, y];\n    }\n    this.commands.push(0 /* Move */);\n    this.params.push(x, y);\n  }\n  lineTo(x, y) {\n    if (this.xy) {\n      this.commands.push(1 /* Line */);\n      this.params.push(x, y);\n      this.xy[0] = x;\n      this.xy[1] = y;\n    } else {\n      this.moveTo(x, y);\n    }\n  }\n  rect(x, y, width, height) {\n    this.moveTo(x, y);\n    this.lineTo(x + width, y);\n    this.lineTo(x + width, y + height);\n    this.lineTo(x, y + height);\n    this.closePath();\n  }\n  roundRect(x, y, width, height, radii) {\n    radii = Math.min(radii, width / 2, height / 2);\n    this.moveTo(x, y + radii);\n    this.arc(x + radii, y + radii, radii, Math.PI, 3 * Math.PI / 2);\n    this.lineTo(x + radii, y);\n    this.lineTo(x + width - radii, y);\n    this.arc(x + width - radii, y + radii, radii, 3 * Math.PI / 2, 2 * Math.PI);\n    this.lineTo(x + width, y + radii);\n    this.lineTo(x + width, y + height - radii);\n    this.arc(x + width - radii, y + height - radii, radii, 0, Math.PI / 2);\n    this.lineTo(x + width - radii, y + height);\n    this.lineTo(x + radii, y + height);\n    this.arc(x + +radii, y + height - radii, radii, Math.PI / 2, Math.PI);\n    this.lineTo(x, y + height - radii);\n    this.closePath();\n  }\n  arc(x, y, r, sAngle, eAngle, antiClockwise = false) {\n    const endX = x + r * Math.cos(eAngle);\n    const endY = y + r * Math.sin(eAngle);\n    if (this.xy) {\n      this.xy[0] = endX;\n      this.xy[1] = endY;\n    } else {\n      this.xy = [endX, endY];\n    }\n    this.commands.push(2 /* Arc */);\n    this.params.push(x, y, r, sAngle, eAngle, antiClockwise ? 1 : 0);\n  }\n  cubicCurveTo(cx1, cy1, cx2, cy2, x, y) {\n    if (!this.xy) {\n      this.moveTo(cx1, cy1);\n    }\n    this.commands.push(3 /* Curve */);\n    this.params.push(cx1, cy1, cx2, cy2, x, y);\n    if (this.xy) {\n      this.xy[0] = x;\n      this.xy[1] = y;\n    }\n  }\n  get closedPath() {\n    return this._closedPath;\n  }\n  closePath() {\n    if (this.xy) {\n      this.xy = void 0;\n      this.commands.push(4 /* ClosePath */);\n      this._closedPath = true;\n    }\n  }\n  clear({ trackChanges } = { trackChanges: false }) {\n    if (trackChanges) {\n      this.previousCommands = this.commands;\n      this.previousParams = this.params;\n      this.previousClosedPath = this._closedPath;\n      this.commands = [];\n      this.params = [];\n    } else {\n      this.commands.length = 0;\n      this.params.length = 0;\n    }\n    this.xy = void 0;\n    this._closedPath = false;\n  }\n  isPointInPath(x, y) {\n    const commands = this.commands;\n    const params = this.params;\n    const cn = commands.length;\n    const ox = -1e4;\n    const oy = -1e4;\n    let sx = NaN;\n    let sy = NaN;\n    let px = 0;\n    let py = 0;\n    let intersectionCount = 0;\n    for (let ci = 0, pi = 0; ci < cn; ci++) {\n      switch (commands[ci]) {\n        case 0 /* Move */:\n          if (!isNaN(sx) && segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          px = params[pi++];\n          sx = px;\n          py = params[pi++];\n          sy = py;\n          break;\n        case 1 /* Line */:\n          if (segmentIntersection(px, py, params[pi++], params[pi++], ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          px = params[pi - 2];\n          py = params[pi - 1];\n          break;\n        case 3 /* Curve */:\n          intersectionCount += cubicSegmentIntersections(\n            px,\n            py,\n            params[pi++],\n            params[pi++],\n            params[pi++],\n            params[pi++],\n            params[pi++],\n            params[pi++],\n            ox,\n            oy,\n            x,\n            y\n          ).length;\n          px = params[pi - 2];\n          py = params[pi - 1];\n          break;\n        case 2 /* Arc */:\n          const cx = params[pi++];\n          const cy = params[pi++];\n          const r = params[pi++];\n          const startAngle = params[pi++];\n          const endAngle = params[pi++];\n          const counterClockwise = Boolean(params[pi++]);\n          intersectionCount += arcIntersections(\n            cx,\n            cy,\n            r,\n            startAngle,\n            endAngle,\n            counterClockwise,\n            ox,\n            oy,\n            x,\n            y\n          ).length;\n          px = cx + Math.cos(endAngle) * r;\n          py = cy + Math.sin(endAngle) * r;\n          break;\n        case 4 /* ClosePath */:\n          if (!isNaN(sx) && segmentIntersection(sx, sy, px, py, ox, oy, x, y)) {\n            intersectionCount++;\n          }\n          break;\n      }\n    }\n    return intersectionCount % 2 === 1;\n  }\n  getPoints() {\n    const { commands, params } = this;\n    const coords = [];\n    let pi = 0;\n    for (let ci = 0; ci < commands.length; ci++) {\n      switch (commands[ci]) {\n        case 0 /* Move */:\n        case 1 /* Line */:\n          coords.push({ x: params[pi++], y: params[pi++] });\n          break;\n        case 3 /* Curve */:\n          pi += 4;\n          coords.push({ x: params[pi++], y: params[pi++] });\n          break;\n        case 2 /* Arc */:\n          coords.push({ x: params[pi++], y: params[pi++] });\n          pi += 4;\n          break;\n        case 4 /* ClosePath */:\n          break;\n      }\n    }\n    return coords;\n  }\n};\n\n// packages/ag-charts-community/src/scene/shape/path.ts\nfunction ScenePathChangeDetection(opts) {\n  const { redraw = 3 /* MAJOR */, changeCb, convertor } = opts != null ? opts : {};\n  return SceneChangeDetection({ redraw, type: \"path\", convertor, changeCb });\n}\nvar Path = class extends Shape {\n  constructor() {\n    super(...arguments);\n    /**\n     * Declare a path to retain for later rendering and hit testing\n     * using custom Path2D class. Think of it as a TypeScript version\n     * of the native Path2D (with some differences) that works in all browsers.\n     */\n    this.path = new Path2D();\n    this.clipScalingX = 1;\n    this.clipScalingY = 1;\n    /**\n     * The path only has to be updated when certain attributes change.\n     * For example, if transform attributes (such as `translationX`)\n     * are changed, we don't have to update the path. The `dirtyPath` flag\n     * is how we keep track if the path has to be updated or not.\n     */\n    this._dirtyPath = true;\n  }\n  set dirtyPath(value) {\n    if (this._dirtyPath !== value) {\n      this._dirtyPath = value;\n      if (value) {\n        this.markDirty(this, 3 /* MAJOR */);\n      }\n    }\n  }\n  get dirtyPath() {\n    return this._dirtyPath;\n  }\n  checkPathDirty() {\n    var _a, _b, _c, _d;\n    if (this._dirtyPath) {\n      return;\n    }\n    this.dirtyPath = this.path.isDirty() || ((_b = (_a = this.fillShadow) == null ? void 0 : _a.isDirty()) != null ? _b : false) || ((_d = (_c = this.clipPath) == null ? void 0 : _c.isDirty()) != null ? _d : false);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    return this.path.closedPath && this.path.isPointInPath(point.x, point.y);\n  }\n  isDirtyPath() {\n    return false;\n  }\n  updatePath() {\n  }\n  clip(ctx, op) {\n    const transform = ctx.getTransform();\n    const clipScale = this.clipScalingX !== 1 || this.clipScalingY !== 1;\n    if (clipScale) {\n      ctx.scale(this.clipScalingX, this.clipScalingY);\n    }\n    op();\n    if (clipScale) {\n      ctx.setTransform(transform);\n    }\n  }\n  render(renderCtx) {\n    var _a;\n    const { ctx, forceRender, stats } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    if (this.dirtyPath || this.isDirtyPath()) {\n      this.updatePath();\n      this.dirtyPath = false;\n    }\n    if (this.clipPath && this.clipMode != null) {\n      ctx.save();\n      if (this.clipMode === \"normal\") {\n        this.clip(ctx, () => {\n          var _a2;\n          (_a2 = this.clipPath) == null ? void 0 : _a2.draw(ctx);\n          ctx.clip();\n        });\n      }\n      if (this.clipScalingX > 0 && this.clipScalingY > 0) {\n        this.path.draw(ctx);\n        this.fillStroke(ctx);\n      }\n      if (this.clipMode === \"punch-out\") {\n        this.clip(ctx, () => {\n          var _a2, _b;\n          (_a2 = this.clipPath) == null ? void 0 : _a2.draw(ctx);\n          ctx.clip();\n          const { x = -1e4, y = -1e4, width = 2e4, height = 2e4 } = (_b = this.computeBBox()) != null ? _b : {};\n          ctx.clearRect(x, y, width, height);\n        });\n      }\n      ctx.restore();\n    } else {\n      this.path.draw(ctx);\n      this.fillStroke(ctx);\n    }\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nPath.className = \"Path\";\n__decorateClass([\n  ScenePathChangeDetection()\n], Path.prototype, \"clipPath\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Path.prototype, \"clipMode\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Path.prototype, \"clipScalingX\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Path.prototype, \"clipScalingY\", 2);\n\n// packages/ag-charts-community/src/scene/shape/arc.ts\nvar Arc = class extends Path {\n  constructor() {\n    super();\n    this.centerX = 0;\n    this.centerY = 0;\n    this.radius = 10;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.counterClockwise = false;\n    this.type = 0 /* Open */;\n    this.restoreOwnStyles();\n  }\n  get fullPie() {\n    return isEqual(normalizeAngle360(this.startAngle), normalizeAngle360(this.endAngle));\n  }\n  updatePath() {\n    const path = this.path;\n    path.clear();\n    path.arc(this.centerX, this.centerY, this.radius, this.startAngle, this.endAngle, this.counterClockwise);\n    if (this.type === 1 /* Chord */) {\n      path.closePath();\n    } else if (this.type === 2 /* Round */ && !this.fullPie) {\n      path.lineTo(this.centerX, this.centerY);\n      path.closePath();\n    }\n  }\n  computeBBox() {\n    return new BBox(this.centerX - this.radius, this.centerY - this.radius, this.radius * 2, this.radius * 2);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return this.type !== 0 /* Open */ && bbox.containsPoint(point.x, point.y) && this.path.isPointInPath(point.x, point.y);\n  }\n};\nArc.className = \"Arc\";\nArc.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  lineWidth: 1,\n  fillStyle: null\n});\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"centerX\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"centerY\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"radius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"startAngle\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"endAngle\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"counterClockwise\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Arc.prototype, \"type\", 2);\n\n// packages/ag-charts-community/src/scene/shape/line.ts\nvar Line = class extends Shape {\n  constructor(opts = {}) {\n    super(opts);\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.restoreOwnStyles();\n  }\n  set x(value) {\n    this.x1 = value;\n    this.x2 = value;\n  }\n  set y(value) {\n    this.y1 = value;\n    this.y2 = value;\n  }\n  computeBBox() {\n    return new BBox(\n      Math.min(this.x1, this.x2),\n      Math.min(this.y1, this.y2),\n      Math.abs(this.x2 - this.x1),\n      Math.abs(this.y2 - this.y1)\n    );\n  }\n  isPointInPath(px, py) {\n    if (this.x1 === this.x2 || this.y1 === this.y2) {\n      const { x, y } = this.transformPoint(px, py);\n      return this.computeBBox().grow(this.strokeWidth / 2).containsPoint(x, y);\n    }\n    return false;\n  }\n  render(renderCtx) {\n    var _a;\n    const { ctx, forceRender, stats, devicePixelRatio } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped += this.nodeCount.count;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    let { x1, y1, x2, y2 } = this;\n    if (x1 === x2) {\n      const { strokeWidth } = this;\n      const x = Math.round(x1 * devicePixelRatio) / devicePixelRatio + Math.trunc(strokeWidth * devicePixelRatio) % 2 / (devicePixelRatio * 2);\n      x1 = x;\n      x2 = x;\n    } else if (y1 === y2) {\n      const { strokeWidth } = this;\n      const y = Math.round(y1 * devicePixelRatio) / devicePixelRatio + Math.trunc(strokeWidth * devicePixelRatio) % 2 / (devicePixelRatio * 2);\n      y1 = y;\n      y2 = y;\n    }\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    this.fillStroke(ctx);\n    (_a = this.fillShadow) == null ? void 0 : _a.markClean();\n    super.render(renderCtx);\n  }\n};\nLine.className = \"Line\";\nLine.defaultStyles = Object.assign({}, Shape.defaultStyles, {\n  fill: void 0,\n  strokeWidth: 1\n});\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Line.prototype, \"x1\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Line.prototype, \"y1\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Line.prototype, \"x2\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Line.prototype, \"y2\", 2);\n\n// packages/ag-charts-community/src/scale/colorScale.ts\nvar convertColorStringToOklcha = (v) => {\n  const color = Color.fromString(v);\n  const [l, c, h] = Color.RGBtoOKLCH(color.r, color.g, color.b);\n  return { l, c, h, a: color.a };\n};\nvar interpolateOklch = (x, y, d) => {\n  d = Math.min(Math.max(d, 0), 1);\n  let h;\n  let c;\n  if (Number.isNaN(x.h) && Number.isNaN(y.h)) {\n    h = 0;\n    c = 0;\n  } else if (Number.isNaN(x.h)) {\n    h = y.h;\n    c = y.c;\n  } else if (Number.isNaN(y.h)) {\n    h = x.h;\n    c = x.c;\n  } else {\n    const xH = x.h;\n    let yH = y.h;\n    const deltaH = y.h - x.h;\n    if (deltaH > 180) {\n      yH -= 360;\n    } else if (deltaH < -180) {\n      yH += 360;\n    }\n    h = xH * (1 - d) + yH * d;\n    c = x.c * (1 - d) + y.c * d;\n  }\n  const l = x.l * (1 - d) + y.l * d;\n  const a = x.a * (1 - d) + y.a * d;\n  return Color.fromOKLCH(l, c, h, a);\n};\nvar ColorScale = class {\n  constructor() {\n    this.invalid = true;\n    this.domain = [0, 1];\n    this.range = [\"red\", \"blue\"];\n    this.parsedRange = this.range.map(convertColorStringToOklcha);\n  }\n  update() {\n    const { domain, range: range3 } = this;\n    if (domain.length < 2) {\n      Logger.warnOnce(\"`colorDomain` should have at least 2 values.\");\n      if (domain.length === 0) {\n        domain.push(0, 1);\n      } else if (domain.length === 1) {\n        domain.push(domain[0] + 1);\n      }\n    }\n    for (let i = 1; i < domain.length; i++) {\n      const a = domain[i - 1];\n      const b = domain[i];\n      if (a >= b) {\n        Logger.warnOnce(\"`colorDomain` values should be supplied in ascending order.\");\n        domain.sort((a2, b2) => a2 - b2);\n        break;\n      }\n    }\n    if (range3.length < domain.length) {\n      for (let i = range3.length; i < domain.length; i++) {\n        range3.push(range3.length > 0 ? range3[0] : \"black\");\n      }\n    }\n    this.parsedRange = this.range.map(convertColorStringToOklcha);\n  }\n  convert(x) {\n    this.refresh();\n    const { domain, range: range3, parsedRange } = this;\n    const d0 = domain[0];\n    const d1 = domain[domain.length - 1];\n    const r0 = range3[0];\n    const r1 = range3[range3.length - 1];\n    if (x <= d0) {\n      return r0;\n    }\n    if (x >= d1) {\n      return r1;\n    }\n    let index;\n    let q;\n    if (domain.length === 2) {\n      const t = (x - d0) / (d1 - d0);\n      const step = 1 / (range3.length - 1);\n      index = range3.length <= 2 ? 0 : Math.min(Math.floor(t * (range3.length - 1)), range3.length - 2);\n      q = (t - index * step) / step;\n    } else {\n      for (index = 0; index < domain.length - 2; index++) {\n        if (x < domain[index + 1]) {\n          break;\n        }\n      }\n      const a = domain[index];\n      const b = domain[index + 1];\n      q = (x - a) / (b - a);\n    }\n    const c0 = parsedRange[index];\n    const c1 = parsedRange[index + 1];\n    return interpolateOklch(c0, c1, q).toRgbaString();\n  }\n  refresh() {\n    if (!this.invalid)\n      return;\n    this.invalid = false;\n    this.update();\n    if (this.invalid) {\n      Logger.warnOnce(\"Expected update to not invalidate scale\");\n    }\n  }\n};\n__decorateClass([\n  Invalidating\n], ColorScale.prototype, \"domain\", 2);\n__decorateClass([\n  Invalidating\n], ColorScale.prototype, \"range\", 2);\n\n// packages/ag-charts-community/src/scene/shape/linearGradientFill.ts\nvar LinearGradientFill = class extends Shape {\n  constructor() {\n    super(...arguments);\n    this.direction = \"to-right\";\n    this.stops = void 0;\n    this._mask = void 0;\n  }\n  get mask() {\n    return this._mask;\n  }\n  set mask(newMask) {\n    if (this._mask != null) {\n      this.removeChild(this._mask);\n    }\n    if (newMask != null) {\n      this.appendChild(newMask);\n    }\n    this._mask = newMask;\n  }\n  isPointInPath(x, y) {\n    var _a, _b;\n    return (_b = (_a = this.mask) == null ? void 0 : _a.isPointInPath(x, y)) != null ? _b : false;\n  }\n  computeBBox() {\n    var _a;\n    return (_a = this.mask) == null ? void 0 : _a.computeBBox();\n  }\n  render(renderCtx) {\n    const { mask, stops } = this;\n    const { ctx, devicePixelRatio } = renderCtx;\n    const pixelLength = 1 / devicePixelRatio;\n    const maskBbox = mask == null ? void 0 : mask.computeTransformedBBox();\n    if (mask == null || stops == null || maskBbox == null)\n      return;\n    if (mask.dirtyPath) {\n      mask.updatePath();\n      mask.dirtyPath = false;\n    }\n    ctx.save();\n    ctx.beginPath();\n    mask.path.draw(ctx);\n    ctx.clip();\n    ctx.resetTransform();\n    const x0 = Math.floor(maskBbox.x);\n    const x1 = Math.ceil(maskBbox.x + maskBbox.width);\n    const y0 = Math.floor(maskBbox.y);\n    const y1 = Math.ceil(maskBbox.y + maskBbox.height);\n    const colorScale = new ColorScale();\n    const [i0, i1] = this.direction === \"to-right\" ? [x0, x1] : [y0, y1];\n    colorScale.domain = stops.map((_, index) => {\n      return i0 + (i1 - i0) * index / (stops.length - 1);\n    });\n    colorScale.range = stops;\n    colorScale.update();\n    if (this.direction === \"to-right\") {\n      const height = y1 - y0;\n      for (let x = x0; x <= x1; x += pixelLength) {\n        ctx.fillStyle = colorScale.convert(x);\n        ctx.fillRect(x, y0, pixelLength, height);\n      }\n    } else {\n      const width = x1 - x0;\n      for (let y = y0; y <= y1; y += pixelLength) {\n        ctx.fillStyle = colorScale.convert(y);\n        ctx.fillRect(x0, y, width, pixelLength);\n      }\n    }\n    ctx.restore();\n  }\n};\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], LinearGradientFill.prototype, \"direction\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], LinearGradientFill.prototype, \"stops\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], LinearGradientFill.prototype, \"_mask\", 2);\n\n// packages/ag-charts-community/src/scene/shape/rect.ts\nvar epsilon = 1e-6;\nvar cornerEdges = (leadingEdge, trailingEdge, leadingInset, trailingInset, cornerRadius) => {\n  let leadingClipped = false;\n  let trailingClipped = false;\n  let leading0 = trailingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(leadingInset, 2), 0));\n  let leading1 = 0;\n  let trailing0 = 0;\n  let trailing1 = leadingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(trailingInset, 2), 0));\n  if (leading0 > leadingEdge) {\n    leadingClipped = true;\n    leading0 = leadingEdge;\n    leading1 = leadingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(trailingInset - leadingEdge, 2)));\n  } else if (leading0 < epsilon) {\n    leading0 = 0;\n  }\n  if (trailing1 > trailingEdge) {\n    trailingClipped = true;\n    trailing0 = trailingInset - Math.sqrt(Math.max(__pow(cornerRadius, 2) - __pow(leadingInset - trailingEdge, 2)));\n    trailing1 = trailingEdge;\n  } else if (trailing1 < epsilon) {\n    trailing1 = 0;\n  }\n  return { leading0, leading1, trailing0, trailing1, leadingClipped, trailingClipped };\n};\nvar drawCorner = (path, { x0, y0, x1, y1, cx, cy }, cornerRadius, move) => {\n  if (move) {\n    path.moveTo(x0, y0);\n  }\n  if (x0 !== x1 || y0 !== y1) {\n    const r0 = Math.atan2(y0 - cy, x0 - cx);\n    const r1 = Math.atan2(y1 - cy, x1 - cx);\n    path.arc(cx, cy, cornerRadius, r0, r1);\n  } else {\n    path.lineTo(x0, y0);\n  }\n};\nvar insetCornerRadiusRect = (path, x, y, width, height, cornerRadii, cornerRadiusBbox) => {\n  let {\n    topLeft: topLeftCornerRadius,\n    topRight: topRightCornerRadius,\n    bottomRight: bottomRightCornerRadius,\n    bottomLeft: bottomLeftCornerRadius\n  } = cornerRadii;\n  const maxVerticalCornerRadius = Math.max(\n    topLeftCornerRadius + bottomLeftCornerRadius,\n    topRightCornerRadius + bottomRightCornerRadius\n  );\n  const maxHorizontalCornerRadius = Math.max(\n    topLeftCornerRadius + topRightCornerRadius,\n    bottomLeftCornerRadius + bottomRightCornerRadius\n  );\n  if (maxVerticalCornerRadius <= 0 && maxHorizontalCornerRadius <= 0) {\n    path.rect(x, y, width, height);\n    return;\n  } else if (cornerRadiusBbox == null && topLeftCornerRadius === topRightCornerRadius && topLeftCornerRadius === bottomRightCornerRadius && topLeftCornerRadius === bottomLeftCornerRadius) {\n    path.roundRect(x, y, width, height, topLeftCornerRadius);\n    return;\n  }\n  if (width < 0) {\n    x += width;\n    width = Math.abs(width);\n  }\n  if (height < 0) {\n    y += height;\n    height = Math.abs(height);\n  }\n  if (cornerRadiusBbox != null) {\n    const x0 = Math.max(x, cornerRadiusBbox.x);\n    const x1 = Math.min(x + width, cornerRadiusBbox.x + cornerRadiusBbox.width);\n    const y0 = Math.max(y, cornerRadiusBbox.y);\n    const y1 = Math.min(y + height, cornerRadiusBbox.y + cornerRadiusBbox.height);\n    x = x0;\n    y = y0;\n    width = x1 - x0;\n    height = y1 - y0;\n  }\n  if (width <= 0 || height <= 0)\n    return;\n  cornerRadiusBbox != null ? cornerRadiusBbox : cornerRadiusBbox = new BBox(x, y, width, height);\n  const borderScale = Math.max(\n    maxVerticalCornerRadius / cornerRadiusBbox.height,\n    maxHorizontalCornerRadius / cornerRadiusBbox.width,\n    1\n  );\n  if (borderScale > 1) {\n    topLeftCornerRadius /= borderScale;\n    topRightCornerRadius /= borderScale;\n    bottomRightCornerRadius /= borderScale;\n    bottomLeftCornerRadius /= borderScale;\n  }\n  let drawTopLeftCorner = true;\n  let drawTopRightCorner = true;\n  let drawBottomRightCorner = true;\n  let drawBottomLeftCorner = true;\n  let topLeftCorner;\n  let topRightCorner;\n  let bottomRightCorner;\n  let bottomLeftCorner;\n  if (drawTopLeftCorner) {\n    const nodes = cornerEdges(\n      height,\n      width,\n      Math.max(cornerRadiusBbox.x + topLeftCornerRadius - x, 0),\n      Math.max(cornerRadiusBbox.y + topLeftCornerRadius - y, 0),\n      topLeftCornerRadius\n    );\n    if (nodes.leadingClipped)\n      drawBottomLeftCorner = false;\n    if (nodes.trailingClipped)\n      drawTopRightCorner = false;\n    const x0 = Math.max(x + nodes.leading1, x);\n    const y0 = Math.max(y + nodes.leading0, y);\n    const x1 = Math.max(x + nodes.trailing1, x);\n    const y1 = Math.max(y + nodes.trailing0, y);\n    const cx = cornerRadiusBbox.x + topLeftCornerRadius;\n    const cy = cornerRadiusBbox.y + topLeftCornerRadius;\n    topLeftCorner = { x0, y0, x1, y1, cx, cy };\n  }\n  if (drawTopRightCorner) {\n    const nodes = cornerEdges(\n      width,\n      height,\n      Math.max(cornerRadiusBbox.y + topRightCornerRadius - y, 0),\n      Math.max(x + width - (cornerRadiusBbox.x + cornerRadiusBbox.width - topRightCornerRadius), 0),\n      topRightCornerRadius\n    );\n    if (nodes.leadingClipped)\n      drawTopLeftCorner = false;\n    if (nodes.trailingClipped)\n      drawBottomRightCorner = false;\n    const x0 = Math.min(x + width - nodes.leading0, x + width);\n    const y0 = Math.max(y + nodes.leading1, y);\n    const x1 = Math.min(x + width - nodes.trailing0, x + width);\n    const y1 = Math.max(y + nodes.trailing1, y);\n    const cx = cornerRadiusBbox.x + cornerRadiusBbox.width - topRightCornerRadius;\n    const cy = cornerRadiusBbox.y + topRightCornerRadius;\n    topRightCorner = { x0, y0, x1, y1, cx, cy };\n  }\n  if (drawBottomRightCorner) {\n    const nodes = cornerEdges(\n      height,\n      width,\n      Math.max(x + width - (cornerRadiusBbox.x + cornerRadiusBbox.width - bottomRightCornerRadius), 0),\n      Math.max(y + height - (cornerRadiusBbox.y + cornerRadiusBbox.height - bottomRightCornerRadius), 0),\n      bottomRightCornerRadius\n    );\n    if (nodes.leadingClipped)\n      drawTopRightCorner = false;\n    if (nodes.trailingClipped)\n      drawBottomLeftCorner = false;\n    const x0 = Math.min(x + width - nodes.leading1, x + width);\n    const y0 = Math.min(y + height - nodes.leading0, y + height);\n    const x1 = Math.min(x + width - nodes.trailing1, x + width);\n    const y1 = Math.min(y + height - nodes.trailing0, y + height);\n    const cx = cornerRadiusBbox.x + cornerRadiusBbox.width - bottomRightCornerRadius;\n    const cy = cornerRadiusBbox.y + cornerRadiusBbox.height - bottomRightCornerRadius;\n    bottomRightCorner = { x0, y0, x1, y1, cx, cy };\n  }\n  if (drawBottomLeftCorner) {\n    const nodes = cornerEdges(\n      width,\n      height,\n      Math.max(y + height - (cornerRadiusBbox.y + cornerRadiusBbox.height - bottomLeftCornerRadius), 0),\n      Math.max(cornerRadiusBbox.x + bottomLeftCornerRadius - x, 0),\n      bottomLeftCornerRadius\n    );\n    if (nodes.leadingClipped)\n      drawBottomRightCorner = false;\n    if (nodes.trailingClipped)\n      drawTopLeftCorner = false;\n    const x0 = Math.max(x + nodes.leading0, x);\n    const y0 = Math.min(y + height - nodes.leading1, y + height);\n    const x1 = Math.max(x + nodes.trailing0, x);\n    const y1 = Math.min(y + height - nodes.trailing1, y + height);\n    const cx = cornerRadiusBbox.x + bottomLeftCornerRadius;\n    const cy = cornerRadiusBbox.y + cornerRadiusBbox.height - bottomLeftCornerRadius;\n    bottomLeftCorner = { x0, y0, x1, y1, cx, cy };\n  }\n  let didMove = false;\n  if (drawTopLeftCorner && topLeftCorner != null) {\n    drawCorner(path, topLeftCorner, topLeftCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawTopRightCorner && topRightCorner != null) {\n    drawCorner(path, topRightCorner, topRightCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawBottomRightCorner && bottomRightCorner != null) {\n    drawCorner(path, bottomRightCorner, bottomRightCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  if (drawBottomLeftCorner && bottomLeftCorner != null) {\n    drawCorner(path, bottomLeftCorner, bottomLeftCornerRadius, !didMove);\n    didMove || (didMove = true);\n  }\n  path.closePath();\n};\nvar Rect = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.borderPath = new Path2D();\n    this.x = 0;\n    this.y = 0;\n    this.width = 10;\n    this.height = 10;\n    this.topLeftCornerRadius = 0;\n    this.topRightCornerRadius = 0;\n    this.bottomRightCornerRadius = 0;\n    this.bottomLeftCornerRadius = 0;\n    this.cornerRadiusBbox = void 0;\n    this.crisp = false;\n    this.lastUpdatePathStrokeWidth = Shape.defaultStyles.strokeWidth;\n    this.effectiveStrokeWidth = Shape.defaultStyles.strokeWidth;\n    /**\n     * When the rectangle's width or height is less than a pixel\n     * and crisp mode is on, the rectangle will still fit into the pixel,\n     * but will be less opaque to make an effect of holding less space.\n     */\n    this.microPixelEffectOpacity = 1;\n  }\n  set cornerRadius(cornerRadius) {\n    this.topLeftCornerRadius = cornerRadius;\n    this.topRightCornerRadius = cornerRadius;\n    this.bottomRightCornerRadius = cornerRadius;\n    this.bottomLeftCornerRadius = cornerRadius;\n  }\n  isDirtyPath() {\n    var _a;\n    if (this.lastUpdatePathStrokeWidth !== this.strokeWidth) {\n      return true;\n    }\n    return !!(this.path.isDirty() || this.borderPath.isDirty() || ((_a = this.clipPath) == null ? void 0 : _a.isDirty()));\n  }\n  updatePath() {\n    var _a, _b, _c;\n    const {\n      path,\n      borderPath,\n      crisp,\n      topLeftCornerRadius,\n      topRightCornerRadius,\n      bottomRightCornerRadius,\n      bottomLeftCornerRadius\n    } = this;\n    let { x, y, width: w, height: h, strokeWidth, cornerRadiusBbox } = this;\n    const pixelRatio = (_b = (_a = this.layerManager) == null ? void 0 : _a.canvas.pixelRatio) != null ? _b : 1;\n    const pixelSize = 1 / pixelRatio;\n    let microPixelEffectOpacity = 1;\n    path.clear({ trackChanges: true });\n    borderPath.clear({ trackChanges: true });\n    if (crisp) {\n      if (w <= pixelSize) {\n        microPixelEffectOpacity *= w / pixelSize;\n      }\n      if (h <= pixelSize) {\n        microPixelEffectOpacity *= h / pixelSize;\n      }\n      w = this.align(x, w);\n      h = this.align(y, h);\n      x = this.align(x);\n      y = this.align(y);\n      cornerRadiusBbox = cornerRadiusBbox != null ? new BBox(\n        this.align(cornerRadiusBbox.x),\n        this.align(cornerRadiusBbox.y),\n        this.align(cornerRadiusBbox.x, cornerRadiusBbox.width),\n        this.align(cornerRadiusBbox.y, cornerRadiusBbox.height)\n      ) : void 0;\n    }\n    if (strokeWidth) {\n      if (w < pixelSize) {\n        const lx = x + pixelSize / 2;\n        borderPath.moveTo(lx, y);\n        borderPath.lineTo(lx, y + h);\n        strokeWidth = pixelSize;\n        this.borderClipPath = void 0;\n      } else if (h < pixelSize) {\n        const ly = y + pixelSize / 2;\n        borderPath.moveTo(x, ly);\n        borderPath.lineTo(x + w, ly);\n        strokeWidth = pixelSize;\n        this.borderClipPath = void 0;\n      } else if (strokeWidth < w && strokeWidth < h) {\n        const halfStrokeWidth = strokeWidth / 2;\n        x += halfStrokeWidth;\n        y += halfStrokeWidth;\n        w -= strokeWidth;\n        h -= strokeWidth;\n        const adjustedCornerRadiusBbox = cornerRadiusBbox == null ? void 0 : cornerRadiusBbox.clone().shrink(halfStrokeWidth);\n        const cornerRadii = {\n          topLeft: topLeftCornerRadius > 0 ? topLeftCornerRadius - strokeWidth : 0,\n          topRight: topRightCornerRadius > 0 ? topRightCornerRadius - strokeWidth : 0,\n          bottomRight: bottomRightCornerRadius > 0 ? bottomRightCornerRadius - strokeWidth : 0,\n          bottomLeft: bottomLeftCornerRadius > 0 ? bottomLeftCornerRadius - strokeWidth : 0\n        };\n        this.borderClipPath = void 0;\n        insetCornerRadiusRect(path, x, y, w, h, cornerRadii, adjustedCornerRadiusBbox);\n        insetCornerRadiusRect(borderPath, x, y, w, h, cornerRadii, adjustedCornerRadiusBbox);\n      } else {\n        this.borderClipPath = (_c = this.borderClipPath) != null ? _c : new Path2D();\n        this.borderClipPath.clear({ trackChanges: true });\n        this.borderClipPath.rect(x, y, w, h);\n        borderPath.rect(x, y, w, h);\n      }\n    } else {\n      const cornerRadii = {\n        topLeft: topLeftCornerRadius,\n        topRight: topRightCornerRadius,\n        bottomRight: bottomRightCornerRadius,\n        bottomLeft: bottomLeftCornerRadius\n      };\n      this.borderClipPath = void 0;\n      insetCornerRadiusRect(path, x, y, w, h, cornerRadii, cornerRadiusBbox);\n    }\n    this.effectiveStrokeWidth = strokeWidth;\n    this.lastUpdatePathStrokeWidth = strokeWidth;\n    this.microPixelEffectOpacity = microPixelEffectOpacity;\n  }\n  computeBBox() {\n    const { x, y, width, height } = this;\n    return new BBox(x, y, width, height);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox.containsPoint(point.x, point.y);\n  }\n  applyFillAlpha(ctx) {\n    const { fillOpacity, microPixelEffectOpacity, opacity } = this;\n    const { globalAlpha } = ctx;\n    ctx.globalAlpha = globalAlpha * opacity * fillOpacity * microPixelEffectOpacity;\n  }\n  renderStroke(ctx) {\n    const { stroke, effectiveStrokeWidth, borderPath, borderClipPath, opacity, microPixelEffectOpacity } = this;\n    const borderActive = !!stroke && !!effectiveStrokeWidth;\n    if (borderActive) {\n      const { strokeOpacity, lineDash, lineDashOffset, lineCap, lineJoin } = this;\n      if (borderClipPath) {\n        borderClipPath.draw(ctx);\n        ctx.clip();\n      }\n      borderPath.draw(ctx);\n      const { globalAlpha } = ctx;\n      ctx.strokeStyle = stroke;\n      ctx.globalAlpha = globalAlpha * opacity * strokeOpacity * microPixelEffectOpacity;\n      ctx.lineWidth = effectiveStrokeWidth;\n      if (lineDash) {\n        ctx.setLineDash(lineDash);\n      }\n      if (lineDashOffset) {\n        ctx.lineDashOffset = lineDashOffset;\n      }\n      if (lineCap) {\n        ctx.lineCap = lineCap;\n      }\n      if (lineJoin) {\n        ctx.lineJoin = lineJoin;\n      }\n      ctx.stroke();\n      ctx.globalAlpha = globalAlpha;\n    }\n  }\n};\nRect.className = \"Rect\";\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"x\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"y\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"width\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"height\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"topLeftCornerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"topRightCornerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"bottomRightCornerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"bottomLeftCornerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"cornerRadiusBbox\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Rect.prototype, \"crisp\", 2);\n\n// packages/ag-charts-community/src/util/sector.ts\nfunction isPointInSector(x, y, sector) {\n  const radius = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n  const { innerRadius, outerRadius } = sector;\n  if (sector.startAngle === sector.endAngle || radius < Math.min(innerRadius, outerRadius) || radius > Math.max(innerRadius, outerRadius)) {\n    return false;\n  }\n  const startAngle = normalizeAngle180(sector.startAngle);\n  const endAngle = normalizeAngle180(sector.endAngle);\n  const angle = Math.atan2(y, x);\n  return startAngle < endAngle ? angle <= endAngle && angle >= startAngle : angle <= endAngle && angle >= -Math.PI || angle >= startAngle && angle <= Math.PI;\n}\nfunction lineCollidesSector(line, sector) {\n  const { startAngle, endAngle, innerRadius, outerRadius } = sector;\n  const outerStart = { x: outerRadius * Math.cos(startAngle), y: outerRadius * Math.sin(startAngle) };\n  const outerEnd = { x: outerRadius * Math.cos(endAngle), y: outerRadius * Math.sin(endAngle) };\n  const innerStart = innerRadius === 0 ? { x: 0, y: 0 } : { x: innerRadius * Math.cos(startAngle), y: innerRadius * Math.sin(startAngle) };\n  const innerEnd = innerRadius === 0 ? { x: 0, y: 0 } : { x: innerRadius * Math.cos(endAngle), y: innerRadius * Math.sin(endAngle) };\n  return segmentIntersection(\n    line.start.x,\n    line.start.y,\n    line.end.x,\n    line.end.y,\n    outerStart.x,\n    outerStart.y,\n    innerStart.x,\n    innerStart.y\n  ) != null || segmentIntersection(\n    line.start.x,\n    line.start.y,\n    line.end.x,\n    line.end.y,\n    outerEnd.x,\n    outerEnd.y,\n    innerEnd.x,\n    innerEnd.y\n  ) != null || arcIntersections(\n    0,\n    0,\n    outerRadius,\n    startAngle,\n    endAngle,\n    true,\n    line.start.x,\n    line.start.y,\n    line.end.x,\n    line.end.y\n  ).length > 0;\n}\nfunction boxCollidesSector(box, sector) {\n  const topLeft = { x: box.x, y: box.y };\n  const topRight = { x: box.x + box.width, y: box.y };\n  const bottomLeft = { x: box.x, y: box.y + box.height };\n  const bottomRight = { x: box.x + box.width, y: box.y + box.height };\n  return lineCollidesSector({ start: topLeft, end: topRight }, sector) || lineCollidesSector({ start: bottomLeft, end: bottomRight }, sector);\n}\n\n// packages/ag-charts-community/src/scene/shape/sector.ts\nvar Sector = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.centerX = 0;\n    this.centerY = 0;\n    this.innerRadius = 10;\n    this.outerRadius = 20;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.angleOffset = 0;\n    this.inset = 0;\n  }\n  computeBBox() {\n    const radius = this.outerRadius;\n    return new BBox(this.centerX - radius, this.centerY - radius, radius * 2, radius * 2);\n  }\n  updatePath() {\n    const path = this.path;\n    const { angleOffset, inset } = this;\n    const startAngle = this.startAngle + angleOffset;\n    const endAngle = this.endAngle + angleOffset;\n    const sweep = startAngle <= endAngle ? endAngle - startAngle : Math.PI * 2 - (startAngle - endAngle);\n    const innerRadius = Math.max(Math.min(this.innerRadius, this.outerRadius) + inset, 0);\n    const outerRadius = Math.max(Math.max(this.innerRadius, this.outerRadius) - inset, 0);\n    const fullPie = sweep >= 2 * Math.PI;\n    const centerX = this.centerX;\n    const centerY = this.centerY;\n    path.clear();\n    if (fullPie) {\n      path.arc(centerX, centerY, outerRadius, startAngle, endAngle);\n      if (innerRadius > inset) {\n        path.moveTo(centerX + innerRadius * Math.cos(endAngle), centerY + innerRadius * Math.sin(endAngle));\n        path.arc(centerX, centerY, innerRadius, endAngle, startAngle, true);\n      }\n    } else {\n      const innerAngleOffset = innerRadius > 0 ? inset / innerRadius : 0;\n      const outerAngleOffset = outerRadius > 0 ? inset / outerRadius : 0;\n      const outerAngleExceeded = sweep < 2 * outerAngleOffset;\n      if (outerAngleExceeded)\n        return;\n      const innerAngleExceeded = innerRadius <= inset || sweep < 2 * innerAngleOffset;\n      if (innerAngleExceeded) {\n        const x = sweep < Math.PI * 0.5 ? inset * (1 + Math.cos(sweep)) / Math.sin(sweep) : NaN;\n        let r;\n        if (x > 0 && x < outerRadius) {\n          r = Math.max(Math.hypot(inset, x), innerRadius);\n        } else {\n          r = innerRadius;\n        }\n        const midAngle = startAngle + sweep * 0.5;\n        path.moveTo(centerX + r * Math.cos(midAngle), centerY + r * Math.sin(midAngle));\n      } else {\n        path.moveTo(\n          centerX + innerRadius * Math.cos(startAngle + innerAngleOffset),\n          centerY + innerRadius * Math.sin(startAngle + innerAngleOffset)\n        );\n      }\n      path.arc(centerX, centerY, outerRadius, startAngle + outerAngleOffset, endAngle - outerAngleOffset);\n      if (innerAngleExceeded) {\n      } else if (innerRadius > 0) {\n        path.arc(\n          centerX,\n          centerY,\n          innerRadius,\n          endAngle - innerAngleOffset,\n          startAngle + innerAngleOffset,\n          true\n        );\n      } else {\n        path.lineTo(centerX, centerY);\n      }\n    }\n    path.closePath();\n    this.dirtyPath = false;\n  }\n  isPointInPath(x, y) {\n    const { angleOffset } = this;\n    const startAngle = this.startAngle + angleOffset;\n    const endAngle = this.endAngle + angleOffset;\n    const innerRadius = Math.min(this.innerRadius, this.outerRadius);\n    const outerRadius = Math.max(this.innerRadius, this.outerRadius);\n    const point = this.transformPoint(x, y);\n    return isPointInSector(point.x, point.y, { startAngle, endAngle, innerRadius, outerRadius });\n  }\n};\nSector.className = \"Sector\";\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"centerX\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"centerY\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"innerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"outerRadius\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"startAngle\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"endAngle\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"angleOffset\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Sector.prototype, \"inset\", 2);\n\n// packages/ag-charts-community/src/util/numberFormat.ts\nvar group = (content) => `(${content})`;\nvar optionalGroup = (content) => `${group(content)}?`;\nvar nonCapturingGroup = (content) => optionalGroup(`?:${content}`);\nvar formatRegEx = (() => {\n  const fill = \".\";\n  const align = \"[<>=^]\";\n  const sign = \"[+\\\\-( ]\";\n  const symbol = \"[$\\u20AC\\xA3\\xA5\\u20A3\\u20B9#]\";\n  const zero = \"0\";\n  const width = \"\\\\d+\";\n  const comma = \",\";\n  const precision = \"\\\\d+\";\n  const tilde = \"~\";\n  const type = \"[%a-z]\";\n  return new RegExp(\n    [\n      \"^\",\n      nonCapturingGroup(`${optionalGroup(fill)}${group(align)}`),\n      optionalGroup(sign),\n      optionalGroup(symbol),\n      optionalGroup(zero),\n      optionalGroup(width),\n      optionalGroup(comma),\n      nonCapturingGroup(`\\\\.${group(precision)}`),\n      optionalGroup(tilde),\n      optionalGroup(type),\n      \"$\"\n    ].join(\"\"),\n    \"i\"\n  );\n})();\nvar surroundedRegEx = (() => {\n  const prefix = \".*?\";\n  const content = \".+?\";\n  const suffix = \".*?\";\n  return new RegExp([\"^\", group(prefix), `#\\\\{${group(content)}\\\\}`, group(suffix), \"$\"].join(\"\"));\n})();\nfunction parseFormatter(formatter) {\n  let prefix;\n  let suffix;\n  const surrounded = surroundedRegEx.exec(formatter);\n  if (surrounded) {\n    [, prefix, formatter, suffix] = surrounded;\n  }\n  const match = formatRegEx.exec(formatter);\n  if (!match) {\n    throw new Error(`The number formatter is invalid: ${formatter}`);\n  }\n  const [, fill, align, sign, symbol, zero, width, comma, precision, trim, type] = match;\n  return {\n    fill,\n    align,\n    sign,\n    symbol,\n    zero,\n    width: parseInt(width),\n    comma,\n    precision: parseInt(precision),\n    trim: Boolean(trim),\n    type,\n    prefix,\n    suffix\n  };\n}\nfunction format(formatter) {\n  const options = typeof formatter === \"string\" ? parseFormatter(formatter) : formatter;\n  const { fill, align, sign = \"-\", symbol, zero, width, comma, type, prefix = \"\", suffix = \"\", precision } = options;\n  let { trim } = options;\n  const precisionIsNaN = precision === void 0 || isNaN(precision);\n  let formatBody;\n  if (!type) {\n    formatBody = decimalTypes[\"g\"];\n    trim = true;\n  } else if (type in decimalTypes && type in integerTypes) {\n    formatBody = precisionIsNaN ? integerTypes[type] : decimalTypes[type];\n  } else if (type in decimalTypes) {\n    formatBody = decimalTypes[type];\n  } else if (type in integerTypes) {\n    formatBody = integerTypes[type];\n  } else {\n    throw new Error(`The number formatter type is invalid: ${type}`);\n  }\n  let formatterPrecision;\n  if (precision == null || precisionIsNaN) {\n    formatterPrecision = type ? 6 : 12;\n  } else {\n    formatterPrecision = precision;\n  }\n  return (n) => {\n    let result = formatBody(n, formatterPrecision);\n    if (trim) {\n      result = removeTrailingZeros(result);\n    }\n    if (comma) {\n      result = insertSeparator(result, comma);\n    }\n    result = addSign(n, result, sign);\n    if (symbol && symbol !== \"#\") {\n      result = `${symbol}${result}`;\n    }\n    if (symbol === \"#\" && type === \"x\") {\n      result = `0x${result}`;\n    }\n    if (type === \"s\") {\n      result = `${result}${getSIPrefix(n)}`;\n    }\n    if (type === \"%\" || type === \"p\") {\n      result = `${result}%`;\n    }\n    if (width != null && !isNaN(width)) {\n      result = addPadding(result, width, fill != null ? fill : zero, align);\n    }\n    result = `${prefix}${result}${suffix}`;\n    return result;\n  };\n}\nvar absFloor = (n) => Math.floor(Math.abs(n));\nvar integerTypes = {\n  b: (n) => absFloor(n).toString(2),\n  c: (n) => String.fromCharCode(n),\n  d: (n) => Math.round(Math.abs(n)).toFixed(0),\n  o: (n) => absFloor(n).toString(8),\n  x: (n) => absFloor(n).toString(16),\n  X: (n) => integerTypes.x(n).toUpperCase(),\n  n: (n) => integerTypes.d(n),\n  \"%\": (n) => `${absFloor(n * 100).toFixed(0)}`\n};\nvar decimalTypes = {\n  e: (n, f) => Math.abs(n).toExponential(f),\n  E: (n, f) => decimalTypes.e(n, f).toUpperCase(),\n  f: (n, f) => Math.abs(n).toFixed(f),\n  F: (n, f) => decimalTypes.f(n, f).toUpperCase(),\n  g: (n, f) => {\n    if (n === 0) {\n      return \"0\";\n    }\n    const a = Math.abs(n);\n    const p = Math.floor(Math.log10(a));\n    if (p >= -4 && p < f) {\n      return a.toFixed(f - 1 - p);\n    }\n    return a.toExponential(f - 1);\n  },\n  G: (n, f) => decimalTypes.g(n, f).toUpperCase(),\n  n: (n, f) => decimalTypes.g(n, f),\n  p: (n, f) => decimalTypes.r(n * 100, f),\n  r: (n, f) => {\n    if (n === 0) {\n      return \"0\";\n    }\n    const a = Math.abs(n);\n    const p = Math.floor(Math.log10(a));\n    const q = p - (f - 1);\n    if (q <= 0) {\n      return a.toFixed(-q);\n    }\n    const x = Math.pow(10, q);\n    return (Math.round(a / x) * x).toFixed();\n  },\n  s: (n, f) => {\n    const p = getSIPrefixPower(n);\n    return decimalTypes.r(n / Math.pow(10, p), f);\n  },\n  \"%\": (n, f) => decimalTypes.f(n * 100, f)\n};\nfunction removeTrailingZeros(numString) {\n  return numString.replace(/\\.0+$/, \"\").replace(/(\\.[1-9])0+$/, \"$1\");\n}\nfunction insertSeparator(numString, separator) {\n  let dotIndex = numString.indexOf(\".\");\n  if (dotIndex < 0) {\n    dotIndex = numString.length;\n  }\n  const integerChars = numString.substring(0, dotIndex).split(\"\");\n  const fractionalPart = numString.substring(dotIndex);\n  for (let i = integerChars.length - 3; i > 0; i -= 3) {\n    integerChars.splice(i, 0, separator);\n  }\n  return `${integerChars.join(\"\")}${fractionalPart}`;\n}\nfunction getSIPrefix(n) {\n  return siPrefixes[getSIPrefixPower(n)];\n}\nfunction getSIPrefixPower(n) {\n  const power = Math.log10(Math.abs(n));\n  const p = Math.floor(power / 3) * 3;\n  return Math.max(minSIPrefix, Math.min(maxSIPrefix, p));\n}\nvar minSIPrefix = -24;\nvar maxSIPrefix = 24;\nvar siPrefixes = {\n  [minSIPrefix]: \"y\",\n  [-21]: \"z\",\n  [-18]: \"a\",\n  [-15]: \"f\",\n  [-12]: \"p\",\n  [-9]: \"n\",\n  [-6]: \"\\xB5\",\n  [-3]: \"m\",\n  [0]: \"\",\n  [3]: \"k\",\n  [6]: \"M\",\n  [9]: \"G\",\n  [12]: \"T\",\n  [15]: \"P\",\n  [18]: \"E\",\n  [21]: \"Z\",\n  [maxSIPrefix]: \"Y\"\n};\nvar minusSign = \"\\u2212\";\nfunction addSign(num, numString, signType = \"\") {\n  if (signType === \"(\") {\n    return num >= 0 ? numString : `(${numString})`;\n  }\n  const plusSign = signType === \"+\" ? \"+\" : \"\";\n  return `${num >= 0 ? plusSign : minusSign}${numString}`;\n}\nfunction addPadding(numString, width, fill = \" \", align = \">\") {\n  let result = numString;\n  if (align === \">\" || !align) {\n    result = result.padStart(width, fill);\n  } else if (align === \"<\") {\n    result = result.padEnd(width, fill);\n  } else if (align === \"^\") {\n    const padWidth = Math.max(0, width - result.length);\n    const padLeft = Math.ceil(padWidth / 2);\n    const padRight = Math.floor(padWidth / 2);\n    result = result.padStart(padLeft + result.length, fill);\n    result = result.padEnd(padRight + result.length, fill);\n  }\n  return result;\n}\nfunction tickFormat(ticks, formatter) {\n  const options = parseFormatter(formatter != null ? formatter : \",f\");\n  const { precision } = options;\n  if (precision == null || isNaN(precision)) {\n    if (options.type === \"f\" || options.type === \"%\") {\n      options.precision = Math.max(\n        ...ticks.map((x) => {\n          if (typeof x !== \"number\" || x === 0) {\n            return 0;\n          }\n          const l = Math.floor(Math.log10(Math.abs(x)));\n          const digits = options.type ? 6 : 12;\n          const exp = x.toExponential(digits - 1).replace(/\\.?0+e/, \"e\");\n          const dotIndex = exp.indexOf(\".\");\n          if (dotIndex < 0) {\n            return l >= 0 ? 0 : -l;\n          }\n          const s = exp.indexOf(\"e\") - dotIndex;\n          return Math.max(0, s - l - 1);\n        })\n      );\n    } else if (!options.type || options.type in decimalTypes) {\n      options.precision = Math.max(\n        ...ticks.map((x) => {\n          if (typeof x !== \"number\") {\n            return 0;\n          }\n          const exp = x.toExponential((options.type ? 6 : 12) - 1).replace(/\\.?0+e/, \"e\");\n          return exp.substring(0, exp.indexOf(\"e\")).replace(\".\", \"\").length;\n        })\n      );\n    }\n  }\n  const f = format(options);\n  return (n) => f(Number(n));\n}\n\n// packages/ag-charts-community/src/util/ticks.ts\nvar createNumericTicks = (fractionDigits, takingValues = []) => Object.assign(takingValues, { fractionDigits });\nfunction ticks_default(start, stop, count2, minCount, maxCount) {\n  if (count2 < 2) {\n    return range(start, stop, stop - start);\n  }\n  const step = tickStep(start, stop, count2, minCount, maxCount);\n  if (isNaN(step)) {\n    return createNumericTicks(0);\n  }\n  start = Math.ceil(start / step) * step;\n  stop = Math.floor(stop / step) * step;\n  return range(start, stop, step);\n}\nvar tickMultipliers = [1, 2, 5, 10];\nfunction tickStep(a, b, count2, minCount = 0, maxCount = Infinity) {\n  const extent2 = Math.abs(b - a);\n  const rawStep = extent2 / count2;\n  const power = Math.floor(Math.log10(rawStep));\n  const step = Math.pow(10, power);\n  const m = tickMultipliers.map((multiplier) => {\n    const s = multiplier * step;\n    const c = Math.ceil(extent2 / s);\n    const isWithinBounds = c >= minCount && c <= maxCount;\n    const diffCount = Math.abs(c - count2);\n    return { multiplier, isWithinBounds, diffCount };\n  }).sort((a2, b2) => {\n    if (a2.isWithinBounds !== b2.isWithinBounds) {\n      return a2.isWithinBounds ? -1 : 1;\n    }\n    return a2.diffCount - b2.diffCount;\n  })[0].multiplier;\n  if (!m || isNaN(m)) {\n    return NaN;\n  }\n  return m * step;\n}\nfunction singleTickDomain(a, b) {\n  const extent2 = Math.abs(b - a);\n  const power = Math.floor(Math.log10(extent2));\n  const step = Math.pow(10, power);\n  const roundStart = a > b ? Math.ceil : Math.floor;\n  const roundStop = b < a ? Math.floor : Math.ceil;\n  return tickMultipliers.map((multiplier) => {\n    const s = multiplier * step;\n    const start = roundStart(a / s) * s;\n    const end = roundStop(b / s) * s;\n    const error = 1 - extent2 / Math.abs(end - start);\n    const domain = [start, end];\n    return { error, domain };\n  }).sort((a2, b2) => a2.error - b2.error)[0].domain;\n}\nfunction range(start, stop, step) {\n  const d0 = Math.min(start, stop);\n  const d1 = Math.max(start, stop);\n  const fractionalDigits = countFractionDigits(step);\n  const f = Math.pow(10, fractionalDigits);\n  const n = Math.ceil((d1 - d0) / step);\n  const values = createNumericTicks(fractionalDigits);\n  for (let i = 0; i <= n; i++) {\n    const value = d0 + step * i;\n    values.push(Math.round(value * f) / f);\n  }\n  return values;\n}\n\n// packages/ag-charts-community/src/scale/linearScale.ts\nvar LinearScale = class extends ContinuousScale {\n  constructor() {\n    super([0, 1], [0, 1]);\n    this.type = \"linear\";\n  }\n  toDomain(d) {\n    return d;\n  }\n  ticks() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    if (!this.domain || this.domain.length < 2 || count2 < 1 || this.domain.some((d) => !isFinite(d))) {\n      return [];\n    }\n    this.refresh();\n    const [d0, d1] = this.getDomain();\n    const { interval } = this;\n    if (interval) {\n      const step = Math.abs(interval);\n      if (!this.isDenseInterval({ start: d0, stop: d1, interval: step })) {\n        return range(d0, d1, step);\n      }\n    }\n    return ticks_default(d0, d1, count2, this.minTickCount, this.maxTickCount);\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  getTickStep(start, stop) {\n    var _a, _b;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    return (_b = this.interval) != null ? _b : tickStep(start, stop, count2, this.minTickCount, this.maxTickCount);\n  }\n  /**\n   * Extends the domain so that it starts and ends on nice round values.\n   */\n  updateNiceDomain() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : ContinuousScale.defaultTickCount;\n    if (count2 < 1) {\n      this.niceDomain = [...this.domain];\n      return;\n    }\n    let [start, stop] = this.domain;\n    if (count2 === 1) {\n      [start, stop] = singleTickDomain(start, stop);\n    } else {\n      const roundStart = start > stop ? Math.ceil : Math.floor;\n      const roundStop = stop < start ? Math.floor : Math.ceil;\n      const maxAttempts = 4;\n      for (let i = 0; i < maxAttempts; i++) {\n        const prev0 = start;\n        const prev1 = stop;\n        const step = this.getTickStep(start, stop);\n        const [d0, d1] = this.domain;\n        if (step >= 1) {\n          start = roundStart(d0 / step) * step;\n          stop = roundStop(d1 / step) * step;\n        } else {\n          const s = 1 / step;\n          start = roundStart(d0 * s) / s;\n          stop = roundStop(d1 * s) / s;\n        }\n        if (start === prev0 && stop === prev1) {\n          break;\n        }\n      }\n    }\n    this.niceDomain = [start, stop];\n  }\n  tickFormat({ ticks, specifier }) {\n    return tickFormat(ticks != null ? ticks : this.ticks(), specifier);\n  }\n};\n\n// packages/ag-charts-community/src/chart/marker/marker.ts\nvar Marker = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.size = 12;\n  }\n  computeBBox() {\n    const { x, y, size } = this;\n    const half = size / 2;\n    return new BBox(x - half, y - half, size, size);\n  }\n  applyPath(s, moves) {\n    const { path } = this;\n    let { x, y } = this;\n    path.clear();\n    for (const { x: mx, y: my, t } of moves) {\n      x += mx * s;\n      y += my * s;\n      if (t === \"move\") {\n        path.moveTo(x, y);\n      } else {\n        path.lineTo(x, y);\n      }\n    }\n    path.closePath();\n  }\n};\n__decorateClass([\n  ScenePathChangeDetection()\n], Marker.prototype, \"x\", 2);\n__decorateClass([\n  ScenePathChangeDetection()\n], Marker.prototype, \"y\", 2);\n__decorateClass([\n  ScenePathChangeDetection({ convertor: Math.abs })\n], Marker.prototype, \"size\", 2);\n\n// packages/ag-charts-community/src/chart/marker/circle.ts\nvar Circle = class extends Marker {\n  updatePath() {\n    const { x, y, path, size } = this;\n    const r = size / 2;\n    path.clear();\n    path.arc(x, y, r, 0, Math.PI * 2);\n    path.closePath();\n  }\n};\nCircle.className = \"Circle\";\n\n// packages/ag-charts-community/src/chart/marker/cross.ts\nvar _Cross = class _Cross extends Marker {\n  updatePath() {\n    const s = this.size / 4.2;\n    super.applyPath(s, _Cross.moves);\n  }\n};\n_Cross.className = \"Cross\";\n_Cross.moves = [\n  { x: -1, y: 0, t: \"move\" },\n  { x: -1, y: -1 },\n  { x: 1, y: -1 },\n  { x: 1, y: 1 },\n  { x: 1, y: -1 },\n  { x: 1, y: 1 },\n  { x: -1, y: 1 },\n  { x: 1, y: 1 },\n  { x: -1, y: 1 },\n  { x: -1, y: -1 },\n  { x: -1, y: 1 },\n  { x: -1, y: -1 }\n];\nvar Cross = _Cross;\n\n// packages/ag-charts-community/src/chart/marker/diamond.ts\nvar _Diamond = class _Diamond extends Marker {\n  updatePath() {\n    const s = this.size / 2;\n    super.applyPath(s, _Diamond.moves);\n  }\n};\n_Diamond.className = \"Diamond\";\n_Diamond.moves = [\n  { x: 0, y: -1, t: \"move\" },\n  { x: 1, y: 1 },\n  { x: -1, y: 1 },\n  { x: -1, y: -1 },\n  { x: 1, y: -1 }\n];\nvar Diamond = _Diamond;\n\n// packages/ag-charts-community/src/chart/marker/heart.ts\nvar Heart = class extends Marker {\n  rad(degree) {\n    return degree / 180 * Math.PI;\n  }\n  updatePath() {\n    const { x, path, size, rad } = this;\n    const r = size / 4;\n    const y = this.y + r / 2;\n    path.clear();\n    path.arc(x - r, y - r, r, rad(130), rad(330));\n    path.arc(x + r, y - r, r, rad(220), rad(50));\n    path.lineTo(x, y + r);\n    path.closePath();\n  }\n};\nHeart.className = \"Heart\";\n\n// packages/ag-charts-community/src/chart/marker/plus.ts\nvar _Plus = class _Plus extends Marker {\n  updatePath() {\n    const s = this.size / 3;\n    super.applyPath(s, _Plus.moves);\n  }\n};\n_Plus.className = \"Plus\";\n_Plus.moves = [\n  { x: -0.5, y: -0.5, t: \"move\" },\n  { x: 0, y: -1 },\n  { x: 1, y: 0 },\n  { x: 0, y: 1 },\n  { x: 1, y: 0 },\n  { x: 0, y: 1 },\n  { x: -1, y: 0 },\n  { x: 0, y: 1 },\n  { x: -1, y: 0 },\n  { x: 0, y: -1 },\n  { x: -1, y: 0 },\n  { x: 0, y: -1 }\n];\nvar Plus = _Plus;\n\n// packages/ag-charts-community/src/chart/marker/square.ts\nvar Square = class extends Marker {\n  updatePath() {\n    const { path, x, y } = this;\n    const hs = this.size / 2;\n    path.clear();\n    path.moveTo(this.align(x - hs), this.align(y - hs));\n    path.lineTo(this.align(x + hs), this.align(y - hs));\n    path.lineTo(this.align(x + hs), this.align(y + hs));\n    path.lineTo(this.align(x - hs), this.align(y + hs));\n    path.closePath();\n  }\n};\nSquare.className = \"Square\";\n\n// packages/ag-charts-community/src/chart/marker/triangle.ts\nvar _Triangle = class _Triangle extends Marker {\n  updatePath() {\n    const s = this.size * 1.1;\n    super.applyPath(s, _Triangle.moves);\n  }\n};\n_Triangle.className = \"Triangle\";\n_Triangle.moves = [\n  { x: 0, y: -0.48, t: \"move\" },\n  { x: 0.5, y: 0.87 },\n  { x: -1, y: 0 }\n];\nvar Triangle = _Triangle;\n\n// packages/ag-charts-community/src/chart/marker/util.ts\nvar MARKER_SHAPES = {\n  circle: Circle,\n  cross: Cross,\n  diamond: Diamond,\n  heart: Heart,\n  plus: Plus,\n  square: Square,\n  triangle: Triangle\n};\nvar MARKER_SUPPORTED_SHAPES = Object.keys(MARKER_SHAPES);\nfunction isMarkerShape(shape) {\n  return typeof shape === \"string\" && MARKER_SUPPORTED_SHAPES.includes(shape);\n}\nfunction getMarker(shape = Square) {\n  if (isMarkerShape(shape)) {\n    return MARKER_SHAPES[shape];\n  }\n  if (typeof shape === \"function\") {\n    return shape;\n  }\n  return Square;\n}\n\n// packages/ag-charts-community/src/scene/image.ts\nvar Image = class extends Node {\n  constructor(sourceImage) {\n    super();\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.opacity = 1;\n    this.sourceImage = sourceImage;\n  }\n  render(renderCtx) {\n    const { ctx, forceRender, stats } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped++;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const image = this.sourceImage;\n    ctx.globalAlpha = this.opacity;\n    ctx.drawImage(image, 0, 0, image.width, image.height, this.x, this.y, this.width, this.height);\n    super.render(renderCtx);\n  }\n};\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Image.prototype, \"x\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Image.prototype, \"y\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Image.prototype, \"width\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Image.prototype, \"height\", 2);\n__decorateClass([\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], Image.prototype, \"opacity\", 2);\n\n// packages/ag-charts-community/src/integrated-charts-scene.ts\nvar motion = __spreadValues(__spreadValues({}, fromToMotion_exports), resetMotion_exports);\n\n// packages/ag-charts-community/src/util/value.ts\nvar isString2 = (v) => typeof v === \"string\";\nvar isStringObject = (v) => !!v && Object.hasOwn(v, \"toString\") && isString2(v.toString());\nvar isDate2 = (v) => v instanceof Date && !isNaN(+v);\nfunction isDiscrete(value) {\n  return isString2(value) || isStringObject(value);\n}\nfunction isContinuous(value) {\n  const isNumberObject = (v) => !!v && Object.hasOwn(v, \"valueOf\") && isNumber2(v.valueOf());\n  const isDate3 = (v) => v instanceof Date && !isNaN(+v);\n  return isNumber2(value) || isNumberObject(value) || isDate3(value);\n}\nfunction checkDatum(value, isContinuousScale) {\n  if (isContinuousScale && isContinuous(value)) {\n    return value;\n  } else if (!isContinuousScale) {\n    if (!isDiscrete(value)) {\n      return String(value);\n    }\n    return value;\n  }\n  return void 0;\n}\nvar isNumber2 = (v) => typeof v === \"number\" && Number.isFinite(v);\n\n// packages/ag-charts-community/src/chart/crossline/crossLine.ts\nvar MATCHING_CROSSLINE_TYPE = (property) => {\n  return property === \"value\" ? predicateWithMessage(\n    (_, ctx) => ctx.target[\"type\"] === \"line\",\n    (ctx) => ctx.target[\"type\"] === \"range\" ? `crossLine type 'range' to have a 'range' property instead of 'value'` : `crossLine property 'type' to be 'line'`\n  ) : predicateWithMessage(\n    (_, ctx) => ctx.target[\"type\"] === \"range\",\n    (ctx) => ctx.target.type === \"line\" ? `crossLine type 'line' to have a 'value' property instead of 'range'` : `crossLine property 'type' to be 'range'`\n  );\n};\nvar validateCrossLineValues = (type, value, range3, scale2) => {\n  const lineCrossLine = type === \"line\" && value !== void 0;\n  const rangeCrossLine = type === \"range\" && range3 !== void 0;\n  if (!lineCrossLine && !rangeCrossLine) {\n    return true;\n  }\n  const [start, end] = range3 != null ? range3 : [value, void 0];\n  const isContinuous2 = ContinuousScale.is(scale2);\n  const validStart = checkDatum(start, isContinuous2) != null && !isNaN(scale2.convert(start));\n  const validEnd = checkDatum(end, isContinuous2) != null && !isNaN(scale2.convert(end));\n  if (lineCrossLine && validStart || rangeCrossLine && validStart && validEnd) {\n    return true;\n  }\n  const message = [`Expecting crossLine`];\n  if (rangeCrossLine) {\n    if (!validStart) {\n      message.push(`range start ${stringify(start)}`);\n    }\n    if (!validEnd) {\n      message.push(`${!validStart ? \"and \" : \"\"}range end ${stringify(end)}`);\n    }\n  } else {\n    message.push(`value ${stringify(start)}`);\n  }\n  message.push(`to match the axis scale domain.`);\n  Logger.warnOnce(message.join(\" \"));\n  return false;\n};\n\n// packages/ag-charts-community/src/chart/crossline/crossLineLabelPosition.ts\nvar horizontalCrosslineTranslationDirections = {\n  top: { xTranslationDirection: 0, yTranslationDirection: -1 },\n  bottom: { xTranslationDirection: 0, yTranslationDirection: 1 },\n  left: { xTranslationDirection: -1, yTranslationDirection: 0 },\n  right: { xTranslationDirection: 1, yTranslationDirection: 0 },\n  topLeft: { xTranslationDirection: 1, yTranslationDirection: -1 },\n  topRight: { xTranslationDirection: -1, yTranslationDirection: -1 },\n  bottomLeft: { xTranslationDirection: 1, yTranslationDirection: 1 },\n  bottomRight: { xTranslationDirection: -1, yTranslationDirection: 1 },\n  inside: { xTranslationDirection: 0, yTranslationDirection: 0 },\n  insideLeft: { xTranslationDirection: 1, yTranslationDirection: 0 },\n  insideRight: { xTranslationDirection: -1, yTranslationDirection: 0 },\n  insideTop: { xTranslationDirection: 0, yTranslationDirection: 1 },\n  insideBottom: { xTranslationDirection: 0, yTranslationDirection: -1 },\n  insideTopLeft: { xTranslationDirection: 1, yTranslationDirection: 1 },\n  insideBottomLeft: { xTranslationDirection: 1, yTranslationDirection: -1 },\n  insideTopRight: { xTranslationDirection: -1, yTranslationDirection: 1 },\n  insideBottomRight: { xTranslationDirection: -1, yTranslationDirection: -1 }\n};\nvar verticalCrossLineTranslationDirections = {\n  top: { xTranslationDirection: 1, yTranslationDirection: 0 },\n  bottom: { xTranslationDirection: -1, yTranslationDirection: 0 },\n  left: { xTranslationDirection: 0, yTranslationDirection: -1 },\n  right: { xTranslationDirection: 0, yTranslationDirection: 1 },\n  topLeft: { xTranslationDirection: -1, yTranslationDirection: -1 },\n  topRight: { xTranslationDirection: -1, yTranslationDirection: 1 },\n  bottomLeft: { xTranslationDirection: 1, yTranslationDirection: -1 },\n  bottomRight: { xTranslationDirection: 1, yTranslationDirection: 1 },\n  inside: { xTranslationDirection: 0, yTranslationDirection: 0 },\n  insideLeft: { xTranslationDirection: 0, yTranslationDirection: 1 },\n  insideRight: { xTranslationDirection: 0, yTranslationDirection: -1 },\n  insideTop: { xTranslationDirection: -1, yTranslationDirection: 0 },\n  insideBottom: { xTranslationDirection: 1, yTranslationDirection: 0 },\n  insideTopLeft: { xTranslationDirection: -1, yTranslationDirection: 1 },\n  insideBottomLeft: { xTranslationDirection: 1, yTranslationDirection: 1 },\n  insideTopRight: { xTranslationDirection: -1, yTranslationDirection: -1 },\n  insideBottomRight: { xTranslationDirection: 1, yTranslationDirection: -1 }\n};\nfunction calculateLabelTranslation({\n  yDirection,\n  padding = 0,\n  position = \"top\",\n  bbox\n}) {\n  const crossLineTranslationDirections = yDirection ? horizontalCrosslineTranslationDirections : verticalCrossLineTranslationDirections;\n  const { xTranslationDirection, yTranslationDirection } = crossLineTranslationDirections[position];\n  const w = yDirection ? bbox.width : bbox.height;\n  const h = yDirection ? bbox.height : bbox.width;\n  const xTranslation = xTranslationDirection * (padding + w / 2);\n  const yTranslation = yTranslationDirection * (padding + h / 2);\n  return {\n    xTranslation,\n    yTranslation\n  };\n}\nfunction calculateLabelChartPadding({\n  yDirection,\n  bbox,\n  padding = 0,\n  position = \"top\"\n}) {\n  const chartPadding = {};\n  if (position.startsWith(\"inside\"))\n    return chartPadding;\n  if (position === \"top\" && !yDirection) {\n    chartPadding.top = padding + bbox.height;\n  } else if (position === \"bottom\" && !yDirection) {\n    chartPadding.bottom = padding + bbox.height;\n  } else if (position === \"left\" && yDirection) {\n    chartPadding.left = padding + bbox.width;\n  } else if (position === \"right\" && yDirection) {\n    chartPadding.right = padding + bbox.width;\n  }\n  return chartPadding;\n}\nvar POSITION_TOP_COORDINATES = ({ yDirection, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xEnd / 2, y: yStart };\n  } else {\n    return { x: xEnd, y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart };\n  }\n};\nvar POSITION_LEFT_COORDINATES = ({ yDirection, xStart, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xStart, y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart };\n  } else {\n    return { x: xEnd / 2, y: yStart };\n  }\n};\nvar POSITION_RIGHT_COORDINATES = ({ yDirection, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xEnd, y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart };\n  } else {\n    return { x: xEnd / 2, y: !isNaN(yEnd) ? yEnd : yStart };\n  }\n};\nvar POSITION_BOTTOM_COORDINATES = ({ yDirection, xStart, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xEnd / 2, y: !isNaN(yEnd) ? yEnd : yStart };\n  } else {\n    return { x: xStart, y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart };\n  }\n};\nvar POSITION_INSIDE_COORDINATES = ({ xEnd, yStart, yEnd }) => {\n  return { x: xEnd / 2, y: !isNaN(yEnd) ? (yStart + yEnd) / 2 : yStart };\n};\nvar POSITION_TOP_LEFT_COORDINATES = ({ yDirection, xStart, xEnd, yStart }) => {\n  if (yDirection) {\n    return { x: xStart / 2, y: yStart };\n  } else {\n    return { x: xEnd, y: yStart };\n  }\n};\nvar POSITION_BOTTOM_LEFT_COORDINATES = ({ yDirection, xStart, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xStart, y: !isNaN(yEnd) ? yEnd : yStart };\n  } else {\n    return { x: xStart, y: yStart };\n  }\n};\nvar POSITION_TOP_RIGHT_COORDINATES = ({ yDirection, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xEnd, y: yStart };\n  } else {\n    return { x: xEnd, y: !isNaN(yEnd) ? yEnd : yStart };\n  }\n};\nvar POSITION_BOTTOM_RIGHT_COORDINATES = ({ yDirection, xStart, xEnd, yStart, yEnd }) => {\n  if (yDirection) {\n    return { x: xEnd, y: !isNaN(yEnd) ? yEnd : yStart };\n  } else {\n    return { x: xStart, y: !isNaN(yEnd) ? yEnd : yStart };\n  }\n};\nvar labelDirectionHandling = {\n  top: { c: POSITION_TOP_COORDINATES },\n  bottom: { c: POSITION_BOTTOM_COORDINATES },\n  left: { c: POSITION_LEFT_COORDINATES },\n  right: { c: POSITION_RIGHT_COORDINATES },\n  topLeft: { c: POSITION_TOP_LEFT_COORDINATES },\n  topRight: { c: POSITION_TOP_RIGHT_COORDINATES },\n  bottomLeft: { c: POSITION_BOTTOM_LEFT_COORDINATES },\n  bottomRight: { c: POSITION_BOTTOM_RIGHT_COORDINATES },\n  inside: { c: POSITION_INSIDE_COORDINATES },\n  insideLeft: { c: POSITION_LEFT_COORDINATES },\n  insideRight: { c: POSITION_RIGHT_COORDINATES },\n  insideTop: { c: POSITION_TOP_COORDINATES },\n  insideBottom: { c: POSITION_BOTTOM_COORDINATES },\n  insideTopLeft: { c: POSITION_TOP_LEFT_COORDINATES },\n  insideBottomLeft: { c: POSITION_BOTTOM_LEFT_COORDINATES },\n  insideTopRight: { c: POSITION_TOP_RIGHT_COORDINATES },\n  insideBottomRight: { c: POSITION_BOTTOM_RIGHT_COORDINATES }\n};\n\n// packages/ag-charts-community/src/chart/crossline/cartesianCrossLine.ts\nvar CROSSLINE_LABEL_POSITION = UNION(\n  [\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"topLeft\",\n    \"topRight\",\n    \"bottomLeft\",\n    \"bottomRight\",\n    \"inside\",\n    \"insideLeft\",\n    \"insideRight\",\n    \"insideTop\",\n    \"insideBottom\",\n    \"insideTopLeft\",\n    \"insideBottomLeft\",\n    \"insideTopRight\",\n    \"insideBottomRight\"\n  ],\n  \"crossLine label position\"\n);\nvar CartesianCrossLineLabel = class {\n  constructor() {\n    this.enabled = void 0;\n    this.text = void 0;\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 14;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.padding = 5;\n    this.color = \"rgba(87, 87, 87, 1)\";\n    this.position = void 0;\n    this.rotation = void 0;\n    this.parallel = void 0;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], CartesianCrossLineLabel.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], CartesianCrossLineLabel.prototype, \"text\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], CartesianCrossLineLabel.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], CartesianCrossLineLabel.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], CartesianCrossLineLabel.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], CartesianCrossLineLabel.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], CartesianCrossLineLabel.prototype, \"padding\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], CartesianCrossLineLabel.prototype, \"color\", 2);\n__decorateClass([\n  Validate(CROSSLINE_LABEL_POSITION, { optional: true })\n], CartesianCrossLineLabel.prototype, \"position\", 2);\n__decorateClass([\n  Validate(DEGREE, { optional: true })\n], CartesianCrossLineLabel.prototype, \"rotation\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], CartesianCrossLineLabel.prototype, \"parallel\", 2);\nvar _CartesianCrossLine = class _CartesianCrossLine {\n  constructor() {\n    this.id = createId(this);\n    this.enabled = void 0;\n    this.type = void 0;\n    this.range = void 0;\n    this.value = void 0;\n    this.fill = void 0;\n    this.fillOpacity = void 0;\n    this.stroke = void 0;\n    this.strokeWidth = void 0;\n    this.strokeOpacity = void 0;\n    this.lineDash = void 0;\n    this.label = new CartesianCrossLineLabel();\n    this.scale = void 0;\n    this.clippedRange = [-Infinity, Infinity];\n    this.gridLength = 0;\n    this.sideFlag = -1;\n    this.parallelFlipRotation = 0;\n    this.regularFlipRotation = 0;\n    this.direction = \"x\" /* X */;\n    this.group = new Group({ name: `${this.id}`, layer: true, zIndex: _CartesianCrossLine.LINE_LAYER_ZINDEX });\n    this.labelGroup = new Group({ name: `${this.id}`, layer: true, zIndex: _CartesianCrossLine.LABEL_LAYER_ZINDEX });\n    this.crossLineRange = new Range();\n    this.crossLineLabel = new Text();\n    this.labelPoint = void 0;\n    this.data = [];\n    this.startLine = false;\n    this.endLine = false;\n    this.isRange = false;\n    const { group: group2, labelGroup, crossLineRange, crossLineLabel } = this;\n    group2.append(crossLineRange);\n    labelGroup.append(crossLineLabel);\n    crossLineRange.pointerEvents = 1 /* None */;\n  }\n  update(visible) {\n    const { enabled, data, type, value, range: range3, scale: scale2 } = this;\n    if (!type || !scale2 || !enabled || !visible || !validateCrossLineValues(type, value, range3, scale2) || data.length === 0) {\n      this.group.visible = false;\n      this.labelGroup.visible = false;\n      return;\n    }\n    this.group.visible = visible;\n    this.labelGroup.visible = visible;\n    this.group.zIndex = this.getZIndex(this.isRange);\n    this.updateNodes();\n  }\n  calculateLayout(visible, reversedAxis) {\n    if (!visible) {\n      return;\n    }\n    const dataCreated = this.createNodeData(reversedAxis);\n    if (!dataCreated) {\n      return;\n    }\n    const { sideFlag, gridLength, data } = this;\n    const boxes = [];\n    const x1 = 0;\n    const x2 = sideFlag * gridLength;\n    const y1 = data[0];\n    const y2 = data[1];\n    const crossLineBox = new BBox(Math.min(x1, x2), Math.min(y1, y2), Math.abs(x1 - x2), Math.abs(y1 - y2));\n    boxes.push(crossLineBox);\n    const labelBox = this.computeLabelBBox();\n    if (labelBox) {\n      boxes.push(labelBox);\n    }\n    return BBox.merge(boxes);\n  }\n  updateNodes() {\n    this.updateRangeNode();\n    if (this.label.enabled) {\n      this.updateLabel();\n      this.positionLabel();\n    }\n  }\n  createNodeData(reversedAxis) {\n    var _a, _b, _c;\n    const {\n      scale: scale2,\n      gridLength,\n      sideFlag,\n      direction,\n      label: { position = \"top\" },\n      clippedRange,\n      strokeWidth = 0\n    } = this;\n    this.data = [];\n    if (!scale2) {\n      return false;\n    }\n    const bandwidth = (_a = scale2.bandwidth) != null ? _a : 0;\n    const step = (_b = scale2.step) != null ? _b : 0;\n    const padding = (reversedAxis ? -1 : 1) * (scale2 instanceof BandScale ? (step - bandwidth) / 2 : 0);\n    const [xStart, xEnd] = [0, sideFlag * gridLength];\n    let [yStart, yEnd] = this.getRange();\n    let [clampedYStart, clampedYEnd] = [\n      Number(scale2.convert(yStart, { clampMode: \"clamped\" })) - padding,\n      scale2.convert(yEnd, { clampMode: \"clamped\" }) + bandwidth + padding\n    ];\n    clampedYStart = clampArray(clampedYStart, clippedRange);\n    clampedYEnd = clampArray(clampedYEnd, clippedRange);\n    [yStart, yEnd] = [Number(scale2.convert(yStart)), scale2.convert(yEnd) + bandwidth];\n    const validRange = (yStart === clampedYStart || yEnd === clampedYEnd || clampedYStart !== clampedYEnd) && Math.abs(clampedYEnd - clampedYStart) > 0;\n    if (validRange && clampedYStart > clampedYEnd) {\n      [clampedYStart, clampedYEnd] = [clampedYEnd, clampedYStart];\n      [yStart, yEnd] = [yEnd, yStart];\n    }\n    if (yStart - padding >= clampedYStart)\n      yStart -= padding;\n    if (yEnd + padding <= clampedYEnd)\n      yEnd += padding;\n    this.isRange = validRange;\n    this.startLine = strokeWidth > 0 && yStart >= clampedYStart && yStart <= clampedYStart + padding;\n    this.endLine = strokeWidth > 0 && yEnd >= clampedYEnd - bandwidth - padding && yEnd <= clampedYEnd;\n    if (!validRange && !this.startLine && !this.endLine) {\n      return false;\n    }\n    this.data = [clampedYStart, clampedYEnd];\n    if (this.label.enabled) {\n      const yDirection = direction === \"y\" /* Y */;\n      const { c = POSITION_TOP_COORDINATES } = (_c = labelDirectionHandling[position]) != null ? _c : {};\n      const { x: labelX, y: labelY } = c({\n        yDirection,\n        xStart,\n        xEnd,\n        yStart: clampedYStart,\n        yEnd: clampedYEnd\n      });\n      this.labelPoint = {\n        x: labelX,\n        y: labelY\n      };\n    }\n    return true;\n  }\n  updateRangeNode() {\n    var _a;\n    const {\n      crossLineRange,\n      sideFlag,\n      gridLength,\n      data,\n      startLine,\n      endLine,\n      isRange,\n      fill,\n      fillOpacity,\n      stroke,\n      strokeWidth,\n      lineDash\n    } = this;\n    crossLineRange.x1 = 0;\n    crossLineRange.x2 = sideFlag * gridLength;\n    crossLineRange.y1 = data[0];\n    crossLineRange.y2 = data[1];\n    crossLineRange.startLine = startLine;\n    crossLineRange.endLine = endLine;\n    crossLineRange.isRange = isRange;\n    crossLineRange.fill = fill;\n    crossLineRange.fillOpacity = fillOpacity != null ? fillOpacity : 1;\n    crossLineRange.stroke = stroke;\n    crossLineRange.strokeWidth = strokeWidth != null ? strokeWidth : 1;\n    crossLineRange.strokeOpacity = (_a = this.strokeOpacity) != null ? _a : 1;\n    crossLineRange.lineDash = lineDash;\n  }\n  updateLabel() {\n    const { crossLineLabel, label } = this;\n    if (!label.text) {\n      return;\n    }\n    crossLineLabel.fontStyle = label.fontStyle;\n    crossLineLabel.fontWeight = label.fontWeight;\n    crossLineLabel.fontSize = label.fontSize;\n    crossLineLabel.fontFamily = label.fontFamily;\n    crossLineLabel.fill = label.color;\n    crossLineLabel.text = label.text;\n  }\n  positionLabel() {\n    const {\n      crossLineLabel,\n      labelPoint: { x = void 0, y = void 0 } = {},\n      label: { parallel, rotation, position = \"top\", padding = 0 },\n      direction,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this;\n    if (x === void 0 || y === void 0) {\n      return;\n    }\n    const { defaultRotation, configuredRotation } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    crossLineLabel.rotation = defaultRotation + configuredRotation;\n    crossLineLabel.textBaseline = \"middle\";\n    crossLineLabel.textAlign = \"center\";\n    const bbox = crossLineLabel.computeTransformedBBox();\n    if (!bbox) {\n      return;\n    }\n    const yDirection = direction === \"y\" /* Y */;\n    const { xTranslation, yTranslation } = calculateLabelTranslation({\n      yDirection,\n      padding,\n      position,\n      bbox\n    });\n    crossLineLabel.translationX = x + xTranslation;\n    crossLineLabel.translationY = y + yTranslation;\n  }\n  getZIndex(isRange = false) {\n    if (isRange) {\n      return _CartesianCrossLine.RANGE_LAYER_ZINDEX;\n    }\n    return _CartesianCrossLine.LINE_LAYER_ZINDEX;\n  }\n  getRange() {\n    var _a;\n    const { value, range: range3, scale: scale2 } = this;\n    const isContinuous2 = ContinuousScale.is(scale2);\n    const start = (_a = range3 == null ? void 0 : range3[0]) != null ? _a : value;\n    let end = range3 == null ? void 0 : range3[1];\n    if (!isContinuous2 && end === void 0) {\n      end = start;\n    }\n    if (isContinuous2 && start === end) {\n      end = void 0;\n    }\n    return [start, end];\n  }\n  computeLabelBBox() {\n    const { label } = this;\n    if (!label.enabled) {\n      return void 0;\n    }\n    const tempText = new Text();\n    tempText.fontFamily = label.fontFamily;\n    tempText.fontSize = label.fontSize;\n    tempText.fontStyle = label.fontStyle;\n    tempText.fontWeight = label.fontWeight;\n    tempText.text = label.text;\n    const {\n      labelPoint: { x = void 0, y = void 0 } = {},\n      label: { parallel, rotation, position = \"top\", padding = 0 },\n      direction,\n      parallelFlipRotation,\n      regularFlipRotation\n    } = this;\n    if (x === void 0 || y === void 0) {\n      return void 0;\n    }\n    const { configuredRotation } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    tempText.rotation = configuredRotation;\n    tempText.textBaseline = \"middle\";\n    tempText.textAlign = \"center\";\n    const bbox = tempText.computeTransformedBBox();\n    if (!bbox) {\n      return void 0;\n    }\n    const yDirection = direction === \"y\" /* Y */;\n    const { xTranslation, yTranslation } = calculateLabelTranslation({\n      yDirection,\n      padding,\n      position,\n      bbox\n    });\n    tempText.translationX = x + xTranslation;\n    tempText.translationY = y + yTranslation;\n    return tempText.computeTransformedBBox();\n  }\n  calculatePadding(padding) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const {\n      isRange,\n      startLine,\n      endLine,\n      direction,\n      label: { padding: labelPadding = 0, position = \"top\" }\n    } = this;\n    if (!isRange && !startLine && !endLine) {\n      return;\n    }\n    const crossLineLabelBBox = this.computeLabelBBox();\n    const labelX = crossLineLabelBBox == null ? void 0 : crossLineLabelBBox.x;\n    const labelY = crossLineLabelBBox == null ? void 0 : crossLineLabelBBox.y;\n    if (!crossLineLabelBBox || labelX == void 0 || labelY == void 0) {\n      return;\n    }\n    const chartPadding = calculateLabelChartPadding({\n      yDirection: direction === \"y\" /* Y */,\n      padding: labelPadding,\n      position,\n      bbox: crossLineLabelBBox\n    });\n    padding.left = Math.max((_a = padding.left) != null ? _a : 0, (_b = chartPadding.left) != null ? _b : 0);\n    padding.right = Math.max((_c = padding.right) != null ? _c : 0, (_d = chartPadding.right) != null ? _d : 0);\n    padding.top = Math.max((_e = padding.top) != null ? _e : 0, (_f = chartPadding.top) != null ? _f : 0);\n    padding.bottom = Math.max((_g = padding.bottom) != null ? _g : 0, (_h = chartPadding.bottom) != null ? _h : 0);\n  }\n};\n_CartesianCrossLine.LINE_LAYER_ZINDEX = 8 /* SERIES_CROSSLINE_LINE_ZINDEX */;\n_CartesianCrossLine.RANGE_LAYER_ZINDEX = 3 /* SERIES_CROSSLINE_RANGE_ZINDEX */;\n_CartesianCrossLine.LABEL_LAYER_ZINDEX = 7 /* SERIES_LABEL_ZINDEX */;\n_CartesianCrossLine.className = \"CrossLine\";\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], _CartesianCrossLine.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(UNION([\"range\", \"line\"], \"a crossLine type\"), { optional: true })\n], _CartesianCrossLine.prototype, \"type\", 2);\n__decorateClass([\n  Validate(AND(MATCHING_CROSSLINE_TYPE(\"range\"), ARRAY.restrict({ length: 2 })), {\n    optional: true\n  })\n], _CartesianCrossLine.prototype, \"range\", 2);\n__decorateClass([\n  Validate(MATCHING_CROSSLINE_TYPE(\"value\"), { optional: true })\n], _CartesianCrossLine.prototype, \"value\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], _CartesianCrossLine.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], _CartesianCrossLine.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], _CartesianCrossLine.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(NUMBER, { optional: true })\n], _CartesianCrossLine.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], _CartesianCrossLine.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH, { optional: true })\n], _CartesianCrossLine.prototype, \"lineDash\", 2);\nvar CartesianCrossLine = _CartesianCrossLine;\n\n// packages/ag-charts-community/src/module/moduleMap.ts\nvar ModuleMap = class {\n  constructor() {\n    this.moduleMap = /* @__PURE__ */ new Map();\n  }\n  addModule(module, moduleFactory) {\n    if (this.moduleMap.has(module.optionsKey)) {\n      throw new Error(`AG Charts - module already initialised: ${module.optionsKey}`);\n    }\n    this.moduleMap.set(module.optionsKey, moduleFactory(module));\n  }\n  removeModule(module) {\n    var _a;\n    const moduleKey = isString(module) ? module : module.optionsKey;\n    (_a = this.moduleMap.get(moduleKey)) == null ? void 0 : _a.destroy();\n    this.moduleMap.delete(moduleKey);\n  }\n  isModuleEnabled(module) {\n    return this.moduleMap.has(isString(module) ? module : module.optionsKey);\n  }\n  getModule(module) {\n    return this.moduleMap.get(isString(module) ? module : module.optionsKey);\n  }\n  get modules() {\n    return this.moduleMap.values();\n  }\n  mapValues(callback) {\n    return Array.from(this.moduleMap.values()).map(callback);\n  }\n  destroy() {\n    for (const optionsKey of this.moduleMap.keys()) {\n      this.removeModule({ optionsKey });\n    }\n  }\n};\n\n// packages/ag-charts-community/src/motion/states.ts\nvar StateMachine = class {\n  constructor(initialState, states, preTransitionCb) {\n    this.states = states;\n    this.preTransitionCb = preTransitionCb;\n    this.debug = Debug.create(true, \"animation\");\n    this.state = initialState;\n    this.debug(`%c${this.constructor.name} | init -> ${initialState}`, \"color: green\");\n  }\n  transition(event, data) {\n    var _a, _b;\n    const currentStateConfig = this.states[this.state];\n    const destinationTransition = currentStateConfig == null ? void 0 : currentStateConfig[event];\n    if (!destinationTransition) {\n      this.debug(`%c${this.constructor.name} | ${this.state} -> ${event} -> ${this.state}`, \"color: grey\");\n      return;\n    }\n    let destinationState = this.state;\n    if (typeof destinationTransition === \"string\") {\n      destinationState = destinationTransition;\n    } else if (typeof destinationTransition === \"object\") {\n      destinationState = destinationTransition.target;\n    }\n    this.debug(`%c${this.constructor.name} | ${this.state} -> ${event} -> ${destinationState}`, \"color: green\");\n    (_a = this.preTransitionCb) == null ? void 0 : _a.call(this, this.state, destinationState);\n    this.state = destinationState;\n    if (typeof destinationTransition === \"function\") {\n      destinationTransition(data);\n    } else if (typeof destinationTransition === \"object\") {\n      (_b = destinationTransition.action) == null ? void 0 : _b.call(destinationTransition, data);\n    }\n    return this.state;\n  }\n};\n\n// packages/ag-charts-community/src/scale/logScale.ts\nvar identity = (x) => x;\nvar _LogScale = class _LogScale extends ContinuousScale {\n  constructor() {\n    super([1, 10], [0, 1]);\n    this.type = \"log\";\n    this.base = 10;\n    this.baseLog = identity;\n    this.basePow = identity;\n    this.log = (x) => {\n      const start = Math.min(this.domain[0], this.domain[1]);\n      return start >= 0 ? this.baseLog(x) : -this.baseLog(-x);\n    };\n    this.pow = (x) => {\n      const start = Math.min(this.domain[0], this.domain[1]);\n      return start >= 0 ? this.basePow(x) : -this.basePow(-x);\n    };\n    this.defaultClampMode = \"clamped\";\n  }\n  toDomain(d) {\n    return d;\n  }\n  transform(x) {\n    const start = Math.min(this.domain[0], this.domain[1]);\n    return start >= 0 ? Math.log(x) : -Math.log(-x);\n  }\n  transformInvert(x) {\n    const start = Math.min(this.domain[0], this.domain[1]);\n    return start >= 0 ? Math.exp(x) : -Math.exp(-x);\n  }\n  refresh() {\n    if (this.base <= 0) {\n      this.base = 0;\n      Logger.warnOnce(\"expecting a finite Number greater than to 0\");\n    }\n    super.refresh();\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    this.updateLogFn();\n    this.updatePowFn();\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  updateLogFn() {\n    const { base } = this;\n    let log;\n    if (base === 10) {\n      log = Math.log10;\n    } else if (base === Math.E) {\n      log = Math.log;\n    } else if (base === 2) {\n      log = Math.log2;\n    } else {\n      const logBase = Math.log(base);\n      log = (x) => Math.log(x) / logBase;\n    }\n    this.baseLog = log;\n  }\n  updatePowFn() {\n    const { base } = this;\n    let pow;\n    if (base === 10) {\n      pow = _LogScale.pow10;\n    } else if (base === Math.E) {\n      pow = Math.exp;\n    } else {\n      pow = (x) => Math.pow(base, x);\n    }\n    this.basePow = pow;\n  }\n  updateNiceDomain() {\n    const [d0, d1] = this.domain;\n    const roundStart = d0 > d1 ? Math.ceil : Math.floor;\n    const roundStop = d1 < d0 ? Math.floor : Math.ceil;\n    const n0 = this.pow(roundStart(this.log(d0)));\n    const n1 = this.pow(roundStop(this.log(d1)));\n    this.niceDomain = [n0, n1];\n  }\n  static pow10(x) {\n    return x >= 0 ? Math.pow(10, x) : 1 / Math.pow(10, -x);\n  }\n  ticks() {\n    var _a;\n    const count2 = (_a = this.tickCount) != null ? _a : 10;\n    if (!this.domain || this.domain.length < 2 || count2 < 1) {\n      return [];\n    }\n    this.refresh();\n    const base = this.base;\n    const [d0, d1] = this.getDomain();\n    const start = Math.min(d0, d1);\n    const stop = Math.max(d0, d1);\n    let p0 = this.log(start);\n    let p1 = this.log(stop);\n    if (this.interval) {\n      const step = Math.abs(this.interval);\n      const absDiff = Math.abs(p1 - p0);\n      let ticks2 = range(p0, p1, Math.min(absDiff, step));\n      ticks2 = createNumericTicks(\n        ticks2.fractionDigits,\n        ticks2.map((x) => this.pow(x)).filter((t) => t >= start && t <= stop)\n      );\n      if (!this.isDenseInterval({ start, stop, interval: step, count: ticks2.length })) {\n        return ticks2;\n      }\n    }\n    const isBaseInteger = base % 1 === 0;\n    const isDiffLarge = p1 - p0 >= count2;\n    if (!isBaseInteger || isDiffLarge) {\n      let ticks2 = ticks_default(p0, p1, Math.min(p1 - p0, count2));\n      ticks2 = createNumericTicks(\n        ticks2.fractionDigits,\n        ticks2.map((x) => this.pow(x))\n      );\n      return ticks2;\n    }\n    const ticks = [];\n    const isPositive = start > 0;\n    p0 = Math.floor(p0) - 1;\n    p1 = Math.round(p1) + 1;\n    const min = Math.min(...this.range);\n    const max = Math.max(...this.range);\n    const availableSpacing = (max - min) / count2;\n    let lastTickPosition = Infinity;\n    for (let p = p0; p <= p1; p++) {\n      const nextMagnitudeTickPosition = this.convert(this.pow(p + 1));\n      for (let k = 1; k < base; k++) {\n        const q = isPositive ? k : base - k + 1;\n        const t = this.pow(p) * q;\n        const tickPosition = this.convert(t);\n        const prevSpacing = Math.abs(lastTickPosition - tickPosition);\n        const nextSpacing = Math.abs(tickPosition - nextMagnitudeTickPosition);\n        const fits = prevSpacing >= availableSpacing && nextSpacing >= availableSpacing;\n        if (t >= start && t <= stop && (k === 1 || fits)) {\n          ticks.push(t);\n          lastTickPosition = tickPosition;\n        }\n      }\n    }\n    return ticks;\n  }\n  tickFormat({\n    count: count2,\n    ticks,\n    specifier\n  }) {\n    const { base } = this;\n    if (specifier == null) {\n      specifier = base === 10 ? \".0e\" : \",\";\n    }\n    if (typeof specifier === \"string\") {\n      specifier = format(specifier);\n    }\n    if (count2 === Infinity) {\n      return specifier;\n    }\n    if (ticks == null) {\n      this.ticks();\n    }\n    return (d) => {\n      return specifier(d);\n    };\n  }\n};\n__decorateClass([\n  Invalidating\n], _LogScale.prototype, \"base\", 2);\nvar LogScale = _LogScale;\n\n// packages/ag-charts-community/src/util/timeFormat.ts\nvar CONSTANTS = {\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n};\nfunction dayOfYear(date, startOfYear = new Date(date.getFullYear(), 0, 1)) {\n  const startOffset = date.getTimezoneOffset() - startOfYear.getTimezoneOffset();\n  const timeDiff = date.getTime() - startOfYear.getTime() + startOffset * 6e4;\n  const timeOneDay = 36e5 * 24;\n  return Math.floor(timeDiff / timeOneDay);\n}\nfunction weekOfYear(date, startDay) {\n  const startOfYear = new Date(date.getFullYear(), 0, 1);\n  const startOfYearDay = startOfYear.getDay();\n  const firstWeekStartOffset = (startDay - startOfYearDay + 7) % 7;\n  const startOffset = new Date(date.getFullYear(), 0, firstWeekStartOffset + 1);\n  if (startOffset <= date) {\n    return Math.floor(dayOfYear(date, startOffset) / 7) + 1;\n  }\n  return 0;\n}\nvar SUNDAY = 0;\nvar MONDAY = 1;\nvar THURSDAY = 4;\nfunction isoWeekOfYear(date, year2 = date.getFullYear()) {\n  const firstOfYear = new Date(year2, 0, 1);\n  const firstOfYearDay = firstOfYear.getDay();\n  const firstThursdayOffset = (THURSDAY - firstOfYearDay + 7) % 7;\n  const startOffset = new Date(year2, 0, firstThursdayOffset - (THURSDAY - MONDAY) + 1);\n  if (startOffset <= date) {\n    return Math.floor(dayOfYear(date, startOffset) / 7) + 1;\n  }\n  return isoWeekOfYear(date, year2 - 1);\n}\nfunction timezone(date) {\n  const offset4 = date.getTimezoneOffset();\n  const unsignedOffset = Math.abs(offset4);\n  const sign = offset4 > 0 ? \"-\" : \"+\";\n  return `${sign}${pad(Math.floor(unsignedOffset / 60), 2, \"0\")}${pad(Math.floor(unsignedOffset % 60), 2, \"0\")}`;\n}\nvar FORMATTERS = {\n  a: (d) => CONSTANTS.shortDays[d.getDay()],\n  A: (d) => CONSTANTS.days[d.getDay()],\n  b: (d) => CONSTANTS.shortMonths[d.getMonth()],\n  B: (d) => CONSTANTS.months[d.getMonth()],\n  c: \"%x, %X\",\n  d: (d, p) => pad(d.getDate(), 2, p != null ? p : \"0\"),\n  e: \"%_d\",\n  f: (d, p) => pad(d.getMilliseconds() * 1e3, 6, p != null ? p : \"0\"),\n  H: (d, p) => pad(d.getHours(), 2, p != null ? p : \"0\"),\n  I: (d, p) => {\n    const hours = d.getHours() % 12;\n    return hours === 0 ? \"12\" : pad(hours, 2, p != null ? p : \"0\");\n  },\n  j: (d, p) => pad(dayOfYear(d) + 1, 3, p != null ? p : \"0\"),\n  m: (d, p) => pad(d.getMonth() + 1, 2, p != null ? p : \"0\"),\n  M: (d, p) => pad(d.getMinutes(), 2, p != null ? p : \"0\"),\n  L: (d, p) => pad(d.getMilliseconds(), 3, p != null ? p : \"0\"),\n  p: (d) => d.getHours() < 12 ? \"AM\" : \"PM\",\n  Q: (d) => String(d.getTime()),\n  s: (d) => String(Math.floor(d.getTime() / 1e3)),\n  S: (d, p) => pad(d.getSeconds(), 2, p != null ? p : \"0\"),\n  u: (d) => {\n    let day2 = d.getDay();\n    if (day2 < 1)\n      day2 += 7;\n    return String(day2 % 7);\n  },\n  U: (d, p) => pad(weekOfYear(d, SUNDAY), 2, p != null ? p : \"0\"),\n  V: (d, p) => pad(isoWeekOfYear(d), 2, p != null ? p : \"0\"),\n  w: (d, p) => pad(d.getDay(), 2, p != null ? p : \"0\"),\n  W: (d, p) => pad(weekOfYear(d, MONDAY), 2, p != null ? p : \"0\"),\n  x: \"%-m/%-d/%Y\",\n  X: \"%-I:%M:%S %p\",\n  y: (d, p) => pad(d.getFullYear() % 100, 2, p != null ? p : \"0\"),\n  Y: (d, p) => pad(d.getFullYear(), 4, p != null ? p : \"0\"),\n  Z: (d) => timezone(d),\n  \"%\": () => \"%\"\n};\nvar PADS = {\n  _: \" \",\n  \"0\": \"0\",\n  \"-\": \"\"\n};\nfunction pad(value, size, padChar) {\n  const output = String(Math.floor(value));\n  if (output.length >= size) {\n    return output;\n  }\n  return `${padChar.repeat(size - output.length)}${output}`;\n}\nfunction buildFormatter(formatString) {\n  const formatParts = [];\n  while (formatString.length > 0) {\n    let nextEscapeIdx = formatString.indexOf(\"%\");\n    if (nextEscapeIdx !== 0) {\n      const literalPart = nextEscapeIdx > 0 ? formatString.substring(0, nextEscapeIdx) : formatString;\n      formatParts.push(literalPart);\n    }\n    if (nextEscapeIdx < 0)\n      break;\n    const maybePadSpecifier = formatString[nextEscapeIdx + 1];\n    const maybePad = PADS[maybePadSpecifier];\n    if (maybePad != null) {\n      nextEscapeIdx++;\n    }\n    const maybeFormatterSpecifier = formatString[nextEscapeIdx + 1];\n    const maybeFormatter = FORMATTERS[maybeFormatterSpecifier];\n    if (typeof maybeFormatter === \"function\") {\n      formatParts.push([maybeFormatter, maybePad]);\n    } else if (typeof maybeFormatter === \"string\") {\n      const formatter = buildFormatter(maybeFormatter);\n      formatParts.push([formatter, maybePad]);\n    } else {\n      formatParts.push(`${maybePad != null ? maybePad : \"\"}${maybeFormatterSpecifier}`);\n    }\n    formatString = formatString.substring(nextEscapeIdx + 2);\n  }\n  return (dateTime) => {\n    const dateTimeAsDate = typeof dateTime === \"number\" ? new Date(dateTime) : dateTime;\n    return formatParts.map((c) => typeof c === \"string\" ? c : c[0](dateTimeAsDate, c[1])).join(\"\");\n  };\n}\n\n// packages/ag-charts-community/src/scale/timeScale.ts\nvar formatStrings = {\n  [0 /* MILLISECOND */]: \".%L\",\n  [1 /* SECOND */]: \":%S\",\n  [2 /* MINUTE */]: \"%I:%M\",\n  [3 /* HOUR */]: \"%I %p\",\n  [4 /* WEEK_DAY */]: \"%a\",\n  [5 /* SHORT_MONTH */]: \"%b %d\",\n  [6 /* MONTH */]: \"%B\",\n  [7 /* SHORT_YEAR */]: \"%y\",\n  [8 /* YEAR */]: \"%Y\"\n};\nfunction toNumber(x) {\n  return x instanceof Date ? x.getTime() : x;\n}\nvar TimeScale = class extends ContinuousScale {\n  constructor() {\n    super([new Date(2022, 11, 7), new Date(2022, 11, 8)], [0, 1]);\n    this.type = \"time\";\n    this.year = year_default;\n    this.month = month_default;\n    this.week = week_default;\n    this.day = day_default;\n    this.hour = hour_default;\n    this.minute = minute_default;\n    this.second = second_default;\n    this.millisecond = millisecond_default;\n    /**\n     * Array of default tick intervals in the following format:\n     *\n     *     [\n     *         interval (unit of time),\n     *         number of units (step),\n     *         the length of that number of units in milliseconds\n     *     ]\n     */\n    this.tickIntervals = [\n      [this.second, 1, durationSecond],\n      [this.second, 5, 5 * durationSecond],\n      [this.second, 15, 15 * durationSecond],\n      [this.second, 30, 30 * durationSecond],\n      [this.minute, 1, durationMinute],\n      [this.minute, 5, 5 * durationMinute],\n      [this.minute, 15, 15 * durationMinute],\n      [this.minute, 30, 30 * durationMinute],\n      [this.hour, 1, durationHour],\n      [this.hour, 3, 3 * durationHour],\n      [this.hour, 6, 6 * durationHour],\n      [this.hour, 12, 12 * durationHour],\n      [this.day, 1, durationDay],\n      [this.day, 2, 2 * durationDay],\n      [this.week, 1, durationWeek],\n      [this.week, 2, 2 * durationWeek],\n      [this.week, 3, 3 * durationWeek],\n      [this.month, 1, durationMonth],\n      [this.month, 2, 2 * durationMonth],\n      [this.month, 3, 3 * durationMonth],\n      [this.month, 4, 4 * durationMonth],\n      [this.month, 6, 6 * durationMonth],\n      [this.year, 1, durationYear]\n    ];\n  }\n  toDomain(d) {\n    return new Date(d);\n  }\n  calculateDefaultTickFormat(ticks = []) {\n    let defaultTimeFormat = 8 /* YEAR */;\n    const updateFormat = (format2) => {\n      if (format2 < defaultTimeFormat) {\n        defaultTimeFormat = format2;\n      }\n    };\n    for (const value of ticks) {\n      const format2 = this.getLowestGranularityFormat(value);\n      updateFormat(format2);\n    }\n    const firstTick = toNumber(ticks[0]);\n    const lastTick = toNumber(ticks[ticks.length - 1]);\n    const startYear = new Date(firstTick).getFullYear();\n    const stopYear = new Date(lastTick).getFullYear();\n    const yearChange = stopYear - startYear > 0;\n    return this.buildFormatString(defaultTimeFormat, yearChange);\n  }\n  buildFormatString(defaultTimeFormat, yearChange) {\n    let formatStringArray = [formatStrings[defaultTimeFormat]];\n    let timeEndIndex = 0;\n    const domain = this.getDomain();\n    const start = Math.min(...domain.map(toNumber));\n    const stop = Math.max(...domain.map(toNumber));\n    const extent2 = stop - start;\n    switch (defaultTimeFormat) {\n      case 1 /* SECOND */:\n        if (extent2 / durationMinute > 1) {\n          formatStringArray.push(formatStrings[2 /* MINUTE */]);\n        }\n      case 2 /* MINUTE */:\n        if (extent2 / durationHour > 1) {\n          formatStringArray.push(formatStrings[3 /* HOUR */]);\n        }\n      case 3 /* HOUR */:\n        timeEndIndex = formatStringArray.length;\n        if (extent2 / durationDay > 1) {\n          formatStringArray.push(formatStrings[4 /* WEEK_DAY */]);\n        }\n      case 4 /* WEEK_DAY */:\n        if (extent2 / durationWeek > 1 || yearChange) {\n          const weekDayIndex = formatStringArray.indexOf(formatStrings[4 /* WEEK_DAY */]);\n          if (weekDayIndex > -1) {\n            formatStringArray.splice(weekDayIndex, 1, formatStrings[5 /* SHORT_MONTH */]);\n          }\n        }\n      case 5 /* SHORT_MONTH */:\n      case 6 /* MONTH */:\n        if (extent2 / durationYear > 1 || yearChange) {\n          formatStringArray.push(formatStrings[8 /* YEAR */]);\n        }\n      default:\n        break;\n    }\n    if (timeEndIndex < formatStringArray.length) {\n      formatStringArray = [\n        ...formatStringArray.slice(0, timeEndIndex),\n        formatStringArray.slice(timeEndIndex).join(\" \")\n      ];\n    }\n    if (timeEndIndex > 0) {\n      formatStringArray = [\n        ...formatStringArray.slice(0, timeEndIndex).reverse(),\n        ...formatStringArray.slice(timeEndIndex)\n      ];\n      if (timeEndIndex < formatStringArray.length) {\n        formatStringArray.splice(timeEndIndex, 0, \" \");\n      }\n    }\n    return formatStringArray.join(\"\");\n  }\n  getLowestGranularityFormat(value) {\n    if (this.second.floor(value) < value) {\n      return 0 /* MILLISECOND */;\n    } else if (this.minute.floor(value) < value) {\n      return 1 /* SECOND */;\n    } else if (this.hour.floor(value) < value) {\n      return 2 /* MINUTE */;\n    } else if (this.day.floor(value) < value) {\n      return 3 /* HOUR */;\n    } else if (this.month.floor(value) < value) {\n      if (this.week.floor(value) < value) {\n        return 4 /* WEEK_DAY */;\n      }\n      return 5 /* SHORT_MONTH */;\n    } else if (this.year.floor(value) < value) {\n      return 6 /* MONTH */;\n    }\n    return 8 /* YEAR */;\n  }\n  defaultTickFormat(ticks) {\n    const formatString = this.calculateDefaultTickFormat(ticks);\n    return (date) => buildFormatter(formatString)(date);\n  }\n  /**\n   * @param options Tick interval options.\n   * @param options.start The start time (timestamp).\n   * @param options.stop The end time (timestamp).\n   * @param options.count Number of intervals between ticks.\n   */\n  getTickInterval({\n    start,\n    stop,\n    count: count2,\n    minCount,\n    maxCount\n  }) {\n    const { tickIntervals } = this;\n    let countableTimeInterval;\n    let step;\n    const tickCount = count2 != null ? count2 : ContinuousScale.defaultTickCount;\n    const target = Math.abs(stop - start) / Math.max(tickCount, 1);\n    let i = 0;\n    while (i < tickIntervals.length && target > tickIntervals[i][2]) {\n      i++;\n    }\n    if (i === 0) {\n      step = Math.max(tickStep(start, stop, tickCount, minCount, maxCount), 1);\n      countableTimeInterval = this.millisecond;\n    } else if (i === tickIntervals.length) {\n      const y0 = start / durationYear;\n      const y1 = stop / durationYear;\n      step = tickStep(y0, y1, tickCount, minCount, maxCount);\n      countableTimeInterval = this.year;\n    } else {\n      const diff0 = target - tickIntervals[i - 1][2];\n      const diff1 = tickIntervals[i][2] - target;\n      const index = diff0 < diff1 ? i - 1 : i;\n      [countableTimeInterval, step] = tickIntervals[index];\n    }\n    return countableTimeInterval.every(step);\n  }\n  invert(y) {\n    return new Date(super.invert(y));\n  }\n  /**\n   * Returns uniformly-spaced dates that represent the scale's domain.\n   */\n  ticks() {\n    if (!this.domain || this.domain.length < 2) {\n      return [];\n    }\n    this.refresh();\n    const [t0, t1] = this.getDomain().map(toNumber);\n    const start = Math.min(t0, t1);\n    const stop = Math.max(t0, t1);\n    if (this.interval !== void 0) {\n      return this.getTicksForInterval({ start, stop });\n    }\n    if (this.nice) {\n      const { tickCount } = this;\n      if (tickCount === 2) {\n        return this.niceDomain;\n      }\n      if (tickCount === 1) {\n        return this.niceDomain.slice(0, 1);\n      }\n    }\n    return this.getDefaultTicks({ start, stop });\n  }\n  getDefaultTicks({ start, stop }) {\n    const t = this.getTickInterval({\n      start,\n      stop,\n      count: this.tickCount,\n      minCount: this.minTickCount,\n      maxCount: this.maxTickCount\n    });\n    return t ? t.range(new Date(start), new Date(stop)) : [];\n  }\n  getTicksForInterval({ start, stop }) {\n    const { interval, tickIntervals } = this;\n    if (!interval) {\n      return [];\n    }\n    if (interval instanceof TimeInterval) {\n      const ticks2 = interval.range(new Date(start), new Date(stop));\n      if (this.isDenseInterval({ start, stop, interval, count: ticks2.length })) {\n        return this.getDefaultTicks({ start, stop });\n      }\n      return ticks2;\n    }\n    const absInterval = Math.abs(interval);\n    if (this.isDenseInterval({ start, stop, interval: absInterval })) {\n      return this.getDefaultTicks({ start, stop });\n    }\n    const reversedInterval = [...tickIntervals];\n    reversedInterval.reverse();\n    const timeInterval = reversedInterval.find((tickInterval) => absInterval % tickInterval[2] === 0);\n    if (timeInterval) {\n      const i = timeInterval[0].every(absInterval / (timeInterval[2] / timeInterval[1]));\n      return i.range(new Date(start), new Date(stop));\n    }\n    let date = new Date(start);\n    const stopDate = new Date(stop);\n    const ticks = [];\n    while (date <= stopDate) {\n      ticks.push(date);\n      date = new Date(date);\n      date.setMilliseconds(date.getMilliseconds() + absInterval);\n    }\n    return ticks;\n  }\n  /**\n   * Returns a time format function suitable for displaying tick values.\n   * @param specifier If the specifier string is provided, this method is equivalent to\n   * the {@link TimeLocaleObject.format} method.\n   * If no specifier is provided, this method returns the default time format function.\n   */\n  tickFormat({ ticks, specifier }) {\n    return specifier == void 0 ? this.defaultTickFormat(ticks) : buildFormatter(specifier);\n  }\n  update() {\n    if (!this.domain || this.domain.length < 2) {\n      return;\n    }\n    if (this.nice) {\n      this.updateNiceDomain();\n    }\n  }\n  /**\n   * Extends the domain so that it starts and ends on nice round values.\n   * This method typically modifies the scale’s domain, and may only extend the bounds to the nearest round value.\n   */\n  updateNiceDomain() {\n    const maxAttempts = 4;\n    let [d0, d1] = this.domain;\n    for (let i = 0; i < maxAttempts; i++) {\n      this.updateNiceDomainIteration(d0, d1);\n      const [n0, n1] = this.niceDomain;\n      if (toNumber(d0) === toNumber(n0) && toNumber(d1) === toNumber(n1)) {\n        break;\n      }\n      d0 = n0;\n      d1 = n1;\n    }\n  }\n  updateNiceDomainIteration(d0, d1) {\n    const start = Math.min(toNumber(d0), toNumber(d1));\n    const stop = Math.max(toNumber(d0), toNumber(d1));\n    const isReversed = d0 > d1;\n    const { interval } = this;\n    let i;\n    if (interval instanceof TimeInterval) {\n      i = interval;\n    } else {\n      const tickCount = typeof interval === \"number\" ? (stop - start) / Math.max(interval, 1) : this.tickCount;\n      i = this.getTickInterval({\n        start,\n        stop,\n        count: tickCount,\n        minCount: this.minTickCount,\n        maxCount: this.maxTickCount\n      });\n    }\n    if (i) {\n      const intervalRange = i.range(new Date(start), new Date(stop), true);\n      const domain = isReversed ? [...intervalRange].reverse() : intervalRange;\n      const n0 = domain[0];\n      const n1 = domain[domain.length - 1];\n      this.niceDomain = [n0, n1];\n    }\n  }\n};\n\n// packages/ag-charts-community/src/sparklines-util.ts\nvar sparklines_util_exports = {};\n__export(sparklines_util_exports, {\n  Color: () => Color,\n  DELETE: () => DELETE,\n  Logger: () => Logger,\n  Padding: () => Padding,\n  angleBetween: () => angleBetween,\n  checkDatum: () => checkDatum,\n  clamp: () => clamp2,\n  clampArray: () => clampArray,\n  countFractionDigits: () => countFractionDigits,\n  createId: () => createId,\n  extent: () => extent,\n  isContinuous: () => isContinuous,\n  isDate: () => isDate2,\n  isDiscrete: () => isDiscrete,\n  isEqual: () => isEqual,\n  isNegative: () => isNegative,\n  isNumber: () => isNumber2,\n  isNumberEqual: () => isEqual,\n  isReal: () => isReal,\n  isString: () => isString2,\n  isStringObject: () => isStringObject,\n  jsonApply: () => jsonApply,\n  jsonClone: () => jsonClone,\n  jsonDiff: () => jsonDiff,\n  jsonMerge: () => jsonMerge,\n  jsonWalk: () => jsonWalk,\n  mod: () => mod,\n  normalisedExtent: () => normalisedExtent,\n  normalisedExtentWithMetadata: () => normalisedExtentWithMetadata,\n  normalizeAngle180: () => normalizeAngle180,\n  normalizeAngle360: () => normalizeAngle360,\n  normalizeAngle360Inclusive: () => normalizeAngle360Inclusive,\n  range: () => range,\n  resetIds: () => resetIds,\n  round: () => round,\n  sanitizeHtml: () => sanitizeHtml,\n  tickFormat: () => tickFormat,\n  tickStep: () => tickStep,\n  ticks: () => ticks_default,\n  toDegrees: () => toDegrees,\n  toFixed: () => toFixed,\n  toRadians: () => toRadians,\n  toReal: () => toReal,\n  zipObject: () => zipObject\n});\n\n// packages/ag-charts-community/src/util/padding.ts\nvar Padding = class {\n  constructor(top = 0, right = top, bottom = top, left = right) {\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n    this.left = left;\n  }\n  clear() {\n    this.top = this.right = this.bottom = this.left = 0;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Padding.prototype, \"top\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Padding.prototype, \"right\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Padding.prototype, \"bottom\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Padding.prototype, \"left\", 2);\n\n// packages/ag-charts-community/src/util/sanitize.ts\nvar element = null;\nfunction sanitizeHtml(text) {\n  if (text == null) {\n    return void 0;\n  } else if (text === \"\") {\n    return \"\";\n  }\n  element != null ? element : element = document.createElement(\"div\");\n  element.textContent = String(text);\n  return element.innerHTML;\n}\n\n// packages/ag-charts-community/src/util/equal.ts\nfunction areArrayNumbersEqual(arrA, arrB) {\n  return arrA.length === arrB.length && arrA.every((item, i) => Number(item) === Number(arrB[i]));\n}\n\n// packages/ag-charts-community/src/util/labelPlacement.ts\nfunction circleRectOverlap(c, x, y, w, h) {\n  let edgeX = c.x;\n  if (c.x < x) {\n    edgeX = x;\n  } else if (c.x > x + w) {\n    edgeX = x + w;\n  }\n  let edgeY = c.y;\n  if (c.y < y) {\n    edgeY = y;\n  } else if (c.y > y + h) {\n    edgeY = y + h;\n  }\n  const dx = c.x - edgeX;\n  const dy = c.y - edgeY;\n  const d = Math.sqrt(dx * dx + dy * dy);\n  return d <= c.size * 0.5;\n}\nfunction rectRectOverlap(r1, x2, y2, w2, h2) {\n  const xOverlap = r1.x + r1.width > x2 && r1.x < x2 + w2;\n  const yOverlap = r1.y + r1.height > y2 && r1.y < y2 + h2;\n  return xOverlap && yOverlap;\n}\nfunction rectContainsRect(r1, r2x, r2y, r2w, r2h) {\n  return r2x + r2w < r1.x + r1.width && r2x > r1.x && r2y > r1.y && r2y + r2h < r1.y + r1.height;\n}\nfunction isPointLabelDatum(x) {\n  return x != null && typeof x.point === \"object\" && typeof x.label === \"object\";\n}\nfunction placeLabels(data, bounds, padding = 5) {\n  const result = [];\n  data = data.map((d) => d.slice().sort((a, b) => b.point.size - a.point.size));\n  for (let j = 0; j < data.length; j++) {\n    const labels = result[j] = [];\n    const datum = data[j];\n    if (!((datum == null ? void 0 : datum.length) && datum[0].label)) {\n      continue;\n    }\n    for (let i = 0, ln = datum.length; i < ln; i++) {\n      const d = datum[i];\n      const l = d.label;\n      const r = d.point.size * 0.5;\n      const x = d.point.x - l.width * 0.5;\n      const y = d.point.y - r - l.height - padding;\n      const { width, height } = l;\n      const withinBounds = !bounds || rectContainsRect(bounds, x, y, width, height);\n      if (!withinBounds) {\n        continue;\n      }\n      const overlapPoints = data.some(\n        (datum2) => datum2.some((d2) => circleRectOverlap(d2.point, x, y, width, height))\n      );\n      if (overlapPoints) {\n        continue;\n      }\n      const overlapLabels = result.some((labels2) => labels2.some((l2) => rectRectOverlap(l2, x, y, width, height)));\n      if (overlapLabels) {\n        continue;\n      }\n      labels.push({\n        index: i,\n        text: l.text,\n        x,\n        y,\n        width,\n        height,\n        datum: d\n      });\n    }\n  }\n  return result;\n}\nfunction axisLabelsOverlap(data, padding) {\n  const result = [];\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const {\n      point: { x, y },\n      label: { text }\n    } = datum;\n    let {\n      label: { width, height }\n    } = datum;\n    width += padding != null ? padding : 0;\n    height += padding != null ? padding : 0;\n    const overlapLabels = result.some((l) => {\n      return rectRectOverlap(l, x, y, width, height);\n    });\n    if (overlapLabels) {\n      return true;\n    }\n    result.push({\n      index: i,\n      text,\n      x,\n      y,\n      width,\n      height,\n      datum\n    });\n  }\n  return false;\n}\n\n// packages/ag-charts-community/src/chart/axis/axisGridLine.ts\nvar GRID_STYLE_KEYS = [\"stroke\", \"lineDash\"];\nvar GRID_STYLE = ARRAY_OF(\n  (value) => isObject(value) && Object.keys(value).every((key) => GRID_STYLE_KEYS.includes(key)),\n  \"objects with gridline style properties such as 'stroke' or 'lineDash'\"\n);\nvar AxisGridLine = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.style = [\n      {\n        stroke: void 0,\n        lineDash: []\n      }\n    ];\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisGridLine.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisGridLine.prototype, \"width\", 2);\n__decorateClass([\n  Validate(GRID_STYLE)\n], AxisGridLine.prototype, \"style\", 2);\n\n// packages/ag-charts-community/src/util/default.ts\nfunction Default(defaultValue, replaces = [void 0]) {\n  return addTransformToInstanceProperty((_, __, v) => {\n    if (replaces.includes(v)) {\n      return defaultValue;\n    }\n    return v;\n  });\n}\n\n// packages/ag-charts-community/src/chart/axis/axisLabel.ts\nvar AxisLabel = class {\n  constructor() {\n    this.enabled = true;\n    this.autoWrap = false;\n    this.maxWidth = void 0;\n    this.maxHeight = void 0;\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.padding = 5;\n    this.minSpacing = NaN;\n    this.color = \"rgba(87, 87, 87, 1)\";\n    this.rotation = void 0;\n    this.avoidCollisions = true;\n    this.mirrored = false;\n    this.parallel = false;\n    /**\n     * In case {@param value} is a number, the {@param fractionDigits} parameter will\n     * be provided as well. The `fractionDigits` corresponds to the number of fraction\n     * digits used by the tick step. For example, if the tick step is `0.0005`,\n     * the `fractionDigits` is 4.\n     */\n    this.formatter = void 0;\n  }\n  /**\n   * The side of the axis line to position the labels on.\n   * -1 = left (default)\n   * 1 = right\n   */\n  getSideFlag() {\n    return this.mirrored ? 1 : -1;\n  }\n  getFont() {\n    return getFont(this);\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisLabel.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], AxisLabel.prototype, \"autoWrap\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], AxisLabel.prototype, \"maxWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], AxisLabel.prototype, \"maxHeight\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], AxisLabel.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], AxisLabel.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(NUMBER.restrict({ min: 1 }))\n], AxisLabel.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], AxisLabel.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisLabel.prototype, \"padding\", 2);\n__decorateClass([\n  Validate(NUMBER_OR_NAN),\n  Default(NaN)\n], AxisLabel.prototype, \"minSpacing\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], AxisLabel.prototype, \"color\", 2);\n__decorateClass([\n  Validate(DEGREE, { optional: true })\n], AxisLabel.prototype, \"rotation\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisLabel.prototype, \"avoidCollisions\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisLabel.prototype, \"mirrored\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisLabel.prototype, \"parallel\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], AxisLabel.prototype, \"format\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisLine.ts\nvar AxisLine = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.color = void 0;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisLine.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisLine.prototype, \"width\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], AxisLine.prototype, \"color\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisTick.ts\nvar TICK_INTERVAL = predicateWithMessage(\n  (value) => isFiniteNumber(value) && value > 0 || value instanceof TimeInterval,\n  `a non-zero positive Number value or, for a time axis, a Time Interval such as 'agCharts.time.month'`\n);\nvar AxisTick = class {\n  constructor() {\n    this.enabled = true;\n    this.width = 1;\n    this.size = 6;\n    this.color = void 0;\n    this.interval = void 0;\n    this.values = void 0;\n    this.minSpacing = NaN;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], AxisTick.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisTick.prototype, \"width\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AxisTick.prototype, \"size\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], AxisTick.prototype, \"color\", 2);\n__decorateClass([\n  Validate(TICK_INTERVAL, { optional: true })\n], AxisTick.prototype, \"interval\", 2);\n__decorateClass([\n  Validate(ARRAY, { optional: true })\n], AxisTick.prototype, \"values\", 2);\n__decorateClass([\n  Validate(MIN_SPACING),\n  Default(NaN)\n], AxisTick.prototype, \"minSpacing\", 2);\n\n// packages/ag-charts-community/src/chart/axis/axisUtil.ts\nfunction prepareAxisAnimationContext(axis) {\n  const requestedRangeMin = Math.min(...axis.range);\n  const requestedRangeMax = Math.max(...axis.range);\n  const min = Math.floor(requestedRangeMin);\n  const max = Math.ceil(requestedRangeMax);\n  const visible = min !== max;\n  return { min, max, visible };\n}\nvar fullCircle = Math.PI * 2;\nvar halfCircle = fullCircle / 2;\nfunction normaliseEndRotation(start, end) {\n  const directDistance = Math.abs(end - start);\n  if (directDistance < halfCircle)\n    return end;\n  if (start > end)\n    return end + fullCircle;\n  return end - fullCircle;\n}\nfunction prepareAxisAnimationFunctions(ctx) {\n  const outOfBounds = (y, range3) => {\n    const min = range3 != null ? Math.min(...range3) : ctx.min;\n    const max = range3 != null ? Math.max(...range3) : ctx.max;\n    return y < min || y > max;\n  };\n  const calculateStatus2 = (node, datum, status) => {\n    if (status !== \"removed\" && outOfBounds(node.translationY, node.datum.range)) {\n      return \"removed\";\n    } else if (status !== \"added\" && outOfBounds(datum.translationY, datum.range)) {\n      return \"added\";\n    }\n    return status;\n  };\n  const tick = {\n    fromFn(node, datum, status) {\n      let y = node.y1 + node.translationY;\n      let opacity = node.opacity;\n      if (status === \"added\" || outOfBounds(node.datum.translationY, node.datum.range)) {\n        y = datum.translationY;\n        opacity = 0;\n      }\n      return __spreadValues({ y: 0, translationY: y, opacity }, FROM_TO_MIXINS[status]);\n    },\n    toFn(_node, datum, status) {\n      const y = datum.translationY;\n      let opacity = 1;\n      if (status === \"removed\") {\n        opacity = 0;\n      }\n      return {\n        y: 0,\n        translationY: y,\n        opacity,\n        finish: {\n          // Set explicit y after animation so it's pixel aligned\n          y,\n          translationY: 0\n        }\n      };\n    },\n    intermediateFn(node, _datum, _status) {\n      return { visible: !outOfBounds(node.y) };\n    }\n  };\n  const label = {\n    fromFn(node, newDatum, status) {\n      var _a;\n      const datum = (_a = node.previousDatum) != null ? _a : newDatum;\n      status = calculateStatus2(node, newDatum, status);\n      const x = datum.x;\n      const y = datum.y;\n      const rotationCenterX = datum.rotationCenterX;\n      let translationY = Math.round(node.translationY);\n      let rotation = datum.rotation;\n      let opacity = node.opacity;\n      if (status === \"removed\" || outOfBounds(datum.y, datum.range)) {\n      } else if (status === \"added\" || outOfBounds(node.datum.y, node.datum.range)) {\n        translationY = Math.round(datum.translationY);\n        opacity = 0;\n        rotation = newDatum.rotation;\n      }\n      return __spreadValues({ x, y, rotationCenterX, translationY, rotation, opacity }, FROM_TO_MIXINS[status]);\n    },\n    toFn(node, datum, status) {\n      var _a, _b;\n      const x = datum.x;\n      const y = datum.y;\n      const rotationCenterX = datum.rotationCenterX;\n      const translationY = Math.round(datum.translationY);\n      let rotation = 0;\n      let opacity = 1;\n      status = calculateStatus2(node, datum, status);\n      if (status === \"added\") {\n        opacity = 1;\n        rotation = datum.rotation;\n      } else if (status === \"removed\") {\n        opacity = 0;\n        rotation = datum.rotation;\n      } else {\n        rotation = normaliseEndRotation((_b = (_a = node.previousDatum) == null ? void 0 : _a.rotation) != null ? _b : datum.rotation, datum.rotation);\n      }\n      return { x, y, rotationCenterX, translationY, rotation, opacity, finish: { rotation: datum.rotation } };\n    }\n  };\n  const line = {\n    fromFn(node, datum) {\n      var _a;\n      return __spreadValues(__spreadValues({}, (_a = node.previousDatum) != null ? _a : datum), FROM_TO_MIXINS[\"updated\"]);\n    },\n    toFn(_node, datum) {\n      return __spreadValues({}, datum);\n    }\n  };\n  const group2 = {\n    fromFn(group3, _datum) {\n      const { rotation, translationX, translationY } = group3;\n      return __spreadValues({\n        rotation,\n        translationX,\n        translationY\n      }, FROM_TO_MIXINS[\"updated\"]);\n    },\n    toFn(_group, datum) {\n      const { rotation, translationX, translationY } = datum;\n      return {\n        rotation,\n        translationX,\n        translationY\n      };\n    }\n  };\n  return { tick, line, label, group: group2 };\n}\nfunction resetAxisGroupFn() {\n  return (_node, datum) => {\n    return {\n      rotation: datum.rotation,\n      rotationCenterX: datum.rotationCenterX,\n      rotationCenterY: datum.rotationCenterY,\n      translationX: datum.translationX,\n      translationY: datum.translationY\n    };\n  };\n}\nfunction resetAxisSelectionFn(ctx) {\n  const { visible: rangeVisible, min, max } = ctx;\n  return (_node, datum) => {\n    const y = datum.translationY;\n    const visible = rangeVisible && y >= min && y <= max;\n    return {\n      y,\n      translationY: 0,\n      opacity: 1,\n      visible\n    };\n  };\n}\nfunction resetAxisLabelSelectionFn() {\n  return (_node, datum) => {\n    return {\n      x: datum.x,\n      y: datum.y,\n      translationY: datum.translationY,\n      rotation: datum.rotation,\n      rotationCenterX: datum.rotationCenterX\n    };\n  };\n}\nfunction resetAxisLineSelectionFn() {\n  return (_node, datum) => {\n    return __spreadValues({}, datum);\n  };\n}\n\n// packages/ag-charts-community/src/chart/axis/axis.ts\nvar Tags = /* @__PURE__ */ ((Tags2) => {\n  Tags2[Tags2[\"TickLine\"] = 0] = \"TickLine\";\n  Tags2[Tags2[\"TickLabel\"] = 1] = \"TickLabel\";\n  Tags2[Tags2[\"GridLine\"] = 2] = \"GridLine\";\n  Tags2[Tags2[\"GridArc\"] = 3] = \"GridArc\";\n  Tags2[Tags2[\"AxisLine\"] = 4] = \"AxisLine\";\n  return Tags2;\n})(Tags || {});\nvar _Axis = class _Axis {\n  constructor(moduleCtx, scale2) {\n    this.moduleCtx = moduleCtx;\n    this.scale = scale2;\n    this.id = createId(this);\n    this.nice = true;\n    this.reverse = void 0;\n    this.dataDomain = { domain: [], clipped: false };\n    this.keys = [];\n    this.boundSeries = [];\n    this.includeInvisibleDomains = false;\n    this.axisGroup = new Group({ name: `${this.id}-axis`, zIndex: 2 /* AXIS_ZINDEX */ });\n    this.lineNode = this.axisGroup.appendChild(new Line());\n    this.tickLineGroup = this.axisGroup.appendChild(\n      new Group({ name: `${this.id}-Axis-tick-lines`, zIndex: 2 /* AXIS_ZINDEX */ })\n    );\n    this.tickLabelGroup = this.axisGroup.appendChild(\n      new Group({ name: `${this.id}-Axis-tick-labels`, zIndex: 2 /* AXIS_ZINDEX */ })\n    );\n    this.crossLineGroup = new Group({ name: `${this.id}-CrossLines` });\n    this.gridGroup = new Group({ name: `${this.id}-Axis-grid` });\n    this.gridLineGroup = this.gridGroup.appendChild(\n      new Group({\n        name: `${this.id}-gridLines`,\n        zIndex: 1 /* AXIS_GRID_ZINDEX */\n      })\n    );\n    this.tickLineGroupSelection = Selection.select(this.tickLineGroup, Line, false);\n    this.tickLabelGroupSelection = Selection.select(this.tickLabelGroup, Text, false);\n    this.gridLineGroupSelection = Selection.select(this.gridLineGroup, Line, false);\n    this.line = new AxisLine();\n    this.tick = this.createTick();\n    this.gridLine = new AxisGridLine();\n    this.label = this.createLabel();\n    this.defaultTickMinSpacing = _Axis.defaultTickMinSpacing;\n    this.translation = { x: 0, y: 0 };\n    this.rotation = 0;\n    // axis rotation angle in degrees\n    this.layout = {\n      label: {\n        fractionDigits: 0,\n        padding: this.label.padding,\n        format: this.label.format\n      }\n    };\n    this.destroyFns = [];\n    this.range = [0, 1];\n    this.visibleRange = [0, 1];\n    this.title = void 0;\n    this._titleCaption = new Caption();\n    /**\n     * The length of the grid. The grid is only visible in case of a non-zero value.\n     * In case {@link radialGrid} is `true`, the value is interpreted as an angle\n     * (in degrees).\n     */\n    this._gridLength = 0;\n    this.fractionDigits = 0;\n    /**\n     * The distance between the grid ticks and the axis ticks.\n     */\n    this.gridPadding = 0;\n    /**\n     * Is used to avoid collisions between axis labels and series.\n     */\n    this.seriesAreaPadding = 0;\n    this.tickGenerationResult = void 0;\n    this.maxThickness = Infinity;\n    this.moduleMap = new ModuleMap();\n    this.refreshScale();\n    this._titleCaption.registerInteraction(this.moduleCtx);\n    this._titleCaption.node.rotation = -Math.PI / 2;\n    this.axisGroup.appendChild(this._titleCaption.node);\n    this.destroyFns.push(moduleCtx.interactionManager.addListener(\"hover\", (e) => this.checkAxisHover(e)));\n    this.animationManager = moduleCtx.animationManager;\n    this.animationState = new StateMachine(\"empty\", {\n      empty: {\n        update: {\n          target: \"ready\",\n          action: () => this.resetSelectionNodes()\n        }\n      },\n      ready: {\n        update: (data) => this.animateReadyUpdate(data),\n        resize: () => this.resetSelectionNodes()\n      }\n    });\n    this._crossLines = [];\n    this.assignCrossLineArrayConstructor(this._crossLines);\n    let previousSize = void 0;\n    this.destroyFns.push(\n      moduleCtx.layoutService.addListener(\"layout-complete\", (e) => {\n        if (previousSize != null && jsonDiff(e.chart, previousSize) != null) {\n          this.animationState.transition(\"resize\");\n        }\n        previousSize = __spreadValues({}, e.chart);\n      })\n    );\n    this.destroyFns.push(\n      moduleCtx.updateService.addListener(\"update-complete\", (e) => {\n        this.minRect = e.minRect;\n      })\n    );\n  }\n  get type() {\n    var _a;\n    return (_a = this.constructor.type) != null ? _a : \"\";\n  }\n  set crossLines(value) {\n    var _a, _b;\n    (_a = this._crossLines) == null ? void 0 : _a.forEach((crossLine) => this.detachCrossLine(crossLine));\n    if (value) {\n      this.assignCrossLineArrayConstructor(value);\n    }\n    this._crossLines = value;\n    (_b = this._crossLines) == null ? void 0 : _b.forEach((crossLine) => {\n      this.attachCrossLine(crossLine);\n      this.initCrossLine(crossLine);\n    });\n  }\n  get crossLines() {\n    return this._crossLines;\n  }\n  attachCrossLine(crossLine) {\n    this.crossLineGroup.appendChild(crossLine.group);\n    this.crossLineGroup.appendChild(crossLine.labelGroup);\n  }\n  detachCrossLine(crossLine) {\n    this.crossLineGroup.removeChild(crossLine.group);\n    this.crossLineGroup.removeChild(crossLine.labelGroup);\n  }\n  destroy() {\n    this.moduleMap.destroy();\n    this.destroyFns.forEach((f) => f());\n  }\n  refreshScale() {\n    var _a;\n    this.range = this.scale.range.slice();\n    (_a = this.crossLines) == null ? void 0 : _a.forEach((crossLine) => {\n      this.initCrossLine(crossLine);\n    });\n  }\n  updateRange() {\n    var _a;\n    const { range: rr, visibleRange: vr, scale: scale2 } = this;\n    const span = (rr[1] - rr[0]) / (vr[1] - vr[0]);\n    const shift = span * vr[0];\n    const start = rr[0] - shift;\n    scale2.range = [start, start + span];\n    (_a = this.crossLines) == null ? void 0 : _a.forEach((crossLine) => {\n      crossLine.clippedRange = [rr[0], rr[1]];\n    });\n  }\n  setCrossLinesVisible(visible) {\n    this.crossLineGroup.visible = visible;\n  }\n  attachAxis(axisNode, gridNode) {\n    gridNode.appendChild(this.gridGroup);\n    axisNode.appendChild(this.axisGroup);\n    axisNode.appendChild(this.crossLineGroup);\n  }\n  detachAxis(axisNode, gridNode) {\n    gridNode.removeChild(this.gridGroup);\n    axisNode.removeChild(this.axisGroup);\n    axisNode.removeChild(this.crossLineGroup);\n  }\n  /**\n   * Checks if a point or an object is in range.\n   * @param x A point (or object's starting point).\n   * @param width Object's width.\n   * @param tolerance Expands the range on both ends by this amount.\n   */\n  inRange(x, width = 0, tolerance = 0) {\n    const min = Math.min(...this.range);\n    const max = Math.max(...this.range);\n    return x + width >= min - tolerance && x <= max + tolerance;\n  }\n  onLabelFormatChange(ticks, format2) {\n    const { scale: scale2, fractionDigits } = this;\n    const logScale = scale2 instanceof LogScale;\n    const defaultLabelFormatter = !logScale && fractionDigits > 0 ? (x) => typeof x === \"number\" ? x.toFixed(fractionDigits) : String(x) : (x) => String(x);\n    if (format2 && scale2 && scale2.tickFormat) {\n      try {\n        this.labelFormatter = scale2.tickFormat({ ticks, specifier: format2 });\n      } catch (e) {\n        this.labelFormatter = defaultLabelFormatter;\n        Logger.warnOnce(`the axis label format string ${format2} is invalid. No formatting will be applied`);\n      }\n    } else {\n      this.labelFormatter = defaultLabelFormatter;\n    }\n  }\n  setDomain() {\n    const {\n      scale: scale2,\n      dataDomain: { domain }\n    } = this;\n    scale2.domain = domain;\n  }\n  setTickInterval(interval) {\n    var _a;\n    this.scale.interval = (_a = this.tick.interval) != null ? _a : interval;\n  }\n  setTickCount(count2, minTickCount, maxTickCount) {\n    const { scale: scale2 } = this;\n    if (!(count2 && ContinuousScale.is(scale2))) {\n      return;\n    }\n    if (typeof count2 === \"number\") {\n      scale2.tickCount = count2;\n      scale2.minTickCount = minTickCount != null ? minTickCount : 0;\n      scale2.maxTickCount = maxTickCount != null ? maxTickCount : Infinity;\n      return;\n    }\n    if (scale2 instanceof TimeScale) {\n      this.setTickInterval(count2);\n    }\n  }\n  set gridLength(value) {\n    var _a;\n    if (this._gridLength && !value || !this._gridLength && value) {\n      this.gridLineGroupSelection.clear();\n    }\n    this._gridLength = value;\n    (_a = this.crossLines) == null ? void 0 : _a.forEach((crossLine) => {\n      this.initCrossLine(crossLine);\n    });\n  }\n  get gridLength() {\n    return this._gridLength;\n  }\n  createTick() {\n    return new AxisTick();\n  }\n  createLabel() {\n    return new AxisLabel();\n  }\n  checkAxisHover(event) {\n    const bbox = this.computeBBox();\n    const isInAxis = bbox.containsPoint(event.offsetX, event.offsetY);\n    if (!isInAxis)\n      return;\n    this.moduleCtx.chartEventManager.axisHover(this.id, this.direction);\n  }\n  /**\n   * Creates/removes/updates the scene graph nodes that constitute the axis.\n   */\n  update(primaryTickCount) {\n    if (!this.tickGenerationResult) {\n      return;\n    }\n    const { rotation, parallelFlipRotation, regularFlipRotation } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    this.updatePosition();\n    const lineData = this.getAxisLineCoordinates();\n    const _a = this.tickGenerationResult, { tickData, combinedRotation, textBaseline, textAlign } = _a, ticksResult = __objRest(_a, [\"tickData\", \"combinedRotation\", \"textBaseline\", \"textAlign\"]);\n    const previousTicks = this.tickLabelGroupSelection.nodes().map((node) => node.datum.tickId);\n    this.updateSelections(lineData, tickData.ticks, {\n      combinedRotation,\n      textAlign,\n      textBaseline,\n      range: this.scale.range\n    });\n    if (this.animationManager.isSkipped()) {\n      this.resetSelectionNodes();\n    } else {\n      const diff2 = this.calculateUpdateDiff(previousTicks, tickData);\n      this.animationState.transition(\"update\", diff2);\n    }\n    this.updateAxisLine();\n    this.updateLabels();\n    this.updateVisibility();\n    this.updateGridLines(sideFlag);\n    this.updateTickLines();\n    this.updateTitle({ anyTickVisible: tickData.ticks.length > 0 });\n    this.updateCrossLines({ rotation, parallelFlipRotation, regularFlipRotation });\n    this.updateLayoutState();\n    primaryTickCount = ticksResult.primaryTickCount;\n    return primaryTickCount;\n  }\n  getAxisLineCoordinates() {\n    const {\n      range: [start, end]\n    } = this;\n    const x = 0;\n    const y1 = Math.min(start, end);\n    const y2 = Math.max(start, end);\n    return { x, y1, y2 };\n  }\n  getTickLineCoordinates(datum) {\n    const { label } = this;\n    const sideFlag = label.getSideFlag();\n    const x = sideFlag * this.getTickSize();\n    const x1 = Math.min(0, x);\n    const x2 = x1 + Math.abs(x);\n    const y = datum.translationY;\n    return { x1, x2, y };\n  }\n  getTickLabelProps(datum, params) {\n    const { label } = this;\n    const { combinedRotation, textBaseline, textAlign, range: range3 } = params;\n    const text = datum.tickLabel;\n    const sideFlag = label.getSideFlag();\n    const labelX = sideFlag * (this.getTickSize() + label.padding + this.seriesAreaPadding);\n    const visible = text !== \"\" && text != void 0;\n    return {\n      tickId: datum.tickId,\n      translationY: datum.translationY,\n      fill: label.color,\n      fontFamily: label.fontFamily,\n      fontSize: label.fontSize,\n      fontStyle: label.fontStyle,\n      fontWeight: label.fontWeight,\n      rotation: combinedRotation,\n      rotationCenterX: labelX,\n      text,\n      textAlign,\n      textBaseline,\n      visible,\n      x: labelX,\n      y: 0,\n      range: range3\n    };\n  }\n  getTickSize() {\n    return this.tick.enabled ? this.tick.size : this.createTick().size;\n  }\n  setTitleProps(caption, params) {\n    var _a;\n    const { title } = this;\n    if (!title) {\n      caption.enabled = false;\n      return;\n    }\n    caption.color = title.color;\n    caption.fontFamily = title.fontFamily;\n    caption.fontSize = title.fontSize;\n    caption.fontStyle = title.fontStyle;\n    caption.fontWeight = title.fontWeight;\n    caption.enabled = title.enabled;\n    caption.wrapping = title.wrapping;\n    if (title.enabled) {\n      const titleNode = caption.node;\n      const padding = ((_a = title.spacing) != null ? _a : 0) + params.spacing;\n      const sideFlag = this.label.getSideFlag();\n      const parallelFlipRotation = normalizeAngle360(this.rotation);\n      const titleRotationFlag = sideFlag === -1 && parallelFlipRotation > Math.PI && parallelFlipRotation < Math.PI * 2 ? -1 : 1;\n      const rotation = titleRotationFlag * sideFlag * Math.PI / 2;\n      const textBaseline = titleRotationFlag === 1 ? \"bottom\" : \"top\";\n      const { range: range3 } = this;\n      const x = Math.floor(titleRotationFlag * sideFlag * (range3[0] + range3[1]) / 2);\n      const y = sideFlag === -1 ? Math.floor(titleRotationFlag * -padding) : Math.floor(-padding);\n      const { callbackCache } = this.moduleCtx;\n      const { formatter = (params2) => params2.defaultValue } = title;\n      const text = callbackCache.call(formatter, this.getTitleFormatterParams());\n      titleNode.setProperties({\n        rotation,\n        text,\n        textBaseline,\n        visible: true,\n        x,\n        y\n      });\n    }\n  }\n  calculateLayout(primaryTickCount) {\n    var _b;\n    const { rotation, parallelFlipRotation, regularFlipRotation } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    const labelX = sideFlag * (this.getTickSize() + this.label.padding + this.seriesAreaPadding);\n    this.updateScale();\n    this.tickGenerationResult = this.generateTicks({\n      primaryTickCount,\n      parallelFlipRotation,\n      regularFlipRotation,\n      labelX,\n      sideFlag\n    });\n    this.updateLayoutState();\n    const _a = this.tickGenerationResult, { tickData, combinedRotation, textBaseline, textAlign } = _a, ticksResult = __objRest(_a, [\"tickData\", \"combinedRotation\", \"textBaseline\", \"textAlign\"]);\n    const boxes = [];\n    const { x, y1, y2 } = this.getAxisLineCoordinates();\n    const lineBox = new BBox(\n      x + Math.min(sideFlag * this.seriesAreaPadding, 0),\n      y1,\n      this.seriesAreaPadding,\n      y2 - y1\n    );\n    boxes.push(lineBox);\n    const { tick } = this;\n    if (tick.enabled) {\n      tickData.ticks.forEach((datum) => {\n        const { x1, x2, y } = this.getTickLineCoordinates(datum);\n        const tickLineBox = new BBox(x1, y, x2 - x1, 0);\n        boxes.push(tickLineBox);\n      });\n    }\n    const { label } = this;\n    if (label.enabled) {\n      const tempText = new Text();\n      tickData.ticks.forEach((datum) => {\n        const labelProps = this.getTickLabelProps(datum, {\n          combinedRotation,\n          textAlign,\n          textBaseline,\n          range: this.scale.range\n        });\n        if (!labelProps.visible) {\n          return;\n        }\n        tempText.setProperties(__spreadProps(__spreadValues({}, labelProps), {\n          translationY: Math.round(datum.translationY)\n        }));\n        const box = tempText.computeTransformedBBox();\n        if (box) {\n          boxes.push(box);\n        }\n      });\n    }\n    const getTransformBox = (bbox2) => {\n      const matrix = new Matrix();\n      const {\n        rotation: axisRotation,\n        translationX,\n        translationY,\n        rotationCenterX,\n        rotationCenterY\n      } = this.getAxisTransform();\n      Matrix.updateTransformMatrix(matrix, 1, 1, axisRotation, translationX, translationY, {\n        scalingCenterX: 0,\n        scalingCenterY: 0,\n        rotationCenterX,\n        rotationCenterY\n      });\n      return matrix.transformBBox(bbox2);\n    };\n    const { title } = this;\n    if (title == null ? void 0 : title.enabled) {\n      const caption = new Caption();\n      const spacing = BBox.merge(boxes).width;\n      this.setTitleProps(caption, { spacing });\n      const titleNode = caption.node;\n      const titleBox = titleNode.computeTransformedBBox();\n      if (titleBox) {\n        boxes.push(titleBox);\n      }\n    }\n    const bbox = BBox.merge(boxes);\n    const transformedBBox = getTransformBox(bbox);\n    const anySeriesActive = this.isAnySeriesActive();\n    (_b = this.crossLines) == null ? void 0 : _b.forEach((crossLine) => {\n      var _a2;\n      crossLine.sideFlag = -sideFlag;\n      crossLine.direction = rotation === -Math.PI / 2 ? \"x\" /* X */ : \"y\" /* Y */;\n      if (crossLine instanceof CartesianCrossLine) {\n        crossLine.label.parallel = (_a2 = crossLine.label.parallel) != null ? _a2 : this.label.parallel;\n      }\n      crossLine.parallelFlipRotation = parallelFlipRotation;\n      crossLine.regularFlipRotation = regularFlipRotation;\n      crossLine.calculateLayout(anySeriesActive, this.reverse);\n    });\n    primaryTickCount = ticksResult.primaryTickCount;\n    return { primaryTickCount, bbox: transformedBBox };\n  }\n  updateLayoutState() {\n    this.layout.label = {\n      fractionDigits: this.fractionDigits,\n      padding: this.label.padding,\n      format: this.label.format\n    };\n  }\n  updateScale() {\n    this.updateRange();\n    this.calculateDomain();\n    this.setDomain();\n    this.setTickInterval(this.tick.interval);\n    const { scale: scale2, nice } = this;\n    if (!ContinuousScale.is(scale2)) {\n      return;\n    }\n    scale2.nice = nice;\n    scale2.update();\n  }\n  calculateRotations() {\n    const rotation = toRadians(this.rotation);\n    const parallelFlipRotation = normalizeAngle360(rotation);\n    const regularFlipRotation = normalizeAngle360(rotation - Math.PI / 2);\n    return { rotation, parallelFlipRotation, regularFlipRotation };\n  }\n  generateTicks({\n    primaryTickCount,\n    parallelFlipRotation,\n    regularFlipRotation,\n    labelX,\n    sideFlag\n  }) {\n    var _a;\n    const {\n      scale: scale2,\n      tick,\n      label: { parallel, rotation, fontFamily, fontSize, fontStyle, fontWeight }\n    } = this;\n    const secondaryAxis = primaryTickCount !== void 0;\n    const { defaultRotation, configuredRotation, parallelFlipFlag, regularFlipFlag } = calculateLabelRotation({\n      rotation,\n      parallel,\n      regularFlipRotation,\n      parallelFlipRotation\n    });\n    const initialRotation = configuredRotation + defaultRotation;\n    const labelMatrix = new Matrix();\n    const { maxTickCount } = this.estimateTickCount({\n      minSpacing: tick.minSpacing,\n      maxSpacing: (_a = tick.maxSpacing) != null ? _a : NaN\n    });\n    const continuous = ContinuousScale.is(scale2);\n    const maxIterations = !continuous || isNaN(maxTickCount) ? 10 : maxTickCount;\n    let textAlign = getTextAlign(parallel, configuredRotation, 0, sideFlag, regularFlipFlag);\n    const textBaseline = getTextBaseline(parallel, configuredRotation, sideFlag, parallelFlipFlag);\n    const textProps = {\n      fontFamily,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      textBaseline,\n      textAlign\n    };\n    let tickData = {\n      rawTicks: [],\n      ticks: [],\n      labelCount: 0\n    };\n    let index = 0;\n    let autoRotation = 0;\n    let labelOverlap = true;\n    let terminate = false;\n    while (labelOverlap && index <= maxIterations) {\n      if (terminate) {\n        break;\n      }\n      autoRotation = 0;\n      textAlign = getTextAlign(parallel, configuredRotation, 0, sideFlag, regularFlipFlag);\n      const tickStrategies = this.getTickStrategies({ secondaryAxis, index });\n      for (const strategy of tickStrategies) {\n        ({ tickData, index, autoRotation, terminate } = strategy({\n          index,\n          tickData,\n          textProps,\n          labelOverlap,\n          terminate,\n          primaryTickCount\n        }));\n        const rotated = configuredRotation !== 0 || autoRotation !== 0;\n        const rotation2 = initialRotation + autoRotation;\n        textAlign = getTextAlign(parallel, configuredRotation, autoRotation, sideFlag, regularFlipFlag);\n        labelOverlap = this.checkLabelOverlap(rotation2, rotated, labelMatrix, tickData.ticks, labelX, __spreadProps(__spreadValues({}, textProps), {\n          textAlign\n        }));\n      }\n    }\n    const combinedRotation = defaultRotation + configuredRotation + autoRotation;\n    if (!secondaryAxis && tickData.rawTicks.length > 0) {\n      primaryTickCount = tickData.rawTicks.length;\n    }\n    return { tickData, primaryTickCount, combinedRotation, textBaseline, textAlign };\n  }\n  getTickStrategies({ index, secondaryAxis }) {\n    const { scale: scale2, label, tick } = this;\n    const continuous = ContinuousScale.is(scale2);\n    const avoidLabelCollisions = label.enabled && label.avoidCollisions;\n    const filterTicks = !continuous && index !== 0 && avoidLabelCollisions;\n    const autoRotate = label.autoRotate === true && label.rotation === void 0;\n    const strategies = [];\n    let tickGenerationType;\n    if (this.tick.values) {\n      tickGenerationType = 3 /* VALUES */;\n    } else if (secondaryAxis) {\n      tickGenerationType = 1 /* CREATE_SECONDARY */;\n    } else if (filterTicks) {\n      tickGenerationType = 2 /* FILTER */;\n    } else {\n      tickGenerationType = 0 /* CREATE */;\n    }\n    const tickGenerationStrategy = ({ index: index2, tickData, primaryTickCount, terminate }) => this.createTickData(tickGenerationType, index2, tickData, terminate, primaryTickCount);\n    strategies.push(tickGenerationStrategy);\n    if (!continuous && !isNaN(tick.minSpacing)) {\n      const tickFilterStrategy = ({ index: index2, tickData, primaryTickCount, terminate }) => this.createTickData(2 /* FILTER */, index2, tickData, terminate, primaryTickCount);\n      strategies.push(tickFilterStrategy);\n    }\n    if (!avoidLabelCollisions) {\n      return strategies;\n    }\n    if (label.autoWrap) {\n      const autoWrapStrategy = ({ index: index2, tickData, textProps }) => this.wrapLabels(tickData, index2, textProps);\n      strategies.push(autoWrapStrategy);\n    } else if (autoRotate) {\n      const autoRotateStrategy = ({ index: index2, tickData, labelOverlap, terminate }) => ({\n        index: index2,\n        tickData,\n        autoRotation: this.getAutoRotation(labelOverlap),\n        terminate\n      });\n      strategies.push(autoRotateStrategy);\n    }\n    return strategies;\n  }\n  createTickData(tickGenerationType, index, tickData, terminate, primaryTickCount) {\n    var _a;\n    const { scale: scale2, tick } = this;\n    const { maxTickCount, minTickCount, defaultTickCount } = this.estimateTickCount({\n      minSpacing: tick.minSpacing,\n      maxSpacing: (_a = tick.maxSpacing) != null ? _a : NaN\n    });\n    const continuous = ContinuousScale.is(scale2);\n    const maxIterations = !continuous || isNaN(maxTickCount) ? 10 : maxTickCount;\n    let tickCount = continuous ? Math.max(defaultTickCount - index, minTickCount) : maxTickCount;\n    const regenerateTicks = tick.interval === void 0 && tick.values === void 0 && tickCount > minTickCount && (continuous || tickGenerationType === 2 /* FILTER */);\n    let unchanged = true;\n    while (unchanged && index <= maxIterations) {\n      const prevTicks = tickData.rawTicks;\n      tickCount = continuous ? Math.max(defaultTickCount - index, minTickCount) : maxTickCount;\n      const { rawTicks, ticks, labelCount } = this.getTicks({\n        tickGenerationType,\n        previousTicks: prevTicks,\n        tickCount,\n        minTickCount,\n        maxTickCount,\n        primaryTickCount\n      });\n      tickData.rawTicks = rawTicks;\n      tickData.ticks = ticks;\n      tickData.labelCount = labelCount;\n      unchanged = regenerateTicks ? areArrayNumbersEqual(rawTicks, prevTicks) : false;\n      index++;\n    }\n    const shouldTerminate = tick.interval !== void 0 || tick.values !== void 0;\n    terminate || (terminate = shouldTerminate);\n    return { tickData, index, autoRotation: 0, terminate };\n  }\n  checkLabelOverlap(rotation, rotated, labelMatrix, tickData, labelX, textProps) {\n    Matrix.updateTransformMatrix(labelMatrix, 1, 1, rotation, 0, 0);\n    const labelData = this.createLabelData(tickData, labelX, textProps, labelMatrix);\n    const labelSpacing = getLabelSpacing(this.label.minSpacing, rotated);\n    return axisLabelsOverlap(labelData, labelSpacing);\n  }\n  createLabelData(tickData, labelX, textProps, labelMatrix) {\n    const labelData = [];\n    for (const tickDatum of tickData) {\n      const { tickLabel, translationY } = tickDatum;\n      if (tickLabel === \"\" || tickLabel == void 0) {\n        continue;\n      }\n      const lines = splitText(tickLabel);\n      const { width, height } = measureText(lines, labelX, translationY, textProps);\n      const bbox = new BBox(labelX, translationY, width, height);\n      const labelDatum = calculateLabelBBox(tickLabel, bbox, labelX, translationY, labelMatrix);\n      labelData.push(labelDatum);\n    }\n    return labelData;\n  }\n  getAutoRotation(labelOverlap) {\n    var _a;\n    return labelOverlap ? normalizeAngle360(toRadians((_a = this.label.autoRotateAngle) != null ? _a : 0)) : 0;\n  }\n  getTicks({\n    tickGenerationType,\n    previousTicks,\n    tickCount,\n    minTickCount,\n    maxTickCount,\n    primaryTickCount\n  }) {\n    var _a;\n    const { range: range3, scale: scale2, visibleRange } = this;\n    let rawTicks = [];\n    switch (tickGenerationType) {\n      case 3 /* VALUES */:\n        if (ContinuousScale.is(scale2)) {\n          const scaleDomain = scale2.getDomain();\n          const start2 = scale2.fromDomain(scaleDomain[0]);\n          const stop = scale2.fromDomain(scaleDomain[1]);\n          const d0 = Math.min(start2, stop);\n          const d1 = Math.max(start2, stop);\n          rawTicks = this.tick.values.filter((value) => value >= d0 && value <= d1).sort((a, b) => a - b);\n        } else {\n          rawTicks = this.tick.values;\n        }\n        break;\n      case 1 /* CREATE_SECONDARY */:\n        rawTicks = this.updateSecondaryAxisTicks(primaryTickCount);\n        break;\n      case 2 /* FILTER */:\n        rawTicks = this.filterTicks(previousTicks, tickCount);\n        break;\n      default:\n        rawTicks = this.createTicks(tickCount, minTickCount, maxTickCount);\n        break;\n    }\n    this.fractionDigits = rawTicks.fractionDigits >= 0 ? rawTicks.fractionDigits : 0;\n    this.onLabelFormatChange(rawTicks, this.label.format);\n    const halfBandwidth = ((_a = scale2.bandwidth) != null ? _a : 0) / 2;\n    const ticks = [];\n    let labelCount = 0;\n    const tickIdCounts = /* @__PURE__ */ new Map();\n    const start = Math.max(0, Math.floor(visibleRange[0] * rawTicks.length));\n    const end = Math.min(rawTicks.length, Math.ceil(visibleRange[1] * rawTicks.length));\n    for (let i = start; i < end; i++) {\n      const rawTick = rawTicks[i];\n      const translationY = scale2.convert(rawTick) + halfBandwidth;\n      if (range3.length > 0 && !this.inRange(translationY, 0, 1e-3))\n        continue;\n      const tickLabel = this.formatTick(rawTick, i);\n      let tickId = tickLabel;\n      if (tickIdCounts.has(tickId)) {\n        const count2 = tickIdCounts.get(tickId);\n        tickIdCounts.set(tickId, count2 + 1);\n        tickId = `${tickId}_${count2}`;\n      } else {\n        tickIdCounts.set(tickId, 1);\n      }\n      ticks.push({ tick: rawTick, tickId, tickLabel, translationY });\n      if (tickLabel === \"\" || tickLabel == void 0) {\n        continue;\n      }\n      labelCount++;\n    }\n    return { rawTicks, ticks, labelCount };\n  }\n  filterTicks(ticks, tickCount) {\n    var _a;\n    const tickSpacing = !isNaN(this.tick.minSpacing) || !isNaN((_a = this.tick.maxSpacing) != null ? _a : NaN);\n    const keepEvery = tickSpacing ? Math.ceil(ticks.length / tickCount) : 2;\n    return ticks.filter((_, i) => i % keepEvery === 0);\n  }\n  createTicks(tickCount, minTickCount, maxTickCount) {\n    var _a, _b, _c;\n    this.setTickCount(tickCount, minTickCount, maxTickCount);\n    return (_c = (_b = (_a = this.scale).ticks) == null ? void 0 : _b.call(_a)) != null ? _c : [];\n  }\n  estimateTickCount({ minSpacing, maxSpacing }) {\n    const { minRect } = this;\n    const rangeWithBleed = this.calculateRangeWithBleed();\n    const defaultMinSpacing = Math.max(\n      this.defaultTickMinSpacing,\n      rangeWithBleed / ContinuousScale.defaultMaxTickCount\n    );\n    let clampMaxTickCount = !isNaN(maxSpacing);\n    if (isNaN(minSpacing)) {\n      minSpacing = defaultMinSpacing;\n    }\n    if (isNaN(maxSpacing)) {\n      maxSpacing = rangeWithBleed;\n    }\n    if (minSpacing > maxSpacing) {\n      if (minSpacing === defaultMinSpacing) {\n        minSpacing = maxSpacing;\n      } else {\n        maxSpacing = minSpacing;\n      }\n    }\n    const minRectDistance = minRect ? this.direction === \"x\" /* X */ ? minRect.width : minRect.height : 1;\n    clampMaxTickCount && (clampMaxTickCount = minRectDistance < defaultMinSpacing);\n    const maxTickCount = clamp2(\n      1,\n      Math.floor(rangeWithBleed / minSpacing),\n      clampMaxTickCount ? Math.floor(rangeWithBleed / minRectDistance) : Infinity\n    );\n    const minTickCount = Math.min(maxTickCount, Math.ceil(rangeWithBleed / maxSpacing));\n    const defaultTickCount = clamp2(minTickCount, ContinuousScale.defaultTickCount, maxTickCount);\n    return { minTickCount, maxTickCount, defaultTickCount };\n  }\n  updateVisibility() {\n    if (this.moduleCtx.animationManager.isSkipped()) {\n      this.resetSelectionNodes();\n    }\n    this.tickLineGroup.visible = this.tick.enabled;\n    this.gridLineGroup.visible = this.gridLine.enabled;\n    this.tickLabelGroup.visible = this.label.enabled;\n  }\n  updateCrossLines({\n    rotation,\n    parallelFlipRotation,\n    regularFlipRotation\n  }) {\n    var _a;\n    const sideFlag = this.label.getSideFlag();\n    const anySeriesActive = this.isAnySeriesActive();\n    (_a = this.crossLines) == null ? void 0 : _a.forEach((crossLine) => {\n      var _a2;\n      crossLine.sideFlag = -sideFlag;\n      crossLine.direction = rotation === -Math.PI / 2 ? \"x\" /* X */ : \"y\" /* Y */;\n      if (crossLine instanceof CartesianCrossLine) {\n        crossLine.label.parallel = (_a2 = crossLine.label.parallel) != null ? _a2 : this.label.parallel;\n      }\n      crossLine.parallelFlipRotation = parallelFlipRotation;\n      crossLine.regularFlipRotation = regularFlipRotation;\n      crossLine.update(anySeriesActive);\n    });\n  }\n  updateTickLines() {\n    const { tick, label } = this;\n    const sideFlag = label.getSideFlag();\n    this.tickLineGroupSelection.each((line) => {\n      line.strokeWidth = tick.width;\n      line.stroke = tick.color;\n      line.x1 = sideFlag * this.getTickSize();\n      line.x2 = 0;\n    });\n  }\n  calculateAvailableRange() {\n    const { range: range3 } = this;\n    const min = Math.min(...range3);\n    const max = Math.max(...range3);\n    return max - min;\n  }\n  /**\n   * Calculates the available range with an additional \"bleed\" beyond the canvas that encompasses the full axis when\n   * the visible range is only a portion of the axis.\n   */\n  calculateRangeWithBleed() {\n    const { visibleRange } = this;\n    const visibleScale = 1 / (visibleRange[1] - visibleRange[0]);\n    return round(this.calculateAvailableRange() * visibleScale, 2);\n  }\n  calculateDomain() {\n    if (this.linkedTo) {\n      this.dataDomain = this.linkedTo.dataDomain;\n    } else {\n      const visibleSeries = this.boundSeries.filter((s) => this.includeInvisibleDomains || s.isEnabled());\n      const domains = visibleSeries.flatMap((series) => series.getDomain(this.direction));\n      const { domain, clipped } = this.normaliseDataDomain(domains);\n      this.dataDomain = { domain: this.reverse ? [...domain].reverse() : domain, clipped };\n    }\n  }\n  getAxisTransform() {\n    return {\n      rotation: toRadians(this.rotation),\n      rotationCenterX: 0,\n      rotationCenterY: 0,\n      translationX: Math.floor(this.translation.x),\n      translationY: Math.floor(this.translation.y)\n    };\n  }\n  updatePosition() {\n    const { crossLineGroup, axisGroup, gridGroup, translation, gridLineGroupSelection, gridPadding, gridLength } = this;\n    const { rotation } = this.calculateRotations();\n    const sideFlag = this.label.getSideFlag();\n    const translationX = Math.floor(translation.x);\n    const translationY = Math.floor(translation.y);\n    crossLineGroup.setProperties({ rotation, translationX, translationY });\n    axisGroup.datum = this.getAxisTransform();\n    gridGroup.setProperties({ rotation, translationX, translationY });\n    gridLineGroupSelection.each((line) => {\n      line.x1 = gridPadding;\n      line.x2 = -sideFlag * gridLength + gridPadding;\n    });\n  }\n  updateSecondaryAxisTicks(_primaryTickCount) {\n    throw new Error(\"AG Charts - unexpected call to updateSecondaryAxisTicks() - check axes configuration.\");\n  }\n  updateSelections(lineData, data, params) {\n    this.lineNode.datum = lineData;\n    this.gridLineGroupSelection.update(\n      this.gridLength ? data : [],\n      (group2) => group2.append(new Line({ tag: 2 /* GridLine */ })),\n      (datum) => datum.tickId\n    );\n    this.tickLineGroupSelection.update(\n      data,\n      (group2) => group2.appendChild(new Line({ tag: 0 /* TickLine */ })),\n      (datum) => datum.tickId\n    );\n    this.tickLabelGroupSelection.update(\n      data.map((d) => this.getTickLabelProps(d, params)),\n      (group2) => group2.appendChild(new Text({ tag: 1 /* TickLabel */ })),\n      (datum) => datum.tickId\n    );\n  }\n  updateAxisLine() {\n    const { line } = this;\n    const strokeWidth = line.enabled ? line.width : 0;\n    this.lineNode.setProperties({\n      stroke: line.color,\n      strokeWidth\n    });\n  }\n  updateGridLines(sideFlag) {\n    const {\n      gridLine: { style, width },\n      gridPadding,\n      gridLength\n    } = this;\n    if (gridLength === 0 || style.length === 0) {\n      return;\n    }\n    this.gridLineGroupSelection.each((line, _, index) => {\n      const { stroke, lineDash } = style[index % style.length];\n      line.setProperties({\n        x1: gridPadding,\n        x2: -sideFlag * gridLength + gridPadding,\n        fill: void 0,\n        stroke,\n        strokeWidth: width,\n        lineDash\n      });\n    });\n  }\n  updateLabels() {\n    const { label } = this;\n    if (!label.enabled) {\n      return;\n    }\n    this.tickLabelGroupSelection.each((node, datum) => {\n      node.setProperties(datum, [\n        \"fill\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"fontStyle\",\n        \"fontWeight\",\n        \"text\",\n        \"textAlign\",\n        \"textBaseline\"\n      ]);\n    });\n  }\n  wrapLabels(tickData, index, labelProps) {\n    const { parallel, maxWidth, maxHeight } = this.label;\n    let defaultMaxWidth = this.maxThickness;\n    let defaultMaxHeight = Math.round(this.calculateAvailableRange() / tickData.labelCount);\n    if (parallel) {\n      [defaultMaxWidth, defaultMaxHeight] = [defaultMaxHeight, defaultMaxWidth];\n    }\n    tickData.ticks.forEach((tickDatum) => {\n      const { text } = Text.wrap(\n        tickDatum.tickLabel,\n        maxWidth != null ? maxWidth : defaultMaxWidth,\n        maxHeight != null ? maxHeight : defaultMaxHeight,\n        labelProps,\n        \"hyphenate\"\n      );\n      tickDatum.tickLabel = text;\n    });\n    return { tickData, index, autoRotation: 0, terminate: true };\n  }\n  updateTitle(params) {\n    const { rotation, title, _titleCaption, lineNode, tickLineGroup, tickLabelGroup } = this;\n    if (!title) {\n      _titleCaption.enabled = false;\n      return;\n    }\n    let spacing = 0;\n    if (title.enabled && params.anyTickVisible) {\n      const tickBBox = Group.computeBBox([tickLineGroup, tickLabelGroup, lineNode]);\n      const tickWidth = rotation === 0 ? tickBBox.width : tickBBox.height;\n      spacing += tickWidth + (!this.tickLabelGroup.visible ? this.seriesAreaPadding : 0);\n    }\n    this.setTitleProps(_titleCaption, { spacing });\n  }\n  // For formatting (nice rounded) tick values.\n  formatTick(datum, index) {\n    var _a, _b;\n    const {\n      label,\n      labelFormatter,\n      fractionDigits,\n      moduleCtx: { callbackCache }\n    } = this;\n    if (label.formatter) {\n      const value = fractionDigits > 0 ? datum : String(datum);\n      return (_a = callbackCache.call(label.formatter, {\n        value,\n        index,\n        fractionDigits,\n        formatter: labelFormatter\n      })) != null ? _a : value;\n    } else if (labelFormatter) {\n      return (_b = callbackCache.call(labelFormatter, datum)) != null ? _b : String(datum);\n    }\n    return String(datum);\n  }\n  // For formatting arbitrary values between the ticks.\n  formatDatum(datum) {\n    return String(datum);\n  }\n  computeBBox() {\n    return this.axisGroup.computeBBox();\n  }\n  initCrossLine(crossLine) {\n    crossLine.scale = this.scale;\n    crossLine.gridLength = this.gridLength;\n  }\n  isAnySeriesActive() {\n    return this.boundSeries.some((s) => this.includeInvisibleDomains || s.isEnabled());\n  }\n  clipTickLines(x, y, width, height) {\n    this.tickLineGroup.setClipRectInGroupCoordinateSpace(new BBox(x, y, width, height));\n  }\n  clipGrid(x, y, width, height) {\n    this.gridGroup.setClipRectInGroupCoordinateSpace(new BBox(x, y, width, height));\n  }\n  calculatePadding(min, _max, reverse) {\n    const start = reverse ? _max : min;\n    return [Math.abs(start * 0.01), Math.abs(start * 0.01)];\n  }\n  getTitleFormatterParams() {\n    var _a;\n    const boundSeries = this.boundSeries.reduce((acc, next) => {\n      const keys = next.getKeys(this.direction);\n      const names = next.getNames(this.direction);\n      for (let idx = 0; idx < keys.length; idx++) {\n        acc.push({ key: keys[idx], name: names[idx] });\n      }\n      return acc;\n    }, []);\n    return {\n      direction: this.direction,\n      boundSeries,\n      defaultValue: (_a = this.title) == null ? void 0 : _a.text\n    };\n  }\n  normaliseDataDomain(d) {\n    return { domain: d, clipped: false };\n  }\n  getLayoutState() {\n    return __spreadValues({\n      rect: this.computeBBox(),\n      gridPadding: this.gridPadding,\n      seriesAreaPadding: this.seriesAreaPadding,\n      tickSize: this.getTickSize()\n    }, this.layout);\n  }\n  getModuleMap() {\n    return this.moduleMap;\n  }\n  createModuleContext() {\n    var _a;\n    (_a = this.axisContext) != null ? _a : this.axisContext = this.createAxisContext();\n    return __spreadProps(__spreadValues({}, this.moduleCtx), { parent: this.axisContext });\n  }\n  createAxisContext() {\n    return {\n      axisId: this.id,\n      direction: this.direction,\n      continuous: ContinuousScale.is(this.scale),\n      keys: () => this.boundSeries.flatMap((s) => s.getKeys(this.direction)),\n      scaleValueFormatter: (specifier) => {\n        var _a, _b;\n        return (_b = (_a = this.scale).tickFormat) == null ? void 0 : _b.call(_a, { specifier });\n      },\n      scaleBandwidth: () => {\n        var _a;\n        return (_a = this.scale.bandwidth) != null ? _a : 0;\n      },\n      scaleConvert: (val) => this.scale.convert(val),\n      scaleInvert: (val) => {\n        var _a, _b;\n        return (_b = (_a = this.scale).invert) == null ? void 0 : _b.call(_a, val);\n      }\n    };\n  }\n  animateReadyUpdate(diff2) {\n    const { animationManager } = this.moduleCtx;\n    const selectionCtx = prepareAxisAnimationContext(this);\n    const fns = prepareAxisAnimationFunctions(selectionCtx);\n    fromToMotion(this.id, \"axis-group\", animationManager, [this.axisGroup], fns.group);\n    fromToMotion(this.id, \"line\", animationManager, [this.lineNode], fns.line);\n    fromToMotion(\n      this.id,\n      \"line-paths\",\n      animationManager,\n      [this.gridLineGroupSelection, this.tickLineGroupSelection],\n      fns.tick,\n      (_, d) => d.tickId,\n      diff2\n    );\n    fromToMotion(\n      this.id,\n      \"tick-labels\",\n      animationManager,\n      [this.tickLabelGroupSelection],\n      fns.label,\n      (_, d) => d.tickId,\n      diff2\n    );\n  }\n  resetSelectionNodes() {\n    const { gridLineGroupSelection, tickLineGroupSelection, tickLabelGroupSelection, lineNode } = this;\n    const selectionCtx = prepareAxisAnimationContext(this);\n    resetMotion([this.axisGroup], resetAxisGroupFn());\n    resetMotion([gridLineGroupSelection, tickLineGroupSelection], resetAxisSelectionFn(selectionCtx));\n    resetMotion([tickLabelGroupSelection], resetAxisLabelSelectionFn());\n    resetMotion([lineNode], resetAxisLineSelectionFn());\n  }\n  calculateUpdateDiff(previous, tickData) {\n    const added = /* @__PURE__ */ new Set();\n    const removed = /* @__PURE__ */ new Set();\n    const tickMap = {};\n    const tickCount = Math.max(previous.length, tickData.ticks.length);\n    for (let i = 0; i < tickCount; i++) {\n      const tickDatum = tickData.ticks[i];\n      const prev = previous[i];\n      const tick = tickDatum == null ? void 0 : tickDatum.tickId;\n      tickMap[tick != null ? tick : prev] = tickDatum;\n      if (prev === tick) {\n        continue;\n      }\n      if (removed.has(tick)) {\n        removed.delete(tick);\n      } else if (tick) {\n        added.add(tick);\n      }\n      if (added.has(prev)) {\n        added.delete(prev);\n      } else if (prev) {\n        removed.add(prev);\n      }\n    }\n    return {\n      changed: added.size > 0 || removed.size > 0,\n      added: [...added.values()],\n      removed: [...removed.values()]\n    };\n  }\n  isReversed() {\n    return !!this.reverse;\n  }\n};\n_Axis.defaultTickMinSpacing = 50;\n__decorateClass([\n  Validate(BOOLEAN)\n], _Axis.prototype, \"nice\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], _Axis.prototype, \"reverse\", 2);\n__decorateClass([\n  Validate(STRING_ARRAY)\n], _Axis.prototype, \"keys\", 2);\n__decorateClass([\n  Validate(predicateWithMessage((title) => typeof title == \"object\", \"Title object\"), { optional: true })\n], _Axis.prototype, \"title\", 2);\nvar Axis = _Axis;\n\n// packages/ag-charts-community/src/chart/axis/cartesianAxisLabel.ts\nvar CartesianAxisLabel = class extends AxisLabel {\n  constructor() {\n    super(...arguments);\n    this.autoRotateAngle = 335;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], CartesianAxisLabel.prototype, \"autoRotate\", 2);\n__decorateClass([\n  Validate(DEGREE)\n], CartesianAxisLabel.prototype, \"autoRotateAngle\", 2);\n\n// packages/ag-charts-community/src/chart/axis/cartesianAxis.ts\nvar CartesianAxis = class extends Axis {\n  constructor() {\n    super(...arguments);\n    this.thickness = 0;\n    this.position = \"left\";\n  }\n  get direction() {\n    return [\"top\", \"bottom\"].includes(this.position) ? \"x\" /* X */ : \"y\" /* Y */;\n  }\n  updateDirection() {\n    switch (this.position) {\n      case \"top\":\n        this.rotation = -90;\n        this.label.mirrored = true;\n        this.label.parallel = true;\n        break;\n      case \"right\":\n        this.rotation = 0;\n        this.label.mirrored = true;\n        this.label.parallel = false;\n        break;\n      case \"bottom\":\n        this.rotation = -90;\n        this.label.mirrored = false;\n        this.label.parallel = true;\n        break;\n      case \"left\":\n        this.rotation = 0;\n        this.label.mirrored = false;\n        this.label.parallel = false;\n        break;\n    }\n    if (this.axisContext) {\n      this.axisContext.position = this.position;\n      this.axisContext.direction = this.direction;\n    }\n  }\n  update(primaryTickCount) {\n    this.updateDirection();\n    return super.update(primaryTickCount);\n  }\n  calculateLayout(primaryTickCount) {\n    this.updateDirection();\n    return super.calculateLayout(primaryTickCount);\n  }\n  createAxisContext() {\n    return __spreadProps(__spreadValues({}, super.createAxisContext()), {\n      position: this.position\n    });\n  }\n  assignCrossLineArrayConstructor(crossLines) {\n    assignJsonApplyConstructedArray(crossLines, CartesianCrossLine);\n  }\n  createLabel() {\n    return new CartesianAxisLabel();\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], CartesianAxis.prototype, \"thickness\", 2);\n__decorateClass([\n  Validate(POSITION)\n], CartesianAxis.prototype, \"position\", 2);\n\n// packages/ag-charts-community/src/chart/axis/categoryAxis.ts\nvar CategoryAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new BandScale());\n    this._paddingOverrideEnabled = false;\n    this.groupPaddingInner = 0.1;\n    this.includeInvisibleDomains = true;\n  }\n  set paddingInner(value) {\n    this._paddingOverrideEnabled = true;\n    this.scale.paddingInner = value;\n  }\n  get paddingInner() {\n    this._paddingOverrideEnabled = true;\n    return this.scale.paddingInner;\n  }\n  set paddingOuter(value) {\n    this.scale.paddingOuter = value;\n  }\n  get paddingOuter() {\n    return this.scale.paddingOuter;\n  }\n  normaliseDataDomain(d) {\n    const domain = [];\n    const uniqueValues = /* @__PURE__ */ new Set();\n    for (const v of d) {\n      const key = v instanceof Date ? v.getTime() : v;\n      if (!uniqueValues.has(key)) {\n        uniqueValues.add(key);\n        domain.push(v);\n      }\n    }\n    return { domain, clipped: false };\n  }\n  calculateDomain() {\n    if (!this._paddingOverrideEnabled) {\n      const paddings = this.boundSeries.map((s) => {\n        var _a;\n        return (_a = s.getBandScalePadding) == null ? void 0 : _a.call(s);\n      }).filter((p) => p != null);\n      if (paddings.length > 0) {\n        this.scale.paddingInner = Math.min(...paddings.map((p) => p.inner));\n        this.scale.paddingOuter = Math.max(...paddings.map((p) => p.outer));\n      }\n    }\n    return super.calculateDomain();\n  }\n};\nCategoryAxis.className = \"CategoryAxis\";\nCategoryAxis.type = \"category\";\n__decorateClass([\n  Validate(RATIO)\n], CategoryAxis.prototype, \"groupPaddingInner\", 2);\n\n// packages/ag-charts-community/src/chart/axis/tree.ts\nvar TreeNode = class {\n  // current number in sibling group (index)\n  constructor(label = \"\", parent, number = 0) {\n    this.x = 0;\n    this.y = 0;\n    this.subtreeLeft = NaN;\n    this.subtreeRight = NaN;\n    this.screenX = 0;\n    this.screenY = 0;\n    this.children = [];\n    this.leafCount = 0;\n    this.prelim = 0;\n    this.mod = 0;\n    this.ancestor = this;\n    this.change = 0;\n    this.shift = 0;\n    this.label = label;\n    this.parent = parent;\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.number = number;\n  }\n  getLeftSibling() {\n    return this.number > 0 && this.parent ? this.parent.children[this.number - 1] : void 0;\n  }\n  getLeftmostSibling() {\n    return this.number > 0 && this.parent ? this.parent.children[0] : void 0;\n  }\n  // traverse the left contour of a subtree, return the successor of v on this contour\n  nextLeft() {\n    return this.children ? this.children[0] : this.thread;\n  }\n  // traverse the right contour of a subtree, return the successor of v on this contour\n  nextRight() {\n    return this.children ? this.children[this.children.length - 1] : this.thread;\n  }\n  getSiblings() {\n    return this.parent ? this.parent.children.filter((_, i) => i !== this.number) : [];\n  }\n};\nfunction ticksToTree(ticks, pad2 = true) {\n  const root = new TreeNode();\n  let depth = 0;\n  if (pad2) {\n    ticks.forEach((tick) => depth = Math.max(depth, tick.labels.length));\n  }\n  ticks.forEach((tick) => {\n    if (pad2) {\n      while (tick.labels.length < depth) {\n        tick.labels.unshift(\"\");\n      }\n    }\n    insertTick(root, tick);\n  });\n  return root;\n}\nfunction insertTick(root, tick) {\n  const pathParts = tick.labels.slice().reverse();\n  const lastPartIndex = pathParts.length - 1;\n  pathParts.forEach((pathPart, partIndex) => {\n    const children = root.children;\n    const existingNode = children.find((child) => child.label === pathPart);\n    const isNotLeaf = partIndex !== lastPartIndex;\n    if (existingNode && isNotLeaf) {\n      root = existingNode;\n    } else {\n      const node = new TreeNode(pathPart, root);\n      node.number = children.length;\n      children.push(node);\n      if (isNotLeaf) {\n        root = node;\n      }\n    }\n  });\n}\nfunction moveSubtree(wm, wp, shift) {\n  const subtrees = wp.number - wm.number;\n  const ratio = shift / subtrees;\n  wp.change -= ratio;\n  wp.shift += shift;\n  wm.change += ratio;\n  wp.prelim += shift;\n  wp.mod += shift;\n}\nfunction ancestor(vim, v, defaultAncestor) {\n  return v.getSiblings().indexOf(vim.ancestor) >= 0 ? vim.ancestor : defaultAncestor;\n}\nfunction executeShifts(v) {\n  const children = v.children;\n  if (children) {\n    let shift = 0;\n    let change = 0;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const w = children[i];\n      w.prelim += shift;\n      w.mod += shift;\n      change += w.change;\n      shift += w.shift + change;\n    }\n  }\n}\nfunction apportion(v, defaultAncestor, distance) {\n  const w = v.getLeftSibling();\n  if (w) {\n    let vop = v;\n    let vip = v;\n    let vim = w;\n    let vom = vip.getLeftmostSibling();\n    let sip = vip.mod;\n    let sop = vop.mod;\n    let sim = vim.mod;\n    let som = vom.mod;\n    while (vim.nextRight() && vip.nextLeft()) {\n      vim = vim.nextRight();\n      vip = vip.nextLeft();\n      vom = vom.nextLeft();\n      vop = vop.nextRight();\n      vop.ancestor = v;\n      const shift = vim.prelim + sim - (vip.prelim + sip) + distance;\n      if (shift > 0) {\n        moveSubtree(ancestor(vim, v, defaultAncestor), v, shift);\n        sip += shift;\n        sop += shift;\n      }\n      sim += vim.mod;\n      sip += vip.mod;\n      som += vom.mod;\n      sop += vop.mod;\n    }\n    if (vim.nextRight() && !vop.nextRight()) {\n      vop.thread = vim.nextRight();\n      vop.mod += sim - sop;\n    } else {\n      if (vip.nextLeft() && !vom.nextLeft()) {\n        vom.thread = vip.nextLeft();\n        vom.mod += sip - som;\n      }\n      defaultAncestor = v;\n    }\n  }\n  return defaultAncestor;\n}\nfunction firstWalk(node, distance) {\n  const children = node.children;\n  if (children.length) {\n    let defaultAncestor = children[0];\n    children.forEach((child) => {\n      firstWalk(child, distance);\n      defaultAncestor = apportion(child, defaultAncestor, distance);\n    });\n    executeShifts(node);\n    const midpoint = (children[0].prelim + children[children.length - 1].prelim) / 2;\n    const leftSibling = node.getLeftSibling();\n    if (leftSibling) {\n      node.prelim = leftSibling.prelim + distance;\n      node.mod = node.prelim - midpoint;\n    } else {\n      node.prelim = midpoint;\n    }\n  } else {\n    const leftSibling = node.getLeftSibling();\n    node.prelim = leftSibling ? leftSibling.prelim + distance : 0;\n  }\n}\nvar Dimensions = class {\n  constructor() {\n    this.top = Infinity;\n    this.right = -Infinity;\n    this.bottom = -Infinity;\n    this.left = Infinity;\n  }\n  update(node, xy) {\n    const { x, y } = xy(node);\n    if (x > this.right) {\n      this.right = x;\n    }\n    if (x < this.left) {\n      this.left = x;\n    }\n    if (y > this.bottom) {\n      this.bottom = y;\n    }\n    if (y < this.top) {\n      this.top = y;\n    }\n  }\n};\nfunction secondWalk(v, m, layout) {\n  v.x = v.prelim + m;\n  v.y = v.depth;\n  layout.update(v);\n  v.children.forEach((w) => secondWalk(w, m + v.mod, layout));\n}\nfunction thirdWalk(v) {\n  const children = v.children;\n  let leafCount = 0;\n  children.forEach((w) => {\n    thirdWalk(w);\n    if (w.children.length) {\n      leafCount += w.leafCount;\n    } else {\n      leafCount++;\n    }\n  });\n  v.leafCount = leafCount;\n  if (children.length) {\n    v.subtreeLeft = children[0].subtreeLeft;\n    v.subtreeRight = children[v.children.length - 1].subtreeRight;\n    v.x = (v.subtreeLeft + v.subtreeRight) / 2;\n  } else {\n    v.subtreeLeft = v.x;\n    v.subtreeRight = v.x;\n  }\n}\nfunction treeLayout(root) {\n  const layout = new TreeLayout();\n  firstWalk(root, 1);\n  secondWalk(root, -root.prelim, layout);\n  thirdWalk(root);\n  return layout;\n}\nvar TreeLayout = class {\n  constructor() {\n    this.dimensions = new Dimensions();\n    this.leafCount = 0;\n    this.nodes = [];\n    // One might want to process leaf nodes separately from the rest of the tree.\n    // For example, position labels corresponding to leafs vertically, rather than horizontally.\n    this.leafNodes = [];\n    this.nonLeafNodes = [];\n    this.depth = 0;\n  }\n  update(node) {\n    this.dimensions.update(node, (node2) => ({ x: node2.x, y: node2.y }));\n    if (!node.children.length) {\n      this.leafCount++;\n      this.leafNodes.push(node);\n    } else {\n      this.nonLeafNodes.push(node);\n    }\n    if (node.depth > this.depth) {\n      this.depth = node.depth;\n    }\n    this.nodes.push(node);\n  }\n  resize(width, height, shiftX = 0, shiftY = 0, flipX = false) {\n    const xSteps = this.leafCount - 1;\n    const ySteps = this.depth;\n    const dimensions = this.dimensions;\n    let scalingX = 1;\n    let scalingY = 1;\n    if (width > 0 && xSteps) {\n      const existingSpacingX = (dimensions.right - dimensions.left) / xSteps;\n      const desiredSpacingX = width / xSteps;\n      scalingX = desiredSpacingX / existingSpacingX;\n      if (flipX) {\n        scalingX = -scalingX;\n      }\n    }\n    if (height > 0 && ySteps) {\n      const existingSpacingY = (dimensions.bottom - dimensions.top) / ySteps;\n      const desiredSpacingY = height / ySteps;\n      scalingY = desiredSpacingY / existingSpacingY;\n    }\n    const screenDimensions = new Dimensions();\n    this.nodes.forEach((node) => {\n      node.screenX = node.x * scalingX;\n      node.screenY = node.y * scalingY;\n      screenDimensions.update(node, (node2) => ({ x: node2.screenX, y: node2.screenY }));\n    });\n    const offsetX = -screenDimensions.left;\n    const offsetY = -screenDimensions.top;\n    this.nodes.forEach((node) => {\n      node.screenX += offsetX + shiftX;\n      node.screenY += offsetY + shiftY;\n    });\n  }\n};\n\n// packages/ag-charts-community/src/chart/axis/groupedCategoryAxis.ts\nvar GroupedCategoryAxisLabel = class extends AxisLabel {\n  constructor() {\n    super(...arguments);\n    this.grid = false;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], GroupedCategoryAxisLabel.prototype, \"grid\", 2);\nvar GroupedCategoryAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new BandScale());\n    // Label scale (labels are positioned between ticks, tick count = label count + 1).\n    // We don't call is `labelScale` for consistency with other axes.\n    this.tickScale = new BandScale();\n    this.line = new AxisLine();\n    this.label = new GroupedCategoryAxisLabel();\n    this.labelColor = \"rgba(87, 87, 87, 1)\";\n    this.includeInvisibleDomains = true;\n    const { tickLineGroup, tickLabelGroup, gridLineGroup, tickScale, scale: scale2 } = this;\n    scale2.paddingOuter = 0.1;\n    scale2.paddingInner = scale2.paddingOuter * 2;\n    this.range = scale2.range.slice();\n    this.refreshScale();\n    tickScale.paddingInner = 1;\n    tickScale.paddingOuter = 0;\n    this.gridLineSelection = Selection.select(gridLineGroup, Line);\n    this.axisLineSelection = Selection.select(tickLineGroup, Line);\n    this.separatorSelection = Selection.select(tickLineGroup, Line);\n    this.labelSelection = Selection.select(tickLabelGroup, Text);\n  }\n  updateRange() {\n    const { range: rr, visibleRange: vr, scale: scale2 } = this;\n    const span = (rr[1] - rr[0]) / (vr[1] - vr[0]);\n    const shift = span * vr[0];\n    const start = rr[0] - shift;\n    this.tickScale.range = scale2.range = [start, start + span];\n    this.resizeTickTree();\n  }\n  resizeTickTree() {\n    var _a;\n    const s = this.scale;\n    const range3 = s.domain.length ? [s.convert(s.domain[0]), s.convert(s.domain[s.domain.length - 1])] : s.range;\n    const layout = this.tickTreeLayout;\n    const lineHeight = this.lineHeight;\n    if (layout) {\n      layout.resize(\n        Math.abs(range3[1] - range3[0]),\n        layout.depth * lineHeight,\n        (Math.min(range3[0], range3[1]) || 0) + ((_a = s.bandwidth) != null ? _a : 0) / 2,\n        -layout.depth * lineHeight,\n        range3[1] - range3[0] < 0\n      );\n    }\n  }\n  get lineHeight() {\n    return this.label.fontSize * 1.5;\n  }\n  /**\n   * The length of the grid. The grid is only visible in case of a non-zero value.\n   */\n  set gridLength(value) {\n    if (this._gridLength && !value || !this._gridLength && value) {\n      this.gridLineSelection.clear();\n      this.labelSelection.clear();\n    }\n    this._gridLength = value;\n  }\n  get gridLength() {\n    return this._gridLength;\n  }\n  calculateDomain() {\n    var _a;\n    const { direction } = this;\n    const domains = [];\n    let isNumericX;\n    this.boundSeries.filter((s) => s.visible).forEach((series) => {\n      if (direction === \"x\" /* X */) {\n        if (isNumericX === void 0) {\n          const domain2 = series.getDomain(direction);\n          domains.push(domain2);\n          isNumericX = typeof domain2[0] === \"number\";\n        } else if (isNumericX) {\n          domains.push(series.getDomain(direction));\n        }\n      } else {\n        domains.push(series.getDomain(direction));\n      }\n    });\n    const domain = new Array().concat(...domains);\n    const domainExtent = (_a = extent(domain)) != null ? _a : domain;\n    const values = this.reverse ? [...domainExtent].reverse() : domainExtent;\n    const { domain: normalisedDataDomain, clipped } = this.normaliseDataDomain(values);\n    this.dataDomain = {\n      domain: normalisedDataDomain,\n      clipped\n    };\n    this.scale.domain = normalisedDataDomain;\n  }\n  normaliseDataDomain(d) {\n    const values = d.filter((s, i, arr) => arr.indexOf(s) === i);\n    const tickTree = ticksToTree(values);\n    this.tickTreeLayout = treeLayout(tickTree);\n    const tickScaleDomain = values.slice();\n    tickScaleDomain.push(\"\");\n    this.tickScale.domain = tickScaleDomain;\n    this.resizeTickTree();\n    return { domain: values, clipped: false };\n  }\n  /**\n   * Creates/removes/updates the scene graph nodes that constitute the axis.\n   * Supposed to be called _manually_ after changing _any_ of the axis properties.\n   * This allows to bulk set axis properties before updating the nodes.\n   * The node changes made by this method are rendered on the next animation frame.\n   * We could schedule this method call automatically on the next animation frame\n   * when any of the axis properties change (the way we do when properties of scene graph's\n   * nodes change), but this will mean that we first wait for the next animation\n   * frame to make changes to the nodes of the axis, then wait for another animation\n   * frame to render those changes. It's nice to have everything update automatically,\n   * but this extra level of async indirection will not just introduce an unwanted delay,\n   * it will also make it harder to reason about the program.\n   */\n  update() {\n    if (!this.computedLayout) {\n      return;\n    }\n    this.updatePosition();\n    this.updateTitleCaption();\n    this.updateCategoryLabels();\n    this.updateSeparators();\n    this.updateAxisLines();\n    this.updateCategoryGridLines();\n    this.resetSelectionNodes();\n    return void 0;\n  }\n  updateTitleCaption() {\n    const { _titleCaption } = this;\n    _titleCaption.node.visible = false;\n  }\n  updateCategoryLabels() {\n    if (!this.computedLayout)\n      return;\n    const { tickLabelLayout } = this.computedLayout;\n    const labelSelection = this.labelSelection.update(tickLabelLayout);\n    labelSelection.each((node, datum) => {\n      node.setProperties(datum);\n    });\n  }\n  updateSeparators() {\n    if (!this.computedLayout)\n      return;\n    const { separatorLayout } = this.computedLayout;\n    const { range: range3 } = this;\n    const epsilon2 = 1e-7;\n    const separatorSelection = this.separatorSelection.update(separatorLayout);\n    separatorSelection.each((line, datum) => {\n      line.x1 = datum.x1;\n      line.x2 = datum.x2;\n      line.y1 = datum.y;\n      line.y2 = datum.y;\n      line.visible = datum.y >= range3[0] - epsilon2 && datum.y <= range3[1] + epsilon2;\n      line.stroke = this.tick.color;\n      line.fill = void 0;\n      line.strokeWidth = 1;\n    });\n  }\n  updateAxisLines() {\n    if (!this.computedLayout)\n      return;\n    const { axisLineLayout } = this.computedLayout;\n    const axisLineSelection = this.axisLineSelection.update(axisLineLayout);\n    axisLineSelection.each((line, datum) => {\n      line.setProperties(__spreadProps(__spreadValues({}, datum), {\n        stroke: this.line.color,\n        strokeWidth: this.line.width\n      }));\n      line.x1 = datum.x;\n      line.x2 = datum.x;\n      line.y1 = datum.y1;\n      line.y2 = datum.y2;\n      line.strokeWidth = this.line.width;\n      line.stroke = this.line.color;\n    });\n  }\n  updateCategoryGridLines() {\n    const { gridLength, gridLine, label, range: range3, tickScale } = this;\n    const ticks = tickScale.ticks();\n    const sideFlag = label.getSideFlag();\n    const gridSelection = this.gridLineSelection.update(gridLength ? ticks : []);\n    if (gridLength) {\n      const { width, style } = gridLine;\n      const styleCount = style.length;\n      gridSelection.each((line, datum, index) => {\n        const y = Math.round(tickScale.convert(datum));\n        line.x1 = 0;\n        line.x2 = -sideFlag * gridLength;\n        line.y1 = y;\n        line.y2 = y;\n        line.visible = y >= range3[0] && y <= range3[1];\n        const { stroke, lineDash } = style[index % styleCount];\n        line.stroke = stroke;\n        line.strokeWidth = width;\n        line.lineDash = lineDash;\n        line.fill = void 0;\n      });\n    }\n  }\n  computeLayout() {\n    this.updateDirection();\n    this.calculateDomain();\n    this.updateRange();\n    const {\n      scale: scale2,\n      label,\n      label: { parallel },\n      moduleCtx: { callbackCache },\n      range: range3,\n      title,\n      title: { formatter = (p) => p.defaultValue } = {}\n    } = this;\n    const rangeStart = scale2.range[0];\n    const rangeEnd = scale2.range[1];\n    const rangeLength = Math.abs(rangeEnd - rangeStart);\n    const bandwidth = rangeLength / scale2.domain.length || 0;\n    const rotation = toRadians(this.rotation);\n    const isHorizontal = Math.abs(Math.cos(rotation)) < 1e-8;\n    const sideFlag = label.getSideFlag();\n    const lineHeight = this.lineHeight;\n    const tickTreeLayout = this.tickTreeLayout;\n    const labels = scale2.ticks();\n    const treeLabels = tickTreeLayout ? tickTreeLayout.nodes : [];\n    const isLabelTree = tickTreeLayout ? tickTreeLayout.depth > 1 : false;\n    const { defaultRotation, configuredRotation, parallelFlipFlag } = calculateLabelRotation({\n      rotation: label.rotation,\n      parallel,\n      regularFlipRotation: normalizeAngle360(rotation - Math.PI / 2),\n      parallelFlipRotation: normalizeAngle360(rotation)\n    });\n    const tickLabelLayout = [];\n    const copyLabelProps = (node) => {\n      return {\n        fill: node.fill,\n        fontFamily: node.fontFamily,\n        fontSize: node.fontSize,\n        fontStyle: node.fontStyle,\n        fontWeight: node.fontWeight,\n        rotation: node.rotation,\n        rotationCenterX: node.rotationCenterX,\n        rotationCenterY: node.rotationCenterY,\n        text: node.text,\n        textAlign: node.textAlign,\n        textBaseline: node.textBaseline,\n        translationX: node.translationX,\n        translationY: node.translationY,\n        visible: node.visible,\n        x: node.x,\n        y: node.y\n      };\n    };\n    const labelBBoxes = /* @__PURE__ */ new Map();\n    let maxLeafLabelWidth = 0;\n    const tempText = new Text();\n    const setLabelProps = (datum, index) => {\n      var _a;\n      tempText.setProperties({\n        fill: label.color,\n        fontFamily: label.fontFamily,\n        fontSize: label.fontSize,\n        fontStyle: label.fontStyle,\n        fontWeight: label.fontWeight,\n        textAlign: \"center\",\n        textBaseline: parallelFlipFlag === -1 ? \"bottom\" : \"hanging\",\n        translationX: datum.screenY - label.fontSize * 0.25,\n        translationY: datum.screenX\n      });\n      if (index === 0) {\n        const isCaptionEnabled = (title == null ? void 0 : title.enabled) && labels.length > 0;\n        if (!isCaptionEnabled) {\n          return false;\n        }\n        const text = callbackCache.call(formatter, this.getTitleFormatterParams());\n        tempText.setProperties({\n          fill: title.color,\n          fontFamily: title.fontFamily,\n          fontSize: title.fontSize,\n          fontStyle: title.fontStyle,\n          fontWeight: title.fontWeight,\n          text,\n          textBaseline: \"hanging\",\n          translationX: datum.screenY - label.fontSize * 0.25,\n          translationY: datum.screenX\n        });\n      } else {\n        const isInRange = datum.screenX >= range3[0] && datum.screenX <= range3[1];\n        if (!isInRange) {\n          return false;\n        }\n        if (label.formatter) {\n          tempText.text = (_a = callbackCache.call(label.formatter, {\n            value: String(datum.label),\n            index\n          })) != null ? _a : String(datum.label);\n        } else {\n          tempText.text = String(datum.label);\n        }\n      }\n      return true;\n    };\n    treeLabels.forEach((datum, index) => {\n      const isVisible = setLabelProps(datum, index);\n      if (isVisible) {\n        const bbox2 = tempText.computeTransformedBBox();\n        if (bbox2) {\n          labelBBoxes.set(index, bbox2);\n          const isLeaf = !datum.children.length;\n          if (isLeaf && bbox2.width > maxLeafLabelWidth) {\n            maxLeafLabelWidth = bbox2.width;\n          }\n        }\n      }\n    });\n    const labelX = sideFlag * label.padding;\n    const labelGrid = this.label.grid;\n    const separatorData = [];\n    treeLabels.forEach((datum, index) => {\n      let visible = setLabelProps(datum, index);\n      const id = index;\n      tempText.x = labelX;\n      tempText.rotationCenterX = labelX;\n      const isLeaf = !datum.children.length;\n      if (isLeaf) {\n        tempText.rotation = configuredRotation;\n        tempText.textAlign = \"end\";\n        tempText.textBaseline = \"middle\";\n        const bbox2 = labelBBoxes.get(id);\n        if (bbox2 && bbox2.height > bandwidth) {\n          visible = false;\n          labelBBoxes.delete(id);\n        }\n      } else {\n        tempText.translationX -= maxLeafLabelWidth - lineHeight + this.label.padding;\n        const availableRange = datum.leafCount * bandwidth;\n        const bbox2 = labelBBoxes.get(id);\n        if (bbox2 && bbox2.width > availableRange) {\n          visible = false;\n          labelBBoxes.delete(id);\n        } else if (isHorizontal) {\n          tempText.rotation = defaultRotation;\n        } else {\n          tempText.rotation = -Math.PI / 2;\n        }\n      }\n      if (datum.parent && isLabelTree) {\n        const y = isLeaf ? datum.screenX - bandwidth / 2 : datum.screenX - datum.leafCount * bandwidth / 2;\n        if (isLeaf) {\n          if (datum.number !== datum.children.length - 1 || labelGrid) {\n            separatorData.push({\n              y,\n              x1: 0,\n              x2: -maxLeafLabelWidth - this.label.padding * 2\n            });\n          }\n        } else {\n          const x = -maxLeafLabelWidth - this.label.padding * 2 + datum.screenY;\n          separatorData.push({\n            y,\n            x1: x + lineHeight,\n            x2: x\n          });\n        }\n      }\n      let props;\n      if (visible) {\n        const bbox2 = tempText.computeTransformedBBox();\n        if (bbox2) {\n          labelBBoxes.set(index, bbox2);\n        }\n        props = __spreadProps(__spreadValues({}, copyLabelProps(tempText)), { visible });\n      } else {\n        labelBBoxes.delete(index);\n        props = { visible };\n      }\n      tickLabelLayout.push(props);\n    });\n    let minX = 0;\n    separatorData.forEach((d) => minX = Math.min(minX, d.x2));\n    separatorData.push({\n      y: Math.max(rangeStart, rangeEnd),\n      x1: 0,\n      x2: minX\n    });\n    const separatorLayout = [];\n    const separatorBoxes = [];\n    const epsilon2 = 1e-7;\n    separatorData.forEach((datum) => {\n      if (datum.y >= range3[0] - epsilon2 && datum.y <= range3[1] + epsilon2) {\n        const { x1, x2, y } = datum;\n        const separatorBox = new BBox(Math.min(x1, x2), y, Math.abs(x1 - x2), 0);\n        separatorBoxes.push(separatorBox);\n        separatorLayout.push({ x1, x2, y });\n      }\n    });\n    const axisLineLayout = [];\n    const axisLineBoxes = [];\n    const lineCount = tickTreeLayout ? tickTreeLayout.depth + 1 : 1;\n    for (let i = 0; i < lineCount; i++) {\n      const visible = labels.length > 0 && (i === 0 || labelGrid && isLabelTree);\n      const x = i > 0 ? -maxLeafLabelWidth - this.label.padding * 2 - (i - 1) * lineHeight : 0;\n      const lineBox = new BBox(x, Math.min(...range3), 0, Math.abs(range3[1] - range3[0]));\n      axisLineBoxes.push(lineBox);\n      axisLineLayout.push({ x, y1: range3[0], y2: range3[1], visible });\n    }\n    const getTransformBox = (bbox2) => {\n      const matrix = new Matrix();\n      const {\n        rotation: axisRotation,\n        translationX,\n        translationY,\n        rotationCenterX,\n        rotationCenterY\n      } = this.getAxisTransform();\n      Matrix.updateTransformMatrix(matrix, 1, 1, axisRotation, translationX, translationY, {\n        scalingCenterX: 0,\n        scalingCenterY: 0,\n        rotationCenterX,\n        rotationCenterY\n      });\n      return matrix.transformBBox(bbox2);\n    };\n    const bbox = BBox.merge([...labelBBoxes.values(), ...separatorBoxes, ...axisLineBoxes]);\n    const transformedBBox = getTransformBox(bbox);\n    return {\n      bbox: transformedBBox,\n      tickLabelLayout,\n      separatorLayout,\n      axisLineLayout\n    };\n  }\n  calculateLayout() {\n    const { axisLineLayout, separatorLayout, tickLabelLayout, bbox } = this.computeLayout();\n    this.computedLayout = {\n      axisLineLayout,\n      separatorLayout,\n      tickLabelLayout\n    };\n    return { bbox, primaryTickCount: void 0 };\n  }\n};\nGroupedCategoryAxis.className = \"GroupedCategoryAxis\";\nGroupedCategoryAxis.type = \"grouped-category\";\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], GroupedCategoryAxis.prototype, \"labelColor\", 2);\n\n// packages/ag-charts-community/src/util/async.ts\nfunction sleep(sleepTimeoutMs) {\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(void 0), sleepTimeoutMs);\n  });\n}\n\n// packages/ag-charts-community/src/util/callbackCache.ts\nvar CallbackCache = class {\n  constructor() {\n    this.cache = /* @__PURE__ */ new WeakMap();\n  }\n  call(fn, ...params) {\n    let serialisedParams;\n    let paramCache = this.cache.get(fn);\n    const invoke = () => {\n      try {\n        const result = fn(...params);\n        if (paramCache && serialisedParams != null) {\n          paramCache.set(serialisedParams, result);\n        }\n        return result;\n      } catch (e) {\n        Logger.warnOnce(`User callback errored, ignoring`, e);\n        return void 0;\n      }\n    };\n    try {\n      serialisedParams = JSON.stringify(params);\n    } catch (e) {\n      return invoke();\n    }\n    if (paramCache == null) {\n      paramCache = /* @__PURE__ */ new Map();\n      this.cache.set(fn, paramCache);\n    }\n    if (!paramCache.has(serialisedParams)) {\n      return invoke();\n    }\n    return paramCache.get(serialisedParams);\n  }\n  invalidateCache() {\n    this.cache = /* @__PURE__ */ new WeakMap();\n  }\n};\n\n// packages/ag-charts-community/src/util/mutex.ts\nvar Mutex = class {\n  constructor() {\n    this.available = true;\n    this.acquireQueue = [];\n  }\n  acquire(cb) {\n    return new Promise((resolve) => {\n      this.acquireQueue.push([cb, resolve]);\n      if (this.available) {\n        this.dispatchNext();\n      }\n    });\n  }\n  acquireImmediately(cb) {\n    return __async(this, null, function* () {\n      if (!this.available) {\n        return false;\n      }\n      yield this.acquire(cb);\n      return true;\n    });\n  }\n  waitForClearAcquireQueue() {\n    return __async(this, null, function* () {\n      return this.acquire(() => __async(this, null, function* () {\n        return void 0;\n      }));\n    });\n  }\n  dispatchNext() {\n    return __async(this, null, function* () {\n      var _a, _b;\n      this.available = false;\n      let [next, done] = (_a = this.acquireQueue.shift()) != null ? _a : [];\n      while (next) {\n        try {\n          yield next();\n          done == null ? void 0 : done();\n        } catch (error) {\n          Logger.error(\"mutex callback error\", error);\n          done == null ? void 0 : done();\n        }\n        [next, done] = (_b = this.acquireQueue.shift()) != null ? _b : [];\n      }\n      this.available = true;\n    });\n  }\n};\n\n// packages/ag-charts-community/src/util/observable.ts\nvar Observable = class {\n  constructor() {\n    this.eventListeners = /* @__PURE__ */ new Map();\n  }\n  addEventListener(eventType, listener) {\n    if (typeof listener !== \"function\") {\n      throw new Error(\"AG Charts - listener must be a Function\");\n    }\n    const eventTypeListeners = this.eventListeners.get(eventType);\n    if (eventTypeListeners) {\n      eventTypeListeners.add(listener);\n    } else {\n      this.eventListeners.set(eventType, /* @__PURE__ */ new Set([listener]));\n    }\n  }\n  removeEventListener(type, listener) {\n    var _a;\n    (_a = this.eventListeners.get(type)) == null ? void 0 : _a.delete(listener);\n    if (this.eventListeners.size === 0) {\n      this.eventListeners.delete(type);\n    }\n  }\n  hasEventListener(type) {\n    return this.eventListeners.has(type);\n  }\n  clearEventListeners() {\n    this.eventListeners.clear();\n  }\n  fireEvent(event) {\n    var _a;\n    (_a = this.eventListeners.get(event.type)) == null ? void 0 : _a.forEach((listener) => listener(event));\n  }\n};\n\n// packages/ag-charts-community/src/util/render.ts\nfunction debouncedAnimationFrame(cb) {\n  return buildScheduler((cb2, _delayMs) => requestAnimationFrame(cb2), cb);\n}\nfunction debouncedCallback(cb) {\n  return buildScheduler((cb2, delayMs = 0) => setTimeout(cb2, delayMs), cb);\n}\nfunction buildScheduler(scheduleFn, cb) {\n  let scheduleCount = 0;\n  let promiseRunning = false;\n  let awaitingPromise;\n  let awaitingDone;\n  const busy = () => {\n    return promiseRunning;\n  };\n  const done = () => {\n    promiseRunning = false;\n    awaitingDone == null ? void 0 : awaitingDone();\n    awaitingDone = void 0;\n    awaitingPromise = void 0;\n    if (scheduleCount > 0) {\n      scheduleFn(scheduleCb);\n    }\n  };\n  const scheduleCb = () => {\n    const count2 = scheduleCount;\n    scheduleCount = 0;\n    promiseRunning = true;\n    const maybePromise = cb({ count: count2 });\n    if (!maybePromise) {\n      done();\n      return;\n    }\n    maybePromise.then(done).catch(done);\n  };\n  return {\n    schedule(delayMs) {\n      if (scheduleCount === 0 && !busy()) {\n        scheduleFn(scheduleCb, delayMs);\n      }\n      scheduleCount++;\n    },\n    await() {\n      return __async(this, null, function* () {\n        if (!busy()) {\n          return;\n        }\n        if (awaitingPromise == null) {\n          awaitingPromise = new Promise((resolve) => {\n            awaitingDone = resolve;\n          });\n        }\n        while (busy()) {\n          yield awaitingPromise;\n        }\n      });\n    }\n  };\n}\n\n// packages/ag-charts-community/src/util/sizeMonitor.ts\nvar SizeMonitor = class {\n  static init(document2) {\n    var _a;\n    if (typeof ResizeObserver !== \"undefined\") {\n      this.resizeObserver = new ResizeObserver((entries) => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          this.checkSize(this.elements.get(entry.target), entry.target, width, height);\n        }\n      });\n    } else {\n      const step = () => {\n        this.elements.forEach((entry, element2) => {\n          this.checkClientSize(element2, entry);\n        });\n      };\n      this.pollerHandler = (_a = document2.defaultView) == null ? void 0 : _a.setInterval(step, 100);\n    }\n    this.ownerDocument = document2;\n    this.ready = true;\n    this.documentReady = document2.readyState !== \"loading\";\n    if (this.documentReady)\n      return;\n    this.readyEventFn = () => {\n      const newState = document2.readyState !== \"loading\";\n      const oldState = this.documentReady;\n      this.documentReady = newState;\n      if (!newState)\n        return;\n      if (newState === oldState)\n        return;\n      for (const [el, cb] of this.queuedObserveRequests) {\n        this.observe(el, cb);\n      }\n      this.queuedObserveRequests.length = 0;\n    };\n    document2.addEventListener(\"DOMContentLoaded\", this.readyEventFn);\n  }\n  static destroy() {\n    var _a, _b;\n    if (this.pollerHandler != null) {\n      clearInterval(this.pollerHandler);\n      this.pollerHandler = void 0;\n    }\n    if (this.readyEventFn) {\n      (_a = this.ownerDocument) == null ? void 0 : _a.removeEventListener(\"DOMContentLoaded\", this.readyEventFn);\n      this.readyEventFn = void 0;\n    }\n    (_b = this.resizeObserver) == null ? void 0 : _b.disconnect();\n    this.resizeObserver = void 0;\n    this.ready = false;\n    this.ownerDocument = void 0;\n  }\n  static checkSize(entry, element2, width, height) {\n    if (!entry)\n      return;\n    if (!entry.size || width !== entry.size.width || height !== entry.size.height) {\n      entry.size = { width, height };\n      entry.cb(entry.size, element2);\n    }\n  }\n  // Only a single callback is supported.\n  static observe(element2, cb) {\n    if (!this.ready) {\n      this.init(element2.ownerDocument);\n    }\n    if (!this.documentReady) {\n      this.queuedObserveRequests.push([element2, cb]);\n      return;\n    }\n    this.unobserve(element2, false);\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(element2);\n    }\n    this.elements.set(element2, { cb });\n  }\n  static unobserve(element2, cleanup = true) {\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(element2);\n    }\n    this.elements.delete(element2);\n    this.queuedObserveRequests = this.queuedObserveRequests.filter(([el]) => el === element2);\n    if (cleanup && this.elements.size === 0) {\n      this.destroy();\n    }\n  }\n  static checkClientSize(element2, entry) {\n    var _a, _b;\n    const width = (_a = element2.clientWidth) != null ? _a : 0;\n    const height = (_b = element2.clientHeight) != null ? _b : 0;\n    this.checkSize(entry, element2, width, height);\n  }\n};\nSizeMonitor.elements = /* @__PURE__ */ new Map();\nSizeMonitor.ready = false;\nSizeMonitor.documentReady = false;\nSizeMonitor.queuedObserveRequests = [];\n\n// packages/ag-charts-community/src/chart/chartHighlight.ts\nvar ChartHighlight = class {\n  constructor() {\n    this.range = \"tooltip\";\n  }\n};\n__decorateClass([\n  Validate(UNION([\"tooltip\", \"node\"], \"a range\"))\n], ChartHighlight.prototype, \"range\", 2);\n\n// packages/ag-charts-community/src/chart/chartUpdateType.ts\nvar ChartUpdateType = /* @__PURE__ */ ((ChartUpdateType2) => {\n  ChartUpdateType2[ChartUpdateType2[\"FULL\"] = 0] = \"FULL\";\n  ChartUpdateType2[ChartUpdateType2[\"PROCESS_DATA\"] = 1] = \"PROCESS_DATA\";\n  ChartUpdateType2[ChartUpdateType2[\"PERFORM_LAYOUT\"] = 2] = \"PERFORM_LAYOUT\";\n  ChartUpdateType2[ChartUpdateType2[\"SERIES_UPDATE\"] = 3] = \"SERIES_UPDATE\";\n  ChartUpdateType2[ChartUpdateType2[\"TOOLTIP_RECALCULATION\"] = 4] = \"TOOLTIP_RECALCULATION\";\n  ChartUpdateType2[ChartUpdateType2[\"SCENE_RENDER\"] = 5] = \"SCENE_RENDER\";\n  ChartUpdateType2[ChartUpdateType2[\"NONE\"] = 6] = \"NONE\";\n  return ChartUpdateType2;\n})(ChartUpdateType || {});\n\n// packages/ag-charts-community/src/chart/data/dataDomain.ts\nvar DataDomain = class {\n  constructor(type) {\n    this.type = type;\n    this.continuousDomain = [Infinity, -Infinity];\n    this.discreteDomain = /* @__PURE__ */ new Set();\n  }\n  extend(val) {\n    if (this.type === \"discrete\") {\n      this.discreteDomain.add(val);\n    } else if (this.type === \"continuous\") {\n      if (this.continuousDomain[0] > val) {\n        this.continuousDomain[0] = val;\n      }\n      if (this.continuousDomain[1] < val) {\n        this.continuousDomain[1] = val;\n      }\n    }\n  }\n  getDomain() {\n    if (this.type === \"discrete\") {\n      return this.discreteDomain;\n    } else if (this.type === \"continuous\") {\n      return this.continuousDomain;\n    }\n    throw new Error(\"AG Charts - Unsupported data domain type: \" + this.type);\n  }\n};\n\n// packages/ag-charts-community/src/chart/data/utilFunctions.ts\nfunction extendDomain(values, domain = [Infinity, -Infinity]) {\n  for (const value of values) {\n    if (typeof value !== \"number\") {\n      continue;\n    }\n    if (value < domain[0]) {\n      domain[0] = value;\n    }\n    if (value > domain[1]) {\n      domain[1] = value;\n    }\n  }\n  return domain;\n}\n\n// packages/ag-charts-community/src/chart/data/dataModel.ts\nfunction toKeyString(keys) {\n  return keys.map((v) => {\n    if (v == null) {\n      return v;\n    } else if (typeof v === \"number\" || typeof v === \"string\" || typeof v === \"boolean\") {\n      return v;\n    } else if (typeof v === \"object\") {\n      return JSON.stringify(v);\n    }\n    return v;\n  }).join(\"-\");\n}\nfunction round2(val) {\n  const accuracy = 1e4;\n  if (Number.isInteger(val)) {\n    return val;\n  } else if (Math.abs(val) > accuracy) {\n    return Math.trunc(val);\n  }\n  return Math.round(val * accuracy) / accuracy;\n}\nfunction fixNumericExtentInternal(extent2) {\n  if (extent2 === void 0) {\n    return [];\n  }\n  let [min, max] = extent2;\n  min = +min;\n  max = +max;\n  if (min === 0 && max === 0) {\n    return [0, 1];\n  }\n  if (min === Infinity && max === -Infinity) {\n    return [];\n  }\n  if (min === Infinity) {\n    min = 0;\n  }\n  if (max === -Infinity) {\n    max = 0;\n  }\n  if (!(isNumber2(min) && isNumber2(max))) {\n    return [];\n  }\n  return [min, max];\n}\nfunction fixNumericExtent(extent2, axis) {\n  var _a;\n  const fixedExtent = fixNumericExtentInternal(extent2);\n  if (fixedExtent.length === 0) {\n    return fixedExtent;\n  }\n  let [min, max] = fixedExtent;\n  if (min === max) {\n    const [paddingMin, paddingMax] = (_a = axis == null ? void 0 : axis.calculatePadding(min, max, axis.isReversed())) != null ? _a : [1, 1];\n    min -= paddingMin;\n    max += paddingMax;\n  }\n  return [min, max];\n}\nvar INVALID_VALUE = Symbol(\"invalid\");\nvar DataModel = class {\n  constructor(opts) {\n    const { props, mode = \"standalone\" } = opts;\n    this.mode = mode;\n    let keys = true;\n    for (const next of props) {\n      if (next.type === \"key\" && !keys) {\n        throw new Error(\"AG Charts - internal config error: keys must come before values.\");\n      }\n      if (next.type === \"value\" && keys) {\n        keys = false;\n      }\n    }\n    this.opts = __spreadValues({ dataVisible: true }, opts);\n    this.keys = props.filter((def) => def.type === \"key\").map((def, index) => __spreadProps(__spreadValues({}, def), { index, missing: 0 }));\n    this.values = props.filter((def) => def.type === \"value\").map((def, index) => __spreadProps(__spreadValues({}, def), { index, missing: 0 }));\n    this.aggregates = props.filter((def) => def.type === \"aggregate\").map((def, index) => __spreadProps(__spreadValues({}, def), { index }));\n    this.groupProcessors = props.filter((def) => def.type === \"group-value-processor\").map((def, index) => __spreadProps(__spreadValues({}, def), { index }));\n    this.propertyProcessors = props.filter((def) => def.type === \"property-value-processor\").map((def, index) => __spreadProps(__spreadValues({}, def), { index }));\n    this.reducers = props.filter((def) => def.type === \"reducer\").map((def, index) => __spreadProps(__spreadValues({}, def), { index }));\n    this.processors = props.filter((def) => def.type === \"processor\").map((def, index) => __spreadProps(__spreadValues({}, def), { index }));\n    for (const def of this.values) {\n      if (def.property == null) {\n        throw new Error(\n          `AG Charts - internal config error: no properties specified for value definitions: ${JSON.stringify(\n            def\n          )}`\n        );\n      }\n    }\n    const verifyMatchGroupId = ({ matchGroupIds }) => {\n      for (const matchGroupId of matchGroupIds != null ? matchGroupIds : []) {\n        if (!this.values.some((def) => def.groupId === matchGroupId)) {\n          throw new Error(\n            `AG Charts - internal config error: matchGroupIds properties must match defined groups (${matchGroupId}).`\n          );\n        }\n      }\n    };\n    const verifyMatchIds = ({ matchIds }) => {\n      for (const matchId of matchIds != null ? matchIds : []) {\n        if (!this.values.some(\n          (def) => {\n            var _a;\n            return (_a = def.ids) == null ? void 0 : _a.some(([scope, id]) => scope === matchId[0] && id === matchId[1]);\n          }\n        )) {\n          throw new Error(\n            `AG Charts - internal config error: matchGroupIds properties must match defined groups (${matchId}).`\n          );\n        }\n      }\n    };\n    for (const def of [...this.groupProcessors, ...this.aggregates]) {\n      verifyMatchIds(def);\n      verifyMatchGroupId(def);\n    }\n  }\n  resolveProcessedDataIndexById(scope, searchId) {\n    var _a;\n    const { index, def } = (_a = this.resolveProcessedDataDefById(scope, searchId)) != null ? _a : {};\n    return { index, def };\n  }\n  resolveProcessedDataIndicesById(scope, searchId) {\n    return this.resolveProcessedDataDefsById(scope, searchId).map(({ index, def }) => ({ index, def }));\n  }\n  resolveProcessedDataDefById(scope, searchId) {\n    return this.resolveProcessedDataDefsById(scope, searchId)[0];\n  }\n  resolveProcessedDataDefsByIds(scope, searchIds) {\n    const defs = [];\n    for (const searchId of searchIds) {\n      defs.push([searchId, this.resolveProcessedDataDefsById(scope, searchId)]);\n    }\n    return defs;\n  }\n  resolveProcessedDataDefsValues(defs, { keys, values }) {\n    const result = {};\n    for (const [searchId, [{ index, def }]] of defs) {\n      const processedData = def.type === \"key\" ? keys : values;\n      result[searchId] = processedData[index];\n    }\n    return result;\n  }\n  resolveProcessedDataDefsById(searchScope, searchId) {\n    const { keys, values, aggregates, groupProcessors, reducers } = this;\n    const match = (prop) => {\n      const { ids, scopes } = prop;\n      if (ids == null)\n        return false;\n      if (searchScope != null && !(scopes == null ? void 0 : scopes.some((scope) => scope === searchScope.id)))\n        return false;\n      return ids.some(\n        ([scope, id]) => scope === searchScope.id && (typeof searchId === \"string\" ? id === searchId : searchId.test(id))\n      );\n    };\n    const allDefs = [\n      keys,\n      values,\n      aggregates,\n      groupProcessors,\n      reducers\n    ];\n    const result = [];\n    for (const defs of allDefs) {\n      result.push(...defs.filter(match).map((def) => ({ index: def.index, def })));\n    }\n    if (result.length > 0) {\n      return result;\n    }\n    throw new Error(`AG Charts - didn't find property definition for [${searchId}, ${searchScope.id}]`);\n  }\n  getDomain(scope, searchId, type = \"value\", processedData) {\n    var _a, _b, _c, _d;\n    let matches;\n    try {\n      matches = this.resolveProcessedDataIndicesById(scope, searchId);\n    } catch (e) {\n      if (typeof searchId !== \"string\" && /didn't find property definition/.test(e.message))\n        return [];\n      throw e;\n    }\n    let domainProp;\n    switch (type) {\n      case \"key\":\n        domainProp = \"keys\";\n        break;\n      case \"value\":\n        domainProp = \"values\";\n        break;\n      case \"aggregate\":\n        domainProp = \"aggValues\";\n        break;\n      case \"group-value-processor\":\n        domainProp = \"groups\";\n        break;\n      default:\n        return [];\n    }\n    const firstMatch = (_b = (_a = processedData.domain[domainProp]) == null ? void 0 : _a[matches[0].index]) != null ? _b : [];\n    if (matches.length === 1) {\n      return firstMatch;\n    }\n    const result = [...firstMatch];\n    for (const idx of matches.slice(1)) {\n      extendDomain((_d = (_c = processedData.domain[domainProp]) == null ? void 0 : _c[idx.index]) != null ? _d : [], result);\n    }\n    return result;\n  }\n  processData(data, sources) {\n    const {\n      opts: { groupByKeys, groupByFn },\n      aggregates,\n      groupProcessors,\n      reducers,\n      processors,\n      propertyProcessors\n    } = this;\n    const start = performance.now();\n    for (const def of [...this.keys, ...this.values]) {\n      def.missing = 0;\n    }\n    if (groupByKeys && this.keys.length === 0) {\n      return void 0;\n    }\n    let processedData = this.extractData(data, sources);\n    if (groupByKeys) {\n      processedData = this.groupData(processedData);\n    } else if (groupByFn) {\n      processedData = this.groupData(processedData, groupByFn(processedData));\n    }\n    if (groupProcessors.length > 0) {\n      this.postProcessGroups(processedData);\n    }\n    if (aggregates.length > 0) {\n      this.aggregateData(processedData);\n    }\n    if (propertyProcessors.length > 0) {\n      this.postProcessProperties(processedData);\n    }\n    if (reducers.length > 0) {\n      this.reduceData(processedData);\n    }\n    if (processors.length > 0) {\n      this.postProcessData(processedData);\n    }\n    for (const def of [...this.keys, ...this.values]) {\n      if (data.length > 0 && def.missing >= data.length) {\n        Logger.warnOnce(`the key '${def.property}' was not found in any data element.`);\n      }\n    }\n    const end = performance.now();\n    processedData.time = end - start;\n    if (Debug.check(true, \"data-model\")) {\n      logProcessedData(processedData);\n    }\n    return processedData;\n  }\n  valueGroupIdxLookup({ matchGroupIds, matchIds }) {\n    return this.values.map((def, index) => ({ def, index })).filter(({ def }) => {\n      if (matchGroupIds && (def.groupId == null || !matchGroupIds.includes(def.groupId))) {\n        return false;\n      }\n      if (!matchIds)\n        return true;\n      if (def.ids == null)\n        return false;\n      return matchIds.some(\n        ([matchScope, matchId]) => {\n          var _a;\n          return (_a = def.ids) == null ? void 0 : _a.some(([defScope, defId]) => defScope === matchScope && defId === matchId);\n        }\n      );\n    }).map(({ index }) => index);\n  }\n  valueIdxLookup(scopes, prop) {\n    const noScopesToMatch = scopes == null || scopes.length === 0;\n    const scopeMatch = (compareTo) => {\n      const anyScope = compareTo == null;\n      if (anyScope)\n        return true;\n      const noScopes = compareTo == null || compareTo.length === 0;\n      if (noScopesToMatch === noScopes)\n        return true;\n      return compareTo == null ? void 0 : compareTo.some((s) => scopes.includes(s));\n    };\n    const propId = typeof prop === \"string\" ? prop : prop.id;\n    const idMatch = ([scope, id]) => {\n      return scopeMatch([scope]) && id === propId;\n    };\n    const result = this.values.findIndex((def) => {\n      var _a;\n      return scopeMatch(def.scopes) && (((_a = def.ids) == null ? void 0 : _a.some((id) => idMatch(id))) || def.property === propId || def.id === propId);\n    });\n    if (result >= 0) {\n      return result;\n    }\n    throw new Error(\n      `AG Charts - configuration error, unknown property ${JSON.stringify(prop)} in scope(s) ${JSON.stringify(\n        scopes\n      )}`\n    );\n  }\n  extractData(data, sources) {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      keys: keyDefs,\n      values: valueDefs,\n      opts: { dataVisible }\n    } = this;\n    const { dataDomain, processValue, scopes, allScopesHaveSameDefs } = this.initDataDomainProcessor();\n    const resultData = new Array(dataVisible ? data.length : 0);\n    let resultDataIdx = 0;\n    let partialValidDataCount = 0;\n    for (const [datumIdx, datum] of data.entries()) {\n      const sourceDatums = {};\n      const validScopes = scopes.size > 0 ? new Set(scopes) : void 0;\n      const keys = dataVisible ? new Array(keyDefs.length) : void 0;\n      let keyIdx = 0;\n      let key;\n      for (const def of keyDefs) {\n        key = processValue(def, datum, key);\n        if (key === INVALID_VALUE)\n          break;\n        if (keys) {\n          keys[keyIdx++] = key;\n        }\n      }\n      if (key === INVALID_VALUE)\n        continue;\n      const values = dataVisible && valueDefs.length > 0 ? new Array(valueDefs.length) : void 0;\n      let value;\n      const sourcesById = {};\n      for (const source of sources != null ? sources : []) {\n        sourcesById[source.id] = source;\n      }\n      for (const [valueDefIdx, def] of valueDefs.entries()) {\n        for (const scope of (_a = def.scopes) != null ? _a : scopes) {\n          const source = sourcesById[scope];\n          const valueDatum = (_b = source == null ? void 0 : source.data[datumIdx]) != null ? _b : datum;\n          value = processValue(def, valueDatum, value);\n          if (value === INVALID_VALUE || !values)\n            continue;\n          if (source !== void 0) {\n            (_d = sourceDatums[_c = source.id]) != null ? _d : sourceDatums[_c] = {};\n            sourceDatums[source.id][def.property] = value;\n          }\n          if (def.useScopedValues) {\n            (_e = values[valueDefIdx]) != null ? _e : values[valueDefIdx] = {};\n            values[valueDefIdx][scope] = value;\n          } else {\n            values[valueDefIdx] = value;\n          }\n        }\n        if (value === INVALID_VALUE) {\n          if (allScopesHaveSameDefs)\n            break;\n          for (const scope of (_f = def.scopes) != null ? _f : scopes) {\n            validScopes == null ? void 0 : validScopes.delete(scope);\n          }\n          if ((validScopes == null ? void 0 : validScopes.size) === 0)\n            break;\n        }\n      }\n      if (value === INVALID_VALUE && allScopesHaveSameDefs)\n        continue;\n      if ((validScopes == null ? void 0 : validScopes.size) === 0)\n        continue;\n      if (dataVisible) {\n        const result = {\n          datum: __spreadValues(__spreadValues({}, datum), sourceDatums),\n          keys,\n          values\n        };\n        if (!allScopesHaveSameDefs && validScopes && validScopes.size < scopes.size) {\n          partialValidDataCount++;\n          result.validScopes = [...validScopes];\n        }\n        resultData[resultDataIdx++] = result;\n      }\n    }\n    resultData.length = resultDataIdx;\n    const propertyDomain = (def) => {\n      const result = dataDomain.get(def).getDomain();\n      if (Array.isArray(result) && result[0] > result[1]) {\n        return [];\n      }\n      return [...result];\n    };\n    return {\n      type: \"ungrouped\",\n      input: { count: data.length },\n      data: resultData,\n      domain: {\n        keys: keyDefs.map((def) => propertyDomain(def)),\n        values: valueDefs.map((def) => propertyDomain(def))\n      },\n      defs: {\n        allScopesHaveSameDefs,\n        keys: keyDefs,\n        values: valueDefs\n      },\n      partialValidDataCount,\n      time: 0\n    };\n  }\n  groupData(data, groupingFn) {\n    var _a, _b, _c, _d;\n    const processedData = /* @__PURE__ */ new Map();\n    for (const dataEntry of data.data) {\n      const { keys, values, datum, validScopes } = dataEntry;\n      const group2 = groupingFn ? groupingFn(dataEntry) : keys;\n      const groupStr = toKeyString(group2);\n      if (processedData.has(groupStr)) {\n        const existingData = processedData.get(groupStr);\n        existingData.values.push(values);\n        existingData.datum.push(datum);\n        if (validScopes != null) {\n          for (let index = 0; index < ((_b = (_a = existingData.validScopes) == null ? void 0 : _a.length) != null ? _b : 0); index++) {\n            const scope = (_c = existingData.validScopes) == null ? void 0 : _c[index];\n            if (validScopes.some((s) => s === scope))\n              continue;\n            (_d = existingData.validScopes) == null ? void 0 : _d.splice(index, 1);\n          }\n        }\n      } else {\n        processedData.set(groupStr, {\n          keys: group2,\n          values: [values],\n          datum: [datum],\n          validScopes\n        });\n      }\n    }\n    const resultData = new Array(processedData.size);\n    const resultGroups = new Array(processedData.size);\n    let dataIndex = 0;\n    for (const [, { keys, values, datum, validScopes }] of processedData.entries()) {\n      if ((validScopes == null ? void 0 : validScopes.length) === 0)\n        continue;\n      resultGroups[dataIndex] = keys;\n      resultData[dataIndex++] = {\n        keys,\n        values,\n        datum,\n        validScopes\n      };\n    }\n    return __spreadProps(__spreadValues({}, data), {\n      type: \"grouped\",\n      data: resultData,\n      domain: __spreadProps(__spreadValues({}, data.domain), {\n        groups: resultGroups\n      })\n    });\n  }\n  aggregateData(processedData) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const { aggregates: aggDefs } = this;\n    if (!aggDefs)\n      return;\n    const resultAggValues = aggDefs.map(() => [Infinity, -Infinity]);\n    const resultAggValueIndices = aggDefs.map((def) => this.valueGroupIdxLookup(def));\n    const resultAggFns = aggDefs.map((def) => def.aggregateFunction);\n    const resultGroupAggFns = aggDefs.map((def) => def.groupAggregateFunction);\n    const resultFinalFns = aggDefs.map((def) => def.finalFunction);\n    for (const group2 of processedData.data) {\n      let { values } = group2;\n      const { validScopes } = group2;\n      (_a = group2.aggValues) != null ? _a : group2.aggValues = new Array(resultAggValueIndices.length);\n      if (processedData.type === \"ungrouped\") {\n        values = [values];\n      }\n      let resultIdx = 0;\n      for (const indices of resultAggValueIndices) {\n        const scopeValid = (_b = validScopes == null ? void 0 : validScopes.some((s) => {\n          var _a2;\n          return (_a2 = aggDefs[resultIdx].matchScopes) == null ? void 0 : _a2.some((as) => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          resultIdx++;\n          continue;\n        }\n        let groupAggValues = (_d = (_c = resultGroupAggFns[resultIdx]) == null ? void 0 : _c.call(resultGroupAggFns)) != null ? _d : extendDomain([]);\n        for (const distinctValues of values) {\n          const valuesToAgg = indices.map((valueIdx) => distinctValues[valueIdx]);\n          const valuesAgg = resultAggFns[resultIdx](valuesToAgg, group2.keys);\n          if (valuesAgg) {\n            groupAggValues = (_f = (_e = resultGroupAggFns[resultIdx]) == null ? void 0 : _e.call(resultGroupAggFns, valuesAgg, groupAggValues)) != null ? _f : extendDomain(valuesAgg, groupAggValues);\n          }\n        }\n        const finalValues = ((_h = (_g = resultFinalFns[resultIdx]) == null ? void 0 : _g.call(resultFinalFns, groupAggValues)) != null ? _h : groupAggValues).map(\n          (v) => round2(v)\n        );\n        extendDomain(finalValues, resultAggValues[resultIdx]);\n        group2.aggValues[resultIdx++] = finalValues;\n      }\n    }\n    processedData.domain.aggValues = resultAggValues;\n  }\n  postProcessGroups(processedData) {\n    var _a, _b, _c, _d, _e;\n    const { groupProcessors } = this;\n    if (!groupProcessors)\n      return;\n    const affectedIndices = /* @__PURE__ */ new Set();\n    const updatedDomains = /* @__PURE__ */ new Map();\n    const groupProcessorIndices = /* @__PURE__ */ new Map();\n    const groupProcessorInitFns = /* @__PURE__ */ new Map();\n    for (const processor of groupProcessors) {\n      const indices = this.valueGroupIdxLookup(processor);\n      groupProcessorIndices.set(processor, indices);\n      groupProcessorInitFns.set(processor, processor.adjust());\n      for (const idx of indices) {\n        const valueDef = this.values[idx];\n        affectedIndices.add(idx);\n        updatedDomains.set(idx, new DataDomain(valueDef.valueType === \"category\" ? \"discrete\" : \"continuous\"));\n      }\n    }\n    const updateDomains = (values) => {\n      var _a2;\n      for (const valueIndex of affectedIndices) {\n        (_a2 = updatedDomains.get(valueIndex)) == null ? void 0 : _a2.extend(values[valueIndex]);\n      }\n    };\n    for (const group2 of processedData.data) {\n      for (const processor of groupProcessors) {\n        const scopeValid = (_b = (_a = group2.validScopes) == null ? void 0 : _a.some((s) => {\n          var _a2;\n          return (_a2 = processor.matchScopes) == null ? void 0 : _a2.some((as) => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          continue;\n        }\n        const valueIndexes = (_c = groupProcessorIndices.get(processor)) != null ? _c : [];\n        const adjustFn = (_e = (_d = groupProcessorInitFns.get(processor)) == null ? void 0 : _d()) != null ? _e : () => void 0;\n        if (processedData.type === \"grouped\") {\n          for (const values of group2.values) {\n            if (values) {\n              adjustFn(values, valueIndexes);\n            }\n          }\n          continue;\n        }\n        if (group2.values) {\n          adjustFn(group2.values, valueIndexes);\n        }\n      }\n      if (processedData.type === \"grouped\") {\n        for (const values of group2.values) {\n          updateDomains(values);\n        }\n      } else {\n        updateDomains(group2.values);\n      }\n    }\n    for (const [idx, dataDomain] of updatedDomains) {\n      processedData.domain.values[idx] = [...dataDomain.getDomain()];\n    }\n  }\n  postProcessProperties(processedData) {\n    const { propertyProcessors } = this;\n    if (!propertyProcessors)\n      return;\n    for (const { adjust, property, scopes } of propertyProcessors) {\n      adjust()(processedData, this.valueIdxLookup(scopes != null ? scopes : [], property));\n    }\n  }\n  reduceData(processedData) {\n    var _a, _b, _c;\n    const { reducers: reducerDefs } = this;\n    const scopes = reducerDefs.map((def) => def.scopes);\n    const reducers = reducerDefs.map((def) => def.reducer());\n    const accValues = reducerDefs.map((def) => def.initialValue);\n    for (const group2 of processedData.data) {\n      let reducerIndex = 0;\n      for (const reducer of reducers) {\n        const scopeValid = (_b = (_a = group2.validScopes) == null ? void 0 : _a.some((s) => {\n          var _a2;\n          return (_a2 = scopes[reducerIndex]) == null ? void 0 : _a2.some((as) => s === as);\n        })) != null ? _b : true;\n        if (!scopeValid) {\n          reducerIndex++;\n          continue;\n        }\n        accValues[reducerIndex] = reducer(accValues[reducerIndex], group2);\n        reducerIndex++;\n      }\n    }\n    for (let accIdx = 0; accIdx < accValues.length; accIdx++) {\n      (_c = processedData.reduced) != null ? _c : processedData.reduced = {};\n      processedData.reduced[reducerDefs[accIdx].property] = accValues[accIdx];\n    }\n  }\n  postProcessData(processedData) {\n    var _a;\n    const { processors: processorDefs } = this;\n    for (const def of processorDefs) {\n      (_a = processedData.reduced) != null ? _a : processedData.reduced = {};\n      processedData.reduced[def.property] = def.calculate(processedData);\n    }\n  }\n  initDataDomainProcessor() {\n    var _a;\n    const { keys: keyDefs, values: valueDefs } = this;\n    const scopes = /* @__PURE__ */ new Set();\n    for (const valueDef of valueDefs) {\n      for (const scope of (_a = valueDef.scopes) != null ? _a : []) {\n        scopes.add(scope);\n      }\n    }\n    const scopesCount = scopes.size;\n    const dataDomain = /* @__PURE__ */ new Map();\n    const processorFns = /* @__PURE__ */ new Map();\n    let allScopesHaveSameDefs = true;\n    const initDataDomainKey = (key, type, updateDataDomain = dataDomain) => {\n      var _a2;\n      if (type === \"category\") {\n        updateDataDomain.set(key, new DataDomain(\"discrete\"));\n      } else {\n        updateDataDomain.set(key, new DataDomain(\"continuous\"));\n        allScopesHaveSameDefs && (allScopesHaveSameDefs = ((_a2 = key.scopes) != null ? _a2 : []).length === scopesCount);\n      }\n    };\n    const initDataDomain = () => {\n      keyDefs.forEach((def) => initDataDomainKey(def, def.valueType));\n      valueDefs.forEach((def) => initDataDomainKey(def, def.valueType));\n    };\n    initDataDomain();\n    const accessors = this.buildAccessors(...keyDefs, ...valueDefs);\n    const processValue = (def, datum, previousDatum) => {\n      var _a2, _b, _c, _d;\n      const hasAccessor = def.property in accessors;\n      let valueInDatum = false;\n      let value;\n      if (hasAccessor) {\n        try {\n          value = accessors[def.property](datum);\n        } catch (error) {\n        }\n        valueInDatum = value !== void 0;\n      } else {\n        valueInDatum = def.property in datum;\n        value = valueInDatum ? datum[def.property] : def.missingValue;\n      }\n      if (def.forceValue != null) {\n        const valueNegative = valueInDatum && isNegative(value);\n        value = valueNegative ? -1 * def.forceValue : def.forceValue;\n        valueInDatum = true;\n      }\n      const missingValueDef = \"missingValue\" in def;\n      if (!valueInDatum && !missingValueDef) {\n        def.missing++;\n      }\n      if (!dataDomain.has(def)) {\n        initDataDomain();\n      }\n      if (valueInDatum) {\n        const valid = (_b = (_a2 = def.validation) == null ? void 0 : _a2.call(def, value, datum)) != null ? _b : true;\n        if (!valid) {\n          if (\"invalidValue\" in def) {\n            value = def.invalidValue;\n          } else {\n            if (this.mode !== \"integrated\") {\n              Logger.warnOnce(`invalid value of type [${typeof value}] ignored:`, `[${value}]`);\n            }\n            return INVALID_VALUE;\n          }\n        }\n      }\n      if (def.processor) {\n        if (!processorFns.has(def)) {\n          processorFns.set(def, def.processor());\n        }\n        value = (_c = processorFns.get(def)) == null ? void 0 : _c(value, previousDatum !== INVALID_VALUE ? previousDatum : void 0);\n      }\n      (_d = dataDomain.get(def)) == null ? void 0 : _d.extend(value);\n      return value;\n    };\n    return { dataDomain, processValue, initDataDomain, scopes, allScopesHaveSameDefs };\n  }\n  buildAccessors(...defs) {\n    const result = {};\n    if (this.mode === \"integrated\")\n      return result;\n    for (const def of defs) {\n      const isPath = def.property.indexOf(\".\") >= 0 || def.property.indexOf(\"[\") >= 0;\n      if (!isPath)\n        continue;\n      let fnBody;\n      if (def.property.startsWith(\"[\")) {\n        fnBody = `return datum${def.property};`;\n      } else {\n        fnBody = `return datum.${def.property};`;\n      }\n      result[def.property] = new Function(\"datum\", fnBody);\n    }\n    return result;\n  }\n};\nfunction logProcessedData(processedData) {\n  var _a, _b;\n  const logValues = (name, data) => {\n    if (data.length > 0) {\n      Logger.log(`DataModel.processData() - ${name}`);\n      Logger.table(data);\n    }\n  };\n  Logger.log(\"DataModel.processData() - processedData\", processedData);\n  logValues(\"Key Domains\", processedData.domain.keys);\n  logValues(\"Group Domains\", (_a = processedData.domain.groups) != null ? _a : []);\n  logValues(\"Value Domains\", processedData.domain.values);\n  logValues(\"Aggregate Domains\", (_b = processedData.domain.aggValues) != null ? _b : []);\n  if (processedData.type === \"grouped\") {\n    const flattenedValues = processedData.data.reduce((acc, next) => {\n      var _a2, _b2;\n      const keys = (_a2 = next.keys) != null ? _a2 : [];\n      const aggValues = (_b2 = next.aggValues) != null ? _b2 : [];\n      const skipKeys = next.keys.map(() => void 0);\n      const skipAggValues = aggValues == null ? void 0 : aggValues.map(() => void 0);\n      acc.push(\n        ...next.values.map((v, i) => [\n          ...i === 0 ? keys : skipKeys,\n          ...v != null ? v : [],\n          ...i == 0 ? aggValues : skipAggValues\n        ])\n      );\n      return acc;\n    }, []);\n    logValues(\"Values\", flattenedValues);\n  } else {\n    const flattenedValues = processedData.data.reduce((acc, next) => {\n      var _a2;\n      const aggValues = (_a2 = next.aggValues) != null ? _a2 : [];\n      acc.push([...next.keys, ...next.values, ...aggValues]);\n      return acc;\n    }, []);\n    logValues(\"Values\", flattenedValues);\n  }\n}\n\n// packages/ag-charts-community/src/chart/data/dataController.ts\nvar DataController = class {\n  constructor(mode) {\n    this.mode = mode;\n    this.debug = Debug.create(true, \"data-model\");\n    this.requested = [];\n    this.status = \"setup\";\n  }\n  request(id, data, opts) {\n    return __async(this, null, function* () {\n      if (this.status !== \"setup\")\n        throw new Error(`AG Charts - data request after data setup phase.`);\n      return new Promise((resolve, reject) => {\n        this.requested.push({\n          id,\n          opts,\n          data,\n          resultCb: resolve,\n          reject\n        });\n      });\n    });\n  }\n  execute() {\n    return __async(this, null, function* () {\n      if (this.status !== \"setup\")\n        throw new Error(`AG Charts - data request after data setup phase.`);\n      this.status = \"executed\";\n      this.debug(\"DataController.execute() - requested\", this.requested);\n      const { valid, invalid } = this.validateRequests(this.requested);\n      this.debug(\"DataController.execute() - validated\", valid);\n      const merged = this.mergeRequested(valid);\n      this.debug(\"DataController.execute() - merged\", merged);\n      const debugMode = Debug.check(true, \"data-model\");\n      if (debugMode) {\n        window.processedData = [];\n      }\n      const multipleSources = valid.some((v) => v.data != null);\n      for (const { opts, data, resultCbs, rejects, ids } of merged) {\n        const needsValueExtraction = multipleSources || opts.props.some((p) => {\n          var _a;\n          if (p.type !== \"value\" && p.type !== \"key\")\n            return false;\n          return (_a = p.useScopedValues) != null ? _a : false;\n        });\n        try {\n          const dataModel = new DataModel(__spreadProps(__spreadValues({}, opts), { mode: this.mode }));\n          const processedData = dataModel.processData(data, valid);\n          if (debugMode) {\n            window.processedData.push(processedData);\n          }\n          if (processedData && processedData.partialValidDataCount === 0) {\n            resultCbs.forEach((cb, requestIdx) => {\n              const id = ids[requestIdx];\n              let requestProcessedData = processedData;\n              if (needsValueExtraction) {\n                requestProcessedData = this.extractScopedData(id, processedData);\n              }\n              cb({ dataModel, processedData: requestProcessedData });\n            });\n          } else if (processedData) {\n            this.splitResult(dataModel, processedData, ids, resultCbs);\n          } else {\n            rejects.forEach((cb) => cb(new Error(`AG Charts - no processed data generated`)));\n          }\n        } catch (error) {\n          rejects.forEach((cb) => cb(error));\n        }\n      }\n      invalid.forEach(({ error, reject }) => reject(error));\n    });\n  }\n  extractScopedData(id, processedData) {\n    const extractDatum = (datum) => {\n      if (Array.isArray(datum)) {\n        return datum.map(extractDatum);\n      }\n      return __spreadValues(__spreadValues({}, datum), datum[id]);\n    };\n    const extractValues = (values) => {\n      var _a;\n      if (Array.isArray(values)) {\n        return values.map(extractValues);\n      }\n      return (_a = values == null ? void 0 : values[id]) != null ? _a : values;\n    };\n    return __spreadProps(__spreadValues({}, processedData), {\n      data: processedData.data.map((datum) => __spreadProps(__spreadValues({}, datum), {\n        datum: extractDatum(datum.datum),\n        values: datum.values.map(extractValues)\n      }))\n    });\n  }\n  validateRequests(requested) {\n    const valid = [];\n    const invalid = [];\n    for (const [index, request] of requested.entries()) {\n      if (index > 0 && request.data.length !== requested[0].data.length && request.opts.groupByData === false) {\n        invalid.push(__spreadProps(__spreadValues({}, request), {\n          error: new Error(\"all series[].data arrays must be of the same length and have matching keys.\")\n        }));\n      } else {\n        valid.push(request);\n      }\n    }\n    return { valid, invalid };\n  }\n  mergeRequested(requested) {\n    const grouped = [];\n    const keys = (props) => {\n      return props.filter((p) => p.type === \"key\").map((p) => p.property).join(\";\");\n    };\n    const groupMatch = ({ opts, data }) => (gr) => {\n      return (opts.groupByData === false || gr[0].data === data) && gr[0].opts.groupByKeys === opts.groupByKeys && gr[0].opts.dataVisible === opts.dataVisible && gr[0].opts.groupByFn === opts.groupByFn && keys(gr[0].opts.props) === keys(opts.props);\n    };\n    const propMatch = (prop) => (existing) => {\n      var _a;\n      if (existing.type !== prop.type)\n        return false;\n      const diff2 = (_a = jsonDiff(existing, prop)) != null ? _a : {};\n      delete diff2[\"scopes\"];\n      delete diff2[\"id\"];\n      delete diff2[\"ids\"];\n      if (\"useScopedValues\" in diff2) {\n        delete diff2[\"useScopedValues\"];\n      }\n      return Object.keys(diff2).length === 0;\n    };\n    const updateKeyValueOpts = (prop) => {\n      var _a;\n      if (prop.type !== \"key\" && prop.type !== \"value\")\n        return;\n      const uniqueScopes = new Set((_a = prop.scopes) != null ? _a : []);\n      prop.useScopedValues = uniqueScopes.size > 1;\n    };\n    const mergeOpts = (opts) => {\n      return __spreadProps(__spreadValues({}, opts[0]), {\n        props: opts.reduce((result, next) => {\n          var _a, _b, _c, _d, _e, _f;\n          for (const prop of next.props) {\n            if (prop.id != null) {\n              (_a = prop.ids) != null ? _a : prop.ids = [];\n              (_b = prop.scopes) == null ? void 0 : _b.forEach((scope) => {\n                var _a2;\n                return (_a2 = prop.ids) == null ? void 0 : _a2.push([scope, prop.id]);\n              });\n            }\n            const match = result.find(propMatch(prop));\n            if (!match) {\n              updateKeyValueOpts(prop);\n              result.push(prop);\n              continue;\n            }\n            (_c = match.scopes) != null ? _c : match.scopes = [];\n            match.scopes.push(...(_d = prop.scopes) != null ? _d : []);\n            updateKeyValueOpts(prop);\n            if (match.type !== \"key\" && match.type !== \"value\")\n              continue;\n            (_f = match.ids) == null ? void 0 : _f.push(...(_e = prop.ids) != null ? _e : []);\n          }\n          return result;\n        }, [])\n      });\n    };\n    const merge = (props) => {\n      return {\n        ids: props.map(({ id }) => id),\n        resultCbs: props.map(({ resultCb }) => resultCb),\n        rejects: props.map(({ reject }) => reject),\n        data: props[0].data,\n        opts: mergeOpts(props.map(({ opts }) => opts))\n      };\n    };\n    for (const request of requested) {\n      const match = grouped.find(groupMatch(request));\n      if (match) {\n        match.push(request);\n      } else {\n        grouped.push([request]);\n      }\n    }\n    return grouped.map(merge);\n  }\n  splitResult(dataModel, processedData, scopes, resultCbs) {\n    for (let index = 0; index < scopes.length; index++) {\n      const scope = scopes[index];\n      const resultCb = resultCbs[index];\n      resultCb({\n        dataModel,\n        processedData: __spreadProps(__spreadValues({}, processedData), {\n          data: processedData.data.filter(({ validScopes }) => {\n            return validScopes == null || validScopes.some((s) => s === scope);\n          })\n        })\n      });\n    }\n  }\n};\n\n// packages/ag-charts-community/src/util/listeners.ts\nvar Listeners = class {\n  constructor() {\n    this.registeredListeners = /* @__PURE__ */ new Map();\n  }\n  addListener(eventType, handler, meta) {\n    const record = { symbol: Symbol(eventType), handler, meta };\n    if (this.registeredListeners.has(eventType)) {\n      this.registeredListeners.get(eventType).push(record);\n    } else {\n      this.registeredListeners.set(eventType, [record]);\n    }\n    return () => this.removeListener(record.symbol);\n  }\n  removeListener(eventSymbol) {\n    for (const [type, listeners] of this.registeredListeners.entries()) {\n      const matchIndex = listeners.findIndex((listener) => listener.symbol === eventSymbol);\n      if (matchIndex >= 0) {\n        listeners.splice(matchIndex, 1);\n        if (listeners.length === 0) {\n          this.registeredListeners.delete(type);\n        }\n        break;\n      }\n    }\n  }\n  dispatch(eventType, ...params) {\n    for (const listener of this.getListenersByType(eventType)) {\n      try {\n        listener.handler(...params);\n      } catch (e) {\n        Logger.errorOnce(e);\n      }\n    }\n  }\n  dispatchWrapHandlers(eventType, wrapFn, ...params) {\n    for (const listener of this.getListenersByType(eventType)) {\n      try {\n        wrapFn(listener.handler, listener.meta, ...params);\n      } catch (e) {\n        Logger.errorOnce(e);\n      }\n    }\n  }\n  getListenersByType(eventType) {\n    var _a;\n    return (_a = this.registeredListeners.get(eventType)) != null ? _a : [];\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/baseManager.ts\nvar BaseManager = class {\n  constructor() {\n    this.listeners = new Listeners();\n  }\n  addListener(type, handler, meta) {\n    return this.listeners.addListener(type, handler, meta);\n  }\n  removeListener(listenerSymbol) {\n    this.listeners.removeListener(listenerSymbol);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/animationManager.ts\nvar DEBUG_SELECTORS = [true, \"animation\"];\nvar AnimationManager = class extends BaseManager {\n  constructor(interactionManager, chartUpdateMutex) {\n    super();\n    this.interactionManager = interactionManager;\n    this.chartUpdateMutex = chartUpdateMutex;\n    this.defaultDuration = 1e3;\n    this.batch = new AnimationBatch();\n    this.debug = Debug.create(...DEBUG_SELECTORS);\n    this.isPlaying = false;\n    this.requestId = null;\n    this.skipAnimations = false;\n  }\n  /**\n   * Create an animation to tween a value between the `from` and `to` properties. If an animation already exists\n   * with the same `id`, immediately stop it.\n   */\n  animate(_a) {\n    var _b = _a, {\n      disableInteractions = true,\n      immutable = true\n    } = _b, opts = __objRest(_b, [\n      \"disableInteractions\",\n      \"immutable\"\n    ]);\n    var _a2, _b2;\n    const { batch } = this;\n    try {\n      if (opts.id != null && batch.controllers.has(opts.id)) {\n        if (!immutable) {\n          return batch.controllers.get(opts.id).reset(opts);\n        }\n        batch.controllers.get(opts.id).stop();\n        this.debug(`Skipping animation batch due to update of existing animation: ${opts.id}`);\n        this.batch.skip();\n      }\n    } catch (error) {\n      this.failsafeOnError(error);\n      return;\n    }\n    const id = (_a2 = opts.id) != null ? _a2 : Math.random().toString();\n    const skip = this.isSkipped();\n    if (skip) {\n      this.debug(\"AnimationManager - skipping animation\");\n    }\n    return new Animation(__spreadProps(__spreadValues({}, opts), {\n      id,\n      skip,\n      autoplay: this.isPlaying ? opts.autoplay : false,\n      duration: (_b2 = opts.duration) != null ? _b2 : this.defaultDuration,\n      onPlay: (controller) => {\n        var _a3;\n        batch.controllers.set(id, controller);\n        this.requestAnimation();\n        if (disableInteractions) {\n          this.interactionManager.pause(\"animation\");\n        }\n        (_a3 = opts.onPlay) == null ? void 0 : _a3.call(controller, controller);\n      },\n      onStop: (controller) => {\n        var _a3;\n        batch.controllers.delete(id);\n        if (disableInteractions) {\n          this.interactionManager.resume(\"animation\");\n        }\n        (_a3 = opts.onStop) == null ? void 0 : _a3.call(controller, controller);\n      }\n    }));\n  }\n  play() {\n    if (this.isPlaying) {\n      return;\n    }\n    this.isPlaying = true;\n    this.debug(\"AnimationManager.play()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.play();\n      } catch (error) {\n        this.failsafeOnError(error);\n      }\n    }\n    this.requestAnimation();\n  }\n  pause() {\n    if (!this.isPlaying) {\n      return;\n    }\n    this.isPlaying = false;\n    this.cancelAnimation();\n    this.debug(\"AnimationManager.pause()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.pause();\n      } catch (error) {\n        this.failsafeOnError(error);\n      }\n    }\n  }\n  stop() {\n    this.isPlaying = false;\n    this.cancelAnimation();\n    this.debug(\"AnimationManager.stop()\");\n    for (const controller of this.batch.controllers.values()) {\n      try {\n        controller.stop();\n      } catch (error) {\n        this.failsafeOnError(error, false);\n      }\n    }\n  }\n  stopByAnimationId(id) {\n    var _a;\n    try {\n      if (id != null && this.batch.controllers.has(id)) {\n        (_a = this.batch.controllers.get(id)) == null ? void 0 : _a.stop();\n      }\n    } catch (error) {\n      this.failsafeOnError(error);\n      return;\n    }\n  }\n  stopByAnimationGroupId(id) {\n    for (const controller of this.batch.controllers.values()) {\n      if (controller.groupId === id) {\n        this.stopByAnimationId(controller.id);\n      }\n    }\n  }\n  reset() {\n    if (this.isPlaying) {\n      this.stop();\n      this.play();\n    } else {\n      this.stop();\n    }\n  }\n  skip(skip = true) {\n    this.skipAnimations = skip;\n  }\n  isSkipped() {\n    return this.skipAnimations || this.batch.isSkipped();\n  }\n  isActive() {\n    return this.isPlaying && this.batch.isActive();\n  }\n  skipCurrentBatch() {\n    if (Debug.check(...DEBUG_SELECTORS)) {\n      this.debug(`AnimationManager - skipCurrentBatch()`, { stack: new Error().stack });\n    }\n    this.batch.skip();\n  }\n  /** Mocking point for tests to guarantee that animation updates happen. */\n  isSkippingFrames() {\n    return true;\n  }\n  /** Mocking point for tests to capture requestAnimationFrame callbacks. */\n  scheduleAnimationFrame(cb) {\n    this.requestId = requestAnimationFrame(cb);\n  }\n  requestAnimation() {\n    if (!this.batch.isActive() || this.requestId !== null)\n      return;\n    let prevTime;\n    const onAnimationFrame = (time) => __async(this, null, function* () {\n      const executeAnimationFrame = () => __async(this, null, function* () {\n        const deltaTime = time - (prevTime != null ? prevTime : time);\n        prevTime = time;\n        this.debug(\"AnimationManager - onAnimationFrame()\", {\n          controllersCount: this.batch.controllers.size\n        });\n        for (const controller of this.batch.controllers.values()) {\n          try {\n            controller.update(deltaTime);\n          } catch (error) {\n            this.failsafeOnError(error);\n          }\n        }\n        this.listeners.dispatch(\"animation-frame\", {\n          type: \"animation-frame\",\n          deltaMs: deltaTime\n        });\n      });\n      if (this.isSkippingFrames()) {\n        yield this.chartUpdateMutex.acquireImmediately(executeAnimationFrame);\n      } else {\n        yield this.chartUpdateMutex.acquire(executeAnimationFrame);\n      }\n      if (this.batch.isActive()) {\n        this.scheduleAnimationFrame(onAnimationFrame);\n      }\n    });\n    this.scheduleAnimationFrame(onAnimationFrame);\n  }\n  cancelAnimation() {\n    if (this.requestId === null)\n      return;\n    cancelAnimationFrame(this.requestId);\n    this.requestId = null;\n    this.startBatch();\n  }\n  failsafeOnError(error, cancelAnimation = true) {\n    Logger.error(\"Error during animation, skipping animations\", error);\n    if (cancelAnimation) {\n      this.cancelAnimation();\n    }\n  }\n  startBatch(skipAnimations) {\n    this.debug(`AnimationManager - startBatch() with skipAnimations=${skipAnimations}.`);\n    this.reset();\n    this.batch.destroy();\n    this.batch = new AnimationBatch();\n    if (skipAnimations === true) {\n      this.batch.skip();\n    }\n  }\n  endBatch() {\n    this.debug(\n      `AnimationManager - endBatch() with ${this.batch.controllers.size} animations; skipped: ${this.batch.isSkipped()}.`\n    );\n    if (this.batch.isSkipped() && !this.batch.isActive()) {\n      this.batch.skip(false);\n    }\n  }\n};\nvar AnimationBatch = class {\n  constructor() {\n    this.controllers = /* @__PURE__ */ new Map();\n    this.skipAnimations = false;\n  }\n  // private phase?: 'initial-load' | 'remove' | 'update' | 'add';\n  isActive() {\n    return this.controllers.size > 0;\n  }\n  skip(skip = true) {\n    if (this.skipAnimations === false && skip === true) {\n      for (const controller of this.controllers.values()) {\n        controller.stop();\n      }\n      this.controllers.clear();\n    }\n    this.skipAnimations = skip;\n  }\n  isSkipped() {\n    return this.skipAnimations;\n  }\n  destroy() {\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/chartEventManager.ts\nvar ChartEventManager = class extends BaseManager {\n  legendItemClick(series, itemId, enabled, legendItemName) {\n    const event = {\n      type: \"legend-item-click\",\n      series,\n      itemId,\n      enabled,\n      legendItemName\n    };\n    this.listeners.dispatch(\"legend-item-click\", event);\n  }\n  legendItemDoubleClick(series, itemId, enabled, numVisibleItems, legendItemName) {\n    const event = {\n      type: \"legend-item-double-click\",\n      series,\n      itemId,\n      enabled,\n      legendItemName,\n      numVisibleItems\n    };\n    this.listeners.dispatch(\"legend-item-double-click\", event);\n  }\n  axisHover(axisId, direction) {\n    const event = {\n      type: \"axis-hover\",\n      axisId,\n      direction\n    };\n    this.listeners.dispatch(\"axis-hover\", event);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/cursorManager.ts\nvar CursorManager = class {\n  constructor(element2) {\n    this.states = {};\n    this.element = element2;\n  }\n  updateCursor(callerId, style) {\n    delete this.states[callerId];\n    if (style != null) {\n      this.states[callerId] = { style };\n    }\n    this.applyStates();\n  }\n  applyStates() {\n    let styleToApply = \"default\";\n    Object.entries(this.states).reverse().slice(0, 1).forEach(([_, { style }]) => styleToApply = style);\n    this.element.style.cursor = styleToApply;\n  }\n  getCursor() {\n    return this.element.style.cursor;\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/highlightManager.ts\nvar HighlightManager = class extends BaseManager {\n  constructor() {\n    super(...arguments);\n    this.highlightStates = /* @__PURE__ */ new Map();\n    this.pickedStates = /* @__PURE__ */ new Map();\n  }\n  updateHighlight(callerId, highlightedDatum) {\n    this.highlightStates.delete(callerId);\n    if (highlightedDatum != null) {\n      this.highlightStates.set(callerId, highlightedDatum);\n    }\n    this.applyHighlightStates();\n  }\n  getActiveHighlight() {\n    return this.activeHighlight;\n  }\n  updatePicked(callerId, clickableDatum) {\n    this.pickedStates.delete(callerId);\n    if (clickableDatum != null) {\n      this.pickedStates.set(callerId, clickableDatum);\n    }\n    this.applyPickedStates();\n  }\n  getActivePicked() {\n    return this.activePicked;\n  }\n  applyHighlightStates() {\n    const { activeHighlight: previousHighlight } = this;\n    this.activeHighlight = Array.from(this.highlightStates.values()).pop();\n    if (!this.isEqual(this.activeHighlight, previousHighlight)) {\n      this.listeners.dispatch(\"highlight-change\", {\n        type: \"highlight-change\",\n        currentHighlight: this.activeHighlight,\n        previousHighlight\n      });\n    }\n  }\n  applyPickedStates() {\n    this.activePicked = Array.from(this.pickedStates.values()).pop();\n  }\n  isEqual(a, b) {\n    return a === b || (a == null ? void 0 : a.series) === (b == null ? void 0 : b.series) && (a == null ? void 0 : a.itemId) === (b == null ? void 0 : b.itemId) && (a == null ? void 0 : a.datum) === (b == null ? void 0 : b.datum);\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/interactionManager.ts\nvar WINDOW_EVENT_HANDLERS = [\"pagehide\", \"mousemove\", \"mouseup\"];\nvar EVENT_HANDLERS = [\n  \"click\",\n  \"dblclick\",\n  \"contextmenu\",\n  \"mousedown\",\n  \"mouseout\",\n  \"mouseenter\",\n  \"touchstart\",\n  \"touchmove\",\n  \"touchend\",\n  \"touchcancel\",\n  \"wheel\"\n];\nvar CSS = `\n.ag-chart-wrapper {\n    touch-action: none;\n}\n`;\nvar _InteractionManager = class _InteractionManager extends BaseManager {\n  constructor(element2, document2, window2) {\n    super();\n    this.eventHandler = (event) => this.processEvent(event);\n    this.mouseDown = false;\n    this.touchDown = false;\n    this.pausers = { animation: 0, \"context-menu\": 0 };\n    this.rootElement = document2.body;\n    this.element = element2;\n    this.window = window2;\n    for (const type of EVENT_HANDLERS) {\n      if (type.startsWith(\"touch\")) {\n        element2.addEventListener(type, this.eventHandler, { passive: true });\n      } else if (type === \"wheel\") {\n        element2.addEventListener(type, this.eventHandler, { passive: false });\n      } else {\n        element2.addEventListener(type, this.eventHandler);\n      }\n    }\n    for (const type of WINDOW_EVENT_HANDLERS) {\n      this.window.addEventListener(type, this.eventHandler);\n    }\n    if (!_InteractionManager.interactionDocuments.includes(document2)) {\n      injectStyle(document2, CSS);\n      _InteractionManager.interactionDocuments.push(document2);\n    }\n  }\n  destroy() {\n    for (const type of WINDOW_EVENT_HANDLERS) {\n      this.window.removeEventListener(type, this.eventHandler);\n    }\n    for (const type of EVENT_HANDLERS) {\n      this.element.removeEventListener(type, this.eventHandler);\n    }\n  }\n  resume(pauseType) {\n    this.pausers[pauseType]--;\n  }\n  pause(pauseType) {\n    this.pausers[pauseType]++;\n  }\n  processEvent(event) {\n    const types = this.decideInteractionEventTypes(event);\n    if (types.length > 0) {\n      this.dispatchEvent(event, types).catch((e) => Logger.errorOnce(e));\n    }\n  }\n  dispatchEvent(event, types) {\n    return __async(this, null, function* () {\n      const coords = this.calculateCoordinates(event);\n      if (coords == null) {\n        return;\n      }\n      const pauses = Object.entries(this.pausers).filter(([, count2]) => count2 > 0).map(([pause]) => pause);\n      for (const type of types) {\n        this.listeners.dispatchWrapHandlers(\n          type,\n          (handler, meta, interactionEvent) => {\n            var _a;\n            if (pauses.length > 0 && !((_a = meta == null ? void 0 : meta.bypassPause) == null ? void 0 : _a.some((p) => pauses.includes(p)))) {\n              return;\n            }\n            if (!interactionEvent.consumed) {\n              handler(interactionEvent);\n            }\n          },\n          this.buildEvent(__spreadValues({ type, event, pauses }, coords))\n        );\n      }\n    });\n  }\n  decideInteractionEventTypes(event) {\n    const dragStart = \"drag-start\";\n    switch (event.type) {\n      case \"click\":\n        return [\"click\"];\n      case \"dblclick\":\n        return [\"dblclick\"];\n      case \"contextmenu\":\n        return [\"contextmenu\"];\n      case \"mousedown\":\n        this.mouseDown = true;\n        this.dragStartElement = event.target;\n        return [dragStart];\n      case \"touchstart\":\n        this.touchDown = true;\n        this.dragStartElement = event.target;\n        return [dragStart];\n      case \"touchmove\":\n      case \"mousemove\":\n        if (!this.mouseDown && !this.touchDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        return this.mouseDown || this.touchDown ? [\"drag\"] : [\"hover\"];\n      case \"mouseup\":\n        if (!this.mouseDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        this.mouseDown = false;\n        this.dragStartElement = void 0;\n        return [\"drag-end\"];\n      case \"touchend\":\n        if (!this.touchDown && !this.isEventOverElement(event)) {\n          return [];\n        }\n        this.touchDown = false;\n        this.dragStartElement = void 0;\n        return [\"drag-end\"];\n      case \"mouseout\":\n      case \"touchcancel\":\n        return [\"leave\"];\n      case \"mouseenter\":\n        const mouseButtonDown = event instanceof MouseEvent && (event.buttons & 1) === 1;\n        if (this.mouseDown !== mouseButtonDown) {\n          this.mouseDown = mouseButtonDown;\n          return [mouseButtonDown ? dragStart : \"drag-end\"];\n        }\n        return [];\n      case \"pagehide\":\n        return [\"page-left\"];\n      case \"wheel\":\n        return [\"wheel\"];\n    }\n    return [];\n  }\n  isEventOverElement(event) {\n    var _a;\n    return event.target === this.element || ((_a = event.target) == null ? void 0 : _a.parentElement) === this.element;\n  }\n  calculateCoordinates(event) {\n    var _a;\n    if (event instanceof MouseEvent) {\n      const { clientX, clientY, pageX, pageY, offsetX, offsetY } = event;\n      return this.fixOffsets(event, { clientX, clientY, pageX, pageY, offsetX, offsetY });\n    } else if (typeof TouchEvent !== \"undefined\" && event instanceof TouchEvent) {\n      const lastTouch = (_a = event.touches[0]) != null ? _a : event.changedTouches[0];\n      const { clientX, clientY, pageX, pageY } = lastTouch;\n      return __spreadProps(__spreadValues({}, _InteractionManager.NULL_COORDS), { clientX, clientY, pageX, pageY });\n    } else if (event instanceof PageTransitionEvent) {\n      if (event.persisted) {\n        return;\n      }\n      return _InteractionManager.NULL_COORDS;\n    }\n  }\n  fixOffsets(event, coords) {\n    const offsets = (el) => {\n      let x = 0;\n      let y = 0;\n      while (el) {\n        x += el.offsetLeft;\n        y += el.offsetTop;\n        el = el.offsetParent;\n      }\n      return { x, y };\n    };\n    if (this.dragStartElement != null && event.target !== this.dragStartElement) {\n      const offsetDragStart = offsets(this.dragStartElement);\n      const offsetEvent = offsets(event.target);\n      coords.offsetX -= offsetDragStart.x - offsetEvent.x;\n      coords.offsetY -= offsetDragStart.y - offsetEvent.y;\n    }\n    return coords;\n  }\n  buildEvent(opts) {\n    const { type, event, clientX, clientY, pauses } = opts;\n    let { offsetX, offsetY, pageX, pageY } = opts;\n    if (!isNumber2(offsetX) || !isNumber2(offsetY)) {\n      const rect = this.element.getBoundingClientRect();\n      offsetX = clientX - rect.left;\n      offsetY = clientY - rect.top;\n    }\n    if (!isNumber2(pageX) || !isNumber2(pageY)) {\n      const pageRect = this.rootElement.getBoundingClientRect();\n      pageX = clientX - pageRect.left;\n      pageY = clientY - pageRect.top;\n    }\n    const builtEvent = {\n      type,\n      offsetX,\n      offsetY,\n      pageX,\n      pageY,\n      sourceEvent: event,\n      consumed: false,\n      pauses,\n      consume() {\n        builtEvent.consumed = true;\n      }\n    };\n    return builtEvent;\n  }\n};\n_InteractionManager.interactionDocuments = [];\n_InteractionManager.NULL_COORDS = {\n  clientX: -Infinity,\n  clientY: -Infinity,\n  pageX: -Infinity,\n  pageY: -Infinity,\n  offsetX: -Infinity,\n  offsetY: -Infinity\n};\nvar InteractionManager = _InteractionManager;\n\n// packages/ag-charts-community/src/chart/interaction/tooltipManager.ts\nvar TooltipManager = class {\n  constructor(tooltip, interactionManager) {\n    this.states = {};\n    this.exclusiveAreas = {};\n    this.destroyFns = [];\n    this.tooltip = tooltip;\n    this.destroyFns.push(interactionManager.addListener(\"hover\", (e) => this.checkExclusiveRects(e)));\n  }\n  getRange() {\n    return this.tooltip.range;\n  }\n  updateTooltip(callerId, meta, content) {\n    var _a;\n    if (content == null) {\n      content = (_a = this.states[callerId]) == null ? void 0 : _a.content;\n    }\n    this.states[callerId] = { content, meta };\n    this.applyStates();\n  }\n  updateExclusiveRect(callerId, area2) {\n    if (area2) {\n      this.exclusiveAreas[callerId] = area2;\n    } else {\n      delete this.exclusiveAreas[callerId];\n    }\n  }\n  removeTooltip(callerId) {\n    delete this.states[callerId];\n    this.applyStates();\n  }\n  getTooltipMeta(callerId) {\n    var _a;\n    return (_a = this.states[callerId]) == null ? void 0 : _a.meta;\n  }\n  destroy() {\n    for (const destroyFn of this.destroyFns) {\n      destroyFn();\n    }\n  }\n  checkExclusiveRects(e) {\n    let newAppliedExclusiveArea;\n    for (const [entryId, area2] of Object.entries(this.exclusiveAreas)) {\n      if (!area2.containsPoint(e.offsetX, e.offsetY)) {\n        continue;\n      }\n      newAppliedExclusiveArea = entryId;\n      break;\n    }\n    if (newAppliedExclusiveArea === this.appliedExclusiveArea) {\n      return;\n    }\n    this.appliedExclusiveArea = newAppliedExclusiveArea;\n    this.applyStates();\n  }\n  applyStates() {\n    var _a;\n    const ids = this.appliedExclusiveArea ? [this.appliedExclusiveArea] : Object.keys(this.states);\n    let contentToApply;\n    let metaToApply;\n    ids.reverse();\n    ids.slice(0, 1).forEach((id) => {\n      var _a2;\n      const { content, meta } = (_a2 = this.states[id]) != null ? _a2 : {};\n      contentToApply = content;\n      metaToApply = meta;\n    });\n    if (metaToApply === void 0 || contentToApply === void 0) {\n      this.appliedState = void 0;\n      this.tooltip.toggle(false);\n      return;\n    }\n    if (((_a = this.appliedState) == null ? void 0 : _a.content) === contentToApply) {\n      const renderInstantly = this.tooltip.isVisible();\n      this.tooltip.show(metaToApply, void 0, renderInstantly);\n    } else {\n      this.tooltip.show(metaToApply, contentToApply);\n    }\n    this.appliedState = { content: contentToApply, meta: metaToApply };\n  }\n  static makeTooltipMeta(event, canvas, datum, window2) {\n    var _a, _b, _c, _d;\n    const { pageX, pageY, offsetX, offsetY } = event;\n    const { tooltip } = datum.series.properties;\n    const position = {\n      xOffset: tooltip.position.xOffset,\n      yOffset: tooltip.position.yOffset\n    };\n    const meta = {\n      pageX,\n      pageY,\n      offsetX,\n      offsetY,\n      event,\n      showArrow: tooltip.showArrow,\n      position\n    };\n    const refPoint = (_b = (_a = datum.yBar) == null ? void 0 : _a.upperPoint) != null ? _b : datum.midPoint;\n    if (tooltip.position.type === \"node\" && refPoint) {\n      const { x, y } = refPoint;\n      const point = datum.series.contentGroup.inverseTransformPoint(x, y);\n      const canvasRect = canvas.element.getBoundingClientRect();\n      return __spreadProps(__spreadValues({}, meta), {\n        pageX: Math.round(canvasRect.left + window2.scrollX + point.x),\n        pageY: Math.round(canvasRect.top + window2.scrollY + point.y),\n        offsetX: Math.round(point.x),\n        offsetY: Math.round(point.y)\n      });\n    }\n    meta.enableInteraction = (_d = (_c = tooltip.interaction) == null ? void 0 : _c.enabled) != null ? _d : false;\n    return meta;\n  }\n};\n\n// packages/ag-charts-community/src/chart/interaction/zoomManager.ts\nvar ZoomManager = class extends BaseManager {\n  constructor() {\n    super(...arguments);\n    this.axes = {};\n  }\n  updateAxes(axes) {\n    var _a;\n    const removedAxes = new Set(Object.keys(this.axes));\n    axes.forEach((axis) => {\n      var _a2, _b, _c;\n      removedAxes.delete(axis.id);\n      (_c = (_a2 = this.axes)[_b = axis.id]) != null ? _c : _a2[_b] = new AxisZoomManager(axis);\n    });\n    removedAxes.forEach((axisId) => {\n      delete this.axes[axisId];\n    });\n    if ((_a = this.initialZoom) == null ? void 0 : _a.newZoom) {\n      this.updateZoom(this.initialZoom.callerId, this.initialZoom.newZoom);\n    }\n    this.initialZoom = void 0;\n  }\n  updateZoom(callerId, newZoom) {\n    if (Object.keys(this.axes).length === 0) {\n      this.initialZoom = { callerId, newZoom };\n      return;\n    }\n    Object.values(this.axes).forEach((axis) => {\n      axis.updateZoom(callerId, newZoom == null ? void 0 : newZoom[axis.getDirection()]);\n    });\n    this.applyStates();\n  }\n  updateAxisZoom(callerId, axisId, newZoom) {\n    var _a;\n    (_a = this.axes[axisId]) == null ? void 0 : _a.updateZoom(callerId, newZoom);\n    this.applyStates();\n  }\n  getZoom() {\n    let x;\n    let y;\n    Object.values(this.axes).forEach((axis) => {\n      if (axis.getDirection() === \"x\" /* X */) {\n        x = axis.getZoom();\n      } else if (axis.getDirection() === \"y\" /* Y */) {\n        y = axis.getZoom();\n      }\n    });\n    if (x || y) {\n      return { x, y };\n    }\n  }\n  getAxisZoom(axisId) {\n    var _a;\n    return (_a = this.axes[axisId]) == null ? void 0 : _a.getZoom();\n  }\n  getAxisZooms() {\n    const axes = {};\n    for (const [axisId, axis] of Object.entries(this.axes)) {\n      axes[axisId] = {\n        direction: axis.getDirection(),\n        zoom: axis.getZoom()\n      };\n    }\n    return axes;\n  }\n  applyStates() {\n    const changed = Object.values(this.axes).map((axis) => axis.applyStates()).some(Boolean);\n    if (!changed) {\n      return;\n    }\n    const currentZoom = this.getZoom();\n    const axes = {};\n    for (const [axisId, axis] of Object.entries(this.axes)) {\n      axes[axisId] = axis.getZoom();\n    }\n    this.listeners.dispatch(\"zoom-change\", __spreadProps(__spreadValues({\n      type: \"zoom-change\"\n    }, currentZoom != null ? currentZoom : {}), {\n      axes\n    }));\n  }\n};\nvar AxisZoomManager = class {\n  constructor(axis) {\n    this.states = {};\n    this.axis = axis;\n    const [min = 0, max = 1] = axis.visibleRange;\n    this.currentZoom = { min, max };\n    this.states[\"__initial__\"] = this.currentZoom;\n  }\n  getDirection() {\n    return this.axis.direction;\n  }\n  updateZoom(callerId, newZoom) {\n    delete this.states[callerId];\n    if (newZoom != null) {\n      this.states[callerId] = __spreadValues({}, newZoom);\n    }\n  }\n  getZoom() {\n    return this.currentZoom;\n  }\n  applyStates() {\n    var _a, _b;\n    const prevZoom = this.currentZoom;\n    const last = Object.keys(this.states)[Object.keys(this.states).length - 1];\n    this.currentZoom = __spreadValues({}, this.states[last]);\n    return (prevZoom == null ? void 0 : prevZoom.min) !== ((_a = this.currentZoom) == null ? void 0 : _a.min) || (prevZoom == null ? void 0 : prevZoom.max) !== ((_b = this.currentZoom) == null ? void 0 : _b.max);\n  }\n};\n\n// packages/ag-charts-community/src/chart/layout/layoutService.ts\nvar LayoutService = class extends Listeners {\n  constructor() {\n    super(...arguments);\n    this.layoutComplete = \"layout-complete\";\n  }\n  addListener(eventType, handler) {\n    if (this.isLayoutStage(eventType) || this.isLayoutComplete(eventType)) {\n      return super.addListener(eventType, handler);\n    }\n    throw new Error(`AG Charts - unsupported listener type: ${eventType}`);\n  }\n  dispatchPerformLayout(stage, ctx) {\n    if (this.isLayoutStage(stage)) {\n      return this.getListenersByType(stage).reduce((result, listener) => {\n        try {\n          return listener.handler(result);\n        } catch (e) {\n          Logger.errorOnce(e);\n          return result;\n        }\n      }, ctx);\n    }\n    return ctx;\n  }\n  dispatchLayoutComplete(event) {\n    this.dispatch(this.layoutComplete, event);\n  }\n  isLayoutStage(eventType) {\n    return eventType !== this.layoutComplete;\n  }\n  isLayoutComplete(eventType) {\n    return eventType === this.layoutComplete;\n  }\n};\n\n// packages/ag-charts-community/src/chart/gridLayout.ts\nfunction gridLayout({\n  orientation,\n  bboxes,\n  maxHeight,\n  maxWidth,\n  itemPaddingY = 0,\n  itemPaddingX = 0,\n  forceResult = false\n}) {\n  const horizontal = orientation === \"horizontal\";\n  const primary = {\n    max: horizontal ? maxWidth : maxHeight,\n    fn: horizontal ? (b) => b.width : (b) => b.height,\n    padding: horizontal ? itemPaddingX : itemPaddingY\n  };\n  const secondary = {\n    max: !horizontal ? maxWidth : maxHeight,\n    fn: !horizontal ? (b) => b.width : (b) => b.height,\n    padding: !horizontal ? itemPaddingX : itemPaddingY\n  };\n  let processedBBoxCount = 0;\n  const rawPages = [];\n  while (processedBBoxCount < bboxes.length) {\n    const unprocessedBBoxes = bboxes.slice(processedBBoxCount);\n    const result = processBBoxes(unprocessedBBoxes, processedBBoxCount, primary, secondary, forceResult);\n    if (!result) {\n      return;\n    }\n    processedBBoxCount += result.processedBBoxCount;\n    rawPages.push(result.pageIndices);\n  }\n  return buildPages(rawPages, orientation, bboxes, itemPaddingY, itemPaddingX);\n}\nfunction processBBoxes(bboxes, indexOffset, primary, secondary, forceResult) {\n  const minGuess = 1;\n  let startingGuess = estimateStartingGuess(bboxes, primary);\n  if (startingGuess < minGuess) {\n    if (!forceResult) {\n      return void 0;\n    }\n    startingGuess = minGuess;\n  }\n  for (let guess = startingGuess; guess >= minGuess; guess--) {\n    const pageIndices = calculatePage(bboxes, indexOffset, guess, primary, secondary, forceResult);\n    if (pageIndices == null && guess <= minGuess) {\n      return void 0;\n    }\n    if (pageIndices == null) {\n      continue;\n    }\n    if (typeof pageIndices === \"number\") {\n      if (pageIndices <= minGuess) {\n        return void 0;\n      }\n      guess = pageIndices < guess && pageIndices > minGuess ? pageIndices : guess;\n      continue;\n    }\n    const processedBBoxCount = pageIndices.length * pageIndices[0].length;\n    return { processedBBoxCount, pageIndices };\n  }\n}\nfunction calculatePage(bboxes, indexOffset, primaryCount, primary, secondary, forceResult) {\n  var _a;\n  const result = [];\n  let sumSecondary = 0;\n  let currentMaxSecondary = 0;\n  let currentPrimaryIndices = [];\n  const maxPrimaryValues = [];\n  for (let bboxIndex = 0; bboxIndex < bboxes.length; bboxIndex++) {\n    const primaryValueIdx = (bboxIndex + primaryCount) % primaryCount;\n    if (primaryValueIdx === 0) {\n      sumSecondary += currentMaxSecondary;\n      currentMaxSecondary = 0;\n      if (currentPrimaryIndices.length > 0) {\n        result.push(currentPrimaryIndices);\n      }\n      currentPrimaryIndices = [];\n    }\n    const primaryValue = primary.fn(bboxes[bboxIndex]) + primary.padding;\n    maxPrimaryValues[primaryValueIdx] = Math.max((_a = maxPrimaryValues[primaryValueIdx]) != null ? _a : 0, primaryValue);\n    currentMaxSecondary = Math.max(currentMaxSecondary, secondary.fn(bboxes[bboxIndex]) + secondary.padding);\n    const currentSecondaryDimension = sumSecondary + currentMaxSecondary;\n    const returnResult = !forceResult || result.length > 0;\n    if (currentSecondaryDimension > secondary.max && returnResult) {\n      currentPrimaryIndices = [];\n      break;\n    }\n    const sumPrimary = maxPrimaryValues.reduce((sum2, next) => sum2 + next, 0);\n    if (sumPrimary > primary.max && !forceResult) {\n      if (maxPrimaryValues.length < primaryCount) {\n        return maxPrimaryValues.length;\n      }\n      return void 0;\n    }\n    currentPrimaryIndices.push(bboxIndex + indexOffset);\n  }\n  if (currentPrimaryIndices.length > 0) {\n    result.push(currentPrimaryIndices);\n  }\n  return result.length > 0 ? result : void 0;\n}\nfunction buildPages(rawPages, orientation, bboxes, itemPaddingY, itemPaddingX) {\n  let maxPageWidth = 0;\n  let maxPageHeight = 0;\n  const pages = rawPages.map((indices) => {\n    if (orientation === \"horizontal\") {\n      indices = transpose(indices);\n    }\n    let endIndex = 0;\n    const columns = indices.map((colIndices) => {\n      const colBBoxes = colIndices.map((bboxIndex) => {\n        endIndex = Math.max(bboxIndex, endIndex);\n        return bboxes[bboxIndex];\n      });\n      let columnHeight = 0;\n      let columnWidth = 0;\n      colBBoxes.forEach((bbox) => {\n        columnHeight += bbox.height + itemPaddingY;\n        columnWidth = Math.max(columnWidth, bbox.width + itemPaddingX);\n      });\n      return {\n        indices: colIndices,\n        bboxes: colBBoxes,\n        columnHeight: Math.ceil(columnHeight),\n        columnWidth: Math.ceil(columnWidth)\n      };\n    });\n    let pageWidth = 0;\n    let pageHeight = 0;\n    columns.forEach((column) => {\n      pageWidth += column.columnWidth;\n      pageHeight = Math.max(pageHeight, column.columnHeight);\n    });\n    maxPageWidth = Math.max(pageWidth, maxPageWidth);\n    maxPageHeight = Math.max(pageHeight, maxPageHeight);\n    return {\n      columns,\n      startIndex: indices[0][0],\n      endIndex,\n      pageWidth,\n      pageHeight\n    };\n  });\n  return { pages, maxPageWidth, maxPageHeight };\n}\nfunction transpose(data) {\n  const result = [];\n  for (const _ of data[0]) {\n    result.push([]);\n  }\n  data.forEach((innerData, dataIdx) => {\n    innerData.forEach((item, itemIdx) => {\n      result[itemIdx][dataIdx] = item;\n    });\n  });\n  return result;\n}\nfunction estimateStartingGuess(bboxes, primary) {\n  const n = bboxes.length;\n  let primarySum = 0;\n  for (let bboxIndex = 0; bboxIndex < n; bboxIndex++) {\n    primarySum += primary.fn(bboxes[bboxIndex]) + primary.padding;\n    if (primarySum > primary.max) {\n      const ratio = n / bboxIndex;\n      if (ratio < 2) {\n        return Math.ceil(n / 2);\n      }\n      return bboxIndex;\n    }\n  }\n  return n;\n}\n\n// packages/ag-charts-community/src/chart/markerLabel.ts\nvar MarkerLabel = class extends Group {\n  constructor() {\n    super({ name: \"markerLabelGroup\" });\n    this.label = new Text();\n    this.line = new Line();\n    this._marker = new Square();\n    this._markerSize = 15;\n    this._spacing = 8;\n    const { marker, label, line } = this;\n    label.textBaseline = \"middle\";\n    label.fontSize = 12;\n    label.fontFamily = \"Verdana, sans-serif\";\n    label.fill = \"black\";\n    label.y = HdpiCanvas.has.textMetrics ? 1 : 0;\n    this.append([line, marker, label]);\n    this.update();\n  }\n  set marker(value) {\n    if (this._marker !== value) {\n      this.removeChild(this._marker);\n      this._marker = value;\n      this.appendChild(value);\n      this.update();\n    }\n  }\n  get marker() {\n    return this._marker;\n  }\n  set markerSize(value) {\n    if (this._markerSize !== value) {\n      this._markerSize = value;\n      this.update();\n    }\n  }\n  get markerSize() {\n    return this._markerSize;\n  }\n  set spacing(value) {\n    if (this._spacing !== value) {\n      this._spacing = value;\n      this.update();\n    }\n  }\n  get spacing() {\n    return this._spacing;\n  }\n  setSeriesStrokeOffset(xOff) {\n    const offset4 = this.marker.size / 2 + xOff;\n    this.line.x1 = -offset4;\n    this.line.x2 = offset4;\n    this.line.y1 = 0;\n    this.line.y2 = 0;\n    this.line.markDirtyTransform();\n    this.update();\n  }\n  update() {\n    this.marker.size = this.markerSize;\n    const lineEnd = this.line.visible ? this.line.x2 : -Infinity;\n    const markerEnd = this.markerSize / 2;\n    this.label.x = Math.max(lineEnd, markerEnd) + this.spacing;\n  }\n  render(renderCtx) {\n    this.marker.opacity = this.opacity;\n    this.label.opacity = this.opacity;\n    this.line.opacity = this.opacity;\n    super.render(renderCtx);\n  }\n};\nMarkerLabel.className = \"MarkerLabel\";\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\")\n], MarkerLabel.prototype, \"text\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\")\n], MarkerLabel.prototype, \"fontStyle\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\")\n], MarkerLabel.prototype, \"fontWeight\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\")\n], MarkerLabel.prototype, \"fontSize\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\")\n], MarkerLabel.prototype, \"fontFamily\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"label\", \"fill\")\n], MarkerLabel.prototype, \"color\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"fill\")\n], MarkerLabel.prototype, \"markerFill\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"stroke\")\n], MarkerLabel.prototype, \"markerStroke\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"strokeWidth\")\n], MarkerLabel.prototype, \"markerStrokeWidth\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"fillOpacity\")\n], MarkerLabel.prototype, \"markerFillOpacity\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"strokeOpacity\")\n], MarkerLabel.prototype, \"markerStrokeOpacity\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"marker\", \"visible\")\n], MarkerLabel.prototype, \"markerVisible\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"line\", \"stroke\")\n], MarkerLabel.prototype, \"lineStroke\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"line\", \"strokeWidth\")\n], MarkerLabel.prototype, \"lineStrokeWidth\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"line\", \"strokeOpacity\")\n], MarkerLabel.prototype, \"lineStrokeOpacity\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"line\", \"lineDash\")\n], MarkerLabel.prototype, \"lineLineDash\", 2);\n__decorateClass([\n  ProxyPropertyOnWrite(\"line\", \"visible\")\n], MarkerLabel.prototype, \"lineVisible\", 2);\n\n// packages/ag-charts-community/src/chart/pagination/pagination.ts\nvar PaginationLabel = class {\n  constructor() {\n    this.color = \"black\";\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n  }\n};\n__decorateClass([\n  Validate(COLOR_STRING)\n], PaginationLabel.prototype, \"color\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], PaginationLabel.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], PaginationLabel.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PaginationLabel.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], PaginationLabel.prototype, \"fontFamily\", 2);\nvar PaginationMarkerStyle = class {\n  constructor() {\n    this.size = 15;\n    this.fill = void 0;\n    this.fillOpacity = void 0;\n    this.stroke = void 0;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PaginationMarkerStyle.prototype, \"size\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], PaginationMarkerStyle.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], PaginationMarkerStyle.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], PaginationMarkerStyle.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PaginationMarkerStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PaginationMarkerStyle.prototype, \"strokeOpacity\", 2);\nvar PaginationMarker = class {\n  constructor(parent) {\n    this.parent = parent;\n    this.shape = Triangle;\n    this.size = 15;\n    this.padding = 8;\n  }\n};\n__decorateClass([\n  ActionOnSet({\n    changeValue() {\n      if (this.parent.marker === this) {\n        this.parent.onMarkerShapeChange();\n      }\n    }\n  })\n], PaginationMarker.prototype, \"shape\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PaginationMarker.prototype, \"size\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PaginationMarker.prototype, \"padding\", 2);\nvar Pagination = class {\n  constructor(chartUpdateCallback, pageUpdateCallback, interactionManager, cursorManager) {\n    this.chartUpdateCallback = chartUpdateCallback;\n    this.pageUpdateCallback = pageUpdateCallback;\n    this.interactionManager = interactionManager;\n    this.cursorManager = cursorManager;\n    this.id = createId(this);\n    this.group = new Group({ name: \"pagination\" });\n    this.labelNode = new Text();\n    this.marker = new PaginationMarker(this);\n    this.activeStyle = new PaginationMarkerStyle();\n    this.inactiveStyle = new PaginationMarkerStyle();\n    this.highlightStyle = new PaginationMarkerStyle();\n    this.label = new PaginationLabel();\n    this.totalPages = 0;\n    this.currentPage = 0;\n    this.translationX = 0;\n    this.translationY = 0;\n    this.nextButtonDisabled = false;\n    this.previousButtonDisabled = false;\n    this._visible = true;\n    this._enabled = true;\n    this._orientation = \"vertical\";\n    this._nextButton = new Triangle();\n    this._previousButton = new Triangle();\n    const { labelNode } = this;\n    labelNode.textBaseline = \"middle\";\n    labelNode.fontSize = 12;\n    labelNode.fontFamily = \"Verdana, sans-serif\";\n    labelNode.fill = \"black\";\n    labelNode.y = HdpiCanvas.has.textMetrics ? 1 : 0;\n    this.group.append([this.nextButton, this.previousButton, labelNode]);\n    this.interactionManager.addListener(\"click\", (event) => this.onPaginationClick(event));\n    this.interactionManager.addListener(\"hover\", (event) => this.onPaginationMouseMove(event));\n    this.update();\n    this.updateMarkers();\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    this.updateGroupVisibility();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  updateGroupVisibility() {\n    this.group.visible = this.enabled && this.visible;\n  }\n  set orientation(value) {\n    this._orientation = value;\n    switch (value) {\n      case \"horizontal\": {\n        this.previousButton.rotation = -Math.PI / 2;\n        this.nextButton.rotation = Math.PI / 2;\n        break;\n      }\n      case \"vertical\":\n      default: {\n        this.previousButton.rotation = 0;\n        this.nextButton.rotation = Math.PI;\n      }\n    }\n  }\n  get orientation() {\n    return this._orientation;\n  }\n  set nextButton(value) {\n    if (this._nextButton !== value) {\n      this.group.removeChild(this._nextButton);\n      this._nextButton = value;\n      this.group.appendChild(value);\n    }\n  }\n  get nextButton() {\n    return this._nextButton;\n  }\n  set previousButton(value) {\n    if (this._previousButton !== value) {\n      this.group.removeChild(this._previousButton);\n      this._previousButton = value;\n      this.group.appendChild(value);\n    }\n  }\n  get previousButton() {\n    return this._previousButton;\n  }\n  update() {\n    this.updateLabel();\n    this.updatePositions();\n    this.enableOrDisableButtons();\n  }\n  updatePositions() {\n    this.group.translationX = this.translationX;\n    this.group.translationY = this.translationY;\n    this.updateLabelPosition();\n    this.updateNextButtonPosition();\n  }\n  updateLabelPosition() {\n    const { size: markerSize, padding: markerPadding } = this.marker;\n    this.nextButton.size = markerSize;\n    this.previousButton.size = markerSize;\n    this.labelNode.x = markerSize / 2 + markerPadding;\n  }\n  updateNextButtonPosition() {\n    const labelBBox = this.labelNode.computeBBox();\n    this.nextButton.translationX = labelBBox.x + labelBBox.width + this.marker.size / 2 + this.marker.padding;\n  }\n  updateLabel() {\n    const {\n      currentPage,\n      totalPages: pages,\n      labelNode,\n      label: { color, fontStyle, fontWeight, fontSize, fontFamily }\n    } = this;\n    labelNode.text = `${currentPage + 1} / ${pages}`;\n    labelNode.fill = color;\n    labelNode.fontStyle = fontStyle;\n    labelNode.fontWeight = fontWeight;\n    labelNode.fontSize = fontSize;\n    labelNode.fontFamily = fontFamily;\n  }\n  updateMarkers() {\n    const {\n      nextButton,\n      previousButton,\n      nextButtonDisabled,\n      previousButtonDisabled,\n      activeStyle,\n      inactiveStyle,\n      highlightStyle,\n      highlightActive\n    } = this;\n    const buttonStyle = (button, disabled) => {\n      if (disabled) {\n        return inactiveStyle;\n      } else if (button === highlightActive) {\n        return highlightStyle;\n      }\n      return activeStyle;\n    };\n    this.updateMarker(nextButton, buttonStyle(\"next\", nextButtonDisabled));\n    this.updateMarker(previousButton, buttonStyle(\"previous\", previousButtonDisabled));\n  }\n  updateMarker(marker, style) {\n    var _a;\n    const { size } = this.marker;\n    marker.size = size;\n    marker.fill = style.fill;\n    marker.fillOpacity = (_a = style.fillOpacity) != null ? _a : 1;\n    marker.stroke = style.stroke;\n    marker.strokeWidth = style.strokeWidth;\n    marker.strokeOpacity = style.strokeOpacity;\n  }\n  enableOrDisableButtons() {\n    const { currentPage, totalPages } = this;\n    const zeroPagesToDisplay = totalPages === 0;\n    const onLastPage = currentPage === totalPages - 1;\n    const onFirstPage = currentPage === 0;\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\n    this.previousButtonDisabled = onFirstPage || zeroPagesToDisplay;\n  }\n  nextButtonContainsPoint(offsetX, offsetY) {\n    return !this.nextButtonDisabled && this.nextButton.containsPoint(offsetX, offsetY);\n  }\n  previousButtonContainsPoint(offsetX, offsetY) {\n    return !this.previousButtonDisabled && this.previousButton.containsPoint(offsetX, offsetY);\n  }\n  onPaginationClick(event) {\n    const { offsetX, offsetY } = event;\n    if (this.nextButtonContainsPoint(offsetX, offsetY)) {\n      this.incrementPage();\n      this.onPaginationChanged();\n      event.consume();\n    } else if (this.previousButtonContainsPoint(offsetX, offsetY)) {\n      this.decrementPage();\n      this.onPaginationChanged();\n      event.consume();\n    }\n  }\n  onPaginationMouseMove(event) {\n    const { offsetX, offsetY } = event;\n    if (this.nextButtonContainsPoint(offsetX, offsetY)) {\n      this.cursorManager.updateCursor(this.id, \"pointer\");\n      this.highlightActive = \"next\";\n    } else if (this.previousButtonContainsPoint(offsetX, offsetY)) {\n      this.cursorManager.updateCursor(this.id, \"pointer\");\n      this.highlightActive = \"previous\";\n    } else {\n      this.cursorManager.updateCursor(this.id);\n      this.highlightActive = void 0;\n    }\n    this.updateMarkers();\n    this.chartUpdateCallback(5 /* SCENE_RENDER */);\n  }\n  onPaginationChanged() {\n    this.pageUpdateCallback(this.currentPage);\n  }\n  incrementPage() {\n    this.currentPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n  }\n  decrementPage() {\n    this.currentPage = Math.max(this.currentPage - 1, 0);\n  }\n  onMarkerShapeChange() {\n    const Marker2 = getMarker(this.marker.shape || Triangle);\n    this.previousButton = new Marker2();\n    this.nextButton = new Marker2();\n    this.updatePositions();\n    this.updateMarkers();\n    this.chartUpdateCallback(5 /* SCENE_RENDER */);\n  }\n  attachPagination(node) {\n    node.append(this.group);\n  }\n  computeBBox() {\n    return this.group.computeBBox();\n  }\n};\nPagination.className = \"Pagination\";\n\n// packages/ag-charts-community/src/chart/legend.ts\nvar LegendLabel = class {\n  constructor() {\n    this.maxLength = void 0;\n    this.color = \"black\";\n    this.fontStyle = void 0;\n    this.fontWeight = void 0;\n    this.fontSize = 12;\n    this.fontFamily = \"Verdana, sans-serif\";\n    this.formatter = void 0;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], LegendLabel.prototype, \"maxLength\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], LegendLabel.prototype, \"color\", 2);\n__decorateClass([\n  Validate(FONT_STYLE, { optional: true })\n], LegendLabel.prototype, \"fontStyle\", 2);\n__decorateClass([\n  Validate(FONT_WEIGHT, { optional: true })\n], LegendLabel.prototype, \"fontWeight\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LegendLabel.prototype, \"fontSize\", 2);\n__decorateClass([\n  Validate(STRING)\n], LegendLabel.prototype, \"fontFamily\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], LegendLabel.prototype, \"formatter\", 2);\nvar LegendMarker = class {\n  constructor() {\n    this.size = 15;\n    /**\n     * If the marker type is set, the legend will always use that marker type for all its items,\n     * regardless of the type that comes from the `data`.\n     */\n    this._shape = void 0;\n    this.padding = 8;\n    this.strokeWidth = void 0;\n    this.enabled = true;\n  }\n  set shape(value) {\n    var _a;\n    this._shape = value;\n    (_a = this.parent) == null ? void 0 : _a.onMarkerShapeChange();\n  }\n  get shape() {\n    return this._shape;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LegendMarker.prototype, \"size\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LegendMarker.prototype, \"padding\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], LegendMarker.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], LegendMarker.prototype, \"enabled\", 2);\nvar LegendLine = class {\n  constructor() {\n    this.strokeWidth = void 0;\n    this.length = void 0;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], LegendLine.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], LegendLine.prototype, \"length\", 2);\nvar LegendItem = class {\n  constructor() {\n    this.marker = new LegendMarker();\n    this.label = new LegendLabel();\n    this.line = new LegendLine();\n    this.maxWidth = void 0;\n    this.paddingX = 16;\n    this.paddingY = 8;\n    this.toggleSeriesVisible = true;\n    this.showSeriesStroke = false;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], LegendItem.prototype, \"maxWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LegendItem.prototype, \"paddingX\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LegendItem.prototype, \"paddingY\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], LegendItem.prototype, \"toggleSeriesVisible\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], LegendItem.prototype, \"showSeriesStroke\", 2);\nvar LegendListeners = class {\n  constructor() {\n    this.legendItemClick = void 0;\n    this.legendItemDoubleClick = void 0;\n  }\n};\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], LegendListeners.prototype, \"legendItemClick\", 2);\nvar Legend = class {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.id = createId(this);\n    this.group = new Group({ name: \"legend\", layer: true, zIndex: 9 /* LEGEND_ZINDEX */ });\n    this.itemSelection = Selection.select(this.group, MarkerLabel);\n    this.oldSize = [0, 0];\n    this.pages = [];\n    this.maxPageSize = [0, 0];\n    /** Item index to track on re-pagination, so current page updates appropriately. */\n    this.paginationTrackingIndex = 0;\n    this.item = new LegendItem();\n    this.listeners = new LegendListeners();\n    this.truncatedItems = /* @__PURE__ */ new Set();\n    this._data = [];\n    this._enabled = true;\n    this.position = \"bottom\";\n    this.maxWidth = void 0;\n    this.maxHeight = void 0;\n    this.reverseOrder = void 0;\n    this.preventHidingAll = void 0;\n    this.destroyFns = [];\n    this.spacing = 20;\n    this.characterWidths = /* @__PURE__ */ new Map();\n    this.size = [0, 0];\n    this._visible = true;\n    this.item.marker.parent = this;\n    this.pagination = new Pagination(\n      (type) => ctx.updateService.update(type),\n      (page) => this.updatePageNumber(page),\n      ctx.interactionManager,\n      ctx.cursorManager\n    );\n    this.pagination.attachPagination(this.group);\n    this.item.marker.parent = this;\n    const bypass = { bypassPause: [\"animation\"] };\n    this.destroyFns.push(\n      ctx.interactionManager.addListener(\"click\", (e) => this.checkLegendClick(e), bypass),\n      ctx.interactionManager.addListener(\"dblclick\", (e) => this.checkLegendDoubleClick(e), bypass),\n      ctx.interactionManager.addListener(\"hover\", (e) => this.handleLegendMouseMove(e)),\n      ctx.layoutService.addListener(\"start-layout\", (e) => this.positionLegend(e.shrinkRect)),\n      () => this.detachLegend()\n    );\n  }\n  set data(value) {\n    this._data = value;\n    this.updateGroupVisibility();\n  }\n  get data() {\n    return this._data;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    this.updateGroupVisibility();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  getOrientation() {\n    if (this.orientation !== void 0) {\n      return this.orientation;\n    }\n    switch (this.position) {\n      case \"right\":\n      case \"left\":\n        return \"vertical\";\n      case \"bottom\":\n      case \"top\":\n        return \"horizontal\";\n    }\n  }\n  destroy() {\n    this.destroyFns.forEach((f) => f());\n  }\n  onMarkerShapeChange() {\n    this.itemSelection.clear();\n    this.group.markDirty(this.group, 2 /* MINOR */);\n  }\n  getCharacterWidths(font) {\n    const { characterWidths } = this;\n    if (characterWidths.has(font)) {\n      return characterWidths.get(font);\n    }\n    const cw = {\n      \"...\": HdpiCanvas.getTextSize(\"...\", font).width\n    };\n    characterWidths.set(font, cw);\n    return cw;\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  updateGroupVisibility() {\n    this.group.visible = this.enabled && this.visible && this.data.length > 0;\n  }\n  attachLegend(node) {\n    node.append(this.group);\n  }\n  detachLegend() {\n    var _a;\n    (_a = this.group.parent) == null ? void 0 : _a.removeChild(this.group);\n  }\n  getItemLabel(datum) {\n    const {\n      ctx: { callbackCache }\n    } = this;\n    const { formatter } = this.item.label;\n    if (formatter) {\n      return callbackCache.call(formatter, {\n        itemId: datum.itemId,\n        value: datum.label.text,\n        seriesId: datum.seriesId\n      });\n    }\n    return datum.label.text;\n  }\n  /**\n   * The method is given the desired size of the legend, which only serves as a hint.\n   * The vertically oriented legend will take as much horizontal space as needed, but will\n   * respect the height constraints, and the horizontal legend will take as much vertical\n   * space as needed in an attempt not to exceed the given width.\n   * After the layout is done, the {@link size} will contain the actual size of the legend.\n   * If the actual size is not the same as the previous actual size, the legend will fire\n   * the 'layoutChange' event to communicate that another layout is needed, and the above\n   * process should be repeated.\n   * @param width\n   * @param height\n   */\n  performLayout(width, height) {\n    const {\n      paddingX,\n      paddingY,\n      label,\n      maxWidth,\n      marker: { size: markerSize, padding: markerPadding, shape: markerShape },\n      label: { maxLength = Infinity, fontStyle, fontWeight, fontSize, fontFamily },\n      line: itemLine,\n      showSeriesStroke\n    } = this.item;\n    const data = [...this.data];\n    if (this.reverseOrder) {\n      data.reverse();\n    }\n    this.itemSelection.update(data);\n    const bboxes = [];\n    const font = getFont(label);\n    const itemMaxWidthPercentage = 0.8;\n    const maxItemWidth = maxWidth != null ? maxWidth : width * itemMaxWidthPercentage;\n    const paddedMarkerWidth = markerSize + markerPadding + paddingX;\n    this.itemSelection.each((markerLabel, datum) => {\n      var _a, _b, _c;\n      const Marker2 = getMarker(markerShape != null ? markerShape : datum.marker.shape);\n      const markerEnabled = (_a = datum.marker.enabled) != null ? _a : this.item.marker.enabled;\n      if (!(markerLabel.marker && markerLabel.marker instanceof Marker2)) {\n        markerLabel.marker = new Marker2();\n      }\n      markerLabel.markerSize = markerSize;\n      markerLabel.spacing = markerPadding;\n      markerLabel.fontStyle = fontStyle;\n      markerLabel.fontWeight = fontWeight;\n      markerLabel.fontSize = fontSize;\n      markerLabel.fontFamily = fontFamily;\n      const id = (_b = datum.itemId) != null ? _b : datum.id;\n      const labelText = this.getItemLabel(datum);\n      const text = (labelText != null ? labelText : \"<unknown>\").replace(/\\r?\\n/g, \" \");\n      markerLabel.text = this.truncate(text, maxLength, maxItemWidth, paddedMarkerWidth, font, id);\n      if (showSeriesStroke && datum.line !== void 0) {\n        markerLabel.lineVisible = true;\n        markerLabel.markerVisible = markerEnabled;\n        markerLabel.setSeriesStrokeOffset((_c = itemLine.length) != null ? _c : 5);\n      } else {\n        markerLabel.lineVisible = false;\n        markerLabel.markerVisible = true;\n      }\n      bboxes.push(markerLabel.computeBBox());\n    });\n    width = Math.max(1, width);\n    height = Math.max(1, height);\n    if (!isFinite(width)) {\n      return false;\n    }\n    const size = this.size;\n    const oldSize = this.oldSize;\n    size[0] = width;\n    size[1] = height;\n    if (size[0] !== oldSize[0] || size[1] !== oldSize[1]) {\n      oldSize[0] = size[0];\n      oldSize[1] = size[1];\n    }\n    const { pages, maxPageHeight, maxPageWidth } = this.updatePagination(bboxes, width, height);\n    this.pages = pages;\n    this.maxPageSize = [maxPageWidth - paddingX, maxPageHeight - paddingY];\n    const pageNumber = this.pagination.currentPage;\n    const page = this.pages[pageNumber];\n    if (this.pages.length < 1 || !page) {\n      this.visible = false;\n      return;\n    }\n    this.visible = true;\n    this.updatePositions(pageNumber);\n    this.update();\n  }\n  truncate(text, maxCharLength, maxItemWidth, paddedMarkerWidth, font, id) {\n    const ellipsis2 = `...`;\n    const textChars = text.split(\"\");\n    let addEllipsis = false;\n    if (text.length > maxCharLength) {\n      text = `${text.substring(0, maxCharLength)}`;\n      addEllipsis = true;\n    }\n    const labelWidth = Math.floor(paddedMarkerWidth + HdpiCanvas.getTextSize(text, font).width);\n    if (labelWidth > maxItemWidth) {\n      let truncatedText = \"\";\n      const characterWidths = this.getCharacterWidths(font);\n      let cumulativeWidth = paddedMarkerWidth + characterWidths[ellipsis2];\n      for (const char of textChars) {\n        if (!characterWidths[char]) {\n          characterWidths[char] = HdpiCanvas.getTextSize(char, font).width;\n        }\n        cumulativeWidth += characterWidths[char];\n        if (cumulativeWidth > maxItemWidth) {\n          break;\n        }\n        truncatedText += char;\n      }\n      text = truncatedText;\n      addEllipsis = true;\n    }\n    if (addEllipsis) {\n      text += ellipsis2;\n      this.truncatedItems.add(id);\n    } else {\n      this.truncatedItems.delete(id);\n    }\n    return text;\n  }\n  updatePagination(bboxes, width, height) {\n    const orientation = this.getOrientation();\n    const trackingIndex = Math.min(this.paginationTrackingIndex, bboxes.length);\n    this.pagination.orientation = orientation;\n    this.pagination.translationX = 0;\n    this.pagination.translationY = 0;\n    const { pages, maxPageHeight, maxPageWidth, paginationBBox, paginationVertical } = this.calculatePagination(\n      bboxes,\n      width,\n      height\n    );\n    const newCurrentPage = pages.findIndex((p) => p.endIndex >= trackingIndex);\n    this.pagination.currentPage = Math.min(Math.max(newCurrentPage, 0), pages.length - 1);\n    const { paddingX: itemPaddingX, paddingY: itemPaddingY } = this.item;\n    const paginationComponentPadding = 8;\n    const legendItemsWidth = maxPageWidth - itemPaddingX;\n    const legendItemsHeight = maxPageHeight - itemPaddingY;\n    let paginationX = 0;\n    let paginationY = -paginationBBox.y - this.item.marker.size / 2;\n    if (paginationVertical) {\n      paginationY += legendItemsHeight + paginationComponentPadding;\n    } else {\n      paginationX += -paginationBBox.x + legendItemsWidth + paginationComponentPadding;\n      paginationY += (legendItemsHeight - paginationBBox.height) / 2;\n    }\n    this.pagination.translationX = paginationX;\n    this.pagination.translationY = paginationY;\n    this.pagination.update();\n    this.pagination.updateMarkers();\n    return {\n      maxPageHeight,\n      maxPageWidth,\n      pages\n    };\n  }\n  calculatePagination(bboxes, width, height) {\n    var _a, _b, _c;\n    const { paddingX: itemPaddingX, paddingY: itemPaddingY } = this.item;\n    const orientation = this.getOrientation();\n    const paginationVertical = [\"left\", \"right\"].includes(this.position);\n    let paginationBBox = this.pagination.computeBBox();\n    let lastPassPaginationBBox = new BBox(0, 0, 0, 0);\n    let pages = [];\n    let maxPageWidth = 0;\n    let maxPageHeight = 0;\n    let count2 = 0;\n    const stableOutput = (lastPassPaginationBBox2) => {\n      const { width: width2, height: height2 } = lastPassPaginationBBox2;\n      return width2 === paginationBBox.width && height2 === paginationBBox.height;\n    };\n    const forceResult = this.maxWidth !== void 0 || this.maxHeight !== void 0;\n    do {\n      if (count2++ > 10) {\n        Logger.warn(\"unable to find stable legend layout.\");\n        break;\n      }\n      paginationBBox = lastPassPaginationBBox;\n      const maxWidth = width - (paginationVertical ? 0 : paginationBBox.width);\n      const maxHeight = height - (paginationVertical ? paginationBBox.height : 0);\n      const layout = gridLayout({\n        orientation,\n        bboxes,\n        maxHeight,\n        maxWidth,\n        itemPaddingY,\n        itemPaddingX,\n        forceResult\n      });\n      pages = (_a = layout == null ? void 0 : layout.pages) != null ? _a : [];\n      maxPageWidth = (_b = layout == null ? void 0 : layout.maxPageWidth) != null ? _b : 0;\n      maxPageHeight = (_c = layout == null ? void 0 : layout.maxPageHeight) != null ? _c : 0;\n      const totalPages = pages.length;\n      this.pagination.visible = totalPages > 1;\n      this.pagination.totalPages = totalPages;\n      this.pagination.update();\n      lastPassPaginationBBox = this.pagination.computeBBox();\n      if (!this.pagination.visible) {\n        break;\n      }\n    } while (!stableOutput(lastPassPaginationBBox));\n    return { maxPageWidth, maxPageHeight, pages, paginationBBox, paginationVertical };\n  }\n  updatePositions(pageNumber = 0) {\n    const {\n      item: { paddingY },\n      itemSelection,\n      pages\n    } = this;\n    if (pages.length < 1 || !pages[pageNumber]) {\n      return;\n    }\n    const { columns, startIndex: visibleStart, endIndex: visibleEnd } = pages[pageNumber];\n    let x = 0;\n    let y = 0;\n    const columnCount = columns.length;\n    const rowCount = columns[0].indices.length;\n    const horizontal = this.getOrientation() === \"horizontal\";\n    const itemHeight = columns[0].bboxes[0].height + paddingY;\n    const rowSumColumnWidths = [];\n    itemSelection.each((markerLabel, _, i) => {\n      var _a, _b;\n      if (i < visibleStart || i > visibleEnd) {\n        markerLabel.visible = false;\n        return;\n      }\n      const pageIndex = i - visibleStart;\n      let columnIndex = 0;\n      let rowIndex = 0;\n      if (horizontal) {\n        columnIndex = pageIndex % columnCount;\n        rowIndex = Math.floor(pageIndex / columnCount);\n      } else {\n        columnIndex = Math.floor(pageIndex / rowCount);\n        rowIndex = pageIndex % rowCount;\n      }\n      markerLabel.visible = true;\n      const column = columns[columnIndex];\n      if (!column) {\n        return;\n      }\n      y = itemHeight * rowIndex;\n      x = (_a = rowSumColumnWidths[rowIndex]) != null ? _a : 0;\n      rowSumColumnWidths[rowIndex] = ((_b = rowSumColumnWidths[rowIndex]) != null ? _b : 0) + column.columnWidth;\n      markerLabel.translationX = Math.floor(x);\n      markerLabel.translationY = Math.floor(y);\n    });\n  }\n  updatePageNumber(pageNumber) {\n    const { pages } = this;\n    const { startIndex, endIndex } = pages[pageNumber];\n    if (startIndex === 0) {\n      this.paginationTrackingIndex = 0;\n    } else if (pageNumber === pages.length - 1) {\n      this.paginationTrackingIndex = endIndex;\n    } else {\n      this.paginationTrackingIndex = Math.floor((startIndex + endIndex) / 2);\n    }\n    this.pagination.update();\n    this.pagination.updateMarkers();\n    this.updatePositions(pageNumber);\n    this.ctx.updateService.update(5 /* SCENE_RENDER */);\n  }\n  update() {\n    const {\n      label: { color },\n      marker: itemMarker,\n      line: itemLine,\n      showSeriesStroke\n    } = this.item;\n    this.itemSelection.each((markerLabel, datum) => {\n      var _a, _b;\n      const marker = datum.marker;\n      markerLabel.markerFill = marker.fill;\n      markerLabel.markerStroke = marker.stroke;\n      markerLabel.markerStrokeWidth = (_a = itemMarker.strokeWidth) != null ? _a : Math.min(2, marker.strokeWidth);\n      markerLabel.markerFillOpacity = marker.fillOpacity;\n      markerLabel.markerStrokeOpacity = marker.strokeOpacity;\n      markerLabel.opacity = datum.enabled ? 1 : 0.5;\n      markerLabel.color = color;\n      const { line } = datum;\n      if (showSeriesStroke && line !== void 0) {\n        markerLabel.lineStroke = line.stroke;\n        markerLabel.lineStrokeOpacity = line.strokeOpacity;\n        markerLabel.lineStrokeWidth = (_b = itemLine.strokeWidth) != null ? _b : Math.min(2, line.strokeWidth);\n        markerLabel.lineLineDash = line.lineDash;\n      }\n    });\n  }\n  getDatumForPoint(x, y) {\n    const visibleChildBBoxes = [];\n    const closestLeftTop = { dist: Infinity, datum: void 0 };\n    for (const child of this.group.children) {\n      if (!child.visible)\n        continue;\n      if (!(child instanceof MarkerLabel))\n        continue;\n      const childBBox = child.computeBBox();\n      childBBox.grow(this.item.paddingX / 2, \"horizontal\");\n      childBBox.grow(this.item.paddingY / 2, \"vertical\");\n      if (childBBox.containsPoint(x, y)) {\n        return child.datum;\n      }\n      const distX = x - childBBox.x - this.item.paddingX / 2;\n      const distY = y - childBBox.y - this.item.paddingY / 2;\n      const dist = __pow(distX, 2) + __pow(distY, 2);\n      const toTheLeftTop = distX >= 0 && distY >= 0;\n      if (toTheLeftTop && dist < closestLeftTop.dist) {\n        closestLeftTop.dist = dist;\n        closestLeftTop.datum = child.datum;\n      }\n      visibleChildBBoxes.push(childBBox);\n    }\n    const pageBBox = BBox.merge(visibleChildBBoxes);\n    if (!pageBBox.containsPoint(x, y)) {\n      return void 0;\n    }\n    return closestLeftTop.datum;\n  }\n  computeBBox() {\n    return this.group.computeBBox();\n  }\n  computePagedBBox() {\n    const actualBBox = this.group.computeBBox();\n    if (this.pages.length <= 1) {\n      return actualBBox;\n    }\n    const [maxPageWidth, maxPageHeight] = this.maxPageSize;\n    actualBBox.height = Math.max(maxPageHeight, actualBBox.height);\n    actualBBox.width = Math.max(maxPageWidth, actualBBox.width);\n    return actualBBox;\n  }\n  checkLegendClick(event) {\n    const {\n      listeners: { legendItemClick },\n      ctx: { chartService, highlightManager },\n      item: { toggleSeriesVisible },\n      preventHidingAll\n    } = this;\n    const { offsetX, offsetY } = event;\n    const legendBBox = this.computeBBox();\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    if (!pointerInsideLegend || !datum) {\n      return;\n    }\n    const { id, itemId, enabled } = datum;\n    const series = chartService.series.find((s) => s.id === id);\n    if (!series) {\n      return;\n    }\n    event.consume();\n    let newEnabled = enabled;\n    if (toggleSeriesVisible) {\n      newEnabled = !enabled;\n      if (preventHidingAll && !newEnabled) {\n        const numVisibleItems = chartService.series.flatMap((series2) => series2.getLegendData(\"category\")).filter((datum2) => datum2.enabled).length;\n        if (numVisibleItems < 2) {\n          newEnabled = true;\n        }\n      }\n      this.ctx.chartEventManager.legendItemClick(series, itemId, newEnabled, datum.legendItemName);\n    }\n    if (!newEnabled) {\n      highlightManager.updateHighlight(this.id);\n    } else {\n      highlightManager.updateHighlight(this.id, {\n        series,\n        itemId,\n        datum: void 0\n      });\n    }\n    this.ctx.updateService.update(1 /* PROCESS_DATA */, { forceNodeDataRefresh: true });\n    legendItemClick == null ? void 0 : legendItemClick({ type: \"click\", enabled: newEnabled, itemId, seriesId: series.id });\n  }\n  checkLegendDoubleClick(event) {\n    var _a;\n    const {\n      listeners: { legendItemDoubleClick },\n      ctx: { chartService },\n      item: { toggleSeriesVisible }\n    } = this;\n    const { offsetX, offsetY } = event;\n    if (chartService.mode === \"integrated\") {\n      return;\n    }\n    const legendBBox = this.computeBBox();\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    if (!pointerInsideLegend || !datum) {\n      return;\n    }\n    const { id, itemId, seriesId } = datum;\n    const series = chartService.series.find((s) => s.id === id);\n    if (!series) {\n      return;\n    }\n    event.consume();\n    if (toggleSeriesVisible) {\n      const legendData = chartService.series.flatMap((series2) => series2.getLegendData(\"category\"));\n      const numVisibleItems = legendData.filter((datum2) => datum2.enabled).length;\n      const clickedItem = legendData.find((d) => d.itemId === itemId && d.seriesId === seriesId);\n      this.ctx.chartEventManager.legendItemDoubleClick(\n        series,\n        itemId,\n        (_a = clickedItem == null ? void 0 : clickedItem.enabled) != null ? _a : false,\n        numVisibleItems,\n        clickedItem == null ? void 0 : clickedItem.legendItemName\n      );\n    }\n    this.ctx.updateService.update(1 /* PROCESS_DATA */, { forceNodeDataRefresh: true });\n    legendItemDoubleClick == null ? void 0 : legendItemDoubleClick({ type: \"dblclick\", enabled: true, itemId, seriesId: series.id });\n  }\n  handleLegendMouseMove(event) {\n    var _a;\n    const {\n      enabled,\n      item: { toggleSeriesVisible },\n      listeners\n    } = this;\n    if (!enabled) {\n      return;\n    }\n    const legendBBox = this.computeBBox();\n    const { pageX, pageY, offsetX, offsetY } = event;\n    const pointerInsideLegend = this.group.visible && legendBBox.containsPoint(offsetX, offsetY);\n    if (!pointerInsideLegend) {\n      this.ctx.cursorManager.updateCursor(this.id);\n      this.ctx.highlightManager.updateHighlight(this.id);\n      this.ctx.tooltipManager.removeTooltip(this.id);\n      return;\n    }\n    event.consume();\n    const datum = this.getDatumForPoint(offsetX, offsetY);\n    const pointerOverLegendDatum = pointerInsideLegend && datum !== void 0;\n    if (!pointerOverLegendDatum) {\n      this.ctx.cursorManager.updateCursor(this.id);\n      this.ctx.highlightManager.updateHighlight(this.id);\n      return;\n    }\n    const series = datum ? this.ctx.chartService.series.find((series2) => series2.id === (datum == null ? void 0 : datum.id)) : void 0;\n    if (datum && this.truncatedItems.has((_a = datum.itemId) != null ? _a : datum.id)) {\n      this.ctx.tooltipManager.updateTooltip(\n        this.id,\n        { pageX, pageY, offsetX, offsetY, event, showArrow: false, addCustomClass: false },\n        toTooltipHtml({ content: this.getItemLabel(datum) })\n      );\n    } else {\n      this.ctx.tooltipManager.removeTooltip(this.id);\n    }\n    if (toggleSeriesVisible || listeners.legendItemClick != null || listeners.legendItemDoubleClick != null) {\n      this.ctx.cursorManager.updateCursor(this.id, \"pointer\");\n    }\n    if ((datum == null ? void 0 : datum.enabled) && series) {\n      this.ctx.highlightManager.updateHighlight(this.id, {\n        series,\n        itemId: datum == null ? void 0 : datum.itemId,\n        datum: void 0\n      });\n    } else {\n      this.ctx.highlightManager.updateHighlight(this.id);\n    }\n  }\n  positionLegend(shrinkRect) {\n    const newShrinkRect = shrinkRect.clone();\n    if (!this.enabled || !this.data.length) {\n      return { shrinkRect: newShrinkRect };\n    }\n    const [legendWidth, legendHeight] = this.calculateLegendDimensions(shrinkRect);\n    this.group.translationX = 0;\n    this.group.translationY = 0;\n    this.performLayout(legendWidth, legendHeight);\n    const legendBBox = this.computePagedBBox();\n    const calculateTranslationPerpendicularDimension = () => {\n      switch (this.position) {\n        case \"top\":\n        case \"left\":\n          return 0;\n        case \"bottom\":\n          return shrinkRect.height - legendBBox.height;\n        case \"right\":\n        default:\n          return shrinkRect.width - legendBBox.width;\n      }\n    };\n    if (this.visible) {\n      let translationX;\n      let translationY;\n      switch (this.position) {\n        case \"top\":\n        case \"bottom\":\n          translationX = (shrinkRect.width - legendBBox.width) / 2;\n          translationY = calculateTranslationPerpendicularDimension();\n          newShrinkRect.shrink(legendBBox.height, this.position);\n          break;\n        case \"left\":\n        case \"right\":\n        default:\n          translationX = calculateTranslationPerpendicularDimension();\n          translationY = (shrinkRect.height - legendBBox.height) / 2;\n          newShrinkRect.shrink(legendBBox.width, this.position);\n      }\n      this.group.translationX = Math.floor(-legendBBox.x + shrinkRect.x + translationX);\n      this.group.translationY = Math.floor(-legendBBox.y + shrinkRect.y + translationY);\n    }\n    if (this.visible && this.enabled && this.data.length) {\n      const legendPadding = this.spacing;\n      newShrinkRect.shrink(legendPadding, this.position);\n      const legendPositionedBBox = legendBBox.clone();\n      legendPositionedBBox.x += this.group.translationX;\n      legendPositionedBBox.y += this.group.translationY;\n      this.ctx.tooltipManager.updateExclusiveRect(this.id, legendPositionedBBox);\n    } else {\n      this.ctx.tooltipManager.updateExclusiveRect(this.id);\n    }\n    return { shrinkRect: newShrinkRect };\n  }\n  calculateLegendDimensions(shrinkRect) {\n    const { width, height } = shrinkRect;\n    const aspectRatio = width / height;\n    const maxCoefficient = 0.5;\n    const minHeightCoefficient = 0.2;\n    const minWidthCoefficient = 0.25;\n    let legendWidth, legendHeight;\n    switch (this.position) {\n      case \"top\":\n      case \"bottom\":\n        const heightCoefficient = aspectRatio < 1 ? Math.min(maxCoefficient, minHeightCoefficient * (1 / aspectRatio)) : minHeightCoefficient;\n        legendWidth = this.maxWidth ? Math.min(this.maxWidth, width) : width;\n        legendHeight = this.maxHeight ? Math.min(this.maxHeight, height) : Math.round(height * heightCoefficient);\n        break;\n      case \"left\":\n      case \"right\":\n      default:\n        const widthCoefficient = aspectRatio > 1 ? Math.min(maxCoefficient, minWidthCoefficient * aspectRatio) : minWidthCoefficient;\n        legendWidth = this.maxWidth ? Math.min(this.maxWidth, width) : Math.round(width * widthCoefficient);\n        legendHeight = this.maxHeight ? Math.min(this.maxHeight, height) : height;\n    }\n    return [legendWidth, legendHeight];\n  }\n};\nLegend.className = \"Legend\";\n__decorateClass([\n  Validate(BOOLEAN)\n], Legend.prototype, \"_enabled\", 2);\n__decorateClass([\n  Validate(POSITION)\n], Legend.prototype, \"position\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Legend.prototype, \"maxWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], Legend.prototype, \"maxHeight\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], Legend.prototype, \"reverseOrder\", 2);\n__decorateClass([\n  Validate(UNION([\"horizontal\", \"vertical\"], \"an orientation\"), { optional: true })\n], Legend.prototype, \"orientation\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], Legend.prototype, \"preventHidingAll\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Legend.prototype, \"spacing\", 2);\n\n// packages/ag-charts-community/src/chart/overlay/overlay.ts\nvar Overlay = class {\n  constructor(className, parentElement) {\n    this.className = className;\n    this.parentElement = parentElement;\n  }\n  show(rect) {\n    var _a, _b;\n    if (!this.element) {\n      this.element = this.createElement(\"div\");\n      this.element.className = this.className;\n    }\n    const { element: element2 } = this;\n    element2.style.position = \"absolute\";\n    element2.style.left = `${rect.x}px`;\n    element2.style.top = `${rect.y}px`;\n    element2.style.width = `${rect.width}px`;\n    element2.style.height = `${rect.height}px`;\n    if (this.renderer) {\n      element2.innerHTML = this.renderer();\n    } else {\n      const content = this.createElement(\"div\");\n      content.style.alignItems = \"center\";\n      content.style.boxSizing = \"border-box\";\n      content.style.display = \"flex\";\n      content.style.justifyContent = \"center\";\n      content.style.margin = \"8px\";\n      content.style.height = \"100%\";\n      content.style.font = \"12px Verdana, sans-serif\";\n      content.innerText = (_a = this.text) != null ? _a : \"No data to display\";\n      element2.replaceChildren(content);\n    }\n    (_b = this.parentElement) == null ? void 0 : _b.append(element2);\n  }\n  hide() {\n    var _a;\n    (_a = this.element) == null ? void 0 : _a.remove();\n    this.element = void 0;\n  }\n  createElement(tagName, options) {\n    return this.parentElement.ownerDocument.createElement(tagName, options);\n  }\n};\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], Overlay.prototype, \"renderer\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], Overlay.prototype, \"text\", 2);\n\n// packages/ag-charts-community/src/chart/overlay/chartOverlays.ts\nvar ChartOverlays = class {\n  constructor(parent) {\n    this.noData = new Overlay(\"ag-chart-no-data-overlay\", parent);\n    this.noVisibleSeries = new Overlay(\"ag-chart-no-visible-series\", parent);\n    this.noVisibleSeries.text = \"No visible series\";\n  }\n  destroy() {\n    this.noData.hide();\n    this.noVisibleSeries.hide();\n  }\n};\n\n// packages/ag-charts-community/src/util/object.ts\nfunction deepMerge(target, source) {\n  if (isPlainObject2(target) && isPlainObject2(source)) {\n    const result = {};\n    Object.keys(target).forEach((key) => {\n      if (key in source) {\n        result[key] = deepMerge(target[key], source[key]);\n      } else {\n        result[key] = target[key];\n      }\n    });\n    Object.keys(source).forEach((key) => {\n      if (!(key in target)) {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }\n  if (Array.isArray(target) && !Array.isArray(source) || isObjectLike2(target) && !isObjectLike2(source)) {\n    return target;\n  }\n  return source;\n}\nfunction isObjectLike2(value) {\n  return typeof value === \"object\" && value !== null;\n}\nfunction isObject2(value) {\n  return isObjectLike2(value) && !Array.isArray(value);\n}\nfunction isPlainObject2(x) {\n  return isObject2(x) && x.constructor === Object;\n}\nfunction mergeDefaults(...sources) {\n  var _a;\n  const target = {};\n  for (const source of sources) {\n    if (!source)\n      continue;\n    const keys = isDecoratedObject(source) ? listDecoratedProperties(source) : Object.keys(source);\n    for (const key of keys) {\n      if (isObject2(target[key]) && isObject2(source[key])) {\n        target[key] = mergeDefaults(target[key], source[key]);\n      } else {\n        (_a = target[key]) != null ? _a : target[key] = source[key];\n      }\n    }\n  }\n  return target;\n}\nfunction partialAssign(keysToCopy, target, source) {\n  if (source === void 0) {\n    return target;\n  }\n  for (const key of keysToCopy) {\n    const value = source[key];\n    if (value !== void 0) {\n      target[key] = value;\n    }\n  }\n  return target;\n}\n\n// packages/ag-charts-community/src/chart/data/aggregateFunctions.ts\nfunction sumValues(values, accumulator = [0, 0]) {\n  for (const value of values) {\n    if (typeof value !== \"number\") {\n      continue;\n    }\n    if (value < 0) {\n      accumulator[0] += value;\n    }\n    if (value > 0) {\n      accumulator[1] += value;\n    }\n  }\n  return accumulator;\n}\nfunction sum(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: (values) => sumValues(values)\n  };\n  return result;\n}\nfunction groupSum(scope, id, matchGroupId) {\n  return {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    aggregateFunction: (values) => sumValues(values),\n    groupAggregateFunction: (next, acc = [0, 0]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      return acc;\n    }\n  };\n}\nfunction range2(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: (values) => extendDomain(values)\n  };\n  return result;\n}\nfunction count(scope, id) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    aggregateFunction: () => [0, 1]\n  };\n  return result;\n}\nfunction groupCount(scope, id) {\n  return {\n    id,\n    scopes: [scope.id],\n    type: \"aggregate\",\n    aggregateFunction: () => [0, 1],\n    groupAggregateFunction: (next, acc = [0, 0]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      return acc;\n    }\n  };\n}\nfunction average(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: [matchGroupId],\n    type: \"aggregate\",\n    aggregateFunction: (values) => sumValues(values).map((v) => v / values.length)\n  };\n  return result;\n}\nfunction groupAverage(scope, id, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    type: \"aggregate\",\n    aggregateFunction: (values) => sumValues(values),\n    groupAggregateFunction: (next, acc = [0, 0, -1]) => {\n      var _a, _b;\n      acc[0] += (_a = next == null ? void 0 : next[0]) != null ? _a : 0;\n      acc[1] += (_b = next == null ? void 0 : next[1]) != null ? _b : 0;\n      acc[2]++;\n      return acc;\n    },\n    finalFunction: (acc = [0, 0, 0]) => {\n      const result2 = acc[0] + acc[1];\n      if (result2 >= 0) {\n        return [0, result2 / acc[2]];\n      }\n      return [result2 / acc[2], 0];\n    }\n  };\n  return result;\n}\nfunction area(scope, id, aggFn, matchGroupId) {\n  const result = {\n    id,\n    scopes: [scope.id],\n    matchGroupIds: matchGroupId ? [matchGroupId] : void 0,\n    type: \"aggregate\",\n    aggregateFunction: (values, keyRange = []) => {\n      const keyWidth = keyRange[1] - keyRange[0];\n      return aggFn.aggregateFunction(values).map((v) => v / keyWidth);\n    }\n  };\n  if (aggFn.groupAggregateFunction) {\n    result.groupAggregateFunction = aggFn.groupAggregateFunction;\n  }\n  return result;\n}\nfunction accumulatedValue(onlyPositive) {\n  return () => {\n    let value = 0;\n    return (datum) => {\n      if (typeof datum !== \"number\")\n        return datum;\n      if (isNaN(datum))\n        return datum;\n      value += onlyPositive ? Math.max(0, datum) : datum;\n      return value;\n    };\n  };\n}\nfunction trailingAccumulatedValue() {\n  return () => {\n    let value = 0;\n    return (datum) => {\n      if (typeof datum !== \"number\")\n        return datum;\n      if (isNaN(datum))\n        return datum;\n      const trailingValue2 = value;\n      value += datum;\n      return trailingValue2;\n    };\n  };\n}\n\n// packages/ag-charts-community/src/util/memo.ts\nvar memorizedFns = /* @__PURE__ */ new Map();\nfunction memo(params, fnGenerator) {\n  var _a, _b, _c;\n  const serialisedParams = JSON.stringify(params, null, 0);\n  if (!memorizedFns.has(fnGenerator)) {\n    memorizedFns.set(fnGenerator, /* @__PURE__ */ new Map());\n  }\n  if (!((_a = memorizedFns.get(fnGenerator)) == null ? void 0 : _a.has(serialisedParams))) {\n    (_b = memorizedFns.get(fnGenerator)) == null ? void 0 : _b.set(serialisedParams, fnGenerator(params));\n  }\n  return (_c = memorizedFns.get(fnGenerator)) == null ? void 0 : _c.get(serialisedParams);\n}\n\n// packages/ag-charts-community/src/chart/data/processors.ts\nvar SMALLEST_KEY_INTERVAL = {\n  type: \"reducer\",\n  property: \"smallestKeyInterval\",\n  initialValue: Infinity,\n  reducer: () => {\n    let prevX = NaN;\n    return (smallestSoFar = Infinity, next) => {\n      const nextX = next.keys[0];\n      const interval = Math.abs(nextX - prevX);\n      prevX = nextX;\n      if (!isNaN(interval) && interval > 0 && interval < smallestSoFar) {\n        return interval;\n      }\n      return smallestSoFar;\n    };\n  }\n};\nvar AGG_VALUES_EXTENT = {\n  type: \"processor\",\n  property: \"aggValuesExtent\",\n  calculate: (processedData) => {\n    var _a, _b, _c, _d;\n    const result = [...(_b = (_a = processedData.domain.aggValues) == null ? void 0 : _a[0]) != null ? _b : [0, 0]];\n    for (const [min, max] of (_d = (_c = processedData.domain.aggValues) == null ? void 0 : _c.slice(1)) != null ? _d : []) {\n      if (min < result[0]) {\n        result[0] = min;\n      }\n      if (max > result[1]) {\n        result[1] = max;\n      }\n    }\n    return result;\n  }\n};\nvar SORT_DOMAIN_GROUPS = {\n  type: \"processor\",\n  property: \"sortedGroupDomain\",\n  calculate: ({ domain: { groups } }) => {\n    if (groups == null)\n      return void 0;\n    return [...groups].sort((a, b) => {\n      for (let i = 0; i < a.length; i++) {\n        const result = a[i] - b[i];\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    });\n  }\n};\nfunction normaliseFnBuilder({ normaliseTo, mode }) {\n  const normalise = (val, extent2) => {\n    const result = val * normaliseTo / extent2;\n    if (result >= 0) {\n      return Math.min(normaliseTo, result);\n    }\n    return Math.max(-normaliseTo, result);\n  };\n  return () => () => (values, valueIndexes) => {\n    const valuesExtent = [0, 0];\n    for (const valueIdx of valueIndexes) {\n      const value = values[valueIdx];\n      const valIdx = value < 0 ? 0 : 1;\n      if (mode === \"sum\") {\n        valuesExtent[valIdx] += value;\n      } else if (valIdx === 0) {\n        valuesExtent[valIdx] = Math.min(valuesExtent[valIdx], value);\n      } else {\n        valuesExtent[valIdx] = Math.max(valuesExtent[valIdx], value);\n      }\n    }\n    const extent2 = Math.max(Math.abs(valuesExtent[0]), valuesExtent[1]);\n    for (const valueIdx of valueIndexes) {\n      values[valueIdx] = normalise(values[valueIdx], extent2);\n    }\n  };\n}\nfunction normaliseGroupTo(scope, matchGroupIds, normaliseTo, mode = \"sum\") {\n  return {\n    scopes: [scope.id],\n    type: \"group-value-processor\",\n    matchGroupIds,\n    adjust: memo({ normaliseTo, mode }, normaliseFnBuilder)\n  };\n}\nfunction normalisePropertyFnBuilder({\n  normaliseTo,\n  zeroDomain,\n  rangeMin,\n  rangeMax\n}) {\n  const normaliseSpan = normaliseTo[1] - normaliseTo[0];\n  const normalise = (val, start, span) => {\n    const result = normaliseTo[0] + (val - start) / span * normaliseSpan;\n    if (span === 0)\n      return zeroDomain;\n    if (result >= normaliseTo[1])\n      return normaliseTo[1];\n    if (result < normaliseTo[0])\n      return normaliseTo[0];\n    return result;\n  };\n  return () => (pData, pIdx) => {\n    let [start, end] = pData.domain.values[pIdx];\n    if (rangeMin != null)\n      start = rangeMin;\n    if (rangeMax != null)\n      end = rangeMax;\n    const span = end - start;\n    pData.domain.values[pIdx] = [normaliseTo[0], normaliseTo[1]];\n    for (const group2 of pData.data) {\n      let groupValues = group2.values;\n      if (pData.type === \"ungrouped\") {\n        groupValues = [groupValues];\n      }\n      for (const values of groupValues) {\n        values[pIdx] = normalise(values[pIdx], start, span);\n      }\n    }\n  };\n}\nfunction normalisePropertyTo(scope, property, normaliseTo, zeroDomain, rangeMin, rangeMax) {\n  return {\n    scopes: [scope.id],\n    type: \"property-value-processor\",\n    property,\n    adjust: memo({ normaliseTo, rangeMin, rangeMax, zeroDomain }, normalisePropertyFnBuilder)\n  };\n}\nfunction animationValidation(scope, valueKeyIds = []) {\n  return {\n    type: \"processor\",\n    scopes: [scope.id],\n    property: \"animationValidation\",\n    calculate(result) {\n      var _a;\n      const { keys, values } = result.defs;\n      const { input, data } = result;\n      let uniqueKeys = true;\n      let orderedKeys = true;\n      const valueKeys = [];\n      for (let k = 0; k < values.length; k++) {\n        if (!((_a = values[k].scopes) == null ? void 0 : _a.some((s) => s === scope.id)))\n          continue;\n        if (!valueKeyIds.some((v) => values[k].id === v))\n          continue;\n        valueKeys.push([k, values[k]]);\n      }\n      const processKey = (idx, def, type) => {\n        var _a2;\n        if (def.valueType === \"category\") {\n          const keyValues = result.domain[type][idx];\n          uniqueKeys && (uniqueKeys = keyValues.length === input.count);\n          return;\n        }\n        let lastValue = (_a2 = data[0]) == null ? void 0 : _a2[type][idx];\n        for (let d = 1; (uniqueKeys || orderedKeys) && d < data.length; d++) {\n          const keyValue = data[d][type][idx];\n          orderedKeys && (orderedKeys = lastValue <= keyValue);\n          uniqueKeys && (uniqueKeys = lastValue !== keyValue);\n          lastValue = keyValue;\n        }\n      };\n      for (let k = 0; (uniqueKeys || orderedKeys) && k < keys.length; k++) {\n        processKey(k, keys[k], \"keys\");\n      }\n      for (let k = 0; (uniqueKeys || orderedKeys) && k < valueKeys.length; k++) {\n        const [idx, key] = valueKeys[k];\n        processKey(idx, key, \"values\");\n      }\n      return { uniqueKeys, orderedKeys };\n    }\n  };\n}\nfunction buildGroupAccFn({ mode, separateNegative }) {\n  return () => () => (values, valueIndexes) => {\n    const acc = [0, 0];\n    for (const valueIdx of valueIndexes) {\n      const currentVal = values[valueIdx];\n      const accIndex = isNegative(currentVal) && separateNegative ? 0 : 1;\n      if (typeof currentVal !== \"number\" || isNaN(currentVal))\n        continue;\n      if (mode === \"normal\")\n        acc[accIndex] += currentVal;\n      values[valueIdx] = acc[accIndex];\n      if (mode === \"trailing\")\n        acc[accIndex] += currentVal;\n    }\n  };\n}\nfunction buildGroupWindowAccFn({ mode, sum: sum2 }) {\n  return () => {\n    const lastValues = [];\n    let firstRow = true;\n    return () => {\n      return (values, valueIndexes) => {\n        let acc = 0;\n        for (const valueIdx of valueIndexes) {\n          const currentVal = values[valueIdx];\n          const lastValue = firstRow && sum2 === \"current\" ? 0 : lastValues[valueIdx];\n          lastValues[valueIdx] = currentVal;\n          const sumValue = sum2 === \"current\" ? currentVal : lastValue;\n          if (typeof currentVal !== \"number\" || isNaN(currentVal)) {\n            values[valueIdx] = acc;\n            continue;\n          }\n          if (typeof lastValue !== \"number\" || isNaN(lastValue)) {\n            values[valueIdx] = acc;\n            continue;\n          }\n          if (mode === \"normal\")\n            acc += sumValue;\n          values[valueIdx] = acc;\n          if (mode === \"trailing\")\n            acc += sumValue;\n        }\n        firstRow = false;\n      };\n    };\n  };\n}\nfunction accumulateGroup(scope, matchGroupId, mode, sum2, separateNegative = false) {\n  let adjust;\n  if (mode.startsWith(\"window\")) {\n    const modeParam = mode.endsWith(\"-trailing\") ? \"trailing\" : \"normal\";\n    adjust = memo({ mode: modeParam, sum: sum2 }, buildGroupWindowAccFn);\n  } else {\n    adjust = memo({ mode, separateNegative }, buildGroupAccFn);\n  }\n  return {\n    scopes: [scope.id],\n    type: \"group-value-processor\",\n    matchGroupIds: [matchGroupId],\n    adjust\n  };\n}\nfunction diff(previousData, updateMovedDatums = true) {\n  return {\n    type: \"processor\",\n    property: \"diff\",\n    calculate: (processedData) => {\n      const diff2 = {\n        changed: false,\n        moved: [],\n        added: [],\n        updated: [],\n        removed: [],\n        addedIndices: [],\n        updatedIndices: [],\n        removedIndices: []\n      };\n      const moved = /* @__PURE__ */ new Map();\n      const added = /* @__PURE__ */ new Map();\n      const updated = /* @__PURE__ */ new Map();\n      const removed = /* @__PURE__ */ new Map();\n      const addedIndices = /* @__PURE__ */ new Map();\n      const updatedIndices = /* @__PURE__ */ new Map();\n      const removedIndices = /* @__PURE__ */ new Map();\n      for (let i = 0; i < Math.max(previousData.data.length, processedData.data.length); i++) {\n        const prev = previousData.data[i];\n        const datum = processedData.data[i];\n        const prevId = prev ? createDatumId(prev.keys) : \"\";\n        const datumId = datum ? createDatumId(datum.keys) : \"\";\n        if (prevId === datumId) {\n          if (!arraysEqual(prev.values, datum.values)) {\n            updated.set(datumId, datum);\n            updatedIndices.set(datumId, i);\n          }\n          continue;\n        }\n        if (removed.has(datumId)) {\n          if (updateMovedDatums || !arraysEqual(removed.get(datumId).values, datum.values)) {\n            updated.set(datumId, datum);\n            updatedIndices.set(datumId, i);\n            moved.set(datumId, datum);\n          }\n          removed.delete(datumId);\n          removedIndices.delete(datumId);\n        } else if (datum) {\n          added.set(datumId, datum);\n          addedIndices.set(datumId, i);\n        }\n        if (added.has(prevId)) {\n          if (updateMovedDatums || !arraysEqual(added.get(prevId).values, prev.values)) {\n            updated.set(prevId, prev);\n            updatedIndices.set(prevId, i);\n            moved.set(prevId, prev);\n          }\n          added.delete(prevId);\n          addedIndices.delete(prevId);\n        } else if (prev) {\n          updated.delete(prevId);\n          updatedIndices.delete(prevId);\n          removed.set(prevId, prev);\n          removedIndices.set(prevId, i);\n        }\n      }\n      diff2.added = Array.from(added.keys());\n      diff2.updated = Array.from(updated.keys());\n      diff2.removed = Array.from(removed.keys());\n      diff2.moved = Array.from(moved.keys());\n      diff2.addedIndices = Array.from(addedIndices.values());\n      diff2.updatedIndices = Array.from(updatedIndices.values());\n      diff2.removedIndices = Array.from(removedIndices.values());\n      diff2.changed = diff2.added.length > 0 || diff2.updated.length > 0 || diff2.removed.length > 0;\n      return diff2;\n    }\n  };\n}\nfunction createDatumId(keys) {\n  return keys.join(\"___\");\n}\n\n// packages/ag-charts-community/src/chart/series/series.ts\nvar SeriesNodePickMode = /* @__PURE__ */ ((SeriesNodePickMode2) => {\n  SeriesNodePickMode2[SeriesNodePickMode2[\"EXACT_SHAPE_MATCH\"] = 0] = \"EXACT_SHAPE_MATCH\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_BY_MAIN_AXIS_FIRST\"] = 1] = \"NEAREST_BY_MAIN_AXIS_FIRST\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST\"] = 2] = \"NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST\";\n  SeriesNodePickMode2[SeriesNodePickMode2[\"NEAREST_NODE\"] = 3] = \"NEAREST_NODE\";\n  return SeriesNodePickMode2;\n})(SeriesNodePickMode || {});\nfunction basicContinuousCheckDatumValidation(v) {\n  return checkDatum(v, true) != null;\n}\nfunction basicDiscreteCheckDatumValidation(v) {\n  return checkDatum(v, false) != null;\n}\nfunction keyProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadValues({\n    scopes: [scope.id],\n    property: propName,\n    type: \"key\",\n    valueType: continuous ? \"range\" : \"category\",\n    validation: continuous ? basicContinuousCheckDatumValidation : basicDiscreteCheckDatumValidation\n  }, opts);\n  return result;\n}\nfunction valueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadValues({\n    scopes: [scope.id],\n    property: propName,\n    type: \"value\",\n    valueType: continuous ? \"range\" : \"category\",\n    validation: continuous ? basicContinuousCheckDatumValidation : basicDiscreteCheckDatumValidation\n  }, opts);\n  return result;\n}\nfunction rangedValueProperty(scope, propName, opts = {}) {\n  const _a = opts, { min = -Infinity, max = Infinity } = _a, defOpts = __objRest(_a, [\"min\", \"max\"]);\n  return __spreadValues({\n    scopes: [scope.id],\n    type: \"value\",\n    property: propName,\n    valueType: \"range\",\n    validation: basicContinuousCheckDatumValidation,\n    processor: () => (datum) => {\n      if (typeof datum !== \"number\")\n        return datum;\n      if (isNaN(datum))\n        return datum;\n      return Math.min(Math.max(datum, min), max);\n    }\n  }, defOpts);\n}\nfunction trailingValueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, opts)), {\n    processor: trailingValue()\n  });\n  return result;\n}\nfunction trailingValue() {\n  return () => {\n    let value = 0;\n    return (datum) => {\n      const trailingValue2 = value;\n      value = datum;\n      return trailingValue2;\n    };\n  };\n}\nfunction accumulativeValueProperty(scope, propName, continuous, opts = {}) {\n  const _a = opts, { onlyPositive } = _a, defOpts = __objRest(_a, [\"onlyPositive\"]);\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, defOpts)), {\n    processor: accumulatedValue(onlyPositive)\n  });\n  return result;\n}\nfunction trailingAccumulatedValueProperty(scope, propName, continuous, opts = {}) {\n  const result = __spreadProps(__spreadValues({}, valueProperty(scope, propName, continuous, opts)), {\n    processor: trailingAccumulatedValue()\n  });\n  return result;\n}\nfunction groupAccumulativeValueProperty(scope, propName, continuous, mode, sum2 = \"current\", opts) {\n  return [\n    valueProperty(scope, propName, continuous, opts),\n    accumulateGroup(scope, opts.groupId, mode, sum2, opts.separateNegative),\n    ...opts.rangeId != null ? [range2(scope, opts.rangeId, opts.groupId)] : []\n  ];\n}\nvar SeriesNodeClickEvent = class {\n  constructor(type, event, { datum }, series) {\n    this.type = type;\n    this.event = event;\n    this.datum = datum;\n    this.seriesId = series.id;\n  }\n};\nvar Series = class extends Observable {\n  constructor(seriesOpts) {\n    super();\n    this.destroyFns = [];\n    this.seriesGrouping = void 0;\n    this.NodeClickEvent = SeriesNodeClickEvent;\n    this.internalId = createId(this);\n    // The group node that contains all the nodes used to render this series.\n    this.rootGroup = new Group({ name: \"seriesRoot\", isVirtual: true });\n    this.axes = {\n      [\"x\" /* X */]: void 0,\n      [\"y\" /* Y */]: void 0\n    };\n    this.directions = [\"x\" /* X */, \"y\" /* Y */];\n    // Flag to determine if we should recalculate node data.\n    this.nodeDataRefresh = true;\n    this.moduleMap = new ModuleMap();\n    this._declarationOrder = -1;\n    this.seriesListeners = new Listeners();\n    const {\n      moduleCtx,\n      useLabelLayer = false,\n      pickModes = [1 /* NEAREST_BY_MAIN_AXIS_FIRST */],\n      directionKeys = {},\n      directionNames = {},\n      contentGroupVirtual = true,\n      canHaveAxes = false\n    } = seriesOpts;\n    this.ctx = moduleCtx;\n    this.directionKeys = directionKeys;\n    this.directionNames = directionNames;\n    this.canHaveAxes = canHaveAxes;\n    this.contentGroup = this.rootGroup.appendChild(\n      new Group({\n        name: `${this.internalId}-content`,\n        layer: !contentGroupVirtual,\n        isVirtual: contentGroupVirtual,\n        zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n        zIndexSubOrder: this.getGroupZIndexSubOrder(\"data\")\n      })\n    );\n    this.highlightGroup = new Group({\n      name: `${this.internalId}-highlight`,\n      layer: !contentGroupVirtual,\n      isVirtual: contentGroupVirtual,\n      zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n      zIndexSubOrder: this.getGroupZIndexSubOrder(\"highlight\")\n    });\n    this.highlightNode = this.highlightGroup.appendChild(new Group({ name: \"highlightNode\", zIndex: 0 }));\n    this.highlightLabel = this.highlightGroup.appendChild(new Group({ name: \"highlightLabel\", zIndex: 10 }));\n    this.pickModes = pickModes;\n    this.labelGroup = this.rootGroup.appendChild(\n      new Group({\n        name: `${this.internalId}-series-labels`,\n        layer: useLabelLayer,\n        zIndex: 7 /* SERIES_LABEL_ZINDEX */\n      })\n    );\n    this.annotationGroup = new Group({\n      name: `${this.id}-annotation`,\n      layer: !contentGroupVirtual,\n      isVirtual: contentGroupVirtual,\n      zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n      zIndexSubOrder: this.getGroupZIndexSubOrder(\"annotation\")\n    });\n  }\n  get id() {\n    var _a, _b;\n    return (_b = (_a = this.properties) == null ? void 0 : _a.id) != null ? _b : this.internalId;\n  }\n  get type() {\n    var _a;\n    return (_a = this.constructor.type) != null ? _a : \"\";\n  }\n  set data(input) {\n    this._data = input;\n    this.onDataChange();\n  }\n  get data() {\n    var _a;\n    return (_a = this._data) != null ? _a : this._chartData;\n  }\n  set visible(value) {\n    this.properties.visible = value;\n    this.visibleChanged();\n  }\n  get visible() {\n    return this.properties.visible;\n  }\n  onDataChange() {\n    this.nodeDataRefresh = true;\n  }\n  setChartData(input) {\n    this._chartData = input;\n    if (this.data === input) {\n      this.onDataChange();\n    }\n  }\n  hasData() {\n    const { data } = this;\n    return data && (!Array.isArray(data) || data.length > 0);\n  }\n  onSeriesGroupingChange(prev, next) {\n    const { internalId, type, visible, rootGroup, highlightGroup, annotationGroup } = this;\n    if (prev) {\n      this.ctx.seriesStateManager.deregisterSeries({ id: internalId, type });\n    }\n    if (next) {\n      this.ctx.seriesStateManager.registerSeries({ id: internalId, type, visible, seriesGrouping: next });\n    }\n    if (this.rootGroup.parent == null)\n      return;\n    this.ctx.seriesLayerManager.changeGroup({\n      internalId,\n      type,\n      rootGroup,\n      highlightGroup,\n      annotationGroup,\n      getGroupZIndexSubOrder: (type2) => this.getGroupZIndexSubOrder(type2),\n      seriesGrouping: next,\n      oldGrouping: prev\n    });\n  }\n  getBandScalePadding() {\n    return { inner: 1, outer: 0 };\n  }\n  getGroupZIndexSubOrder(type, subIndex = 0) {\n    let mainAdjust = 0;\n    switch (type) {\n      case \"data\":\n      case \"paths\":\n        break;\n      case \"labels\":\n        mainAdjust += 2e4;\n        break;\n      case \"marker\":\n        mainAdjust += 1e4;\n        break;\n      case \"highlight\":\n        subIndex += 15e3;\n        break;\n      case \"annotation\":\n        mainAdjust += 15e3;\n        break;\n    }\n    const main = () => this._declarationOrder + mainAdjust;\n    return [main, subIndex];\n  }\n  addListener(type, listener) {\n    return this.seriesListeners.addListener(type, listener);\n  }\n  dispatch(type, event) {\n    this.seriesListeners.dispatch(type, event);\n  }\n  addChartEventListeners() {\n    return;\n  }\n  destroy() {\n    this.destroyFns.forEach((f) => f());\n    this.ctx.seriesStateManager.deregisterSeries(this);\n    this.ctx.seriesLayerManager.releaseGroup(this);\n  }\n  getDirectionValues(direction, properties) {\n    const resolvedDirection = this.resolveKeyDirection(direction);\n    const keys = properties == null ? void 0 : properties[resolvedDirection];\n    const values = [];\n    if (!keys)\n      return values;\n    const addValues = (...items) => {\n      for (const value of items) {\n        if (Array.isArray(value)) {\n          addValues(...value);\n        } else if (typeof value === \"object\") {\n          addValues(...Object.values(value));\n        } else {\n          values.push(value);\n        }\n      }\n    };\n    addValues(...keys.map((key) => this.properties[key]));\n    return values;\n  }\n  getKeys(direction) {\n    return this.getDirectionValues(direction, this.directionKeys);\n  }\n  getNames(direction) {\n    return this.getDirectionValues(direction, this.directionNames);\n  }\n  resolveKeyDirection(direction) {\n    return direction;\n  }\n  // The union of the series domain ('community') and series-option domains ('enterprise').\n  getDomain(direction) {\n    const seriesDomain = this.getSeriesDomain(direction);\n    const moduleDomains = this.moduleMap.mapValues((module) => module.getDomain(direction));\n    return seriesDomain.concat(moduleDomains.flat());\n  }\n  // Indicate that something external changed and we should recalculate nodeData.\n  markNodeDataDirty() {\n    this.nodeDataRefresh = true;\n  }\n  visibleChanged() {\n    this.ctx.seriesStateManager.registerSeries(this);\n  }\n  getOpacity() {\n    const defaultOpacity = 1;\n    const { dimOpacity = 1, enabled = true } = this.properties.highlightStyle.series;\n    if (!enabled || dimOpacity === defaultOpacity) {\n      return defaultOpacity;\n    }\n    switch (this.isItemIdHighlighted()) {\n      case 0 /* None */:\n      case 1 /* This */:\n        return defaultOpacity;\n      case 2 /* Other */:\n      default:\n        return dimOpacity;\n    }\n  }\n  getStrokeWidth(defaultStrokeWidth) {\n    const { strokeWidth, enabled = true } = this.properties.highlightStyle.series;\n    if (!enabled || strokeWidth === void 0) {\n      return defaultStrokeWidth;\n    }\n    switch (this.isItemIdHighlighted()) {\n      case 1 /* This */:\n        return strokeWidth;\n      case 0 /* None */:\n      case 2 /* Other */:\n        return defaultStrokeWidth;\n    }\n  }\n  isItemIdHighlighted() {\n    var _a, _b;\n    const { series } = (_b = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight()) != null ? _b : {};\n    if (series == null) {\n      return 0 /* None */;\n    }\n    if (series !== this) {\n      return 2 /* Other */;\n    }\n    return 1 /* This */;\n  }\n  getModuleTooltipParams() {\n    const params = this.moduleMap.mapValues((module) => module.getTooltipParams());\n    return params.reduce((total, current) => __spreadValues(__spreadValues({}, current), total), {});\n  }\n  pickNode(point, limitPickModes) {\n    const { pickModes, visible, rootGroup } = this;\n    if (!visible || !rootGroup.visible) {\n      return;\n    }\n    for (const pickMode of pickModes) {\n      if (limitPickModes && !limitPickModes.includes(pickMode)) {\n        continue;\n      }\n      let match;\n      switch (pickMode) {\n        case 0 /* EXACT_SHAPE_MATCH */:\n          match = this.pickNodeExactShape(point);\n          break;\n        case 1 /* NEAREST_BY_MAIN_AXIS_FIRST */:\n        case 2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */:\n          match = this.pickNodeMainAxisFirst(\n            point,\n            pickMode === 2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */\n          );\n          break;\n        case 3 /* NEAREST_NODE */:\n          match = this.pickNodeClosestDatum(point);\n          break;\n      }\n      if (match) {\n        return { pickMode, match: match.datum, distance: match.distance };\n      }\n    }\n  }\n  pickNodeExactShape(point) {\n    const match = this.contentGroup.pickNode(point.x, point.y);\n    return match && { datum: match.datum, distance: 0 };\n  }\n  pickNodeClosestDatum(_point) {\n    throw new Error(\"AG Charts - Series.pickNodeClosestDatum() not implemented\");\n  }\n  pickNodeMainAxisFirst(_point, _requireCategoryAxis) {\n    throw new Error(\"AG Charts - Series.pickNodeMainAxisFirst() not implemented\");\n  }\n  fireNodeClickEvent(event, datum) {\n    this.fireEvent(new this.NodeClickEvent(\"nodeClick\", event, datum, this));\n  }\n  fireNodeDoubleClickEvent(event, datum) {\n    this.fireEvent(new this.NodeClickEvent(\"nodeDoubleClick\", event, datum, this));\n  }\n  toggleSeriesItem(itemId, enabled) {\n    this.visible = enabled;\n    this.nodeDataRefresh = true;\n    this.dispatch(\"visibility-changed\", { itemId, enabled });\n  }\n  isEnabled() {\n    return this.visible;\n  }\n  getModuleMap() {\n    return this.moduleMap;\n  }\n  createModuleContext() {\n    return __spreadProps(__spreadValues({}, this.ctx), { series: this });\n  }\n  getLabelText(label, params, defaultFormatter = String) {\n    var _a;\n    if (label.formatter) {\n      return (_a = this.ctx.callbackCache.call(label.formatter, __spreadValues({ seriesId: this.id }, params))) != null ? _a : defaultFormatter(params.value);\n    }\n    return defaultFormatter(params.value);\n  }\n  getMarkerStyle(marker, params, defaultStyle = marker.getStyle()) {\n    var _a, _b;\n    const defaultSize = { size: (_b = (_a = params.datum.point) == null ? void 0 : _a.size) != null ? _b : 0 };\n    const markerStyle = mergeDefaults(defaultSize, defaultStyle);\n    if (marker.formatter) {\n      const style = this.ctx.callbackCache.call(marker.formatter, __spreadProps(__spreadValues(__spreadValues({\n        seriesId: this.id\n      }, markerStyle), params), {\n        datum: params.datum.datum\n      }));\n      return mergeDefaults(style, markerStyle);\n    }\n    return markerStyle;\n  }\n  updateMarkerStyle(markerNode, marker, params, defaultStyle = marker.getStyle(), { applyTranslation = true } = {}) {\n    const { point } = params.datum;\n    const activeStyle = this.getMarkerStyle(marker, params, defaultStyle);\n    const visible = this.visible && activeStyle.size > 0 && point && !isNaN(point.x) && !isNaN(point.y);\n    if (applyTranslation) {\n      markerNode.setProperties(__spreadProps(__spreadValues({ visible }, activeStyle), { translationX: point == null ? void 0 : point.x, translationY: point == null ? void 0 : point.y }));\n    } else {\n      markerNode.setProperties(__spreadValues({ visible }, activeStyle));\n    }\n    if (typeof marker.shape === \"function\" && !markerNode.dirtyPath) {\n      markerNode.path.clear({ trackChanges: true });\n      markerNode.updatePath();\n      markerNode.checkPathDirty();\n    }\n  }\n  getMinRect() {\n    return void 0;\n  }\n  get nodeDataDependencies() {\n    var _a;\n    return (_a = this._nodeDataDependencies) != null ? _a : { seriesRectWidth: NaN, seriesRectHeight: NaN };\n  }\n  checkResize(newSeriesRect) {\n    const { width: seriesRectWidth, height: seriesRectHeight } = newSeriesRect != null ? newSeriesRect : { width: NaN, height: NaN };\n    const newNodeDataDependencies = newSeriesRect ? { seriesRectWidth, seriesRectHeight } : void 0;\n    const resize = jsonDiff(this.nodeDataDependencies, newNodeDataDependencies) != null;\n    if (resize) {\n      this._nodeDataDependencies = newNodeDataDependencies;\n      this.markNodeDataDirty();\n    }\n    return resize;\n  }\n};\nSeries.highlightedZIndex = 1e12;\n__decorateClass([\n  ActionOnSet({\n    changeValue: function(newVal, oldVal) {\n      this.onSeriesGroupingChange(oldVal, newVal);\n    }\n  })\n], Series.prototype, \"seriesGrouping\", 2);\n\n// packages/ag-charts-community/src/chart/series/seriesLayerManager.ts\nvar SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION = 30;\nvar SeriesLayerManager = class {\n  constructor(rootGroup) {\n    this.groups = {};\n    this.series = {};\n    this.expectedSeriesCount = 1;\n    this.mode = \"normal\";\n    this.rootGroup = rootGroup;\n  }\n  setSeriesCount(count2) {\n    this.expectedSeriesCount = count2;\n  }\n  requestGroup(seriesConfig) {\n    var _a, _b, _c, _d;\n    const {\n      internalId,\n      type,\n      rootGroup: seriesRootGroup,\n      highlightGroup: seriesHighlightGroup,\n      annotationGroup: seriesAnnotationGroup,\n      seriesGrouping\n    } = seriesConfig;\n    const { groupIndex = internalId } = seriesGrouping != null ? seriesGrouping : {};\n    if (this.series[internalId] != null) {\n      throw new Error(`AG Charts - series already has an allocated layer: ${this.series[internalId]}`);\n    }\n    if (Object.keys(this.series).length === 0) {\n      this.mode = this.expectedSeriesCount >= SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION ? \"aggressive-grouping\" : \"normal\";\n    }\n    (_b = (_a = this.groups)[type]) != null ? _b : _a[type] = {};\n    const lookupIndex = this.lookupIdx(groupIndex);\n    let groupInfo = this.groups[type][lookupIndex];\n    if (!groupInfo) {\n      groupInfo = (_d = (_c = this.groups[type])[lookupIndex]) != null ? _d : _c[lookupIndex] = {\n        seriesIds: [],\n        group: this.rootGroup.appendChild(\n          new Group({\n            name: `${type}-content`,\n            layer: true,\n            zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n            zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"data\")\n          })\n        ),\n        highlight: this.rootGroup.appendChild(\n          new Group({\n            name: `${type}-highlight`,\n            layer: true,\n            zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n            zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"highlight\")\n          })\n        ),\n        annotation: this.rootGroup.appendChild(\n          new Group({\n            name: `${type}-annotation`,\n            layer: true,\n            zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n            zIndexSubOrder: seriesConfig.getGroupZIndexSubOrder(\"annotation\")\n          })\n        )\n      };\n    }\n    this.series[internalId] = { layerState: groupInfo, seriesConfig };\n    groupInfo.seriesIds.push(internalId);\n    groupInfo.group.appendChild(seriesRootGroup);\n    groupInfo.highlight.appendChild(seriesHighlightGroup);\n    groupInfo.annotation.appendChild(seriesAnnotationGroup);\n    return groupInfo.group;\n  }\n  changeGroup(seriesConfig) {\n    var _a, _b;\n    const { internalId, seriesGrouping, type, rootGroup, highlightGroup, annotationGroup, oldGrouping } = seriesConfig;\n    const { groupIndex = internalId } = seriesGrouping != null ? seriesGrouping : {};\n    if ((_b = (_a = this.groups[type]) == null ? void 0 : _a[groupIndex]) == null ? void 0 : _b.seriesIds.includes(internalId)) {\n      return;\n    }\n    if (this.series[internalId] != null) {\n      this.releaseGroup({\n        internalId,\n        seriesGrouping: oldGrouping,\n        type,\n        rootGroup,\n        highlightGroup,\n        annotationGroup\n      });\n    }\n    this.requestGroup(seriesConfig);\n  }\n  releaseGroup(seriesConfig) {\n    var _a, _b, _c, _d, _e;\n    const { internalId, seriesGrouping, rootGroup, highlightGroup, annotationGroup, type } = seriesConfig;\n    const { groupIndex = internalId } = seriesGrouping != null ? seriesGrouping : {};\n    if (this.series[internalId] == null) {\n      throw new Error(`AG Charts - series doesn't have an allocated layer: ${internalId}`);\n    }\n    const lookupIndex = this.lookupIdx(groupIndex);\n    const groupInfo = (_c = (_a = this.groups[type]) == null ? void 0 : _a[lookupIndex]) != null ? _c : (_b = this.series[internalId]) == null ? void 0 : _b.layerState;\n    if (groupInfo) {\n      groupInfo.seriesIds = groupInfo.seriesIds.filter((v) => v !== internalId);\n      groupInfo.group.removeChild(rootGroup);\n      groupInfo.highlight.removeChild(highlightGroup);\n      groupInfo.annotation.removeChild(annotationGroup);\n    }\n    if ((groupInfo == null ? void 0 : groupInfo.seriesIds.length) === 0) {\n      this.rootGroup.removeChild(groupInfo.group);\n      this.rootGroup.removeChild(groupInfo.highlight);\n      this.rootGroup.removeChild(groupInfo.annotation);\n      delete this.groups[type][lookupIndex];\n      delete this.groups[type][internalId];\n    } else if ((groupInfo == null ? void 0 : groupInfo.seriesIds.length) > 0) {\n      const leadSeriesConfig = (_e = this.series[(_d = groupInfo == null ? void 0 : groupInfo.seriesIds) == null ? void 0 : _d[0]]) == null ? void 0 : _e.seriesConfig;\n      groupInfo.group.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"data\");\n      groupInfo.highlight.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"highlight\");\n      groupInfo.annotation.zIndexSubOrder = leadSeriesConfig == null ? void 0 : leadSeriesConfig.getGroupZIndexSubOrder(\"annotation\");\n    }\n    delete this.series[internalId];\n  }\n  lookupIdx(groupIndex) {\n    if (this.mode === \"normal\") {\n      return groupIndex;\n    }\n    if (typeof groupIndex === \"string\") {\n      groupIndex = Number(groupIndex.split(\"-\").slice(-1)[0]);\n      if (!groupIndex)\n        return 0;\n    }\n    return Math.floor(\n      Math.max(Math.min(groupIndex / this.expectedSeriesCount, 1), 0) * SERIES_THRESHOLD_FOR_AGGRESSIVE_LAYER_REDUCTION\n    );\n  }\n  destroy() {\n    for (const groups of Object.values(this.groups)) {\n      for (const groupInfo of Object.values(groups)) {\n        this.rootGroup.removeChild(groupInfo.group);\n        this.rootGroup.removeChild(groupInfo.highlight);\n        this.rootGroup.removeChild(groupInfo.annotation);\n      }\n    }\n    this.groups = {};\n    this.series = {};\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/seriesStateManager.ts\nvar SeriesStateManager = class {\n  constructor() {\n    this.groups = {};\n  }\n  registerSeries({\n    id,\n    seriesGrouping,\n    visible,\n    type\n  }) {\n    var _a, _b;\n    if (!seriesGrouping)\n      return;\n    (_b = (_a = this.groups)[type]) != null ? _b : _a[type] = {};\n    this.groups[type][id] = { grouping: seriesGrouping, visible };\n  }\n  deregisterSeries({ id, type }) {\n    if (this.groups[type]) {\n      delete this.groups[type][id];\n    }\n    if (this.groups[type] && Object.keys(this.groups[type]).length === 0) {\n      delete this.groups[type];\n    }\n  }\n  getVisiblePeerGroupIndex({ type, seriesGrouping }) {\n    var _a;\n    if (!seriesGrouping)\n      return { visibleGroupCount: 1, index: 0 };\n    const visibleGroups = [\n      ...Object.entries((_a = this.groups[type]) != null ? _a : {}).filter(([_, entry]) => entry.visible).reduce((result, [_, next]) => {\n        if (next.visible) {\n          result.add(next.grouping.groupIndex);\n        }\n        return result;\n      }, /* @__PURE__ */ new Set()).values()\n    ];\n    visibleGroups.sort((a, b) => a - b);\n    return {\n      visibleGroupCount: visibleGroups.length,\n      index: visibleGroups.indexOf(seriesGrouping.groupIndex)\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/update/baseLayoutProcessor.ts\nvar BaseLayoutProcessor = class {\n  constructor(chartLike, layoutService) {\n    this.chartLike = chartLike;\n    this.layoutService = layoutService;\n    this.destroyFns = [];\n    this.destroyFns.push(\n      // eslint-disable-next-line sonarjs/no-duplicate-string\n      this.layoutService.addListener(\"layout-complete\", (e) => this.layoutComplete(e)),\n      this.layoutService.addListener(\"start-layout\", (e) => this.positionPadding(e.shrinkRect)),\n      this.layoutService.addListener(\"start-layout\", (e) => this.positionCaptions(e.shrinkRect))\n    );\n  }\n  destroy() {\n    this.destroyFns.forEach((cb) => cb());\n  }\n  layoutComplete({ clipSeries, series: { paddedRect } }) {\n    const { seriesArea, seriesRoot } = this.chartLike;\n    if (seriesArea.clip || clipSeries) {\n      seriesRoot.setClipRectInGroupCoordinateSpace(paddedRect);\n    } else {\n      seriesRoot.setClipRectInGroupCoordinateSpace();\n    }\n  }\n  positionPadding(shrinkRect) {\n    const { padding } = this.chartLike;\n    shrinkRect.shrink(padding.left, \"left\");\n    shrinkRect.shrink(padding.top, \"top\");\n    shrinkRect.shrink(padding.right, \"right\");\n    shrinkRect.shrink(padding.bottom, \"bottom\");\n    return { shrinkRect };\n  }\n  positionCaptions(shrinkRect) {\n    var _a, _b, _c, _d;\n    const { title, subtitle, footnote } = this.chartLike;\n    const newShrinkRect = shrinkRect.clone();\n    const updateCaption = (caption) => {\n      var _a2;\n      const defaultCaptionHeight = shrinkRect.height / 10;\n      const captionLineHeight = (_a2 = caption.lineHeight) != null ? _a2 : caption.fontSize * Text.defaultLineHeightRatio;\n      const maxWidth = shrinkRect.width;\n      const maxHeight = Math.max(captionLineHeight, defaultCaptionHeight);\n      caption.computeTextWrap(maxWidth, maxHeight);\n    };\n    const computeX = (align) => {\n      if (align === \"left\") {\n        return newShrinkRect.x;\n      } else if (align === \"right\") {\n        return newShrinkRect.x + newShrinkRect.width;\n      } else if (align !== \"center\") {\n        Logger.error(`invalid textAlign value: ${align}`);\n      }\n      return newShrinkRect.x + newShrinkRect.width / 2;\n    };\n    const positionTopAndShrinkBBox = (caption, spacing) => {\n      const baseY = newShrinkRect.y;\n      caption.node.x = computeX(caption.textAlign);\n      caption.node.y = baseY;\n      caption.node.textBaseline = \"top\";\n      updateCaption(caption);\n      const bbox = caption.node.computeBBox();\n      const bboxHeight = Math.ceil(bbox.y - baseY + bbox.height + spacing);\n      newShrinkRect.shrink(bboxHeight, \"top\");\n    };\n    const positionBottomAndShrinkBBox = (caption, spacing) => {\n      const baseY = newShrinkRect.y + newShrinkRect.height;\n      caption.node.x = computeX(caption.textAlign);\n      caption.node.y = baseY;\n      caption.node.textBaseline = \"bottom\";\n      updateCaption(caption);\n      const bbox = caption.node.computeBBox();\n      const bboxHeight = Math.ceil(baseY - bbox.y + spacing);\n      newShrinkRect.shrink(bboxHeight, \"bottom\");\n    };\n    if (subtitle) {\n      subtitle.node.visible = (_a = subtitle.enabled) != null ? _a : false;\n    }\n    if (title) {\n      title.node.visible = title.enabled;\n      if (title.node.visible) {\n        const defaultTitleSpacing = (subtitle == null ? void 0 : subtitle.node.visible) ? Caption.SMALL_PADDING : Caption.LARGE_PADDING;\n        const spacing = (_b = title.spacing) != null ? _b : defaultTitleSpacing;\n        positionTopAndShrinkBBox(title, spacing);\n      }\n    }\n    if (subtitle && subtitle.node.visible) {\n      positionTopAndShrinkBBox(subtitle, (_c = subtitle.spacing) != null ? _c : 0);\n    }\n    if (footnote) {\n      footnote.node.visible = footnote.enabled;\n      if (footnote.node.visible) {\n        positionBottomAndShrinkBBox(footnote, (_d = footnote.spacing) != null ? _d : 0);\n      }\n    }\n    return { shrinkRect: newShrinkRect };\n  }\n};\n\n// packages/ag-charts-community/src/chart/updateService.ts\nvar UpdateService = class extends Listeners {\n  constructor(updateCallback) {\n    super();\n    this.updateCallback = updateCallback;\n  }\n  update(type = 0 /* FULL */, { forceNodeDataRefresh = false, skipAnimations = false } = {}) {\n    this.updateCallback(type, { forceNodeDataRefresh, skipAnimations });\n  }\n  dispatchUpdateComplete(minRect) {\n    const event = { type: \"update-complete\", minRect };\n    this.dispatch(\"update-complete\", event);\n  }\n};\n\n// packages/ag-charts-community/src/chart/chart.ts\nfunction initialiseSpecialOverrides(opts) {\n  let globalWindow;\n  if (opts.window != null) {\n    globalWindow = opts.window;\n  } else if (typeof window !== \"undefined\") {\n    globalWindow = window;\n  } else if (typeof global !== \"undefined\") {\n    globalWindow = global.window;\n  } else {\n    throw new Error(\"AG Charts - unable to resolve global window\");\n  }\n  let globalDocument;\n  if (opts.document != null) {\n    globalDocument = opts.document;\n  } else if (typeof document !== \"undefined\") {\n    globalDocument = document;\n  } else if (typeof global !== \"undefined\") {\n    globalDocument = global.document;\n  } else {\n    throw new Error(\"AG Charts - unable to resolve global document\");\n  }\n  return {\n    document: globalDocument,\n    window: globalWindow,\n    overrideDevicePixelRatio: opts.overrideDevicePixelRatio,\n    sceneMode: opts.sceneMode\n  };\n}\nvar SeriesArea = class {\n  constructor() {\n    this.clip = void 0;\n    this.padding = new Padding(0);\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], SeriesArea.prototype, \"clip\", 2);\nvar chartsInstances = /* @__PURE__ */ new WeakMap();\nvar Chart = class extends Observable {\n  constructor(specialOverrides, resources) {\n    var _a;\n    super();\n    this.id = createId(this);\n    this.processedOptions = {};\n    this.userOptions = {};\n    this.queuedUserOptions = [];\n    this.seriesRoot = new Group({ name: `${this.id}-Series-root` });\n    this.debug = Debug.create();\n    this.extraDebugStats = {};\n    this.container = void 0;\n    this.data = [];\n    this._firstAutoSize = true;\n    this.padding = new Padding(20);\n    this._seriesArea = new SeriesArea();\n    this.title = void 0;\n    this.subtitle = void 0;\n    this.footnote = void 0;\n    this.mode = \"standalone\";\n    this._destroyed = false;\n    this._destroyFns = [];\n    this.modules = /* @__PURE__ */ new Map();\n    // TODO shouldn't be public\n    this.legends = /* @__PURE__ */ new Map();\n    this.processors = [];\n    this._pendingFactoryUpdatesCount = 0;\n    this._performUpdateNoRenderCount = 0;\n    this._performUpdateType = 6 /* NONE */;\n    this._performUpdateSkipAnimations = false;\n    this.updateShortcutCount = 0;\n    this.seriesToUpdate = /* @__PURE__ */ new Set();\n    this.updateMutex = new Mutex();\n    this.updateRequestors = {};\n    this.performUpdateTrigger = debouncedCallback((_0) => __async(this, [_0], function* ({ count: count2 }) {\n      if (this._destroyed)\n        return;\n      this.updateMutex.acquire(() => __async(this, null, function* () {\n        try {\n          yield this.performUpdate(count2);\n        } catch (error) {\n          this._lastPerformUpdateError = error;\n          Logger.error(\"update error\", error);\n        }\n      }));\n    }));\n    this._axes = [];\n    this._series = [];\n    this.lastInteractionEvent = void 0;\n    this.pointerScheduler = debouncedAnimationFrame(() => {\n      if (this.lastInteractionEvent) {\n        this.handlePointer(this.lastInteractionEvent);\n      }\n      this.lastInteractionEvent = void 0;\n    });\n    this.onSeriesNodeClick = (event) => {\n      const seriesNodeClickEvent = __spreadProps(__spreadValues({}, event), {\n        type: \"seriesNodeClick\"\n      });\n      Object.defineProperty(seriesNodeClickEvent, \"series\", {\n        enumerable: false,\n        // Should display the deprecation warning\n        get: () => event.series\n      });\n      this.fireEvent(seriesNodeClickEvent);\n    };\n    this.onSeriesNodeDoubleClick = (event) => {\n      const seriesNodeDoubleClick = __spreadProps(__spreadValues({}, event), {\n        type: \"seriesNodeDoubleClick\"\n      });\n      this.fireEvent(seriesNodeDoubleClick);\n    };\n    this.specialOverrides = initialiseSpecialOverrides(specialOverrides);\n    const { window: window2, document: document2 } = this.specialOverrides;\n    const scene = resources == null ? void 0 : resources.scene;\n    const element2 = (_a = resources == null ? void 0 : resources.element) != null ? _a : document2.createElement(\"div\");\n    const container = resources == null ? void 0 : resources.container;\n    const root = new Group({ name: \"root\" });\n    root.visible = false;\n    root.append(this.seriesRoot);\n    this.axisGridGroup = new Group({ name: \"Axes-Grids\", layer: true, zIndex: 1 /* AXIS_GRID_ZINDEX */ });\n    root.appendChild(this.axisGridGroup);\n    this.axisGroup = new Group({ name: \"Axes\", layer: true, zIndex: 2 /* AXIS_ZINDEX */ });\n    root.appendChild(this.axisGroup);\n    this.element = element2;\n    element2.classList.add(\"ag-chart-wrapper\");\n    element2.style.position = \"relative\";\n    this.scene = scene != null ? scene : new Scene(this.specialOverrides);\n    this.scene.root = root;\n    this.scene.container = element2;\n    this.autoSize = true;\n    this.chartEventManager = new ChartEventManager();\n    this.cursorManager = new CursorManager(element2);\n    this.highlightManager = new HighlightManager();\n    this.interactionManager = new InteractionManager(element2, document2, window2);\n    this.zoomManager = new ZoomManager();\n    this.layoutService = new LayoutService();\n    this.updateService = new UpdateService(\n      (type = 0 /* FULL */, { forceNodeDataRefresh, skipAnimations }) => this.update(type, { forceNodeDataRefresh, skipAnimations })\n    );\n    this.seriesStateManager = new SeriesStateManager();\n    this.seriesLayerManager = new SeriesLayerManager(this.seriesRoot);\n    this.callbackCache = new CallbackCache();\n    this.animationManager = new AnimationManager(this.interactionManager, this.updateMutex);\n    this.animationManager.skip();\n    this.animationManager.play();\n    this.processors = [new BaseLayoutProcessor(this, this.layoutService)];\n    this.tooltip = new Tooltip(this.scene.canvas.element, document2, window2, document2.body);\n    this.tooltipManager = new TooltipManager(this.tooltip, this.interactionManager);\n    this.overlays = new ChartOverlays(this.element);\n    this.highlight = new ChartHighlight();\n    this.container = container;\n    SizeMonitor.observe(this.element, (size) => this.rawResize(size));\n    this._destroyFns.push(\n      this.interactionManager.addListener(\"click\", (event) => this.onClick(event)),\n      this.interactionManager.addListener(\"dblclick\", (event) => this.onDoubleClick(event)),\n      this.interactionManager.addListener(\"hover\", (event) => this.onMouseMove(event)),\n      this.interactionManager.addListener(\"leave\", (event) => this.onLeave(event)),\n      this.interactionManager.addListener(\"page-left\", () => this.destroy()),\n      this.interactionManager.addListener(\"wheel\", () => this.disablePointer()),\n      // Block redundant and interfering attempts to update the hovered element during dragging.\n      this.interactionManager.addListener(\"drag-start\", () => this.disablePointer()),\n      this.animationManager.addListener(\"animation-frame\", (_) => {\n        this.update(5 /* SCENE_RENDER */);\n      }),\n      this.highlightManager.addListener(\"highlight-change\", (event) => this.changeHighlightDatum(event)),\n      this.zoomManager.addListener(\n        \"zoom-change\",\n        (_) => this.update(1 /* PROCESS_DATA */, { forceNodeDataRefresh: true, skipAnimations: true })\n      )\n    );\n    this.attachLegend(\"category\", Legend);\n    this.legend = this.legends.get(\"category\");\n  }\n  static getInstance(element2) {\n    return chartsInstances.get(element2);\n  }\n  getOptions() {\n    var _a;\n    const { queuedUserOptions } = this;\n    const lastUpdateOptions = (_a = queuedUserOptions[queuedUserOptions.length - 1]) != null ? _a : this.userOptions;\n    return jsonClone(lastUpdateOptions);\n  }\n  autoSizeChanged(value) {\n    const { style } = this.element;\n    if (value) {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      if (!this._lastAutoSize) {\n        return;\n      }\n      this.resize(void 0, void 0, \"autoSize option\");\n    } else {\n      style.display = \"inline-block\";\n      style.width = \"auto\";\n      style.height = \"auto\";\n    }\n  }\n  download(fileName, fileFormat) {\n    this.scene.download(fileName, fileFormat);\n  }\n  get seriesArea() {\n    return this._seriesArea;\n  }\n  set seriesArea(newArea) {\n    if (!newArea) {\n      this._seriesArea = new SeriesArea();\n    } else {\n      this._seriesArea = newArea;\n    }\n  }\n  get destroyed() {\n    return this._destroyed;\n  }\n  addModule(module) {\n    if (this.modules.has(module.optionsKey)) {\n      throw new Error(`AG Charts - module already initialised: ${module.optionsKey}`);\n    }\n    const moduleInstance = new module.instanceConstructor(this.getModuleContext());\n    if (module.type === \"legend\") {\n      const legend = moduleInstance;\n      this.legends.set(module.identifier, legend);\n      legend.attachLegend(this.scene.root);\n    }\n    this.modules.set(module.optionsKey, moduleInstance);\n  }\n  removeModule(module) {\n    var _a;\n    if (module.type === \"legend\") {\n      this.legends.delete(module.identifier);\n    }\n    (_a = this.modules.get(module.optionsKey)) == null ? void 0 : _a.destroy();\n    this.modules.delete(module.optionsKey);\n  }\n  attachLegend(legendType, legendConstructor) {\n    const legend = new legendConstructor(this.getModuleContext());\n    this.legends.set(legendType, legend);\n    legend.attachLegend(this.scene.root);\n  }\n  isModuleEnabled(module) {\n    return this.modules.has(module.optionsKey);\n  }\n  getModuleContext() {\n    const {\n      scene,\n      animationManager,\n      chartEventManager,\n      cursorManager,\n      highlightManager,\n      interactionManager,\n      tooltipManager,\n      zoomManager,\n      layoutService,\n      updateService,\n      seriesStateManager,\n      seriesLayerManager,\n      callbackCache,\n      specialOverrides: { window: window2, document: document2 }\n    } = this;\n    return {\n      window: window2,\n      document: document2,\n      scene,\n      animationManager,\n      chartEventManager,\n      cursorManager,\n      highlightManager,\n      interactionManager,\n      tooltipManager,\n      zoomManager,\n      chartService: this,\n      layoutService,\n      updateService,\n      seriesStateManager,\n      seriesLayerManager,\n      callbackCache\n    };\n  }\n  destroy(opts) {\n    if (this._destroyed) {\n      return;\n    }\n    const keepTransferableResources = opts == null ? void 0 : opts.keepTransferableResources;\n    let result;\n    this._performUpdateType = 6 /* NONE */;\n    this._destroyFns.forEach((fn) => fn());\n    this.processors.forEach((p) => p.destroy());\n    this.tooltipManager.destroy();\n    this.tooltip.destroy();\n    this.legends.forEach((legend) => legend.destroy());\n    this.legends.clear();\n    this.overlays.destroy();\n    SizeMonitor.unobserve(this.element);\n    for (const { instance: moduleInstance } of Object.values(this.modules)) {\n      this.removeModule(moduleInstance);\n    }\n    this.interactionManager.destroy();\n    this.animationManager.stop();\n    if (keepTransferableResources) {\n      this.scene.strip();\n      result = { container: this.container, scene: this.scene, element: this.element };\n    } else {\n      this.scene.destroy();\n      this.container = void 0;\n    }\n    this.removeAllSeries();\n    this.seriesLayerManager.destroy();\n    this.axes.forEach((a) => a.destroy());\n    this.axes = [];\n    this.callbackCache.invalidateCache();\n    this._destroyed = true;\n    return result;\n  }\n  disablePointer(highlightOnly = false) {\n    if (!highlightOnly) {\n      this.tooltipManager.removeTooltip(this.id);\n    }\n    this.highlightManager.updateHighlight(this.id);\n    if (this.lastInteractionEvent) {\n      this.lastInteractionEvent = void 0;\n    }\n  }\n  requestFactoryUpdate(cb) {\n    this._pendingFactoryUpdatesCount++;\n    this.updateMutex.acquire(() => __async(this, null, function* () {\n      yield cb();\n      this._pendingFactoryUpdatesCount--;\n    }));\n  }\n  get performUpdateType() {\n    return this._performUpdateType;\n  }\n  get lastPerformUpdateError() {\n    return this._lastPerformUpdateError;\n  }\n  update(type = 0 /* FULL */, opts) {\n    var _a, _b;\n    const {\n      forceNodeDataRefresh = false,\n      skipAnimations,\n      seriesToUpdate = this.series,\n      newAnimationBatch\n    } = opts != null ? opts : {};\n    if (forceNodeDataRefresh) {\n      this.series.forEach((series) => series.markNodeDataDirty());\n    }\n    for (const series of seriesToUpdate) {\n      this.seriesToUpdate.add(series);\n    }\n    if (skipAnimations) {\n      this.animationManager.skipCurrentBatch();\n      this._performUpdateSkipAnimations = true;\n    }\n    if (newAnimationBatch) {\n      if (this.animationManager.isActive()) {\n        this._performUpdateSkipAnimations = true;\n      } else {\n        (_a = this._performUpdateSkipAnimations) != null ? _a : this._performUpdateSkipAnimations = false;\n      }\n    }\n    if (Debug.check(true)) {\n      let stack = (_b = new Error().stack) != null ? _b : \"<unknown>\";\n      stack = stack.replace(/\\([^)]*/g, \"\");\n      this.updateRequestors[stack] = type;\n    }\n    if (type < this._performUpdateType) {\n      this._performUpdateType = type;\n      this.performUpdateTrigger.schedule(opts == null ? void 0 : opts.backOffMs);\n    }\n  }\n  performUpdate(count2) {\n    return __async(this, null, function* () {\n      var _a;\n      const { _performUpdateType: performUpdateType, extraDebugStats } = this;\n      const seriesToUpdate = [...this.seriesToUpdate];\n      this._performUpdateType = 6 /* NONE */;\n      this.seriesToUpdate.clear();\n      if (this.updateShortcutCount === 0 && performUpdateType < 5 /* SCENE_RENDER */) {\n        this.animationManager.startBatch(this._performUpdateSkipAnimations);\n      }\n      this.debug(\"Chart.performUpdate() - start\", ChartUpdateType[performUpdateType]);\n      const splits = { start: performance.now() };\n      switch (performUpdateType) {\n        case 0 /* FULL */:\n        case 1 /* PROCESS_DATA */:\n          yield this.processData();\n          this.disablePointer(true);\n          splits[\"\\u{1F3ED}\"] = performance.now();\n        case 2 /* PERFORM_LAYOUT */:\n          if (this.checkUpdateShortcut(2 /* PERFORM_LAYOUT */))\n            break;\n          if (!this.checkFirstAutoSize(seriesToUpdate))\n            break;\n          yield this.processLayout();\n          splits[\"\\u2316\"] = performance.now();\n        case 3 /* SERIES_UPDATE */:\n          if (this.checkUpdateShortcut(3 /* SERIES_UPDATE */))\n            break;\n          const { seriesRect } = this;\n          const seriesUpdates = [...seriesToUpdate].map((series) => series.update({ seriesRect }));\n          yield Promise.all(seriesUpdates);\n          splits[\"\\u{1F914}\"] = performance.now();\n        case 4 /* TOOLTIP_RECALCULATION */:\n          if (this.checkUpdateShortcut(4 /* TOOLTIP_RECALCULATION */))\n            break;\n          const tooltipMeta = this.tooltipManager.getTooltipMeta(this.id);\n          const isHovered = ((_a = tooltipMeta == null ? void 0 : tooltipMeta.event) == null ? void 0 : _a.type) === \"hover\";\n          if (performUpdateType <= 3 /* SERIES_UPDATE */ && isHovered) {\n            this.handlePointer(tooltipMeta.event);\n          }\n          splits[\"\\u2196\"] = performance.now();\n        case 5 /* SCENE_RENDER */:\n          if (this.checkUpdateShortcut(5 /* SCENE_RENDER */))\n            break;\n          extraDebugStats[\"updateShortcutCount\"] = this.updateShortcutCount;\n          yield this.scene.render({ debugSplitTimes: splits, extraDebugStats });\n          this.extraDebugStats = {};\n        case 6 /* NONE */:\n          this.updateShortcutCount = 0;\n          this.updateRequestors = {};\n          this._performUpdateSkipAnimations = void 0;\n          this.animationManager.endBatch();\n      }\n      this.updateService.dispatchUpdateComplete(this.getMinRect());\n      const end = performance.now();\n      this.debug(\"Chart.performUpdate() - end\", {\n        chart: this,\n        durationMs: Math.round((end - splits[\"start\"]) * 100) / 100,\n        count: count2,\n        performUpdateType: ChartUpdateType[performUpdateType]\n      });\n    });\n  }\n  checkUpdateShortcut(checkUpdateType) {\n    const maxShortcuts = 3;\n    if (this.updateShortcutCount > maxShortcuts) {\n      Logger.warn(\n        `exceeded the maximum number of simultaneous updates (${maxShortcuts + 1}), discarding changes and rendering`,\n        this.updateRequestors\n      );\n      return false;\n    }\n    if (this.performUpdateType <= checkUpdateType) {\n      this.updateShortcutCount++;\n      return true;\n    }\n    return false;\n  }\n  checkFirstAutoSize(seriesToUpdate) {\n    if (this.autoSize && !this._lastAutoSize) {\n      const count2 = this._performUpdateNoRenderCount++;\n      const backOffMs = (count2 ^ 2) * 10;\n      if (count2 < 8) {\n        this.update(2 /* PERFORM_LAYOUT */, { seriesToUpdate, backOffMs });\n        this.debug(\"Chart.checkFirstAutoSize() - backing off until first size update\", backOffMs);\n        return false;\n      }\n      this.debug(\"Chart.checkFirstAutoSize() - timeout for first size update.\");\n    }\n    this._performUpdateNoRenderCount = 0;\n    return true;\n  }\n  set axes(values) {\n    const removedAxes = /* @__PURE__ */ new Set();\n    this._axes.forEach((axis) => {\n      axis.detachAxis(this.axisGroup, this.axisGridGroup);\n      removedAxes.add(axis);\n    });\n    this._axes = values.filter((a) => !a.linkedTo).concat(values.filter((a) => a.linkedTo));\n    this._axes.forEach((axis) => {\n      axis.attachAxis(this.axisGroup, this.axisGridGroup);\n      removedAxes.delete(axis);\n    });\n    this.zoomManager.updateAxes(this._axes);\n    removedAxes.forEach((axis) => axis.destroy());\n  }\n  get axes() {\n    return this._axes;\n  }\n  set series(values) {\n    this.removeAllSeries();\n    this.seriesLayerManager.setSeriesCount(values.length);\n    values.forEach((series) => this.addSeries(series));\n  }\n  get series() {\n    return this._series;\n  }\n  addSeries(series) {\n    const { series: allSeries } = this;\n    const canAdd = allSeries.indexOf(series) < 0;\n    if (canAdd) {\n      allSeries.push(series);\n      if (series.rootGroup.parent == null) {\n        this.seriesLayerManager.requestGroup(series);\n      }\n      this.initSeries(series);\n      return true;\n    }\n    return false;\n  }\n  initSeries(series) {\n    const chart = this;\n    series.chart = {\n      get mode() {\n        return chart.mode;\n      },\n      get seriesRect() {\n        return chart.seriesRect;\n      },\n      placeLabels() {\n        return chart.placeLabels();\n      }\n    };\n    series.setChartData(this.data);\n    this.addSeriesListeners(series);\n    series.addChartEventListeners();\n  }\n  removeAllSeries() {\n    this.series.forEach((series) => {\n      series.removeEventListener(\"nodeClick\", this.onSeriesNodeClick);\n      series.removeEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n      series.destroy();\n      series.chart = void 0;\n    });\n    this._series = [];\n  }\n  addSeriesListeners(series) {\n    if (this.hasEventListener(\"seriesNodeClick\")) {\n      series.addEventListener(\"nodeClick\", this.onSeriesNodeClick);\n    }\n    if (this.hasEventListener(\"seriesNodeDoubleClick\")) {\n      series.addEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n    }\n  }\n  updateAllSeriesListeners() {\n    this.series.forEach((series) => {\n      series.removeEventListener(\"nodeClick\", this.onSeriesNodeClick);\n      series.removeEventListener(\"nodeDoubleClick\", this.onSeriesNodeDoubleClick);\n      this.addSeriesListeners(series);\n    });\n  }\n  assignSeriesToAxes() {\n    this.axes.forEach((axis) => {\n      axis.boundSeries = this.series.filter((s) => {\n        const seriesAxis = s.axes[axis.direction];\n        return seriesAxis === axis;\n      });\n    });\n  }\n  assignAxesToSeries() {\n    const directionToAxesMap = {};\n    this.axes.forEach((axis) => {\n      var _a;\n      const direction = axis.direction;\n      const directionAxes = (_a = directionToAxesMap[direction]) != null ? _a : directionToAxesMap[direction] = [];\n      directionAxes.push(axis);\n    });\n    this.series.forEach((series) => {\n      series.directions.forEach((direction) => {\n        const directionAxes = directionToAxesMap[direction];\n        if (!directionAxes) {\n          Logger.warnOnce(\n            `no available axis for direction [${direction}]; check series and axes configuration.`\n          );\n          return;\n        }\n        const seriesKeys = series.getKeys(direction);\n        const newAxis = this.findMatchingAxis(directionAxes, seriesKeys);\n        if (!newAxis) {\n          Logger.warnOnce(\n            `no matching axis for direction [${direction}] and keys [${seriesKeys}]; check series and axes configuration.`\n          );\n          return;\n        }\n        series.axes[direction] = newAxis;\n      });\n    });\n  }\n  findMatchingAxis(directionAxes, directionKeys) {\n    for (const axis of directionAxes) {\n      const axisKeys = axis.keys;\n      if (!axisKeys.length) {\n        return axis;\n      }\n      if (!directionKeys) {\n        continue;\n      }\n      for (const directionKey of directionKeys) {\n        if (axisKeys.indexOf(directionKey) >= 0) {\n          return axis;\n        }\n      }\n    }\n  }\n  rawResize(size) {\n    var _a;\n    let { width, height } = size;\n    width = Math.floor(width);\n    height = Math.floor(height);\n    if (!this.autoSize) {\n      return;\n    }\n    if (width === 0 && height === 0) {\n      return;\n    }\n    const [autoWidth = 0, authHeight = 0] = (_a = this._lastAutoSize) != null ? _a : [];\n    if (autoWidth === width && authHeight === height) {\n      return;\n    }\n    this._lastAutoSize = [width, height];\n    this.resize(void 0, void 0, \"SizeMonitor\");\n  }\n  resize(width, height, source) {\n    var _a, _b, _c, _d;\n    width != null ? width : width = (_b = this.width) != null ? _b : this.autoSize ? (_a = this._lastAutoSize) == null ? void 0 : _a[0] : this.scene.canvas.width;\n    height != null ? height : height = (_d = this.height) != null ? _d : this.autoSize ? (_c = this._lastAutoSize) == null ? void 0 : _c[1] : this.scene.canvas.height;\n    this.debug(`Chart.resize() from ${source}`, { width, height, stack: new Error().stack });\n    if (!width || !height || !Number.isFinite(width) || !Number.isFinite(height))\n      return;\n    if (this.scene.resize(width, height)) {\n      this.disablePointer();\n      this.animationManager.reset();\n      let skipAnimations = true;\n      if (this.autoSize && this._firstAutoSize) {\n        skipAnimations = false;\n        this._firstAutoSize = false;\n      }\n      this.update(2 /* PERFORM_LAYOUT */, { forceNodeDataRefresh: true, skipAnimations });\n    }\n  }\n  processData() {\n    return __async(this, null, function* () {\n      if (this.series.some((s) => s.canHaveAxes)) {\n        this.assignAxesToSeries();\n        this.assignSeriesToAxes();\n      }\n      const dataController = new DataController(this.mode);\n      const seriesPromises = this.series.map((s) => s.processData(dataController));\n      yield dataController.execute();\n      yield Promise.all(seriesPromises);\n      yield this.updateLegend();\n    });\n  }\n  placeLabels() {\n    const visibleSeries = [];\n    const data = [];\n    for (const series of this.series) {\n      if (!series.visible) {\n        continue;\n      }\n      const labelData = series.getLabelData();\n      if (!(labelData && isPointLabelDatum(labelData[0]))) {\n        continue;\n      }\n      data.push(labelData);\n      visibleSeries.push(series);\n    }\n    const { seriesRect } = this;\n    const { top, right, bottom, left } = this.seriesArea.padding;\n    const labels = seriesRect && data.length > 0 ? placeLabels(data, {\n      x: -left,\n      y: -top,\n      width: seriesRect.width + left + right,\n      height: seriesRect.height + top + bottom\n    }) : [];\n    return new Map(labels.map((l, i) => [visibleSeries[i], l]));\n  }\n  updateLegend() {\n    return __async(this, null, function* () {\n      this.legends.forEach((legend, legendType) => {\n        const isCategoryLegendData = (data) => data.every((d) => d.legendType === \"category\");\n        const legendData = this.series.filter((s) => s.properties.showInLegend).flatMap((s) => s.getLegendData(legendType));\n        if (isCategoryLegendData(legendData)) {\n          this.validateCategoryLegendData(legendData);\n        }\n        legend.data = legendData;\n      });\n    });\n  }\n  validateCategoryLegendData(legendData) {\n    const labelMarkerFills = {};\n    legendData.forEach((d) => {\n      var _a, _b, _c, _d, _e;\n      const seriesType = (_a = this.series.find((s) => s.id === d.seriesId)) == null ? void 0 : _a.type;\n      if (!seriesType)\n        return;\n      (_b = labelMarkerFills[seriesType]) != null ? _b : labelMarkerFills[seriesType] = {};\n      (_e = (_c = labelMarkerFills[seriesType])[_d = d.label.text]) != null ? _e : _c[_d] = /* @__PURE__ */ new Set();\n      if (d.marker.fill != null) {\n        labelMarkerFills[seriesType][d.label.text].add(d.marker.fill);\n      }\n    });\n    for (const seriesMarkers of Object.values(labelMarkerFills)) {\n      for (const [name, fills] of Object.entries(seriesMarkers)) {\n        if (fills.size > 1) {\n          Logger.warnOnce(\n            `legend item '${name}' has multiple fill colors, this may cause unexpected behaviour.`\n          );\n        }\n      }\n    }\n  }\n  processLayout() {\n    return __async(this, null, function* () {\n      var _a;\n      const oldRect = this.animationRect;\n      yield this.performLayout();\n      if (oldRect && !((_a = this.animationRect) == null ? void 0 : _a.equals(oldRect))) {\n        this.animationManager.skipCurrentBatch();\n      }\n      this.handleOverlays();\n      this.debug(\"Chart.performUpdate() - seriesRect\", this.seriesRect);\n    });\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      if (this.scene.root) {\n        this.scene.root.visible = true;\n      }\n      const { width, height } = this.scene;\n      let ctx = { shrinkRect: new BBox(0, 0, width, height) };\n      ctx = this.layoutService.dispatchPerformLayout(\"start-layout\", ctx);\n      ctx = this.layoutService.dispatchPerformLayout(\"before-series\", ctx);\n      return ctx.shrinkRect;\n    });\n  }\n  // x/y are local canvas coordinates in CSS pixels, not actual pixels\n  pickSeriesNode(point, exactMatchOnly, maxDistance) {\n    var _a, _b;\n    const start = performance.now();\n    const pickModes = exactMatchOnly ? [0 /* EXACT_SHAPE_MATCH */] : void 0;\n    const reverseSeries = [...this.series].reverse();\n    let result;\n    for (const series of reverseSeries) {\n      if (!series.visible || !series.rootGroup.visible) {\n        continue;\n      }\n      const { match, distance } = (_a = series.pickNode(point, pickModes)) != null ? _a : {};\n      if (!match || distance == null) {\n        continue;\n      }\n      if ((!result || result.distance > distance) && distance <= (maxDistance != null ? maxDistance : Infinity)) {\n        result = { series, distance, datum: match };\n      }\n      if (distance === 0) {\n        break;\n      }\n    }\n    this.extraDebugStats[\"pickSeriesNode\"] = Math.round(\n      ((_b = this.extraDebugStats[\"pickSeriesNode\"]) != null ? _b : 0) + (performance.now() - start)\n    );\n    return result;\n  }\n  onMouseMove(event) {\n    this.lastInteractionEvent = event;\n    this.pointerScheduler.schedule();\n    this.extraDebugStats[\"mouseX\"] = event.offsetX;\n    this.extraDebugStats[\"mouseY\"] = event.offsetY;\n    this.update(5 /* SCENE_RENDER */);\n  }\n  onLeave(event) {\n    if (this.tooltip.pointerLeftOntoTooltip(event)) {\n      return;\n    }\n    this.disablePointer();\n    this.update(5 /* SCENE_RENDER */);\n  }\n  handlePointer(event) {\n    const { lastPick, hoverRect } = this;\n    const { offsetX, offsetY } = event;\n    const disablePointer = (highlightOnly = false) => {\n      if (lastPick) {\n        this.disablePointer(highlightOnly);\n      }\n    };\n    if (!(hoverRect == null ? void 0 : hoverRect.containsPoint(offsetX, offsetY))) {\n      disablePointer();\n      return;\n    }\n    this.handlePointerTooltip(event, disablePointer);\n    this.handlePointerNode(event);\n  }\n  handlePointerTooltip(event, disablePointer) {\n    const { lastPick, tooltip } = this;\n    const { range: range3 } = tooltip;\n    const { offsetX, offsetY } = event;\n    let pixelRange;\n    if (typeof range3 === \"number\" && Number.isFinite(range3)) {\n      pixelRange = range3;\n    }\n    const pick = this.pickSeriesNode({ x: offsetX, y: offsetY }, range3 === \"exact\", pixelRange);\n    if (!pick) {\n      this.tooltipManager.removeTooltip(this.id);\n      if (this.highlight.range === \"tooltip\")\n        disablePointer(true);\n      return;\n    }\n    const isNewDatum = this.highlight.range === \"node\" || !lastPick || lastPick.datum !== pick.datum;\n    let html;\n    if (isNewDatum) {\n      html = pick.series.getTooltipHtml(pick.datum);\n      if (this.highlight.range === \"tooltip\") {\n        this.highlightManager.updateHighlight(this.id, pick.datum);\n      }\n    } else if (lastPick) {\n      lastPick.event = event.sourceEvent;\n    }\n    const isPixelRange = pixelRange != null;\n    const tooltipEnabled = this.tooltip.enabled && pick.series.properties.tooltip.enabled;\n    const exactlyMatched = range3 === \"exact\" && pick.distance === 0;\n    const rangeMatched = range3 === \"nearest\" || isPixelRange || exactlyMatched;\n    const shouldUpdateTooltip = tooltipEnabled && rangeMatched && (!isNewDatum || html !== void 0);\n    const meta = TooltipManager.makeTooltipMeta(event, this.scene.canvas, pick.datum, this.specialOverrides.window);\n    if (shouldUpdateTooltip) {\n      this.tooltipManager.updateTooltip(this.id, meta, html);\n    }\n  }\n  handlePointerNode(event) {\n    const found = this.checkSeriesNodeRange(event, (series, datum) => {\n      if (series.hasEventListener(\"nodeClick\") || series.hasEventListener(\"nodeDoubleClick\")) {\n        this.cursorManager.updateCursor(\"chart\", \"pointer\");\n      }\n      if (this.highlight.range === \"node\") {\n        this.highlightManager.updateHighlight(this.id, datum);\n      }\n    });\n    if (!found) {\n      this.cursorManager.updateCursor(\"chart\");\n      if (this.highlight.range === \"node\") {\n        this.highlightManager.updateHighlight(this.id);\n      }\n    }\n  }\n  onClick(event) {\n    if (this.checkSeriesNodeClick(event)) {\n      this.update(3 /* SERIES_UPDATE */);\n      return;\n    }\n    this.fireEvent({\n      type: \"click\",\n      event: event.sourceEvent\n    });\n  }\n  onDoubleClick(event) {\n    if (this.checkSeriesNodeDoubleClick(event)) {\n      this.update(3 /* SERIES_UPDATE */);\n      return;\n    }\n    this.fireEvent({\n      type: \"doubleClick\",\n      event: event.sourceEvent\n    });\n  }\n  checkSeriesNodeClick(event) {\n    return this.checkSeriesNodeRange(event, (series, datum) => series.fireNodeClickEvent(event.sourceEvent, datum));\n  }\n  checkSeriesNodeDoubleClick(event) {\n    return this.checkSeriesNodeRange(\n      event,\n      (series, datum) => series.fireNodeDoubleClickEvent(event.sourceEvent, datum)\n    );\n  }\n  checkSeriesNodeRange(event, callback) {\n    const nearestNode = this.pickSeriesNode({ x: event.offsetX, y: event.offsetY }, false);\n    const datum = nearestNode == null ? void 0 : nearestNode.datum;\n    const nodeClickRange = datum == null ? void 0 : datum.series.properties.nodeClickRange;\n    let pixelRange;\n    if (typeof nodeClickRange === \"number\" && Number.isFinite(nodeClickRange)) {\n      pixelRange = nodeClickRange;\n    }\n    let pickedNode = this.pickSeriesNode({ x: event.offsetX, y: event.offsetY }, true);\n    if (pickedNode) {\n      this.highlightManager.updatePicked(this.id, pickedNode.datum);\n    } else {\n      this.highlightManager.updatePicked(this.id);\n    }\n    if (datum && nodeClickRange === \"nearest\") {\n      callback(datum.series, datum);\n      return true;\n    }\n    if (nodeClickRange !== \"exact\") {\n      pickedNode = this.pickSeriesNode({ x: event.offsetX, y: event.offsetY }, false, pixelRange);\n    }\n    if (!pickedNode)\n      return false;\n    const isPixelRange = pixelRange != null;\n    const exactlyMatched = nodeClickRange === \"exact\" && pickedNode.distance === 0;\n    if (isPixelRange || exactlyMatched) {\n      callback(pickedNode.series, pickedNode.datum);\n      return true;\n    }\n    return false;\n  }\n  changeHighlightDatum(event) {\n    var _a, _b;\n    const seriesToUpdate = /* @__PURE__ */ new Set();\n    const { series: newSeries = void 0, datum: newDatum } = (_a = event.currentHighlight) != null ? _a : {};\n    const { series: lastSeries = void 0, datum: lastDatum } = (_b = event.previousHighlight) != null ? _b : {};\n    if (lastSeries) {\n      seriesToUpdate.add(lastSeries);\n    }\n    if (newSeries) {\n      seriesToUpdate.add(newSeries);\n    }\n    if ((lastSeries == null ? void 0 : lastSeries.properties.cursor) && lastDatum) {\n      this.cursorManager.updateCursor(lastSeries.id);\n    }\n    if ((newSeries == null ? void 0 : newSeries.properties.cursor) && newDatum) {\n      this.cursorManager.updateCursor(newSeries.id, newSeries.properties.cursor);\n    }\n    this.lastPick = event.currentHighlight ? { datum: event.currentHighlight } : void 0;\n    const updateAll = newSeries == null || lastSeries == null;\n    if (updateAll) {\n      this.update(3 /* SERIES_UPDATE */);\n    } else {\n      this.update(3 /* SERIES_UPDATE */, { seriesToUpdate });\n    }\n  }\n  waitForUpdate(timeoutMs = 5e3) {\n    return __async(this, null, function* () {\n      const start = performance.now();\n      if (this._pendingFactoryUpdatesCount > 0) {\n        yield this.updateMutex.waitForClearAcquireQueue();\n      }\n      while (this._performUpdateType !== 6 /* NONE */) {\n        if (performance.now() - start > timeoutMs) {\n          throw new Error(\"waitForUpdate() timeout reached.\");\n        }\n        yield sleep(5);\n      }\n      yield this.updateMutex.waitForClearAcquireQueue();\n    });\n  }\n  handleOverlays() {\n    const hasNoData = !this.series.some((s) => s.hasData());\n    this.toggleOverlay(this.overlays.noData, hasNoData);\n    if (!hasNoData) {\n      const hasNoVisibleSeries = !this.series.some((series) => series.visible);\n      this.toggleOverlay(this.overlays.noVisibleSeries, hasNoVisibleSeries);\n    }\n  }\n  toggleOverlay(overlay, visible) {\n    if (visible && this.seriesRect) {\n      overlay.show(this.seriesRect);\n    } else {\n      overlay.hide();\n    }\n  }\n  getMinRect() {\n    const minRects = this.series.map((series) => series.getMinRect()).filter((rect) => rect !== void 0);\n    if (!minRects.length)\n      return void 0;\n    return new BBox(\n      0,\n      0,\n      minRects.reduce((max, rect) => Math.max(max, rect.width), 0),\n      minRects.reduce((max, rect) => Math.max(max, rect.height), 0)\n    );\n  }\n};\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      if (this.destroyed)\n        return;\n      value.setAttribute(\"data-ag-charts\", \"\");\n      value.appendChild(this.element);\n      chartsInstances.set(value, this);\n    },\n    oldValue(value) {\n      value.removeAttribute(\"data-ag-charts\");\n      value.removeChild(this.element);\n      chartsInstances.delete(value);\n    }\n  })\n], Chart.prototype, \"container\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      var _a;\n      (_a = this.series) == null ? void 0 : _a.forEach((series) => {\n        series.setChartData(value);\n      });\n    }\n  })\n], Chart.prototype, \"data\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      this.resize(value, void 0, \"width option\");\n    }\n  })\n], Chart.prototype, \"width\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      this.resize(void 0, value, \"height option\");\n    }\n  })\n], Chart.prototype, \"height\", 2);\n__decorateClass([\n  ActionOnSet({\n    changeValue(value) {\n      this.autoSizeChanged(value);\n    }\n  }),\n  Validate(BOOLEAN)\n], Chart.prototype, \"autoSize\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n    },\n    oldValue(oldValue) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n    }\n  })\n], Chart.prototype, \"title\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n    },\n    oldValue(oldValue) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n    }\n  })\n], Chart.prototype, \"subtitle\", 2);\n__decorateClass([\n  ActionOnSet({\n    newValue(value) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.appendChild(value.node);\n    },\n    oldValue(oldValue) {\n      var _a;\n      (_a = this.scene.root) == null ? void 0 : _a.removeChild(oldValue.node);\n    }\n  })\n], Chart.prototype, \"footnote\", 2);\n__decorateClass([\n  Validate(UNION([\"standalone\", \"integrated\"], \"a chart mode\"))\n], Chart.prototype, \"mode\", 2);\n\n// packages/ag-charts-community/src/chart/series/dataModelSeries.ts\nvar DataModelSeries = class extends Series {\n  isContinuous() {\n    var _a, _b;\n    const isContinuousX = ContinuousScale.is((_a = this.axes[\"x\" /* X */]) == null ? void 0 : _a.scale);\n    const isContinuousY = ContinuousScale.is((_b = this.axes[\"y\" /* Y */]) == null ? void 0 : _b.scale);\n    return { isContinuousX, isContinuousY };\n  }\n  getModulePropertyDefinitions() {\n    return this.moduleMap.mapValues((mod2) => mod2.getPropertyDefinitions(this.isContinuous())).flat();\n  }\n  // Request data, but with message dispatching to series-options (modules).\n  requestDataModel(dataController, data, opts) {\n    return __async(this, null, function* () {\n      opts.props.push(...this.getModulePropertyDefinitions());\n      const { dataModel, processedData } = yield dataController.request(this.id, data != null ? data : [], opts);\n      this.dataModel = dataModel;\n      this.processedData = processedData;\n      this.dispatch(\"data-processed\", { dataModel, processedData });\n      return { dataModel, processedData };\n    });\n  }\n  isProcessedDataAnimatable() {\n    var _a, _b;\n    const validationResults = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.animationValidation;\n    if (!validationResults) {\n      return true;\n    }\n    const { orderedKeys, uniqueKeys } = validationResults;\n    return orderedKeys && uniqueKeys;\n  }\n  checkProcessedDataAnimatable() {\n    if (!this.isProcessedDataAnimatable()) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/seriesProperties.ts\nvar SeriesItemHighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"rgba(255,255,255, 0.33)\";\n    this.stroke = `rgba(0, 0, 0, 0.4)`;\n    this.strokeWidth = 2;\n  }\n};\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], SeriesItemHighlightStyle.prototype, \"lineDashOffset\", 2);\nvar SeriesHighlightStyle = class extends BaseProperties {\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], SeriesHighlightStyle.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO, { optional: true })\n], SeriesHighlightStyle.prototype, \"dimOpacity\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], SeriesHighlightStyle.prototype, \"enabled\", 2);\nvar TextHighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.color = \"black\";\n  }\n};\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], TextHighlightStyle.prototype, \"color\", 2);\nvar HighlightStyle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.item = new SeriesItemHighlightStyle();\n    this.series = new SeriesHighlightStyle();\n    this.text = new TextHighlightStyle();\n  }\n};\n__decorateClass([\n  Validate(OBJECT)\n], HighlightStyle.prototype, \"item\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], HighlightStyle.prototype, \"series\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], HighlightStyle.prototype, \"text\", 2);\nvar SeriesProperties = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.visible = true;\n    this.showInLegend = true;\n    this.cursor = \"default\";\n    this.nodeClickRange = \"exact\";\n    this.highlightStyle = new HighlightStyle();\n  }\n};\n__decorateClass([\n  Validate(STRING, { optional: true })\n], SeriesProperties.prototype, \"id\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], SeriesProperties.prototype, \"visible\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], SeriesProperties.prototype, \"showInLegend\", 2);\n__decorateClass([\n  Validate(STRING)\n], SeriesProperties.prototype, \"cursor\", 2);\n__decorateClass([\n  Validate(INTERACTION_RANGE)\n], SeriesProperties.prototype, \"nodeClickRange\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], SeriesProperties.prototype, \"highlightStyle\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/cartesianSeries.ts\nvar DEFAULT_DIRECTION_KEYS = {\n  [\"x\" /* X */]: [\"xKey\"],\n  [\"y\" /* Y */]: [\"yKey\"]\n};\nvar DEFAULT_DIRECTION_NAMES = {\n  [\"x\" /* X */]: [\"xName\"],\n  [\"y\" /* Y */]: [\"yName\"]\n};\nvar CartesianSeriesNodeClickEvent = class extends SeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.xKey = series.properties.xKey;\n    this.yKey = series.properties.yKey;\n  }\n};\nvar CartesianSeriesProperties = class extends SeriesProperties {\n};\n__decorateClass([\n  Validate(STRING, { optional: true })\n], CartesianSeriesProperties.prototype, \"legendItemName\", 2);\nvar CartesianSeries = class extends DataModelSeries {\n  constructor(_a) {\n    var _b = _a, {\n      pathsPerSeries = 1,\n      hasMarkers = false,\n      hasHighlightedLabels = false,\n      pathsZIndexSubOrderOffset = [],\n      directionKeys = DEFAULT_DIRECTION_KEYS,\n      directionNames = DEFAULT_DIRECTION_NAMES,\n      datumSelectionGarbageCollection = true,\n      markerSelectionGarbageCollection = true,\n      animationResetFns\n    } = _b, otherOpts = __objRest(_b, [\n      \"pathsPerSeries\",\n      \"hasMarkers\",\n      \"hasHighlightedLabels\",\n      \"pathsZIndexSubOrderOffset\",\n      \"directionKeys\",\n      \"directionNames\",\n      \"datumSelectionGarbageCollection\",\n      \"markerSelectionGarbageCollection\",\n      \"animationResetFns\"\n    ]);\n    super(__spreadValues({\n      directionKeys,\n      directionNames,\n      useSeriesGroupLayer: true,\n      canHaveAxes: true\n    }, otherOpts));\n    this._contextNodeData = [];\n    this.NodeClickEvent = CartesianSeriesNodeClickEvent;\n    this.highlightSelection = Selection.select(\n      this.highlightNode,\n      () => this.opts.hasMarkers ? this.markerFactory() : this.nodeFactory()\n    );\n    this.highlightLabelSelection = Selection.select(this.highlightLabel, Text);\n    this.annotationSelections = /* @__PURE__ */ new Set();\n    this.subGroups = [];\n    this.subGroupId = 0;\n    this.debug = Debug.create();\n    this.opts = {\n      pathsPerSeries,\n      hasMarkers,\n      hasHighlightedLabels,\n      pathsZIndexSubOrderOffset,\n      directionKeys,\n      directionNames,\n      animationResetFns,\n      datumSelectionGarbageCollection,\n      markerSelectionGarbageCollection\n    };\n    this.animationState = new StateMachine(\n      \"empty\",\n      {\n        empty: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateEmptyUpdateReady(data)\n          }\n        },\n        ready: {\n          updateData: \"waiting\",\n          clear: \"clearing\",\n          highlight: (data) => this.animateReadyHighlight(data),\n          highlightMarkers: (data) => this.animateReadyHighlightMarkers(data),\n          resize: (data) => this.animateReadyResize(data)\n        },\n        waiting: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateWaitingUpdateReady(data)\n          }\n        },\n        clearing: {\n          update: {\n            target: \"empty\",\n            action: (data) => this.animateClearingUpdateEmpty(data)\n          }\n        }\n      },\n      () => this.checkProcessedDataAnimatable()\n    );\n  }\n  get contextNodeData() {\n    return this._contextNodeData.slice();\n  }\n  addChartEventListeners() {\n    this.destroyFns.push(\n      this.ctx.chartEventManager.addListener(\"legend-item-click\", (event) => this.onLegendItemClick(event)),\n      this.ctx.chartEventManager.addListener(\n        \"legend-item-double-click\",\n        (event) => this.onLegendItemDoubleClick(event)\n      )\n    );\n  }\n  destroy() {\n    super.destroy();\n    this._contextNodeData.splice(0, this._contextNodeData.length);\n    this.subGroups.splice(0, this.subGroups.length);\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({ seriesRect }) {\n      var _a, _b;\n      const { visible, _contextNodeData: previousContextData } = this;\n      const { series } = (_b = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight()) != null ? _b : {};\n      const seriesHighlighted = series ? series === this : void 0;\n      const resize = this.checkResize(seriesRect);\n      const highlightItems = yield this.updateHighlightSelection(seriesHighlighted);\n      yield this.updateSelections(visible);\n      yield this.updateNodes(highlightItems, seriesHighlighted, visible);\n      const animationData = this.getAnimationData(seriesRect, previousContextData);\n      if (resize) {\n        this.animationState.transition(\"resize\", animationData);\n      }\n      this.animationState.transition(\"update\", animationData);\n    });\n  }\n  updateSelections(anySeriesItemEnabled) {\n    return __async(this, null, function* () {\n      if (!anySeriesItemEnabled && this.ctx.animationManager.isSkipped()) {\n        return;\n      }\n      if (!this.nodeDataRefresh && !this.isPathOrSelectionDirty()) {\n        return;\n      }\n      if (this.nodeDataRefresh) {\n        this.nodeDataRefresh = false;\n        this.debug(`CartesianSeries.updateSelections() - calling createNodeData() for`, this.id);\n        this._contextNodeData = yield this.createNodeData();\n        const animationValid = this.isProcessedDataAnimatable();\n        this._contextNodeData.forEach((nodeData) => {\n          var _a;\n          (_a = nodeData.animationValid) != null ? _a : nodeData.animationValid = animationValid;\n        });\n        yield this.updateSeriesGroups();\n        const { dataModel, processedData } = this;\n        if (dataModel !== void 0 && processedData !== void 0) {\n          this.dispatch(\"data-update\", { dataModel, processedData });\n        }\n      }\n      yield Promise.all(this.subGroups.map((g, i) => this.updateSeriesGroupSelections(g, i)));\n    });\n  }\n  updateSeriesGroupSelections(subGroup, seriesIdx, seriesHighlighted) {\n    return __async(this, null, function* () {\n      const { datumSelection, labelSelection, markerSelection, paths } = subGroup;\n      const contextData = this._contextNodeData[seriesIdx];\n      const { nodeData, labelData, itemId } = contextData;\n      yield this.updatePaths({ seriesHighlighted, itemId, contextData, paths, seriesIdx });\n      subGroup.datumSelection = yield this.updateDatumSelection({ nodeData, datumSelection, seriesIdx });\n      subGroup.labelSelection = yield this.updateLabelSelection({ labelData, labelSelection, seriesIdx });\n      if (markerSelection) {\n        subGroup.markerSelection = yield this.updateMarkerSelection({ nodeData, markerSelection, seriesIdx });\n      }\n    });\n  }\n  markerFactory() {\n    const MarkerShape = getMarker();\n    return new MarkerShape();\n  }\n  updateSeriesGroups() {\n    return __async(this, null, function* () {\n      const {\n        _contextNodeData: contextNodeData,\n        contentGroup,\n        subGroups,\n        opts: { pathsPerSeries, hasMarkers, datumSelectionGarbageCollection, markerSelectionGarbageCollection }\n      } = this;\n      if (contextNodeData.length === subGroups.length) {\n        return;\n      }\n      if (contextNodeData.length < subGroups.length) {\n        subGroups.splice(contextNodeData.length).forEach(({ dataNodeGroup, markerGroup, labelGroup, paths }) => {\n          contentGroup.removeChild(dataNodeGroup);\n          if (markerGroup) {\n            contentGroup.removeChild(markerGroup);\n          }\n          if (labelGroup) {\n            contentGroup.removeChild(labelGroup);\n          }\n          for (const path of paths) {\n            contentGroup.removeChild(path);\n          }\n        });\n      }\n      const totalGroups = contextNodeData.length;\n      while (totalGroups > subGroups.length) {\n        const layer = false;\n        const subGroupId = this.subGroupId++;\n        const dataNodeGroup = new Group({\n          name: `${this.id}-series-sub${subGroupId}-dataNodes`,\n          layer,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"data\", subGroupId)\n        });\n        const markerGroup = hasMarkers ? new Group({\n          name: `${this.id}-series-sub${this.subGroupId++}-markers`,\n          layer,\n          zIndex: 4 /* SERIES_LAYER_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"marker\", subGroupId)\n        }) : void 0;\n        const labelGroup = new Group({\n          name: `${this.id}-series-sub${this.subGroupId++}-labels`,\n          layer,\n          zIndex: 7 /* SERIES_LABEL_ZINDEX */,\n          zIndexSubOrder: this.getGroupZIndexSubOrder(\"labels\", subGroupId)\n        });\n        contentGroup.appendChild(dataNodeGroup);\n        contentGroup.appendChild(labelGroup);\n        if (markerGroup) {\n          contentGroup.appendChild(markerGroup);\n        }\n        const paths = [];\n        for (let index = 0; index < pathsPerSeries; index++) {\n          paths[index] = new Path();\n          paths[index].zIndex = 4 /* SERIES_LAYER_ZINDEX */;\n          paths[index].zIndexSubOrder = this.getGroupZIndexSubOrder(\"paths\", index);\n          contentGroup.appendChild(paths[index]);\n        }\n        subGroups.push({\n          paths,\n          dataNodeGroup,\n          markerGroup,\n          labelGroup,\n          labelSelection: Selection.select(labelGroup, Text),\n          datumSelection: Selection.select(\n            dataNodeGroup,\n            () => this.nodeFactory(),\n            datumSelectionGarbageCollection\n          ),\n          markerSelection: markerGroup ? Selection.select(markerGroup, () => this.markerFactory(), markerSelectionGarbageCollection) : void 0\n        });\n      }\n    });\n  }\n  getGroupZIndexSubOrder(type, subIndex = 0) {\n    var _a;\n    const result = super.getGroupZIndexSubOrder(type, subIndex);\n    if (type === \"paths\") {\n      const pathOffset = (_a = this.opts.pathsZIndexSubOrderOffset[subIndex]) != null ? _a : 0;\n      const superFn = result[0];\n      if (typeof superFn === \"function\") {\n        result[0] = () => +superFn() + pathOffset;\n      } else {\n        result[0] = +superFn + pathOffset;\n      }\n    }\n    return result;\n  }\n  updateNodes(highlightedItems, seriesHighlighted, anySeriesItemEnabled) {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        highlightSelection,\n        highlightLabelSelection,\n        opts: { hasMarkers, hasHighlightedLabels }\n      } = this;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const visible = this.visible && ((_a = this._contextNodeData) == null ? void 0 : _a.length) > 0 && anySeriesItemEnabled;\n      this.rootGroup.visible = animationEnabled || visible;\n      this.contentGroup.visible = animationEnabled || visible;\n      this.highlightGroup.visible = (animationEnabled || visible) && !!seriesHighlighted;\n      const subGroupOpacity = this.getOpacity();\n      if (hasMarkers) {\n        yield this.updateMarkerNodes({\n          markerSelection: highlightSelection,\n          isHighlight: true,\n          seriesIdx: -1\n        });\n        this.animationState.transition(\"highlightMarkers\", highlightSelection);\n      } else {\n        yield this.updateDatumNodes({\n          datumSelection: highlightSelection,\n          isHighlight: true,\n          seriesIdx: -1\n        });\n        this.animationState.transition(\"highlight\", highlightSelection);\n      }\n      if (hasHighlightedLabels) {\n        yield this.updateLabelNodes({ labelSelection: highlightLabelSelection, seriesIdx: -1 });\n      }\n      yield Promise.all(\n        this.subGroups.map((subGroup, seriesIdx) => __async(this, null, function* () {\n          const {\n            dataNodeGroup,\n            markerGroup,\n            datumSelection,\n            labelSelection,\n            markerSelection,\n            paths,\n            labelGroup\n          } = subGroup;\n          const { itemId } = this.contextNodeData[seriesIdx];\n          const subGroupVisible = visible;\n          dataNodeGroup.opacity = subGroupOpacity;\n          dataNodeGroup.visible = animationEnabled || subGroupVisible;\n          labelGroup.visible = subGroupVisible;\n          if (markerGroup) {\n            markerGroup.opacity = subGroupOpacity;\n            markerGroup.zIndex = dataNodeGroup.zIndex >= 4 /* SERIES_LAYER_ZINDEX */ ? dataNodeGroup.zIndex : dataNodeGroup.zIndex + 1;\n            markerGroup.visible = subGroupVisible;\n          }\n          if (labelGroup) {\n            labelGroup.opacity = subGroupOpacity;\n          }\n          yield this.updatePathNodes({\n            seriesHighlighted,\n            itemId,\n            paths,\n            seriesIdx,\n            opacity: subGroupOpacity,\n            visible: subGroupVisible,\n            animationEnabled\n          });\n          if (!dataNodeGroup.visible) {\n            return;\n          }\n          yield this.updateDatumNodes({ datumSelection, highlightedItems, isHighlight: false, seriesIdx });\n          yield this.updateLabelNodes({ labelSelection, seriesIdx });\n          if (hasMarkers && markerSelection) {\n            yield this.updateMarkerNodes({ markerSelection, isHighlight: false, seriesIdx });\n          }\n        }))\n      );\n    });\n  }\n  getHighlightLabelData(labelData, highlightedItem) {\n    const labelItems = labelData.filter(\n      (ld) => ld.datum === highlightedItem.datum && ld.itemId === highlightedItem.itemId\n    );\n    return labelItems.length !== 0 ? labelItems : void 0;\n  }\n  getHighlightData(_nodeData, highlightedItem) {\n    return highlightedItem ? [highlightedItem] : void 0;\n  }\n  updateHighlightSelection(seriesHighlighted) {\n    return __async(this, null, function* () {\n      var _a;\n      const { highlightSelection, highlightLabelSelection, _contextNodeData: contextNodeData } = this;\n      const highlightedDatum = (_a = this.ctx.highlightManager) == null ? void 0 : _a.getActiveHighlight();\n      const item = seriesHighlighted && (highlightedDatum == null ? void 0 : highlightedDatum.datum) ? highlightedDatum : void 0;\n      let labelItems;\n      let highlightItems;\n      if (item != null) {\n        const labelsEnabled = this.isLabelEnabled();\n        for (const { labelData, nodeData } of contextNodeData) {\n          highlightItems = this.getHighlightData(nodeData, item);\n          labelItems = labelsEnabled ? this.getHighlightLabelData(labelData, item) : void 0;\n          if ((!labelsEnabled || labelItems != null) && highlightItems != null) {\n            break;\n          }\n        }\n      }\n      this.highlightSelection = yield this.updateHighlightSelectionItem({\n        items: highlightItems,\n        highlightSelection\n      });\n      this.highlightLabelSelection = yield this.updateHighlightSelectionLabel({\n        items: labelItems,\n        highlightLabelSelection\n      });\n      return highlightItems;\n    });\n  }\n  pickNodeExactShape(point) {\n    var _a;\n    const result = super.pickNodeExactShape(point);\n    if (result) {\n      return result;\n    }\n    const { x, y } = point;\n    const {\n      opts: { hasMarkers }\n    } = this;\n    let match;\n    for (const { dataNodeGroup, markerGroup } of this.subGroups) {\n      let match2 = dataNodeGroup.pickNode(x, y);\n      if (!match2 && hasMarkers) {\n        match2 = markerGroup == null ? void 0 : markerGroup.pickNode(x, y);\n      }\n      if (match2) {\n        break;\n      }\n    }\n    if (match) {\n      return { datum: match.datum, distance: 0 };\n    } else {\n      for (const mod2 of this.moduleMap.modules) {\n        const { datum } = (_a = mod2.pickNodeExact(point)) != null ? _a : {};\n        if (datum !== void 0) {\n          return { datum, distance: 0 };\n        }\n      }\n    }\n  }\n  pickNodeClosestDatum(point) {\n    var _a, _b;\n    const { x, y } = point;\n    const { axes, rootGroup, _contextNodeData: contextNodeData } = this;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const hitPoint = rootGroup.transformPoint(x, y);\n    let minDistance = Infinity;\n    let closestDatum;\n    for (const context of contextNodeData) {\n      for (const datum of context.nodeData) {\n        const { point: { x: datumX = NaN, y: datumY = NaN } = {} } = datum;\n        if (isNaN(datumX) || isNaN(datumY)) {\n          continue;\n        }\n        const isInRange = (xAxis == null ? void 0 : xAxis.inRange(datumX)) && (yAxis == null ? void 0 : yAxis.inRange(datumY));\n        if (!isInRange) {\n          continue;\n        }\n        const distance = Math.max(__pow(hitPoint.x - datumX, 2) + __pow(hitPoint.y - datumY, 2), 0);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestDatum = datum;\n        }\n      }\n    }\n    for (const mod2 of this.moduleMap.modules) {\n      const modPick = mod2.pickNodeNearest(point);\n      if (modPick !== void 0 && modPick.distanceSquared < minDistance) {\n        minDistance = modPick.distanceSquared;\n        closestDatum = modPick.datum;\n        break;\n      }\n    }\n    if (closestDatum) {\n      const distance = Math.max(Math.sqrt(minDistance) - ((_b = (_a = closestDatum.point) == null ? void 0 : _a.size) != null ? _b : 0), 0);\n      return { datum: closestDatum, distance };\n    }\n  }\n  pickNodeMainAxisFirst(point, requireCategoryAxis) {\n    var _a, _b;\n    const { x, y } = point;\n    const { axes, rootGroup, _contextNodeData: contextNodeData } = this;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const directions2 = [xAxis, yAxis].filter((a) => a instanceof CategoryAxis).map((a) => a.direction);\n    if (requireCategoryAxis && directions2.length === 0) {\n      return;\n    }\n    const [primaryDirection = \"x\" /* X */] = directions2;\n    const hitPoint = rootGroup.transformPoint(x, y);\n    const hitPointCoords = primaryDirection === \"x\" /* X */ ? [hitPoint.x, hitPoint.y] : [hitPoint.y, hitPoint.x];\n    const minDistance = [Infinity, Infinity];\n    let closestDatum;\n    for (const context of contextNodeData) {\n      for (const datum of context.nodeData) {\n        const { point: { x: datumX = NaN, y: datumY = NaN } = {} } = datum;\n        if (isNaN(datumX) || isNaN(datumY)) {\n          continue;\n        }\n        const isInRange = (xAxis == null ? void 0 : xAxis.inRange(datumX)) && (yAxis == null ? void 0 : yAxis.inRange(datumY));\n        if (!isInRange) {\n          continue;\n        }\n        const point2 = primaryDirection === \"x\" /* X */ ? [datumX, datumY] : [datumY, datumX];\n        let newMinDistance = true;\n        for (let i = 0; i < point2.length; i++) {\n          const dist = Math.abs(point2[i] - hitPointCoords[i]);\n          if (dist > minDistance[i]) {\n            newMinDistance = false;\n            break;\n          }\n          if (dist < minDistance[i]) {\n            minDistance[i] = dist;\n            minDistance.fill(Infinity, i + 1, minDistance.length);\n          }\n        }\n        if (newMinDistance) {\n          closestDatum = datum;\n        }\n      }\n    }\n    if (closestDatum) {\n      let closestDistanceSquared = Math.max(\n        __pow(minDistance[0], 2) + __pow(minDistance[1], 2) - ((_b = (_a = closestDatum.point) == null ? void 0 : _a.size) != null ? _b : 0),\n        0\n      );\n      for (const mod2 of this.moduleMap.modules) {\n        const modPick = mod2.pickNodeMainAxisFirst(point);\n        if (modPick !== void 0 && modPick.distanceSquared < closestDistanceSquared) {\n          closestDatum = modPick.datum;\n          closestDistanceSquared = modPick.distanceSquared;\n          break;\n        }\n      }\n      return { datum: closestDatum, distance: Math.sqrt(closestDistanceSquared) };\n    }\n  }\n  onLegendItemClick(event) {\n    const { legendItemName } = this.properties;\n    const { enabled, itemId, series } = event;\n    const matchedLegendItemName = legendItemName != null && legendItemName === event.legendItemName;\n    if (series.id === this.id || matchedLegendItemName) {\n      this.toggleSeriesItem(itemId, enabled);\n    }\n  }\n  onLegendItemDoubleClick(event) {\n    const { enabled, itemId, series, numVisibleItems } = event;\n    const { legendItemName } = this.properties;\n    const matchedLegendItemName = legendItemName != null && legendItemName === event.legendItemName;\n    if (series.id === this.id || matchedLegendItemName) {\n      this.toggleSeriesItem(itemId, true);\n    } else if (enabled && numVisibleItems === 1) {\n      this.toggleSeriesItem(itemId, true);\n    } else {\n      this.toggleSeriesItem(itemId, false);\n    }\n  }\n  isPathOrSelectionDirty() {\n    return false;\n  }\n  getLabelData() {\n    return [];\n  }\n  shouldFlipXY() {\n    return false;\n  }\n  /**\n   * Get the minimum bounding box that contains any adjacent two nodes. The axes are treated independently, so this\n   * may not represent the same two points for both directions. The dimensions represent the greatest distance\n   * between any two adjacent nodes.\n   */\n  getMinRect() {\n    const [context] = this._contextNodeData;\n    if (!(context == null ? void 0 : context.nodeData.length)) {\n      return;\n    }\n    const width = context.nodeData.map(({ midPoint }) => {\n      var _a;\n      return (_a = midPoint == null ? void 0 : midPoint.x) != null ? _a : 0;\n    }).sort((a, b) => a - b).reduce((max, x, i, array) => i > 0 ? Math.max(max, x - array[i - 1]) : max, 0);\n    const height = context.nodeData.map(({ midPoint }) => {\n      var _a;\n      return (_a = midPoint == null ? void 0 : midPoint.y) != null ? _a : 0;\n    }).sort((a, b) => a - b).reduce((max, y, i, array) => i > 0 ? Math.max(max, y - array[i - 1]) : max, 0);\n    return new BBox(0, 0, width, height);\n  }\n  updateHighlightSelectionItem(opts) {\n    return __async(this, null, function* () {\n      const {\n        opts: { hasMarkers }\n      } = this;\n      const { items, highlightSelection } = opts;\n      const nodeData = items != null ? items : [];\n      if (hasMarkers) {\n        const markerSelection = highlightSelection;\n        return this.updateMarkerSelection({ nodeData, markerSelection, seriesIdx: -1 });\n      } else {\n        return this.updateDatumSelection({\n          nodeData,\n          datumSelection: highlightSelection,\n          seriesIdx: -1\n        });\n      }\n    });\n  }\n  updateHighlightSelectionLabel(opts) {\n    return __async(this, null, function* () {\n      var _a;\n      return this.updateLabelSelection({\n        labelData: (_a = opts.items) != null ? _a : [],\n        labelSelection: opts.highlightLabelSelection,\n        seriesIdx: -1\n      });\n    });\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.datumSelection;\n    });\n  }\n  updateDatumNodes(_opts) {\n    return __async(this, null, function* () {\n    });\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.markerSelection;\n    });\n  }\n  updateMarkerNodes(_opts) {\n    return __async(this, null, function* () {\n    });\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      opts.paths.forEach((p) => p.visible = false);\n    });\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const { paths, opacity, visible } = opts;\n      for (const path of paths) {\n        path.opacity = opacity;\n        path.visible = visible;\n      }\n    });\n  }\n  resetAllAnimation(data) {\n    var _a, _b;\n    const { path, datum, label, marker } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (path) {\n      data.paths.forEach((paths) => {\n        resetMotion(paths, path);\n      });\n    }\n    if (datum) {\n      resetMotion(data.datumSelections, datum);\n    }\n    if (label) {\n      resetMotion(data.labelSelections, label);\n    }\n    if (marker) {\n      resetMotion(data.markerSelections, marker);\n    }\n    if (data.contextData.some((d) => d.animationValid === false)) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n  animateEmptyUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateWaitingUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateReadyHighlight(data) {\n    var _a, _b;\n    const { datum } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    if (datum) {\n      resetMotion([data], datum);\n    }\n  }\n  animateReadyHighlightMarkers(data) {\n    var _a, _b;\n    const { marker } = (_b = (_a = this.opts) == null ? void 0 : _a.animationResetFns) != null ? _b : {};\n    if (marker) {\n      resetMotion([data], marker);\n    }\n  }\n  animateReadyResize(data) {\n    this.resetAllAnimation(data);\n  }\n  animateClearingUpdateEmpty(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData(seriesRect, previousContextData) {\n    const animationData = {\n      datumSelections: this.subGroups.map(({ datumSelection }) => datumSelection),\n      markerSelections: this.subGroups.filter(({ markerSelection }) => markerSelection !== void 0).map(({ markerSelection }) => markerSelection),\n      labelSelections: this.subGroups.map(({ labelSelection }) => labelSelection),\n      annotationSelections: [...this.annotationSelections],\n      contextData: this._contextNodeData,\n      previousContextData,\n      paths: this.subGroups.map(({ paths }) => paths),\n      seriesRect\n    };\n    return animationData;\n  }\n  calculateScaling() {\n    const result = {};\n    const addScale = (direction) => {\n      const axis = this.axes[direction];\n      if (!axis)\n        return;\n      if (axis.scale instanceof LogScale) {\n        const { range: range3, domain } = axis.scale;\n        result[direction] = {\n          type: \"log\",\n          convert: (domain2) => axis.scale.convert(domain2),\n          domain: [domain[0], domain[1]],\n          range: [range3[0], range3[1]]\n        };\n      } else if (axis.scale instanceof ContinuousScale) {\n        const { range: range3 } = axis.scale;\n        const domain = axis.scale.getDomain();\n        result[direction] = {\n          type: \"continuous\",\n          domain: [domain[0], domain[1]],\n          range: [range3[0], range3[1]]\n        };\n      } else if (axis.scale) {\n        const { domain } = axis.scale;\n        result[direction] = {\n          type: \"category\",\n          domain,\n          range: domain.map((d) => axis.scale.convert(d))\n        };\n      }\n    };\n    addScale(\"x\" /* X */);\n    addScale(\"y\" /* Y */);\n    return result;\n  }\n};\n\n// packages/ag-charts-community/src/chart/cartesianChart.ts\nvar directions = [\"top\", \"right\", \"bottom\", \"left\"];\nvar _CartesianChart = class _CartesianChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    /** Integrated Charts feature state - not used in Standalone Charts. */\n    this.paired = true;\n    this._lastCrossLineIds = void 0;\n    this._lastAxisWidths = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n    this._lastVisibility = {\n      crossLines: true,\n      series: true\n    };\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_CartesianChart.prototype, this, \"performLayout\").call(this);\n      const { animationRect, seriesRect, visibility, clipSeries } = this.updateAxes(shrinkRect);\n      this.seriesRoot.visible = visibility.series;\n      this.seriesRect = seriesRect;\n      this.animationRect = animationRect;\n      this.seriesRoot.translationX = Math.floor(seriesRect.x);\n      this.seriesRoot.translationY = Math.floor(seriesRect.y);\n      const {\n        seriesArea: { padding }\n      } = this;\n      const seriesPaddedRect = seriesRect.clone().grow({\n        top: padding.top,\n        right: padding.right,\n        bottom: padding.bottom,\n        left: padding.left\n      });\n      this.hoverRect = seriesPaddedRect;\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: { width: this.scene.width, height: this.scene.height },\n        clipSeries,\n        series: {\n          rect: seriesRect,\n          paddedRect: seriesPaddedRect,\n          visible: visibility.series,\n          shouldFlipXY: this.shouldFlipXY()\n        },\n        axes: this.axes.map((axis) => __spreadValues({ id: axis.id }, axis.getLayoutState()))\n      });\n      return shrinkRect;\n    });\n  }\n  updateAxes(inputShrinkRect) {\n    var _a;\n    const crossLineIds = this.axes.flatMap((axis) => {\n      var _a2;\n      return (_a2 = axis.crossLines) != null ? _a2 : [];\n    }).map((crossLine) => crossLine.id);\n    const axesValid = this._lastCrossLineIds != null && this._lastCrossLineIds.length === crossLineIds.length && this._lastCrossLineIds.every((id, index) => crossLineIds[index] === id);\n    let axisWidths;\n    let visibility;\n    if (axesValid) {\n      axisWidths = __spreadValues({}, this._lastAxisWidths);\n      visibility = __spreadValues({}, this._lastVisibility);\n    } else {\n      axisWidths = { top: 0, bottom: 0, left: 0, right: 0 };\n      visibility = { crossLines: true, series: true };\n      this._lastCrossLineIds = crossLineIds;\n    }\n    const liveAxisWidths = new Set(this._axes.map((a) => a.position));\n    for (const position of Object.keys(axisWidths)) {\n      if (!liveAxisWidths.has(position)) {\n        delete axisWidths[position];\n      }\n    }\n    const stableOutputs = (otherAxisWidths, otherVisibility) => {\n      if (Object.keys(otherAxisWidths).some((k) => axisWidths[k] == null)) {\n        return false;\n      }\n      return visibility.crossLines === otherVisibility.crossLines && visibility.series === otherVisibility.series && // Check for existing axis positions and equality.\n      Object.entries(axisWidths).every(([p, w]) => {\n        const otherW = otherAxisWidths[p];\n        if (w != null || otherW != null) {\n          return w === otherW;\n        }\n        return true;\n      });\n    };\n    const ceilValues = (records) => {\n      return Object.entries(records).reduce((out, [key, value]) => {\n        if (value && Math.abs(value) === Infinity) {\n          value = 0;\n        }\n        out[key] = value != null ? Math.ceil(value) : value;\n        return out;\n      }, {});\n    };\n    let lastPassAxisWidths = {};\n    let lastPassVisibility = {};\n    let clipSeries = false;\n    let seriesRect = (_a = this.seriesRect) == null ? void 0 : _a.clone();\n    let count2 = 0;\n    let primaryTickCounts = {};\n    do {\n      Object.assign(axisWidths, lastPassAxisWidths);\n      Object.assign(visibility, lastPassVisibility);\n      const result = this.updateAxesPass(axisWidths, inputShrinkRect.clone(), seriesRect);\n      lastPassAxisWidths = ceilValues(result.axisWidths);\n      lastPassVisibility = result.visibility;\n      clipSeries = result.clipSeries;\n      seriesRect = result.seriesRect;\n      primaryTickCounts = result.primaryTickCounts;\n      if (count2++ > 10) {\n        Logger.warn(\"unable to find stable axis layout.\");\n        break;\n      }\n    } while (!stableOutputs(lastPassAxisWidths, lastPassVisibility));\n    this.axes.forEach((axis) => {\n      const { direction } = axis;\n      const primaryTickCount = primaryTickCounts[direction];\n      axis.update(primaryTickCount);\n    });\n    const clipRectPadding = 5;\n    this.axes.forEach((axis) => {\n      axis.setCrossLinesVisible(visibility.crossLines);\n      if (!seriesRect) {\n        return;\n      }\n      axis.clipGrid(\n        seriesRect.x,\n        seriesRect.y,\n        seriesRect.width + clipRectPadding,\n        seriesRect.height + clipRectPadding\n      );\n      switch (axis.position) {\n        case \"left\":\n        case \"right\":\n          axis.clipTickLines(\n            inputShrinkRect.x,\n            seriesRect.y,\n            inputShrinkRect.width + clipRectPadding,\n            seriesRect.height + clipRectPadding\n          );\n          break;\n        case \"top\":\n        case \"bottom\":\n          axis.clipTickLines(\n            seriesRect.x,\n            inputShrinkRect.y,\n            seriesRect.width + clipRectPadding,\n            inputShrinkRect.height + clipRectPadding\n          );\n          break;\n      }\n    });\n    this._lastAxisWidths = axisWidths;\n    this._lastVisibility = visibility;\n    return { seriesRect, animationRect: inputShrinkRect, visibility, clipSeries };\n  }\n  updateAxesPass(axisWidths, bounds, lastPassSeriesRect) {\n    const { axes } = this;\n    const visited = {};\n    const newAxisWidths = {};\n    const visibility = {\n      series: true,\n      crossLines: true\n    };\n    let clipSeries = false;\n    const primaryTickCounts = {};\n    const paddedBounds = this.applySeriesPadding(bounds);\n    const crossLinePadding = lastPassSeriesRect ? this.buildCrossLinePadding(axisWidths) : {};\n    const axisBound = this.buildAxisBound(paddedBounds, axisWidths, crossLinePadding, visibility);\n    const seriesRect = this.buildSeriesRect(axisBound, axisWidths);\n    axes.forEach((axis) => {\n      var _a, _b;\n      const { position = \"left\" } = axis;\n      const {\n        clipSeries: newClipSeries,\n        axisThickness,\n        axisOffset\n      } = this.calculateAxisDimensions({\n        axis,\n        seriesRect,\n        paddedBounds,\n        axisWidths,\n        newAxisWidths,\n        primaryTickCounts,\n        clipSeries,\n        addInterAxisPadding: ((_a = visited[position]) != null ? _a : 0) > 0\n      });\n      visited[position] = ((_b = visited[position]) != null ? _b : 0) + 1;\n      clipSeries = clipSeries || newClipSeries;\n      this.positionAxis({\n        axis,\n        axisBound,\n        axisOffset,\n        axisThickness,\n        axisWidths,\n        primaryTickCounts,\n        seriesRect\n      });\n    });\n    return { clipSeries, seriesRect, axisWidths: newAxisWidths, visibility, primaryTickCounts };\n  }\n  buildCrossLinePadding(axisWidths) {\n    var _a;\n    const crossLinePadding = {};\n    this.axes.forEach((axis) => {\n      if (axis.crossLines) {\n        axis.crossLines.forEach((crossLine) => {\n          crossLine.calculatePadding(crossLinePadding);\n        });\n      }\n    });\n    for (const [side, padding = 0] of Object.entries(crossLinePadding)) {\n      crossLinePadding[side] = Math.max(padding - ((_a = axisWidths[side]) != null ? _a : 0), 0);\n    }\n    return crossLinePadding;\n  }\n  applySeriesPadding(bounds) {\n    const paddedRect = bounds.clone();\n    const reversedAxes = this.axes.slice().reverse();\n    directions.forEach((dir) => {\n      const padding = this.seriesArea.padding[dir];\n      const axis = reversedAxes.find((axis2) => axis2.position === dir);\n      if (axis) {\n        axis.seriesAreaPadding = padding;\n      } else {\n        paddedRect.shrink(padding, dir);\n      }\n    });\n    return paddedRect;\n  }\n  buildAxisBound(bounds, axisWidths, crossLinePadding, visibility) {\n    var _a, _b, _c, _d;\n    const result = bounds.clone();\n    const { top = 0, right = 0, bottom = 0, left = 0 } = crossLinePadding;\n    const horizontalPadding = left + right;\n    const verticalPadding = top + bottom;\n    const totalWidth = ((_a = axisWidths.left) != null ? _a : 0) + ((_b = axisWidths.right) != null ? _b : 0) + horizontalPadding;\n    const totalHeight = ((_c = axisWidths.top) != null ? _c : 0) + ((_d = axisWidths.bottom) != null ? _d : 0) + verticalPadding;\n    if (result.width <= totalWidth || result.height <= totalHeight) {\n      visibility.crossLines = false;\n      visibility.series = false;\n      return result;\n    }\n    result.x += left;\n    result.y += top;\n    result.width -= horizontalPadding;\n    result.height -= verticalPadding;\n    return result;\n  }\n  buildSeriesRect(axisBound, axisWidths) {\n    const result = axisBound.clone();\n    const { top, bottom, left, right } = axisWidths;\n    result.x += left != null ? left : 0;\n    result.y += top != null ? top : 0;\n    result.width -= (left != null ? left : 0) + (right != null ? right : 0);\n    result.height -= (top != null ? top : 0) + (bottom != null ? bottom : 0);\n    result.width = Math.max(0, result.width);\n    result.height = Math.max(0, result.height);\n    return result;\n  }\n  clampToOutsideSeriesRect(seriesRect, value, dimension, direction) {\n    const { x, y, width, height } = seriesRect;\n    const clampBounds = [x, y, x + width, y + height];\n    const fn = direction === 1 ? Math.min : Math.max;\n    const compareTo = clampBounds[(dimension === \"x\" ? 0 : 1) + (direction === 1 ? 0 : 2)];\n    return fn(value, compareTo);\n  }\n  calculateAxisDimensions(opts) {\n    var _a, _b, _c, _d, _e;\n    const { axis, seriesRect, paddedBounds, axisWidths, newAxisWidths, primaryTickCounts, addInterAxisPadding } = opts;\n    let { clipSeries } = opts;\n    const { position = \"left\", direction } = axis;\n    const axisLeftRightRange = (axis2) => {\n      if (axis2 instanceof CategoryAxis || axis2 instanceof GroupedCategoryAxis) {\n        return [0, seriesRect.height];\n      }\n      return [seriesRect.height, 0];\n    };\n    const axisOffset = (_a = newAxisWidths[position]) != null ? _a : 0;\n    switch (position) {\n      case \"top\":\n      case \"bottom\":\n        axis.range = [0, seriesRect.width];\n        axis.gridLength = seriesRect.height;\n        break;\n      case \"right\":\n      case \"left\":\n        axis.range = axisLeftRightRange(axis);\n        axis.gridLength = seriesRect.width;\n        break;\n    }\n    const zoom = this.zoomManager.getAxisZoom(axis.id);\n    const { min = 0, max = 1 } = zoom != null ? zoom : {};\n    axis.visibleRange = [min, max];\n    const rangeClipped = axis.dataDomain.clipped || axis.visibleRange[0] > 0 || axis.visibleRange[1] < 1;\n    clipSeries || (clipSeries = rangeClipped);\n    let primaryTickCount = axis.nice ? primaryTickCounts[direction] : void 0;\n    const paddedBoundsCoefficient = 0.3;\n    if (axis.thickness != null && axis.thickness > 0) {\n      axis.maxThickness = axis.thickness;\n    } else if (direction === \"y\" /* Y */) {\n      axis.maxThickness = paddedBounds.width * paddedBoundsCoefficient;\n    } else {\n      axis.maxThickness = paddedBounds.height * paddedBoundsCoefficient;\n    }\n    const layout = axis.calculateLayout(primaryTickCount);\n    primaryTickCount = layout.primaryTickCount;\n    primaryTickCounts[direction] = (_b = primaryTickCounts[direction]) != null ? _b : primaryTickCount;\n    let axisThickness = 0;\n    if (axis.thickness != null && axis.thickness > 0) {\n      axisThickness = axis.thickness;\n    } else {\n      const { bbox } = layout;\n      axisThickness = direction === \"x\" /* X */ ? bbox.height : bbox.width;\n    }\n    const axisPadding = 15;\n    if (addInterAxisPadding) {\n      axisThickness += axisPadding;\n    }\n    axisThickness = Math.ceil(axisThickness);\n    newAxisWidths[position] = ((_c = newAxisWidths[position]) != null ? _c : 0) + axisThickness;\n    axis.gridPadding = ((_d = axisWidths[position]) != null ? _d : 0) - ((_e = newAxisWidths[position]) != null ? _e : 0);\n    return { clipSeries, axisThickness, axisOffset, primaryTickCount };\n  }\n  positionAxis(opts) {\n    var _a, _b, _c, _d;\n    const { axis, axisBound, axisWidths, seriesRect, axisOffset, axisThickness } = opts;\n    const { position } = axis;\n    switch (position) {\n      case \"top\":\n        axis.translation.x = axisBound.x + ((_a = axisWidths.left) != null ? _a : 0);\n        axis.translation.y = this.clampToOutsideSeriesRect(\n          seriesRect,\n          axisBound.y + 1 + axisOffset + axisThickness,\n          \"y\",\n          1\n        );\n        break;\n      case \"bottom\":\n        axis.translation.x = axisBound.x + ((_b = axisWidths.left) != null ? _b : 0);\n        axis.translation.y = this.clampToOutsideSeriesRect(\n          seriesRect,\n          axisBound.y + axisBound.height + 1 - axisThickness - axisOffset,\n          \"y\",\n          -1\n        );\n        break;\n      case \"left\":\n        axis.translation.y = axisBound.y + ((_c = axisWidths.top) != null ? _c : 0);\n        axis.translation.x = this.clampToOutsideSeriesRect(\n          seriesRect,\n          axisBound.x + axisOffset + axisThickness,\n          \"x\",\n          1\n        );\n        break;\n      case \"right\":\n        axis.translation.y = axisBound.y + ((_d = axisWidths.top) != null ? _d : 0);\n        axis.translation.x = this.clampToOutsideSeriesRect(\n          seriesRect,\n          axisBound.x + axisBound.width - axisThickness - axisOffset,\n          \"x\",\n          -1\n        );\n        break;\n    }\n    axis.updatePosition({ rotation: toRadians(axis.rotation), sideFlag: axis.label.getSideFlag() });\n  }\n  shouldFlipXY() {\n    return !this.series.some((series) => !(series instanceof CartesianSeries && series.shouldFlipXY()));\n  }\n};\n_CartesianChart.className = \"CartesianChart\";\n_CartesianChart.type = \"cartesian\";\nvar CartesianChart = _CartesianChart;\n\n// packages/ag-charts-community/src/chart/chartProxy.ts\nvar AgChartInstanceProxy = class _AgChartInstanceProxy {\n  constructor(chart) {\n    this.chart = chart;\n  }\n  static isInstance(x) {\n    var _a;\n    if (x instanceof _AgChartInstanceProxy) {\n      return true;\n    }\n    if (((_a = x.constructor) == null ? void 0 : _a.name) === \"AgChartInstanceProxy\" && x.chart != null) {\n      return true;\n    }\n    return x.chart != null && this.validateImplementation(x);\n  }\n  static validateImplementation(x) {\n    var _a, _b;\n    const chartProps = [\"getOptions\", \"destroy\"];\n    const signatureProps = Object.keys((_b = (_a = x.constructor) == null ? void 0 : _a.prototype) != null ? _b : {});\n    return chartProps.every((prop) => signatureProps.includes(prop));\n  }\n  getOptions() {\n    return this.chart.getOptions();\n  }\n  destroy() {\n    this.chart.destroy();\n  }\n};\n\n// packages/ag-charts-community/src/util/secondaryAxisTicks.ts\nfunction calculateNiceSecondaryAxis(domain, primaryTickCount, reverse) {\n  let start = Math.floor(Math.min(domain[0], domain[1]));\n  let stop = Math.max(domain[0], domain[1]);\n  start = calculateNiceStart(start, stop, primaryTickCount);\n  const step = getTickStep(start, stop, primaryTickCount);\n  const segments = primaryTickCount - 1;\n  stop = start + segments * step;\n  const d = reverse ? [stop, start] : [start, stop];\n  const ticks = getTicks(start, step, primaryTickCount);\n  return [d, ticks];\n}\nfunction calculateNiceStart(a, b, count2) {\n  const rawStep = Math.abs(b - a) / (count2 - 1);\n  const order = Math.floor(Math.log10(rawStep));\n  const magnitude = Math.pow(10, order);\n  return Math.floor(a / magnitude) * magnitude;\n}\nfunction getTicks(start, step, count2) {\n  const stepPower = Math.floor(Math.log10(step));\n  const fractionDigits = step > 0 && step < 1 ? Math.abs(stepPower) : 0;\n  const f = Math.pow(10, fractionDigits);\n  const ticks = createNumericTicks(fractionDigits);\n  for (let i = 0; i < count2; i++) {\n    const tick = start + step * i;\n    ticks[i] = Math.round(tick * f) / f;\n  }\n  return ticks;\n}\nfunction getTickStep(start, stop, count2) {\n  const segments = count2 - 1;\n  const rawStep = (stop - start) / segments;\n  return calculateNextNiceStep(rawStep);\n}\nfunction calculateNextNiceStep(rawStep) {\n  const order = Math.floor(Math.log10(rawStep));\n  const magnitude = Math.pow(10, order);\n  const step = rawStep / magnitude * 10;\n  if (step > 0 && step <= 1) {\n    return magnitude / 10;\n  }\n  if (step > 1 && step <= 2) {\n    return 2 * magnitude / 10;\n  }\n  if (step > 1 && step <= 5) {\n    return 5 * magnitude / 10;\n  }\n  if (step > 5 && step <= 10) {\n    return 10 * magnitude / 10;\n  }\n  if (step > 10 && step <= 20) {\n    return 20 * magnitude / 10;\n  }\n  if (step > 20 && step <= 40) {\n    return 40 * magnitude / 10;\n  }\n  if (step > 40 && step <= 50) {\n    return 50 * magnitude / 10;\n  }\n  if (step > 50 && step <= 100) {\n    return 100 * magnitude / 10;\n  }\n  return step;\n}\n\n// packages/ag-charts-community/src/chart/axis/numberAxis.ts\nvar NumberAxisTick = class extends AxisTick {\n  constructor() {\n    super(...arguments);\n    this.maxSpacing = NaN;\n  }\n};\n__decorateClass([\n  Validate(OR(AND(NUMBER.restrict({ min: 1 }), GREATER_THAN(\"minSpacing\")), NAN)),\n  Default(NaN)\n], NumberAxisTick.prototype, \"maxSpacing\", 2);\nvar NumberAxis = class extends CartesianAxis {\n  constructor(moduleCtx, scale2 = new LinearScale()) {\n    super(moduleCtx, scale2);\n    this.min = NaN;\n    this.max = NaN;\n  }\n  normaliseDataDomain(d) {\n    const { min, max } = this;\n    const { extent: extent2, clipped } = normalisedExtentWithMetadata(d, min, max);\n    return { domain: extent2, clipped };\n  }\n  formatDatum(datum) {\n    if (typeof datum === \"number\") {\n      return datum.toFixed(2);\n    } else {\n      Logger.warnOnce(\n        \"data contains Date objects which are being plotted against a number axis, please only use a number axis for numbers.\"\n      );\n      return String(datum);\n    }\n  }\n  createTick() {\n    return new NumberAxisTick();\n  }\n  updateSecondaryAxisTicks(primaryTickCount) {\n    if (this.dataDomain == null) {\n      throw new Error(\"AG Charts - dataDomain not calculated, cannot perform tick calculation.\");\n    }\n    if (this.dataDomain.domain.length === 0)\n      return [];\n    const [d, ticks] = calculateNiceSecondaryAxis(this.dataDomain.domain, primaryTickCount != null ? primaryTickCount : 0, this.reverse);\n    this.scale.nice = false;\n    this.scale.domain = d;\n    this.scale.update();\n    return ticks;\n  }\n};\nNumberAxis.className = \"NumberAxis\";\nNumberAxis.type = \"number\";\n__decorateClass([\n  Validate(AND(NUMBER_OR_NAN, LESS_THAN(\"max\"))),\n  Default(NaN)\n], NumberAxis.prototype, \"min\", 2);\n__decorateClass([\n  Validate(AND(NUMBER_OR_NAN, GREATER_THAN(\"min\"))),\n  Default(NaN)\n], NumberAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/axis/logAxis.ts\nvar NON_ZERO_NUMBER = predicateWithMessage((value) => isNumber(value) && value !== 0, \"a non-zero number\");\nvar LogAxis = class extends NumberAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new LogScale());\n    this.min = NaN;\n    this.max = NaN;\n  }\n  normaliseDataDomain(d) {\n    const { min, max } = this;\n    const { extent: extent2, clipped } = normalisedExtentWithMetadata(d, min, max);\n    const isInverted = extent2[0] > extent2[1];\n    const crossesZero = extent2[0] < 0 && extent2[1] > 0;\n    const hasZeroExtent = extent2[0] === 0 && extent2[1] === 0;\n    const invalidDomain = isInverted || crossesZero || hasZeroExtent;\n    if (invalidDomain) {\n      d = [];\n      if (crossesZero) {\n        Logger.warn(\n          `the data domain crosses zero, the chart data cannot be rendered. See log axis documentation for more information.`\n        );\n      } else if (hasZeroExtent) {\n        Logger.warn(`the data domain has 0 extent, no data is rendered.`);\n      }\n    }\n    if (extent2[0] === 0) {\n      extent2[0] = 1;\n    }\n    if (extent2[1] === 0) {\n      extent2[1] = -1;\n    }\n    return { domain: extent2, clipped };\n  }\n  set base(value) {\n    this.scale.base = value;\n  }\n  get base() {\n    return this.scale.base;\n  }\n};\nLogAxis.className = \"LogAxis\";\nLogAxis.type = \"log\";\n__decorateClass([\n  Validate(AND(NUMBER_OR_NAN, NON_ZERO_NUMBER, LESS_THAN(\"max\"))),\n  Default(NaN)\n], LogAxis.prototype, \"min\", 2);\n__decorateClass([\n  Validate(AND(NUMBER_OR_NAN, NON_ZERO_NUMBER, GREATER_THAN(\"min\"))),\n  Default(NaN)\n], LogAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/axis/timeAxis.ts\nvar MAX_SPACING2 = OR(AND(NUMBER.restrict({ min: 1 }), GREATER_THAN(\"minSpacing\")), NAN);\nvar TimeAxisTick = class extends AxisTick {\n  constructor() {\n    super(...arguments);\n    this.maxSpacing = NaN;\n  }\n};\n__decorateClass([\n  Validate(MAX_SPACING2),\n  Default(NaN)\n], TimeAxisTick.prototype, \"maxSpacing\", 2);\nvar TimeAxis = class extends CartesianAxis {\n  constructor(moduleCtx) {\n    super(moduleCtx, new TimeScale());\n    this.datumFormat = \"%m/%d/%y, %H:%M:%S\";\n    this.min = void 0;\n    this.max = void 0;\n    const { scale: scale2 } = this;\n    this.refreshScale();\n    this.datumFormatter = scale2.tickFormat({\n      specifier: this.datumFormat\n    });\n  }\n  normaliseDataDomain(d) {\n    var _a;\n    let { min, max } = this;\n    let clipped = false;\n    if (typeof min === \"number\") {\n      min = new Date(min);\n    }\n    if (typeof max === \"number\") {\n      max = new Date(max);\n    }\n    if (d.length > 2) {\n      d = ((_a = extent(d)) != null ? _a : [0, 1e3]).map((x) => new Date(x));\n    }\n    if (min instanceof Date) {\n      clipped || (clipped = min > d[0]);\n      d = [min, d[1]];\n    }\n    if (max instanceof Date) {\n      clipped || (clipped = max < d[1]);\n      d = [d[0], max];\n    }\n    if (d[0] > d[1]) {\n      d = [];\n    }\n    return { domain: d, clipped };\n  }\n  createTick() {\n    return new TimeAxisTick();\n  }\n  onLabelFormatChange(ticks, format2) {\n    if (format2) {\n      super.onLabelFormatChange(ticks, format2);\n    } else {\n      this.labelFormatter = this.scale.tickFormat({ ticks });\n    }\n  }\n  formatDatum(datum) {\n    var _a;\n    return (_a = this.moduleCtx.callbackCache.call(this.datumFormatter, datum)) != null ? _a : String(datum);\n  }\n  calculatePadding(_min, _max, reverse) {\n    return reverse ? [1, 0] : [0, 1];\n  }\n};\nTimeAxis.className = \"TimeAxis\";\nTimeAxis.type = \"time\";\n__decorateClass([\n  Validate(AND(DATE_OR_DATETIME_MS, LESS_THAN(\"max\")), { optional: true })\n], TimeAxis.prototype, \"min\", 2);\n__decorateClass([\n  Validate(AND(DATE_OR_DATETIME_MS, GREATER_THAN(\"min\")), { optional: true })\n], TimeAxis.prototype, \"max\", 2);\n\n// packages/ag-charts-community/src/chart/factory/axisTypes.ts\nvar AXIS_CONSTRUCTORS = {\n  [NumberAxis.type]: NumberAxis,\n  [CategoryAxis.type]: CategoryAxis,\n  [TimeAxis.type]: TimeAxis,\n  [GroupedCategoryAxis.type]: GroupedCategoryAxis,\n  [LogAxis.type]: LogAxis\n};\nfunction registerAxis(axisType, ctor) {\n  AXIS_CONSTRUCTORS[axisType] = ctor;\n}\nfunction getAxis(axisType, moduleCtx) {\n  const axisConstructor = AXIS_CONSTRUCTORS[axisType];\n  if (axisConstructor) {\n    return new axisConstructor(moduleCtx);\n  }\n  throw new Error(`AG Charts - unknown axis type: ${axisType}`);\n}\nvar AXIS_TYPES = {\n  has(axisType) {\n    return Object.hasOwn(AXIS_CONSTRUCTORS, axisType);\n  },\n  get axesTypes() {\n    return Object.keys(AXIS_CONSTRUCTORS);\n  }\n};\nvar AXIS_THEME_TEMPLATES = {};\nfunction registerAxisThemeTemplate(axisType, theme) {\n  AXIS_THEME_TEMPLATES[axisType] = theme;\n}\nfunction getAxisThemeTemplate(axisType) {\n  var _a;\n  return (_a = AXIS_THEME_TEMPLATES[axisType]) != null ? _a : {};\n}\n\n// packages/ag-charts-community/src/chart/factory/expectedEnterpriseModules.ts\nvar EXPECTED_ENTERPRISE_MODULES = [\n  { type: \"root\", optionsKey: \"animation\", chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"] },\n  {\n    type: \"root\",\n    optionsKey: \"background\",\n    chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n    optionsInnerKey: \"image\"\n  },\n  { type: \"root\", optionsKey: \"contextMenu\", chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"] },\n  { type: \"root\", optionsKey: \"zoom\", chartTypes: [\"cartesian\"] },\n  {\n    type: \"legend\",\n    optionsKey: \"gradientLegend\",\n    chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n    identifier: \"gradient\"\n  },\n  { type: \"axis\", optionsKey: \"axes[]\", chartTypes: [\"polar\"], identifier: \"angle-category\" },\n  { type: \"axis\", optionsKey: \"axes[]\", chartTypes: [\"polar\"], identifier: \"angle-number\" },\n  { type: \"axis\", optionsKey: \"axes[]\", chartTypes: [\"polar\"], identifier: \"radius-category\" },\n  { type: \"axis\", optionsKey: \"axes[]\", chartTypes: [\"polar\"], identifier: \"radius-number\" },\n  { type: \"axis-option\", optionsKey: \"crosshair\", chartTypes: [\"cartesian\"] },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"box-plot\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"bullet\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"heatmap\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"polar\"], identifier: \"nightingale\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"polar\"], identifier: \"radar-area\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"polar\"], identifier: \"radar-line\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"polar\"], identifier: \"radial-bar\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"polar\"], identifier: \"radial-column\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"range-area\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"range-bar\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"hierarchy\"], identifier: \"sunburst\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"hierarchy\"], identifier: \"treemap\" },\n  { type: \"series\", optionsKey: \"series[]\", chartTypes: [\"cartesian\"], identifier: \"waterfall\" },\n  { type: \"series-option\", optionsKey: \"errorBar\", chartTypes: [\"cartesian\"], identifier: \"error-bars\" }\n];\nfunction isEnterpriseSeriesType(type) {\n  return EXPECTED_ENTERPRISE_MODULES.some((s) => s.type === \"series\" && s.identifier === type);\n}\nfunction getEnterpriseSeriesChartTypes(type) {\n  var _a;\n  return (_a = EXPECTED_ENTERPRISE_MODULES.find((s) => s.type === \"series\" && s.identifier === type)) == null ? void 0 : _a.chartTypes;\n}\nfunction isEnterpriseSeriesTypeLoaded(type) {\n  var _a, _b;\n  return ((_b = (_a = EXPECTED_ENTERPRISE_MODULES.find((s) => s.type === \"series\" && s.identifier === type)) == null ? void 0 : _a.useCount) != null ? _b : 0) > 0;\n}\nfunction isEnterpriseCartesian(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find((v) => v === \"cartesian\");\n  return type === \"cartesian\";\n}\nfunction isEnterprisePolar(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find((v) => v === \"polar\");\n  return type === \"polar\";\n}\nfunction isEnterpriseHierarchy(seriesType) {\n  var _a;\n  const type = (_a = getEnterpriseSeriesChartTypes(seriesType)) == null ? void 0 : _a.find((v) => v === \"hierarchy\");\n  return type === \"hierarchy\";\n}\nfunction verifyIfModuleExpected(module) {\n  var _a;\n  if (module.packageType !== \"enterprise\") {\n    throw new Error(\"AG Charts - internal configuration error, only enterprise modules need verification.\");\n  }\n  const stub = EXPECTED_ENTERPRISE_MODULES.find((s) => {\n    return s.type === module.type && s.optionsKey === module.optionsKey && s.identifier === module.identifier && module.chartTypes.every((t) => s.chartTypes.includes(t));\n  });\n  if (stub) {\n    (_a = stub.useCount) != null ? _a : stub.useCount = 0;\n    stub.useCount++;\n  }\n  return stub != null;\n}\nfunction getUnusedExpectedModules() {\n  return EXPECTED_ENTERPRISE_MODULES.filter(({ useCount }) => useCount == null || useCount === 0);\n}\n\n// packages/ag-charts-community/src/chart/factory/legendTypes.ts\nvar LEGEND_FACTORIES = {\n  category: Legend\n};\nvar LEGEND_KEYS = {\n  category: \"legend\"\n};\nfunction registerLegend(type, key, ctr, theme) {\n  LEGEND_FACTORIES[type] = ctr;\n  LEGEND_KEYS[type] = key;\n  LEGEND_THEME_TEMPLATES[key] = theme;\n}\nvar LEGEND_THEME_TEMPLATES = {};\nfunction getLegendThemeTemplates() {\n  return LEGEND_THEME_TEMPLATES;\n}\nfunction getLegendKeys() {\n  return LEGEND_KEYS;\n}\n\n// packages/ag-charts-community/src/chart/background/background.ts\nvar Background = class extends BaseModuleInstance {\n  constructor(ctx) {\n    var _a;\n    super();\n    this.node = new Group({ name: \"background\", zIndex: 0 /* SERIES_BACKGROUND_ZINDEX */ });\n    this.rectNode = new Rect();\n    this.visible = true;\n    this.fill = \"white\";\n    // placeholder for enterprise module\n    this.image = void 0;\n    this.node.appendChild(this.rectNode);\n    (_a = ctx.scene.root) == null ? void 0 : _a.appendChild(this.node);\n    this.destroyFns.push(\n      () => {\n        var _a2;\n        return (_a2 = ctx.scene.root) == null ? void 0 : _a2.removeChild(this.node);\n      },\n      ctx.layoutService.addListener(\"layout-complete\", (e) => this.onLayoutComplete(e))\n    );\n  }\n  onLayoutComplete(e) {\n    const { width, height } = e.chart;\n    this.rectNode.width = width;\n    this.rectNode.height = height;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN),\n  ProxyPropertyOnWrite(\"node\", \"visible\")\n], Background.prototype, \"visible\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true }),\n  ProxyPropertyOnWrite(\"rectNode\", \"fill\")\n], Background.prototype, \"fill\", 2);\n\n// packages/ag-charts-community/src/chart/background/backgroundModule.ts\nvar BackgroundModule = {\n  type: \"root\",\n  optionsKey: \"background\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\", \"polar\", \"hierarchy\"],\n  instanceConstructor: Background\n};\n\n// packages/ag-charts-community/src/chart/navigator/navigatorHandle.ts\nvar NavigatorHandle = class {\n  set fill(value) {\n    this.rh.fill = value;\n  }\n  get fill() {\n    return this.rh.fill;\n  }\n  set stroke(value) {\n    this.rh.stroke = value;\n  }\n  get stroke() {\n    return this.rh.stroke;\n  }\n  set strokeWidth(value) {\n    this.rh.strokeWidth = value;\n  }\n  get strokeWidth() {\n    return this.rh.strokeWidth;\n  }\n  set width(value) {\n    this.rh.width = value;\n  }\n  get width() {\n    return this.rh.width;\n  }\n  set height(value) {\n    this.rh.height = value;\n  }\n  get height() {\n    return this.rh.height;\n  }\n  set gripLineGap(value) {\n    this.rh.gripLineGap = value;\n  }\n  get gripLineGap() {\n    return this.rh.gripLineGap;\n  }\n  set gripLineLength(value) {\n    this.rh.gripLineLength = value;\n  }\n  get gripLineLength() {\n    return this.rh.gripLineLength;\n  }\n  constructor(rangeHandle) {\n    this.rh = rangeHandle;\n  }\n};\n\n// packages/ag-charts-community/src/chart/navigator/navigatorMask.ts\nvar NavigatorMask = class {\n  set fill(value) {\n    this.rm.fill = value;\n  }\n  get fill() {\n    return this.rm.fill;\n  }\n  set stroke(value) {\n    this.rm.stroke = value;\n  }\n  get stroke() {\n    return this.rm.stroke;\n  }\n  set strokeWidth(value) {\n    this.rm.strokeWidth = value;\n  }\n  get strokeWidth() {\n    return this.rm.strokeWidth;\n  }\n  set fillOpacity(value) {\n    this.rm.fillOpacity = value;\n  }\n  get fillOpacity() {\n    return this.rm.fillOpacity;\n  }\n  constructor(rangeMask) {\n    this.rm = rangeMask;\n  }\n};\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeHandle.ts\nvar RangeHandle = class extends Path {\n  constructor() {\n    super(...arguments);\n    this._fill = \"#f2f2f2\";\n    this._stroke = \"#999999\";\n    this._strokeWidth = 1;\n    this._lineCap = \"square\";\n    this._centerX = 0;\n    this._centerY = 0;\n    this._width = 8;\n    this._gripLineGap = 2;\n    this._gripLineLength = 8;\n    this._height = 16;\n  }\n  set centerX(value) {\n    if (this._centerX !== value) {\n      this._centerX = value;\n      this.dirtyPath = true;\n    }\n  }\n  get centerX() {\n    return this._centerX;\n  }\n  set centerY(value) {\n    if (this._centerY !== value) {\n      this._centerY = value;\n      this.dirtyPath = true;\n    }\n  }\n  get centerY() {\n    return this._centerY;\n  }\n  set width(value) {\n    if (this._width !== value) {\n      this._width = value;\n      this.dirtyPath = true;\n    }\n  }\n  get width() {\n    return this._width;\n  }\n  set gripLineGap(value) {\n    if (this._gripLineGap !== value) {\n      this._gripLineGap = value;\n      this.dirtyPath = true;\n    }\n  }\n  get gripLineGap() {\n    return this._gripLineGap;\n  }\n  set gripLineLength(value) {\n    if (this._gripLineLength !== value) {\n      this._gripLineLength = value;\n      this.dirtyPath = true;\n    }\n  }\n  get gripLineLength() {\n    return this._gripLineLength;\n  }\n  set height(value) {\n    if (this._height !== value) {\n      this._height = value;\n      this.dirtyPath = true;\n    }\n  }\n  get height() {\n    return this._height;\n  }\n  computeBBox() {\n    const { centerX, centerY, width, height } = this;\n    const x = centerX - width / 2;\n    const y = centerY - height / 2;\n    return new BBox(x, y, width, height);\n  }\n  isPointInPath(x, y) {\n    const point = this.transformPoint(x, y);\n    const bbox = this.computeBBox();\n    return bbox.containsPoint(point.x, point.y);\n  }\n  updatePath() {\n    const { path, centerX, centerY, width, height } = this;\n    path.clear();\n    const x = centerX - width / 2;\n    const y = centerY - height / 2;\n    const ax = this.align(x);\n    const ay = this.align(y);\n    const axw = ax + this.align(x, width);\n    const ayh = ay + this.align(y, height);\n    path.moveTo(ax, ay);\n    path.lineTo(axw, ay);\n    path.lineTo(axw, ayh);\n    path.lineTo(ax, ayh);\n    path.lineTo(ax, ay);\n    const dx = this.gripLineGap / 2;\n    const dy = this.gripLineLength / 2;\n    path.moveTo(this.align(centerX - dx), this.align(centerY - dy));\n    path.lineTo(this.align(centerX - dx), this.align(centerY + dy));\n    path.moveTo(this.align(centerX + dx), this.align(centerY - dy));\n    path.lineTo(this.align(centerX + dx), this.align(centerY + dy));\n  }\n};\nRangeHandle.className = \"RangeHandle\";\n__decorateClass([\n  Validate(COLOR_STRING)\n], RangeHandle.prototype, \"_fill\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], RangeHandle.prototype, \"_stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], RangeHandle.prototype, \"_strokeWidth\", 2);\n__decorateClass([\n  Validate(LINE_CAP)\n], RangeHandle.prototype, \"_lineCap\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], RangeHandle.prototype, \"_width\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], RangeHandle.prototype, \"_gripLineGap\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], RangeHandle.prototype, \"_gripLineLength\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], RangeHandle.prototype, \"_height\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeMask.ts\nfunction markDirtyOnChange(newValue, oldValue) {\n  if (newValue !== oldValue) {\n    this.dirtyPath = true;\n  }\n}\nvar RangeMask = class extends Path {\n  constructor() {\n    super(...arguments);\n    this.x = 0;\n    this.y = 0;\n    this.width = 200;\n    this.height = 30;\n    this.minRange = 0.05;\n    this._min = 0;\n    this._max = 1;\n  }\n  set min(value) {\n    var _a;\n    value = clamp2(0, value, this.max - this.minRange);\n    if (this._min !== value && !isNaN(value)) {\n      this._min = value;\n      this.dirtyPath = true;\n      (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n    }\n  }\n  get min() {\n    return this._min;\n  }\n  set max(value) {\n    var _a;\n    value = clamp2(this.min + this.minRange, value, 1);\n    if (this._max !== value && !isNaN(value)) {\n      this._max = value;\n      this.dirtyPath = true;\n      (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n    }\n  }\n  get max() {\n    return this._max;\n  }\n  computeBBox() {\n    const { x, y, width, height } = this;\n    return new BBox(x, y, width, height);\n  }\n  computeVisibleRangeBBox() {\n    const { x, y, width, height, min, max } = this;\n    const minX = x + width * min;\n    const maxX = x + width * max;\n    return new BBox(minX, y, maxX - minX, height);\n  }\n  updatePath() {\n    const { path, x, y, width, height, min, max } = this;\n    path.clear();\n    const ax = this.align(x);\n    const ay = this.align(y);\n    const axw = ax + this.align(x, width);\n    const ayh = ay + this.align(y, height);\n    path.moveTo(ax, ay);\n    path.lineTo(axw, ay);\n    path.lineTo(axw, ayh);\n    path.lineTo(ax, ayh);\n    path.lineTo(ax, ay);\n    const minX = this.align(x + width * min);\n    const maxX = this.align(x + width * max);\n    path.moveTo(minX, ay);\n    path.lineTo(minX, ayh);\n    path.lineTo(maxX, ayh);\n    path.lineTo(maxX, ay);\n    path.lineTo(minX, ay);\n  }\n};\nRangeMask.className = \"RangeMask\";\n__decorateClass([\n  ActionOnSet({ changeValue: markDirtyOnChange }),\n  Validate(POSITIVE_NUMBER)\n], RangeMask.prototype, \"x\", 2);\n__decorateClass([\n  ActionOnSet({ changeValue: markDirtyOnChange }),\n  Validate(POSITIVE_NUMBER)\n], RangeMask.prototype, \"y\", 2);\n__decorateClass([\n  ActionOnSet({ changeValue: markDirtyOnChange }),\n  Validate(POSITIVE_NUMBER)\n], RangeMask.prototype, \"width\", 2);\n__decorateClass([\n  ActionOnSet({ changeValue: markDirtyOnChange }),\n  Validate(POSITIVE_NUMBER)\n], RangeMask.prototype, \"height\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], RangeMask.prototype, \"_min\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], RangeMask.prototype, \"_max\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/shapes/rangeSelector.ts\nvar _RangeSelector = class _RangeSelector extends Group {\n  constructor() {\n    super({ name: \"rangeSelectorGroup\" });\n    this.minHandle = new RangeHandle();\n    this.maxHandle = new RangeHandle();\n    this.mask = (() => {\n      const { x, y, width, height, min, max } = _RangeSelector.defaults;\n      const mask = new RangeMask();\n      mask.x = x;\n      mask.y = y;\n      mask.width = width;\n      mask.height = height;\n      mask.min = min;\n      mask.max = max;\n      const { minHandle, maxHandle } = this;\n      minHandle.centerX = x;\n      maxHandle.centerX = x + width;\n      minHandle.centerY = maxHandle.centerY = y + height / 2;\n      this.append([mask, minHandle, maxHandle]);\n      mask.onRangeChange = () => {\n        var _a;\n        this.updateHandles();\n        (_a = this.onRangeChange) == null ? void 0 : _a.call(this);\n      };\n      return mask;\n    })();\n    this._x = _RangeSelector.defaults.x;\n    this._y = _RangeSelector.defaults.y;\n    this._width = _RangeSelector.defaults.width;\n    this._height = _RangeSelector.defaults.height;\n    this._min = _RangeSelector.defaults.min;\n    this._max = _RangeSelector.defaults.max;\n    this.isContainerNode = true;\n  }\n  set x(value) {\n    this.mask.x = value;\n    this.updateHandles();\n  }\n  get x() {\n    return this.mask.x;\n  }\n  set y(value) {\n    this.mask.y = value;\n    this.updateHandles();\n  }\n  get y() {\n    return this.mask.y;\n  }\n  set width(value) {\n    this.mask.width = value;\n    this.updateHandles();\n  }\n  get width() {\n    return this.mask.width;\n  }\n  set height(value) {\n    this.mask.height = value;\n    this.updateHandles();\n  }\n  get height() {\n    return this.mask.height;\n  }\n  set min(value) {\n    this.mask.min = value;\n  }\n  get min() {\n    return this.mask.min;\n  }\n  set max(value) {\n    this.mask.max = value;\n  }\n  get max() {\n    return this.mask.max;\n  }\n  updateHandles() {\n    const { minHandle, maxHandle, x, y, width, height, mask } = this;\n    minHandle.centerX = x + width * mask.min;\n    maxHandle.centerX = x + width * mask.max;\n    minHandle.centerY = maxHandle.centerY = y + height / 2;\n  }\n  computeBBox() {\n    return this.mask.computeBBox();\n  }\n  computeVisibleRangeBBox() {\n    return this.mask.computeVisibleRangeBBox();\n  }\n  render(renderCtx) {\n    const { ctx, forceRender, stats } = renderCtx;\n    if (this.dirty === 0 /* NONE */ && !forceRender) {\n      if (stats)\n        stats.nodesSkipped++;\n      return;\n    }\n    this.computeTransformMatrix();\n    this.matrix.toContext(ctx);\n    const { mask, minHandle, maxHandle } = this;\n    [mask, minHandle, maxHandle].forEach((child) => {\n      if (child.visible && (forceRender || child.dirty > 0 /* NONE */)) {\n        ctx.save();\n        child.render(__spreadProps(__spreadValues({}, renderCtx), { ctx, forceRender }));\n        ctx.restore();\n      }\n    });\n    this.markClean({ force: true });\n    if (stats)\n      stats.nodesRendered++;\n  }\n};\n_RangeSelector.className = \"Range\";\n_RangeSelector.defaults = {\n  x: 0,\n  y: 0,\n  width: 200,\n  height: 30,\n  min: 0,\n  max: 1\n};\nvar RangeSelector = _RangeSelector;\n\n// packages/ag-charts-community/src/chart/navigator/navigator.ts\nvar Navigator = class extends BaseModuleInstance {\n  constructor(ctx) {\n    var _a;\n    super();\n    this.ctx = ctx;\n    this.rs = new RangeSelector();\n    // Wrappers to allow option application to the scene graph nodes.\n    this.mask = new NavigatorMask(this.rs.mask);\n    this.minHandle = new NavigatorHandle(this.rs.minHandle);\n    this.maxHandle = new NavigatorHandle(this.rs.maxHandle);\n    this.minHandleDragging = false;\n    this.maxHandleDragging = false;\n    this.panHandleOffset = NaN;\n    this.enabled = false;\n    this.margin = 10;\n    this._visible = true;\n    this.rs.onRangeChange = () => ctx.zoomManager.updateZoom(\"navigator\", {\n      x: { min: this.rs.min, max: this.rs.max },\n      y: { min: 0, max: 1 }\n    });\n    (_a = ctx.scene.root) == null ? void 0 : _a.appendChild(this.rs);\n    const interactionOpts = { bypassPause: [\"animation\"] };\n    this.destroyFns.push(\n      ctx.interactionManager.addListener(\"drag-start\", (event) => this.onDragStart(event), interactionOpts),\n      ctx.interactionManager.addListener(\"drag\", (event) => this.onDrag(event), interactionOpts),\n      ctx.interactionManager.addListener(\"hover\", (event) => this.onDrag(event), interactionOpts),\n      ctx.interactionManager.addListener(\"drag-end\", () => this.onDragStop(), interactionOpts),\n      ctx.layoutService.addListener(\"before-series\", (event) => this.layout(event)),\n      ctx.layoutService.addListener(\"layout-complete\", (event) => this.layoutComplete(event)),\n      () => {\n        var _a2;\n        return (_a2 = ctx.scene.root) == null ? void 0 : _a2.removeChild(this.rs);\n      },\n      () => this.ctx.zoomManager.updateZoom(\"navigator\")\n    );\n    this.updateGroupVisibility();\n  }\n  set width(value) {\n    this.rs.width = value;\n  }\n  get width() {\n    return this.rs.width;\n  }\n  set height(value) {\n    this.rs.height = value;\n  }\n  get height() {\n    return this.rs.height;\n  }\n  set min(value) {\n    this.rs.min = value;\n  }\n  get min() {\n    return this.rs.min;\n  }\n  set max(value) {\n    this.rs.max = value;\n  }\n  get max() {\n    return this.rs.max;\n  }\n  set visible(value) {\n    this._visible = value;\n    this.updateGroupVisibility();\n  }\n  get visible() {\n    return this._visible;\n  }\n  updateGroupVisibility() {\n    const visible = this.enabled && this.visible;\n    this.rs.visible = visible;\n    if (visible) {\n      this.ctx.zoomManager.updateZoom(\"navigator\", {\n        x: { min: this.rs.min, max: this.rs.max },\n        y: { min: 0, max: 1 }\n      });\n    } else {\n      this.ctx.zoomManager.updateZoom(\"navigator\");\n    }\n  }\n  layout({ shrinkRect }) {\n    if (this.enabled) {\n      const navigatorTotalHeight = this.rs.height + this.margin;\n      shrinkRect.shrink(navigatorTotalHeight, \"bottom\");\n      this.rs.y = shrinkRect.y + shrinkRect.height + this.margin;\n    }\n    return { shrinkRect };\n  }\n  layoutComplete({ series: { rect, visible } }) {\n    if (this.enabled && visible) {\n      this.rs.x = rect.x;\n      this.rs.width = rect.width;\n    }\n    this.visible = visible;\n  }\n  onDragStart(offset4) {\n    if (!this.enabled) {\n      return;\n    }\n    const { offsetX, offsetY } = offset4;\n    const { rs } = this;\n    const { minHandle, maxHandle, x, width, min } = rs;\n    const visibleRange = rs.computeVisibleRangeBBox();\n    if (!(this.minHandleDragging || this.maxHandleDragging)) {\n      if (minHandle.containsPoint(offsetX, offsetY)) {\n        this.minHandleDragging = true;\n      } else if (maxHandle.containsPoint(offsetX, offsetY)) {\n        this.maxHandleDragging = true;\n      } else if (visibleRange.containsPoint(offsetX, offsetY)) {\n        this.panHandleOffset = (offsetX - x) / width - min;\n      }\n    }\n  }\n  onDrag(offset4) {\n    if (!this.enabled) {\n      return;\n    }\n    const { rs, panHandleOffset } = this;\n    const { x, y, width, height, minHandle, maxHandle } = rs;\n    const { offsetX, offsetY } = offset4;\n    const minX = x + width * rs.min;\n    const maxX = x + width * rs.max;\n    const visibleRange = new BBox(minX, y, maxX - minX, height);\n    const getRatio = () => Math.min(Math.max((offsetX - x) / width, 0), 1);\n    if (minHandle.containsPoint(offsetX, offsetY) || maxHandle.containsPoint(offsetX, offsetY)) {\n      this.ctx.cursorManager.updateCursor(\"navigator\", \"ew-resize\");\n    } else if (visibleRange.containsPoint(offsetX, offsetY)) {\n      this.ctx.cursorManager.updateCursor(\"navigator\", \"grab\");\n    } else {\n      this.ctx.cursorManager.updateCursor(\"navigator\");\n    }\n    if (this.minHandleDragging) {\n      rs.min = getRatio();\n    } else if (this.maxHandleDragging) {\n      rs.max = getRatio();\n    } else if (!isNaN(panHandleOffset)) {\n      const span = rs.max - rs.min;\n      const min = Math.min(getRatio() - panHandleOffset, 1 - span);\n      if (min <= rs.min) {\n        rs.min = min;\n        rs.max = rs.min + span;\n      } else {\n        rs.max = min + span;\n        rs.min = rs.max - span;\n      }\n    }\n  }\n  onDragStop() {\n    this.stopHandleDragging();\n  }\n  stopHandleDragging() {\n    this.minHandleDragging = this.maxHandleDragging = false;\n    this.panHandleOffset = NaN;\n  }\n};\n__decorateClass([\n  ActionOnSet({\n    changeValue(newValue) {\n      if (newValue) {\n        this.min = 0;\n        this.max = 1;\n      }\n      this.updateGroupVisibility();\n    }\n  }),\n  Validate(BOOLEAN)\n], Navigator.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], Navigator.prototype, \"margin\", 2);\n\n// packages/ag-charts-community/src/chart/navigator/navigatorModule.ts\nvar NavigatorModule = {\n  type: \"root\",\n  optionsKey: \"navigator\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  instanceConstructor: Navigator,\n  themeTemplate: {\n    navigator: {\n      enabled: false,\n      height: 30,\n      mask: {\n        fill: \"#999999\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        fillOpacity: 0.2\n      },\n      minHandle: {\n        fill: \"#f2f2f2\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        width: 8,\n        height: 16,\n        gripLineGap: 2,\n        gripLineLength: 8\n      },\n      maxHandle: {\n        fill: \"#f2f2f2\",\n        stroke: \"#999999\",\n        strokeWidth: 1,\n        width: 8,\n        height: 16,\n        gripLineGap: 2,\n        gripLineLength: 8\n      }\n    }\n  }\n};\n\n// packages/ag-charts-community/src/util/theme.ts\nvar singleSeriesPaletteFactory = ({ takeColors }) => {\n  const {\n    fills: [fill],\n    strokes: [stroke]\n  } = takeColors(1);\n  return { fill, stroke };\n};\nvar markerPaletteFactory = (params) => {\n  const { fill, stroke } = singleSeriesPaletteFactory(params);\n  return { marker: { fill, stroke } };\n};\n\n// packages/ag-charts-community/src/chart/themes/constants.ts\nvar FONT_SIZE = {\n  SMALL: 12,\n  MEDIUM: 13,\n  LARGE: 17\n};\nvar FONT_WEIGHT2 = {\n  NORMAL: \"normal\",\n  BOLD: \"bold\",\n  BOLDER: \"bolder\",\n  LIGHTER: \"lighter\"\n};\nvar BOTTOM = \"bottom\";\nvar LEFT = \"left\";\nvar TOP = \"top\";\nvar CARTESIAN_AXIS_POSITIONS = {\n  BOTTOM,\n  LEFT,\n  TOP\n};\nvar CATEGORY = \"category\";\nvar NUMBER2 = \"number\";\nvar TIME = \"time\";\nvar LOG = \"log\";\nvar CARTESIAN_AXIS_TYPES = {\n  CATEGORY,\n  NUMBER: NUMBER2,\n  TIME,\n  LOG\n};\nvar ANGLE_CATEGORY = \"angle-category\";\nvar ANGLE_NUMBER = \"angle-number\";\nvar RADIUS_CATEGORY = \"radius-category\";\nvar RADIUS_NUMBER = \"radius-number\";\nvar POLAR_AXIS_TYPES = {\n  ANGLE_CATEGORY,\n  ANGLE_NUMBER,\n  RADIUS_CATEGORY,\n  RADIUS_NUMBER\n};\nvar CIRCLE = \"circle\";\n\n// packages/ag-charts-community/src/chart/factory/chartTypes.ts\nvar TYPES = {};\nvar DEFAULTS = {};\nvar CHART_TYPES = {\n  has(seriesType) {\n    return Object.hasOwn(TYPES, seriesType);\n  },\n  isCartesian(seriesType) {\n    return TYPES[seriesType] === \"cartesian\";\n  },\n  isPolar(seriesType) {\n    return TYPES[seriesType] === \"polar\";\n  },\n  isHierarchy(seriesType) {\n    return TYPES[seriesType] === \"hierarchy\";\n  },\n  get seriesTypes() {\n    return Object.keys(TYPES);\n  },\n  get cartesianTypes() {\n    return this.seriesTypes.filter((t) => this.isCartesian(t));\n  },\n  get polarTypes() {\n    return this.seriesTypes.filter((t) => this.isPolar(t));\n  },\n  get hierarchyTypes() {\n    return this.seriesTypes.filter((t) => this.isHierarchy(t));\n  }\n};\nfunction registerChartSeriesType(seriesType, chartType2) {\n  TYPES[seriesType] = chartType2;\n}\nfunction registerChartDefaults(chartType2, defaults) {\n  var _a;\n  DEFAULTS[chartType2] = jsonMerge([(_a = DEFAULTS[chartType2]) != null ? _a : {}, defaults]);\n}\nfunction getChartDefaults(chartType2) {\n  var _a;\n  return (_a = DEFAULTS[chartType2]) != null ? _a : {};\n}\nfunction getChartType(seriesType) {\n  var _a;\n  return (_a = TYPES[seriesType]) != null ? _a : \"unknown\";\n}\n\n// packages/ag-charts-community/src/chart/mapping/types.ts\nfunction optionsType(input) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = input.series) == null ? void 0 : _a[0]) == null ? void 0 : _b.type) != null ? _c : \"line\";\n}\nfunction isAgCartesianChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return true;\n  }\n  if (specifiedType === \"cartesian\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isCartesian(specifiedType) || isEnterpriseCartesian(specifiedType);\n}\nfunction isAgHierarchyChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  if (specifiedType === \"hierarchy\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isHierarchy(specifiedType) || isEnterpriseHierarchy(specifiedType);\n}\nfunction isAgPolarChartOptions(input) {\n  const specifiedType = optionsType(input);\n  if (specifiedType == null) {\n    return false;\n  }\n  if (specifiedType === \"polar\") {\n    Logger.warnOnce(`type '${specifiedType}' is deprecated, use a series type instead`);\n    return true;\n  }\n  return CHART_TYPES.isPolar(specifiedType) || isEnterprisePolar(specifiedType);\n}\nfunction isSeriesOptionType(input) {\n  if (input == null) {\n    return false;\n  }\n  return CHART_TYPES.has(input);\n}\nfunction isAxisOptionType(input) {\n  if (input == null) {\n    return false;\n  }\n  return AXIS_TYPES.has(input);\n}\n\n// packages/ag-charts-community/src/chart/mapping/defaults.ts\nvar DEFAULT_CARTESIAN_CHART_OVERRIDES = {\n  axes: [\n    {\n      type: CARTESIAN_AXIS_TYPES.NUMBER,\n      position: CARTESIAN_AXIS_POSITIONS.LEFT\n    },\n    {\n      type: CARTESIAN_AXIS_TYPES.CATEGORY,\n      position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n    }\n  ]\n};\nfunction swapAxes(opts) {\n  var _a;\n  if (!isAgCartesianChartOptions(opts)) {\n    return opts;\n  }\n  const [axis0, axis1] = (_a = opts.axes) != null ? _a : [];\n  return __spreadProps(__spreadValues({}, opts), {\n    axes: [\n      __spreadProps(__spreadValues({}, axis0), { position: axis1.position }),\n      __spreadProps(__spreadValues({}, axis1), { position: axis0.position })\n    ]\n  });\n}\nfunction resolveModuleConflicts(opts) {\n  var _a, _b, _c, _d;\n  const conflictOverrides = {};\n  for (const [source, conflicts] of MODULE_CONFLICTS.entries()) {\n    if (opts[source] == null || !conflicts.length) {\n      continue;\n    }\n    (_a = conflictOverrides[source]) != null ? _a : conflictOverrides[source] = {};\n    for (const conflict of conflicts) {\n      if (((_b = opts[source]) == null ? void 0 : _b.enabled) && ((_c = opts[conflict]) == null ? void 0 : _c.enabled)) {\n        Logger.warnOnce(\n          `the [${source}] module can not be used at the same time as [${conflict}], it will be disabled.`\n        );\n        conflictOverrides[source].enabled = false;\n      } else {\n        conflictOverrides[source].enabled = (_d = opts[source]) == null ? void 0 : _d.enabled;\n      }\n    }\n  }\n  return conflictOverrides;\n}\n\n// packages/ag-charts-community/src/chart/themes/symbols.ts\nvar EXTENDS_CHART_DEFAULTS = Symbol(\"extends-chart-defaults\");\nvar EXTENDS_LEGEND_DEFAULTS = Symbol(\"extends-legend-defaults\");\nvar EXTENDS_LEGEND_ITEM_DEFAULTS = Symbol(\"extends-legend-item-defaults\");\nvar EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS = Symbol(\"extends-legend-item-marker-defaults\");\nvar EXTENDS_AXES_DEFAULTS = Symbol(\"extends-axes-defaults\");\nvar EXTENDS_AXES_LABEL_DEFAULTS = Symbol(\"extends-axes-label-defaults\");\nvar EXTENDS_AXES_LINE_DEFAULTS = Symbol(\"extends-axes-line-defaults\");\nvar EXTENDS_AXES_TICK_DEFAULTS = Symbol(\"extends-axes-tick-defaults\");\nvar EXTENDS_AXES_GRID_LINE_DEFAULTS = Symbol(\"extends-axes-grid-line-defaults\");\nvar EXTENDS_SERIES_DEFAULTS = Symbol(\"extends-series-defaults\");\nvar EXTENDS_CARTESIAN_MARKER_DEFAULTS = Symbol(\"extends-cartesian-marker-defaults\");\nvar OVERRIDE_SERIES_LABEL_DEFAULTS = Symbol(\"override-series-label-defaults\");\nvar DEFAULT_FONT_FAMILY = Symbol(\"default-font\");\nvar DEFAULT_LABEL_COLOUR = Symbol(\"default-label-colour\");\nvar DEFAULT_INVERTED_LABEL_COLOUR = Symbol(\"default-inverted-label-colour\");\nvar DEFAULT_INSIDE_SERIES_LABEL_COLOUR = Symbol(\"default-inside-series-label-colour\");\nvar DEFAULT_MUTED_LABEL_COLOUR = Symbol(\"default-muted-label-colour\");\nvar DEFAULT_AXIS_GRID_COLOUR = Symbol(\"default-axis-grid-colour\");\nvar DEFAULT_AXIS_LINE_COLOUR = Symbol(\"default-axis-line-colour\");\nvar DEFAULT_CROSS_LINES_COLOUR = Symbol(\"default-cross-lines-colour\");\nvar DEFAULT_BACKGROUND_COLOUR = Symbol(\"default-background-colour\");\nvar DEFAULT_SHADOW_COLOUR = Symbol(\"default-shadow-colour\");\nvar DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS = Symbol(\n  \"default-waterfall-series-positive-colors\"\n);\nvar DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS = Symbol(\n  \"default-waterfall-series-negative-colors\"\n);\nvar DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS = Symbol(\n  \"default-waterfall-series-total-colors\"\n);\nvar DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE = Symbol(\n  \"default-waterfall-series-connector-line-stroke\"\n);\nvar DEFAULT_POLAR_SERIES_STROKE = Symbol(\"default-polar-series-stroke\");\nvar DEFAULT_DIVERGING_SERIES_COLOUR_RANGE = Symbol(\n  \"default-diverging-series-colour-range\"\n);\nvar DEFAULT_HIERARCHY_FILLS = Symbol(\"default-hierarchy-fills\");\nvar DEFAULT_HIERARCHY_STROKES = Symbol(\"default-hierarchy-strokes\");\n\n// packages/ag-charts-community/src/motion/pathMotion.ts\nfunction pathMotion(groupId, subId, animationManager, paths, fns) {\n  const { defaultDuration } = animationManager;\n  const { addPhaseFn, updatePhaseFn, removePhaseFn } = fns;\n  const animate = (phase, path, updateFn) => {\n    animationManager.animate({\n      id: `${groupId}_${subId}_${path.id}_${phase}`,\n      groupId,\n      from: 0,\n      to: 1,\n      ease: easeOut,\n      onUpdate(ratio, preInit) {\n        if (preInit && phase !== \"removed\")\n          return;\n        path.path.clear({ trackChanges: true });\n        updateFn(ratio, path);\n        path.checkPathDirty();\n      },\n      onStop() {\n        if (phase !== \"added\")\n          return;\n        path.path.clear({ trackChanges: true });\n        updateFn(1, path);\n        path.checkPathDirty();\n      },\n      duration: FROM_TO_MIXINS[phase].animationDuration * defaultDuration,\n      delay: FROM_TO_MIXINS[phase].animationDelay * defaultDuration\n    });\n  };\n  for (const path of paths) {\n    if (!animationManager.isSkipped()) {\n      animate(\"removed\", path, removePhaseFn);\n      animate(\"updated\", path, updatePhaseFn);\n    }\n    animate(\"added\", path, addPhaseFn);\n  }\n}\n\n// packages/ag-charts-community/src/chart/series/seriesLabelUtil.ts\nfunction seriesLabelFadeInAnimation({ id }, subId, animationManager, labelSelections) {\n  staticFromToMotion(id, subId, animationManager, labelSelections, { opacity: 0 }, { opacity: 1 }, LABEL_PHASE);\n}\nfunction seriesLabelFadeOutAnimation({ id }, subId, animationManager, labelSelections) {\n  staticFromToMotion(id, subId, animationManager, labelSelections, { opacity: 1 }, { opacity: 0 }, LABEL_PHASE);\n}\nfunction resetLabelFn(_node) {\n  return { opacity: 1 };\n}\n\n// packages/ag-charts-community/src/chart/series/seriesMarker.ts\nvar MARKER_SHAPE = predicateWithMessage(\n  (value) => isMarkerShape(value) || Object.getPrototypeOf(value) === Marker,\n  `a marker shape keyword such as 'circle', 'diamond' or 'square' or an object extending the Marker class`\n);\nvar SeriesMarker = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.shape = Circle;\n    this.size = 6;\n    this.fillOpacity = 1;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n  }\n  getStyle() {\n    const { size, fill, fillOpacity, stroke, strokeWidth, strokeOpacity } = this;\n    return { size, fill, fillOpacity, stroke, strokeWidth, strokeOpacity };\n  }\n  getDiameter() {\n    return this.size + this.strokeWidth;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(MARKER_SHAPE),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"shape\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"size\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true }),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true }),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true }),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], SeriesMarker.prototype, \"formatter\", 2);\n\n// packages/ag-charts-community/src/chart/series/seriesTooltip.ts\nvar SeriesTooltipInteraction = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = false;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], SeriesTooltipInteraction.prototype, \"enabled\", 2);\nvar SeriesTooltip = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.enabled = true;\n    this.interaction = new SeriesTooltipInteraction();\n    this.position = new TooltipPosition();\n  }\n  toTooltipHtml(defaults, params) {\n    if (this.renderer) {\n      return toTooltipHtml(this.renderer(params), defaults);\n    }\n    return toTooltipHtml(defaults);\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], SeriesTooltip.prototype, \"enabled\", 2);\n__decorateClass([\n  Validate(BOOLEAN, { optional: true })\n], SeriesTooltip.prototype, \"showArrow\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], SeriesTooltip.prototype, \"renderer\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], SeriesTooltip.prototype, \"interaction\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], SeriesTooltip.prototype, \"position\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeriesProperties.ts\nvar AreaSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.xName = void 0;\n    this.fill = \"#c16068\";\n    this.fillOpacity = 1;\n    this.stroke = \"#874349\";\n    this.strokeWidth = 2;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.shadow = new DropShadow();\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n    this.connectMissingData = false;\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], AreaSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], AreaSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING)\n], AreaSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], AreaSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], AreaSeriesProperties.prototype, \"normalizedTo\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], AreaSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO)\n], AreaSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], AreaSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AreaSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO)\n], AreaSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH)\n], AreaSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], AreaSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], AreaSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], AreaSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], AreaSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], AreaSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], AreaSeriesProperties.prototype, \"connectMissingData\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/markerUtil.ts\nfunction markerFadeInAnimation({ id }, animationManager, markerSelections, status = \"unknown\") {\n  const params = __spreadValues({}, FROM_TO_MIXINS[status]);\n  staticFromToMotion(id, \"markers\", animationManager, markerSelections, { opacity: 0 }, { opacity: 1 }, params);\n  markerSelections.forEach((s) => s.cleanup());\n}\nfunction markerScaleInAnimation({ id }, animationManager, markerSelections) {\n  staticFromToMotion(\n    id,\n    \"markers\",\n    animationManager,\n    markerSelections,\n    { scalingX: 0, scalingY: 0 },\n    { scalingX: 1, scalingY: 1 }\n  );\n  markerSelections.forEach((s) => s.cleanup());\n}\nfunction markerSwipeScaleInAnimation({ id, nodeDataDependencies }, animationManager, markerSelections) {\n  const seriesWidth = nodeDataDependencies.seriesRectWidth;\n  const fromFn = (_, datum) => {\n    var _a, _b;\n    const x = (_b = (_a = datum.midPoint) == null ? void 0 : _a.x) != null ? _b : seriesWidth;\n    const delay = clamp2(0, inverseEaseOut(x / seriesWidth), 1);\n    const animationDuration = Debug.check(\"animationImmediateMarkerSwipeScaleIn\") ? 0 : QUICK_TRANSITION;\n    return { scalingX: 0, scalingY: 0, animationDelay: delay, animationDuration };\n  };\n  const toFn = () => {\n    return { scalingX: 1, scalingY: 1 };\n  };\n  fromToMotion(id, \"markers\", animationManager, markerSelections, { fromFn, toFn });\n}\nfunction resetMarkerFn(_node) {\n  return { opacity: 1, scalingX: 1, scalingY: 1 };\n}\nfunction resetMarkerPositionFn(_node, datum) {\n  var _a, _b, _c, _d;\n  return {\n    translationX: (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : NaN,\n    translationY: (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : NaN\n  };\n}\nfunction prepareMarkerAnimation(pairMap, parentStatus) {\n  const readFirstPair = (xValue, type) => {\n    const val = pairMap[type][xValue];\n    return Array.isArray(val) ? val[0] : val;\n  };\n  const markerStatus = (datum) => {\n    const { xValue } = datum;\n    if (pairMap.moved[xValue]) {\n      return { point: readFirstPair(xValue, \"moved\"), status: \"updated\" };\n    } else if (pairMap.removed[xValue]) {\n      return { point: readFirstPair(xValue, \"removed\"), status: \"removed\" };\n    } else if (pairMap.added[xValue]) {\n      return { point: readFirstPair(xValue, \"added\"), status: \"added\" };\n    }\n    return { status: \"unknown\" };\n  };\n  const fromFn = (marker, datum) => {\n    var _a, _b, _c, _d, _e, _f;\n    const { status, point } = markerStatus(datum);\n    if (status === \"unknown\")\n      return { opacity: 0 };\n    const defaults = __spreadValues({\n      translationX: (_b = (_a = point == null ? void 0 : point.from) == null ? void 0 : _a.x) != null ? _b : marker.translationX,\n      translationY: (_d = (_c = point == null ? void 0 : point.from) == null ? void 0 : _c.y) != null ? _d : marker.translationY,\n      opacity: marker.opacity\n    }, FROM_TO_MIXINS[status]);\n    if (parentStatus === \"added\") {\n      return __spreadValues(__spreadProps(__spreadValues({}, defaults), {\n        opacity: 0,\n        translationX: (_e = point == null ? void 0 : point.to) == null ? void 0 : _e.x,\n        translationY: (_f = point == null ? void 0 : point.to) == null ? void 0 : _f.y\n      }), FROM_TO_MIXINS[\"added\"]);\n    }\n    if (status === \"added\") {\n      defaults.opacity = 0;\n    }\n    return defaults;\n  };\n  const toFn = (_marker, datum) => {\n    var _a, _b;\n    const { status, point } = markerStatus(datum);\n    if (status === \"unknown\")\n      return { opacity: 0 };\n    const defaults = __spreadValues({\n      translationX: datum.point.x,\n      translationY: datum.point.y,\n      opacity: 1\n    }, FROM_TO_MIXINS[status]);\n    if (status === \"removed\" || parentStatus === \"removed\") {\n      return __spreadValues(__spreadProps(__spreadValues({}, defaults), {\n        translationX: (_a = point == null ? void 0 : point.to) == null ? void 0 : _a.x,\n        translationY: (_b = point == null ? void 0 : point.to) == null ? void 0 : _b.y,\n        opacity: 0\n      }), FROM_TO_MIXINS[\"removed\"]);\n    }\n    return defaults;\n  };\n  return { fromFn, toFn };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/pathUtil.ts\nfunction minMax(nodeData) {\n  return nodeData.reduce(\n    ({ min, max }, node) => {\n      if (min == null || min.point.x > node.point.x) {\n        min = node;\n      }\n      if (max == null || max.point.x < node.point.x) {\n        max = node;\n      }\n      return { min, max };\n    },\n    {}\n  );\n}\nfunction intersectionOnLine(a, b, targetX) {\n  const m = (b.y - a.y) / (b.x - a.x);\n  const y = (targetX - a.x) * m + a.y;\n  return { x: targetX, y };\n}\nfunction backfillPathPoint(results, process, skip, processFn) {\n  let prevMarkerIdx = -1, nextMarkerIdx = 0;\n  const toProcess = [];\n  while (nextMarkerIdx < results.length) {\n    if (results[nextMarkerIdx].change === process) {\n      toProcess.push(results[nextMarkerIdx]);\n      nextMarkerIdx++;\n      continue;\n    }\n    if (results[nextMarkerIdx].change === skip) {\n      nextMarkerIdx++;\n      continue;\n    }\n    if (toProcess.length > 0) {\n      processFn(toProcess, prevMarkerIdx, nextMarkerIdx);\n      toProcess.length = 0;\n    }\n    prevMarkerIdx = nextMarkerIdx;\n    nextMarkerIdx++;\n  }\n  if (toProcess.length > 0) {\n    processFn(toProcess, prevMarkerIdx, nextMarkerIdx);\n  }\n}\nfunction backfillPathPointData(result, splitMode) {\n  backfillPathPoint(result, \"out\", \"in\", (toProcess, sIdx, eIdx) => {\n    var _a, _b;\n    if (sIdx === -1 && result[eIdx]) {\n      toProcess.forEach((d) => d.to = result[eIdx].from);\n    } else if (eIdx === result.length && result[sIdx]) {\n      toProcess.forEach((d) => d.to = result[sIdx].from);\n    } else if (splitMode === \"intersect\" && ((_a = result[sIdx]) == null ? void 0 : _a.from) && ((_b = result[eIdx]) == null ? void 0 : _b.from)) {\n      toProcess.forEach((d) => d.to = intersectionOnLine(result[sIdx].from, result[eIdx].from, d.from.x));\n    } else {\n      toProcess.forEach((d) => d.to = d.from);\n    }\n  });\n  backfillPathPoint(result, \"in\", \"out\", (toProcess, sIdx, eIdx) => {\n    var _a, _b;\n    if (sIdx === -1 && result[eIdx]) {\n      toProcess.forEach((d) => d.from = result[eIdx].to);\n    } else if (eIdx === result.length && result[sIdx]) {\n      toProcess.forEach((d) => d.from = result[sIdx].to);\n    } else if (splitMode === \"intersect\" && ((_a = result[sIdx]) == null ? void 0 : _a.to) && ((_b = result[eIdx]) == null ? void 0 : _b.to)) {\n      toProcess.forEach((d) => d.from = intersectionOnLine(result[sIdx].to, result[eIdx].to, d.to.x));\n    } else {\n      toProcess.forEach((d) => d.from = d.to);\n    }\n  });\n}\nfunction calculatePoint(from, to, ratio) {\n  const x1 = isNaN(from.x) ? to.x : from.x;\n  const y1 = isNaN(from.y) ? to.y : from.y;\n  const xd = to.x - from.x;\n  const yd = to.y - from.y;\n  const xr = isNaN(xd) ? 0 : xd * ratio;\n  const yr = isNaN(yd) ? 0 : yd * ratio;\n  return {\n    x: x1 + xr,\n    y: y1 + yr\n  };\n}\nfunction renderPartialPath(pairData, ratios, path) {\n  const { path: linePath } = path;\n  let previousTo;\n  for (const data of pairData) {\n    const ratio = ratios[data.change];\n    if (ratio == null)\n      continue;\n    const { from, to } = data;\n    if (from == null || to == null)\n      continue;\n    const { x, y } = calculatePoint(from, to, ratio);\n    if (data.moveTo === false) {\n      linePath.lineTo(x, y);\n    } else if (data.moveTo === true || !previousTo) {\n      linePath.moveTo(x, y);\n    } else if (previousTo) {\n      const moveToRatio = data.moveTo === \"in\" ? ratio : 1 - ratio;\n      const { x: midPointX, y: midPointY } = calculatePoint(previousTo, { x, y }, moveToRatio);\n      linePath.lineTo(midPointX, midPointY);\n      linePath.moveTo(x, y);\n    }\n    previousTo = { x, y };\n  }\n}\nfunction pathSwipeInAnimation({ id, visible }, animationManager, paths) {\n  staticFromToMotion(\n    id,\n    \"path_properties\",\n    animationManager,\n    paths,\n    { clipScalingX: 0 },\n    { clipScalingX: 1 },\n    {\n      start: { clipMode: \"normal\", visible },\n      finish: { clipMode: void 0, visible }\n    }\n  );\n}\nfunction pathFadeInAnimation({ id }, subId, animationManager, selection) {\n  staticFromToMotion(id, subId, animationManager, selection, { opacity: 0 }, { opacity: 1 }, LABEL_PHASE);\n}\nfunction pathFadeOutAnimation({ id }, subId, animationManager, selection) {\n  staticFromToMotion(id, subId, animationManager, selection, { opacity: 1 }, { opacity: 0 }, LABEL_PHASE);\n}\nfunction buildResetPathFn(opts) {\n  return (_node) => {\n    return { opacity: opts.getOpacity(), clipScalingX: 1, clipMode: void 0 };\n  };\n}\nfunction updateClipPath({ nodeDataDependencies }, path) {\n  var _a, _b;\n  const { seriesRectHeight: height, seriesRectWidth: width } = nodeDataDependencies;\n  if (path.clipPath == null) {\n    path.clipPath = new Path2D();\n    path.clipScalingX = 1;\n    path.clipScalingY = 1;\n  }\n  (_a = path.clipPath) == null ? void 0 : _a.clear({ trackChanges: true });\n  (_b = path.clipPath) == null ? void 0 : _b.rect(-25, -25, toReal(width) + 50, toReal(height) + 50);\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/scaling.ts\nfunction isContinuousScaling(scaling) {\n  return scaling.type === \"continuous\" || scaling.type === \"log\";\n}\nfunction isCategoryScaling(scaling) {\n  return scaling.type === \"category\";\n}\nfunction areEqual(a, b) {\n  return a.domain.length === b.domain.length && a.range.length === b.range.length && a.domain.every((val, index) => val === b.domain[index]) && a.range.every((val, index) => val === b.range[index]);\n}\nfunction areScalingEqual(a, b) {\n  if (a === void 0 || b === void 0) {\n    return a !== void 0 || b !== void 0;\n  }\n  if (isContinuousScaling(a) && isContinuousScaling(b)) {\n    return a.type === b.type && areEqual(a, b);\n  }\n  if (isCategoryScaling(a) && isCategoryScaling(b)) {\n    return areEqual(a, b);\n  }\n  return false;\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineUtil.ts\nfunction scale(val, scaling) {\n  if (!scaling)\n    return NaN;\n  if (val instanceof Date) {\n    val = val.getTime();\n  }\n  if (scaling.type === \"continuous\" && typeof val === \"number\") {\n    const domainRatio = (val - scaling.domain[0]) / (scaling.domain[1] - scaling.domain[0]);\n    return domainRatio * (scaling.range[1] - scaling.range[0]) + scaling.range[0];\n  }\n  if (scaling.type === \"log\" && typeof val === \"number\") {\n    return scaling.convert(val);\n  }\n  const matchingIndex = scaling.domain.findIndex((d) => d === val);\n  if (matchingIndex >= 0) {\n    return scaling.range[matchingIndex];\n  }\n  return NaN;\n}\nfunction scalesChanged(newData, oldData) {\n  return !areScalingEqual(newData.scales.x, oldData.scales.x) || !areScalingEqual(newData.scales.y, oldData.scales.y);\n}\nfunction closeMatch(a, b) {\n  const an = Number(a);\n  const bn = Number(b);\n  if (!isNaN(an) && !isNaN(bn)) {\n    return Math.abs(bn - an) < 0.25;\n  }\n  return a === b;\n}\nfunction calculateMoveTo(from = false, to = false) {\n  if (from === to) {\n    return !!from;\n  }\n  return from ? \"in\" : \"out\";\n}\nfunction pairContinuousData(newData, oldData, opts = {}) {\n  var _a, _b, _c, _d;\n  const { backfillSplitMode = \"intersect\" } = opts;\n  const toNewScale = (oldDatum) => {\n    var _a2, _b2;\n    return {\n      x: scale((_a2 = oldDatum.xValue) != null ? _a2 : NaN, newData.scales.x),\n      y: scale((_b2 = oldDatum.yValue) != null ? _b2 : NaN, newData.scales.y)\n    };\n  };\n  const toOldScale = (newDatum) => {\n    var _a2, _b2;\n    return {\n      x: scale((_a2 = newDatum.xValue) != null ? _a2 : NaN, oldData.scales.x),\n      y: scale((_b2 = newDatum.yValue) != null ? _b2 : NaN, oldData.scales.y)\n    };\n  };\n  const result = [];\n  const resultMap = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  const pairUp = (from, to, xValue, change = \"move\") => {\n    if (from && (isNaN(from.point.x) || isNaN(from.point.y))) {\n      from = to;\n    }\n    const resultPoint = {\n      from: from == null ? void 0 : from.point,\n      to: to == null ? void 0 : to.point,\n      moveTo: calculateMoveTo(from == null ? void 0 : from.point.moveTo, to == null ? void 0 : to.point.moveTo),\n      change\n    };\n    if (change === \"move\") {\n      resultMap.moved[xValue] = resultPoint;\n      oldIdx++;\n      newIdx++;\n    } else if (change === \"in\") {\n      resultMap.added[xValue] = resultPoint;\n      newIdx++;\n    } else if (change === \"out\") {\n      resultMap.removed[xValue] = resultPoint;\n      oldIdx++;\n    }\n    result.push(resultPoint);\n  };\n  const { min: minFromNode, max: maxFromNode } = minMax(oldData.nodeData);\n  const { min: minToNode, max: maxToNode } = minMax(newData.nodeData);\n  let oldIdx = 0;\n  let newIdx = 0;\n  while (oldIdx < oldData.nodeData.length || newIdx < newData.nodeData.length) {\n    const from = oldData.nodeData[oldIdx];\n    const to = newData.nodeData[newIdx];\n    const fromShifted = from ? toNewScale(from) : void 0;\n    const toUnshifted = to ? toOldScale(to) : void 0;\n    const NA = void 0;\n    if (fromShifted && closeMatch(fromShifted.x, to == null ? void 0 : to.point.x)) {\n      pairUp(from, to, to.xValue, \"move\");\n    } else if (fromShifted && fromShifted.x < ((_a = minToNode == null ? void 0 : minToNode.point.x) != null ? _a : -Infinity)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (fromShifted && fromShifted.x > ((_b = maxToNode == null ? void 0 : maxToNode.point.x) != null ? _b : Infinity)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (toUnshifted && toUnshifted.x < ((_c = minFromNode == null ? void 0 : minFromNode.point.x) != null ? _c : -Infinity)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (toUnshifted && toUnshifted.x > ((_d = maxFromNode == null ? void 0 : maxFromNode.point.x) != null ? _d : Infinity)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (fromShifted && fromShifted.x < (to == null ? void 0 : to.point.x)) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (toUnshifted && toUnshifted.x < (from == null ? void 0 : from.point.x)) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else if (from) {\n      pairUp(from, NA, from.xValue, \"out\");\n    } else if (to) {\n      pairUp(NA, to, to.xValue, \"in\");\n    } else {\n      throw new Error(\"Unable to process points\");\n    }\n  }\n  backfillPathPointData(result, backfillSplitMode);\n  return { result, resultMap };\n}\nfunction pairCategoryData(newData, oldData, diff2, opts = {}) {\n  var _a, _b, _c;\n  const { backfillSplitMode = \"intersect\", multiDatum = false } = opts;\n  const result = [];\n  const resultMapSingle = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  const resultMapMulti = {\n    added: {},\n    moved: {},\n    removed: {}\n  };\n  let previousResultPoint = void 0;\n  let previousXValue = void 0;\n  const addToResultMap = (xValue, result2) => {\n    var _a2, _b2;\n    const type = result2.change === \"move\" ? \"moved\" : result2.change === \"in\" ? \"added\" : \"removed\";\n    if (multiDatum) {\n      (_b2 = (_a2 = resultMapMulti[type])[xValue]) != null ? _b2 : _a2[xValue] = [];\n      resultMapMulti[type][xValue].push(result2);\n    } else {\n      resultMapSingle[type][xValue] = result2;\n    }\n    previousResultPoint = result2;\n    previousXValue = xValue;\n  };\n  let oldIndex = 0;\n  let newIndex = 0;\n  let isXUnordered = false;\n  while (oldIndex < oldData.nodeData.length || newIndex < newData.nodeData.length) {\n    const before = oldData.nodeData[oldIndex];\n    const after = newData.nodeData[newIndex];\n    let resultPoint;\n    if ((before == null ? void 0 : before.xValue) === (after == null ? void 0 : after.xValue)) {\n      resultPoint = {\n        change: \"move\",\n        moveTo: calculateMoveTo((_a = before.point.moveTo) != null ? _a : false, after.point.moveTo),\n        from: before.point,\n        to: after.point\n      };\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n      newIndex++;\n    } else if (diff2 !== void 0 && diff2.removed.indexOf(before == null ? void 0 : before.xValue) >= 0) {\n      resultPoint = {\n        change: \"out\",\n        moveTo: (_b = before.point.moveTo) != null ? _b : false,\n        from: before.point\n      };\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n    } else if (diff2 !== void 0 && diff2.added.indexOf(after == null ? void 0 : after.xValue) >= 0) {\n      resultPoint = {\n        change: \"in\",\n        moveTo: (_c = after.point.moveTo) != null ? _c : false,\n        to: after.point\n      };\n      addToResultMap(after.xValue, resultPoint);\n      newIndex++;\n    } else if (multiDatum && previousResultPoint && previousXValue === (before == null ? void 0 : before.xValue)) {\n      resultPoint = __spreadValues({}, previousResultPoint);\n      addToResultMap(before.xValue, resultPoint);\n      oldIndex++;\n    } else if (multiDatum && previousResultPoint && previousXValue === (after == null ? void 0 : after.xValue)) {\n      resultPoint = __spreadValues({}, previousResultPoint);\n      addToResultMap(after.xValue, resultPoint);\n      newIndex++;\n    } else {\n      isXUnordered = true;\n      break;\n    }\n    result.push(resultPoint);\n  }\n  let previousX = -Infinity;\n  isXUnordered || (isXUnordered = result.some((pathPoint) => {\n    const { change: marker, to: { x = -Infinity } = {} } = pathPoint;\n    if (marker === \"out\")\n      return;\n    const result2 = x < previousX;\n    previousX = x;\n    return result2;\n  }));\n  if (isXUnordered) {\n    return { result: void 0, resultMap: void 0 };\n  }\n  backfillPathPointData(result, backfillSplitMode);\n  if (multiDatum) {\n    return { result, resultMap: resultMapMulti };\n  }\n  return { result, resultMap: resultMapSingle };\n}\nfunction determinePathStatus(newData, oldData) {\n  let status = \"updated\";\n  const visible = (data) => {\n    return data.visible;\n  };\n  if (!visible(oldData) && visible(newData)) {\n    status = \"added\";\n  } else if (visible(oldData) && !visible(newData)) {\n    status = \"removed\";\n  }\n  return status;\n}\nfunction prepareLinePathPropertyAnimation(status, visibleToggleMode) {\n  const phase = visibleToggleMode === \"none\" ? \"updated\" : status;\n  const result = {\n    fromFn: (_path) => {\n      let mixin;\n      if (status === \"removed\") {\n        mixin = { finish: { visible: false } };\n      } else if (status === \"added\") {\n        mixin = { start: { visible: true } };\n      } else {\n        mixin = {};\n      }\n      return __spreadValues(__spreadValues({}, FROM_TO_MIXINS[phase]), mixin);\n    },\n    toFn: (_path) => {\n      return __spreadValues({}, FROM_TO_MIXINS[phase]);\n    }\n  };\n  if (visibleToggleMode === \"fade\") {\n    return {\n      fromFn: (path) => {\n        const opacity = status === \"added\" ? 0 : path.opacity;\n        return __spreadValues({ opacity }, result.fromFn(path));\n      },\n      toFn: (path) => {\n        const opacity = status === \"removed\" ? 0 : 1;\n        return __spreadValues({ opacity }, result.toFn(path));\n      }\n    };\n  }\n  return result;\n}\nfunction prepareLinePathAnimationFns(newData, oldData, pairData, visibleToggleMode, render) {\n  const status = determinePathStatus(newData, oldData);\n  const removePhaseFn = (ratio, path) => {\n    render(pairData, { move: 0, out: ratio }, path);\n  };\n  const updatePhaseFn = (ratio, path) => {\n    render(pairData, { move: ratio }, path);\n  };\n  const addPhaseFn = (ratio, path) => {\n    render(pairData, { move: 1, in: ratio }, path);\n  };\n  const pathProperties = prepareLinePathPropertyAnimation(status, visibleToggleMode);\n  return { status, path: { addPhaseFn, updatePhaseFn, removePhaseFn }, pathProperties };\n}\nfunction prepareLinePathAnimation(newData, oldData, diff2) {\n  var _a, _b;\n  const isCategoryBased = ((_a = newData.scales.x) == null ? void 0 : _a.type) === \"category\";\n  const { result: pairData, resultMap: pairMap } = isCategoryBased ? pairCategoryData(newData, oldData, diff2) : pairContinuousData(newData, oldData);\n  let status = \"updated\";\n  if (oldData.visible && !newData.visible) {\n    status = \"removed\";\n  } else if (!oldData.visible && newData.visible) {\n    status = \"added\";\n  }\n  if (pairData === void 0 || pairMap === void 0) {\n    return;\n  }\n  const hasMotion = ((_b = diff2 == null ? void 0 : diff2.changed) != null ? _b : true) || scalesChanged(newData, oldData);\n  const pathFns = prepareLinePathAnimationFns(newData, oldData, pairData, \"fade\", renderPartialPath);\n  const marker = prepareMarkerAnimation(pairMap, status);\n  return __spreadProps(__spreadValues({}, pathFns), { marker, hasMotion });\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaUtil.ts\nvar AreaSeriesTag = /* @__PURE__ */ ((AreaSeriesTag2) => {\n  AreaSeriesTag2[AreaSeriesTag2[\"Fill\"] = 0] = \"Fill\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Stroke\"] = 1] = \"Stroke\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Marker\"] = 2] = \"Marker\";\n  AreaSeriesTag2[AreaSeriesTag2[\"Label\"] = 3] = \"Label\";\n  return AreaSeriesTag2;\n})(AreaSeriesTag || {});\nfunction splitFillPoints(context) {\n  const { points } = context.fillData;\n  return { top: points.slice(0, points.length / 2), bottom: points.slice(points.length / 2).reverse() };\n}\nfunction prepPoints(key, ctx, points) {\n  return {\n    scales: ctx.scales,\n    nodeData: points[key],\n    visible: ctx.visible\n  };\n}\nfunction pairFillCategoryData(newData, oldData, diff2) {\n  const oldPoints = splitFillPoints(oldData);\n  const newPoints = splitFillPoints(newData);\n  const pairOpts = { multiDatum: true };\n  return {\n    top: pairCategoryData(\n      prepPoints(\"top\", newData, newPoints),\n      prepPoints(\"top\", oldData, oldPoints),\n      diff2,\n      pairOpts\n    ),\n    bottom: pairCategoryData(\n      prepPoints(\"bottom\", newData, newPoints),\n      prepPoints(\"bottom\", oldData, oldPoints),\n      diff2,\n      pairOpts\n    )\n  };\n}\nfunction pairFillContinuousData(newData, oldData) {\n  const oldPoints = splitFillPoints(oldData);\n  const newPoints = splitFillPoints(newData);\n  return {\n    top: pairContinuousData(prepPoints(\"top\", newData, newPoints), prepPoints(\"top\", oldData, oldPoints)),\n    bottom: pairContinuousData(prepPoints(\"bottom\", newData, newPoints), prepPoints(\"bottom\", oldData, oldPoints))\n  };\n}\nfunction prepareAreaPathAnimation(newData, oldData, diff2) {\n  var _a;\n  const isCategoryBased = ((_a = newData.scales.x) == null ? void 0 : _a.type) === \"category\";\n  let status = \"updated\";\n  if (oldData.visible && !newData.visible) {\n    status = \"removed\";\n  } else if (!oldData.visible && newData.visible) {\n    status = \"added\";\n  }\n  const prepareMarkerPairs = () => {\n    if (isCategoryBased) {\n      return pairCategoryData(newData, oldData, diff2, { backfillSplitMode: \"static\", multiDatum: true });\n    }\n    return pairContinuousData(newData, oldData, { backfillSplitMode: \"static\" });\n  };\n  const prepareFillPairs = () => {\n    if (isCategoryBased) {\n      return pairFillCategoryData(newData, oldData, diff2);\n    }\n    return pairFillContinuousData(newData, oldData);\n  };\n  const { resultMap: markerPairMap } = prepareMarkerPairs();\n  const { top, bottom } = prepareFillPairs();\n  if (markerPairMap === void 0 || top.result === void 0 || bottom.result === void 0) {\n    return;\n  }\n  const pairData = [...top.result, ...bottom.result.reverse()];\n  const fill = prepareLinePathAnimationFns(newData, oldData, pairData, \"none\", renderPartialPath);\n  const marker = prepareMarkerAnimation(markerPairMap, status);\n  return { fill, marker };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeries.ts\nvar _AreaSeries = class _AreaSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pathsPerSeries: 2,\n      pathsZIndexSubOrderOffset: [0, 1e3],\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      pickModes: [1 /* NEAREST_BY_MAIN_AXIS_FIRST */, 0 /* EXACT_SHAPE_MATCH */],\n      animationResetFns: {\n        path: buildResetPathFn({ getOpacity: () => this.getOpacity() }),\n        label: resetLabelFn,\n        marker: (node, datum) => __spreadValues(__spreadValues({}, resetMarkerFn(node)), resetMarkerPositionFn(node, datum))\n      }\n    });\n    this.properties = new AreaSeriesProperties();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      if (this.data == null || !this.properties.isValid()) {\n        return;\n      }\n      const { data, visible, seriesGrouping: { groupIndex = this.id, stackCount = 1 } = {} } = this;\n      const { xKey, yKey, connectMissingData, normalizedTo } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const { isContinuousX, isContinuousY } = this.isContinuous();\n      const ids = [\n        `area-stack-${groupIndex}-yValues`,\n        `area-stack-${groupIndex}-yValues-trailing`,\n        `area-stack-${groupIndex}-yValues-prev`,\n        `area-stack-${groupIndex}-yValues-trailing-prev`,\n        `area-stack-${groupIndex}-yValues-marker`\n      ];\n      const extraProps = [];\n      if (isDefined(normalizedTo)) {\n        extraProps.push(normaliseGroupTo(this, [ids[0], ids[1], ids[4]], normalizedTo, \"range\"));\n        extraProps.push(normaliseGroupTo(this, [ids[2], ids[3]], normalizedTo, \"range\"));\n      }\n      if (!isContinuousX && animationEnabled && this.processedData) {\n        extraProps.push(diff(this.processedData));\n      }\n      if (animationEnabled) {\n        extraProps.push(animationValidation(this));\n      }\n      const common = { invalidValue: null };\n      if (connectMissingData && stackCount > 1) {\n        common.invalidValue = 0;\n      }\n      if (!visible) {\n        common.forceValue = 0;\n      }\n      yield this.requestDataModel(dataController, data, {\n        props: [\n          keyProperty(this, xKey, isContinuousX, { id: \"xValue\" }),\n          valueProperty(this, yKey, isContinuousY, __spreadValues({ id: `yValueRaw` }, common)),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window\", \"current\", __spreadProps(__spreadValues({\n            id: `yValueEnd`\n          }, common), {\n            groupId: ids[0]\n          })),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window-trailing\", \"current\", __spreadProps(__spreadValues({\n            id: `yValueStart`\n          }, common), {\n            groupId: ids[1]\n          })),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window\", \"last\", __spreadProps(__spreadValues({\n            id: `yValuePreviousEnd`\n          }, common), {\n            groupId: ids[2]\n          })),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"window-trailing\", \"last\", __spreadProps(__spreadValues({\n            id: `yValuePreviousStart`\n          }, common), {\n            groupId: ids[3]\n          })),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"normal\", \"current\", __spreadProps(__spreadValues({\n            id: `yValueCumulative`\n          }, common), {\n            groupId: ids[4]\n          })),\n          ...extraProps\n        ],\n        groupByKeys: true,\n        groupByData: false\n      });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const { processedData, dataModel, axes } = this;\n    if (!processedData || !dataModel || processedData.data.length === 0)\n      return [];\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const keyDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    const keys = dataModel.getDomain(this, `xValue`, \"key\", processedData);\n    const yExtent = dataModel.getDomain(this, `yValueEnd`, \"value\", processedData);\n    if (direction === \"x\" /* X */) {\n      if ((keyDef == null ? void 0 : keyDef.def.type) === \"key\" && keyDef.def.valueType === \"category\") {\n        return keys;\n      }\n      return fixNumericExtent(extent(keys), xAxis);\n    } else if (yAxis instanceof LogAxis || yAxis instanceof TimeAxis) {\n      return fixNumericExtent(yExtent, yAxis);\n    } else {\n      const fixedYExtent = [yExtent[0] > 0 ? 0 : yExtent[0], yExtent[1] < 0 ? 0 : yExtent[1]];\n      return fixNumericExtent(fixedYExtent, yAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a;\n      const { axes, data, processedData: { data: groupedData } = {}, dataModel } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!xAxis || !yAxis || !data || !dataModel || !this.properties.isValid()) {\n        return [];\n      }\n      const {\n        yKey,\n        xKey,\n        marker,\n        label,\n        fill: seriesFill,\n        stroke: seriesStroke,\n        connectMissingData\n      } = this.properties;\n      const { scale: xScale } = xAxis;\n      const { scale: yScale } = yAxis;\n      const continuousY = ContinuousScale.is(yScale);\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const defs = dataModel.resolveProcessedDataDefsByIds(this, [\n        `yValueStart`,\n        `yValueEnd`,\n        `yValueRaw`,\n        `yValuePreviousStart`,\n        `yValuePreviousEnd`,\n        `yValueCumulative`\n      ]);\n      const createMovePoint = (plainPoint) => {\n        const _a2 = plainPoint, { point } = _a2, stroke = __objRest(_a2, [\"point\"]);\n        return __spreadProps(__spreadValues({}, stroke), { point: __spreadProps(__spreadValues({}, point), { moveTo: true }) });\n      };\n      const createPathCoordinates = (xValue, lastYEnd, yEnd) => {\n        const x = xScale.convert(xValue) + xOffset;\n        const prevYCoordinate = yScale.convert(lastYEnd);\n        const currYCoordinate = yScale.convert(yEnd);\n        return [\n          { point: { x, y: currYCoordinate }, yValue: yEnd, xValue },\n          { point: { x, y: prevYCoordinate }, yValue: lastYEnd, xValue }\n        ];\n      };\n      const createMarkerCoordinate = (xDatum, yEnd, rawYDatum) => {\n        let currY;\n        if (isDefined(this.properties.normalizedTo) ? continuousY && isContinuous(rawYDatum) : !isNaN(rawYDatum)) {\n          currY = yEnd;\n        }\n        return {\n          x: xScale.convert(xDatum) + xOffset,\n          y: yScale.convert(currY),\n          size: marker.size\n        };\n      };\n      const itemId = yKey;\n      const labelData = [];\n      const markerData = [];\n      const context = {\n        itemId,\n        fillData: { itemId, points: [] },\n        strokeData: { itemId, points: [] },\n        labelData,\n        nodeData: markerData,\n        scales: __superGet(_AreaSeries.prototype, this, \"calculateScaling\").call(this),\n        visible: this.visible\n      };\n      const fillPoints = context.fillData.points;\n      const fillPhantomPoints = [];\n      const strokePoints = context.strokeData.points;\n      let datumIdx = -1;\n      let lastXDatum;\n      let lastYDatum = -Infinity;\n      groupedData == null ? void 0 : groupedData.forEach((datumGroup) => {\n        const {\n          keys,\n          keys: [xDatum],\n          datum: datumArray,\n          values: valuesArray\n        } = datumGroup;\n        valuesArray.forEach((values, valueIdx) => {\n          var _a2, _b, _c;\n          datumIdx++;\n          const seriesDatum = datumArray[valueIdx];\n          const dataValues = dataModel.resolveProcessedDataDefsValues(defs, { keys, values });\n          const { yValueRaw: yDatum, yValueCumulative } = dataValues;\n          let { yValueStart, yValueEnd, yValuePreviousStart, yValuePreviousEnd } = dataValues;\n          const validPoint = yDatum != null;\n          const point = createMarkerCoordinate(xDatum, +yValueCumulative, yDatum);\n          if (validPoint && marker) {\n            markerData.push({\n              index: datumIdx,\n              series: this,\n              itemId,\n              datum: seriesDatum,\n              midPoint: { x: point.x, y: point.y },\n              cumulativeValue: yValueEnd,\n              yValue: yDatum,\n              xValue: xDatum,\n              yKey,\n              xKey,\n              point,\n              fill: (_a2 = marker.fill) != null ? _a2 : seriesFill,\n              stroke: (_b = marker.stroke) != null ? _b : seriesStroke,\n              strokeWidth: (_c = marker.strokeWidth) != null ? _c : this.getStrokeWidth(this.properties.strokeWidth)\n            });\n          }\n          if (validPoint && label) {\n            const labelText = this.getLabelText(\n              label,\n              {\n                value: yDatum,\n                datum: seriesDatum,\n                xKey,\n                yKey,\n                xName: this.properties.xName,\n                yName: this.properties.yName\n              },\n              (value) => isNumber2(value) ? value.toFixed(2) : String(value)\n            );\n            labelData.push({\n              index: datumIdx,\n              series: this,\n              itemId: yKey,\n              datum: seriesDatum,\n              x: point.x,\n              y: point.y,\n              label: labelText ? {\n                text: labelText,\n                fontStyle: label.fontStyle,\n                fontWeight: label.fontWeight,\n                fontSize: label.fontSize,\n                fontFamily: label.fontFamily,\n                textAlign: \"center\",\n                textBaseline: \"bottom\",\n                fill: label.color\n              } : void 0\n            });\n          }\n          const xValid = lastXDatum != null && xDatum != null;\n          const yValid = lastYDatum != null && validPoint;\n          if (!yValid) {\n            yValueStart = yValueStart != null ? yValueStart : 0;\n            yValueEnd = yValueStart != null ? yValueStart : 0;\n            yValuePreviousStart = yValuePreviousStart != null ? yValuePreviousStart : 0;\n            yValuePreviousEnd = yValuePreviousStart != null ? yValuePreviousStart : 0;\n          }\n          const [prevTop, prevBottom] = createPathCoordinates(lastXDatum, yValuePreviousStart, yValuePreviousEnd);\n          const [top, bottom] = createPathCoordinates(xDatum, yValueStart, yValueEnd);\n          if (xValid && (!connectMissingData || yValid)) {\n            fillPoints.push(prevTop);\n            fillPhantomPoints.push(prevBottom);\n            fillPoints.push(top);\n            fillPhantomPoints.push(bottom);\n          }\n          if (yValid && datumIdx > 0) {\n            strokePoints.push(createMovePoint(prevTop));\n            strokePoints.push(top);\n          }\n          lastXDatum = xDatum;\n          lastYDatum = yDatum;\n        });\n      });\n      if (strokePoints.length > 0) {\n        strokePoints[0] = createMovePoint(strokePoints[0]);\n      }\n      fillPhantomPoints.reverse();\n      fillPoints.push(...fillPhantomPoints);\n      return [context];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  markerFactory() {\n    const { shape } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const { opacity, visible, animationEnabled } = opts;\n      const [fill, stroke] = opts.paths;\n      const strokeWidth = this.getStrokeWidth(this.properties.strokeWidth);\n      stroke.setProperties({\n        tag: 1 /* Stroke */,\n        fill: void 0,\n        lineJoin: stroke.lineCap = \"round\",\n        pointerEvents: 1 /* None */,\n        stroke: this.properties.stroke,\n        strokeWidth,\n        strokeOpacity: this.properties.strokeOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset,\n        opacity,\n        visible\n      });\n      fill.setProperties({\n        tag: 0 /* Fill */,\n        stroke: void 0,\n        lineJoin: \"round\",\n        pointerEvents: 1 /* None */,\n        fill: this.properties.fill,\n        fillOpacity: this.properties.fillOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset,\n        strokeOpacity: this.properties.strokeOpacity,\n        fillShadow: this.properties.shadow,\n        opacity,\n        visible: visible || animationEnabled,\n        strokeWidth\n      });\n      updateClipPath(this, stroke);\n      updateClipPath(this, fill);\n    });\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      this.updateAreaPaths([opts.paths], [opts.contextData]);\n    });\n  }\n  updateAreaPaths(paths, contextData) {\n    this.updateFillPath(paths, contextData);\n    this.updateStrokePath(paths, contextData);\n  }\n  updateFillPath(paths, contextData) {\n    contextData.forEach(({ fillData }, contextDataIndex) => {\n      const [fill] = paths[contextDataIndex];\n      const { path: fillPath } = fill;\n      fillPath.clear({ trackChanges: true });\n      for (const { point } of fillData.points) {\n        if (point.moveTo) {\n          fillPath.moveTo(point.x, point.y);\n        } else {\n          fillPath.lineTo(point.x, point.y);\n        }\n      }\n      fillPath.closePath();\n      fill.checkPathDirty();\n    });\n  }\n  updateStrokePath(paths, contextData) {\n    contextData.forEach(({ strokeData }, contextDataIndex) => {\n      const [, stroke] = paths[contextDataIndex];\n      const { path: strokePath } = stroke;\n      strokePath.clear({ trackChanges: true });\n      for (const { point } of strokeData.points) {\n        if (point.moveTo) {\n          strokePath.moveTo(point.x, point.y);\n        } else {\n          strokePath.lineTo(point.x, point.y);\n        }\n      }\n      stroke.checkPathDirty();\n    });\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const { nodeData, markerSelection } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(this.properties.marker.enabled ? nodeData : []);\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const { markerSelection, isHighlight: highlighted } = opts;\n      const { xKey, yKey, marker, fill, stroke, strokeWidth, fillOpacity, strokeOpacity, highlightStyle } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle(), {\n        fill,\n        stroke,\n        strokeWidth,\n        fillOpacity,\n        strokeOpacity\n      });\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, { datum, highlighted, xKey, yKey }, baseStyle);\n      });\n      if (!highlighted) {\n        this.properties.marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const { labelData, labelSelection } = opts;\n      return labelSelection.update(labelData, (text) => {\n        text.tag = 3 /* Label */;\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const { labelSelection } = opts;\n      const { enabled: labelEnabled, fontStyle, fontWeight, fontSize, fontFamily, color } = this.properties.label;\n      labelSelection.each((text, datum) => {\n        const { x, y, label } = datum;\n        if (label && labelEnabled && this.visible) {\n          text.fontStyle = fontStyle;\n          text.fontWeight = fontWeight;\n          text.fontSize = fontSize;\n          text.fontFamily = fontFamily;\n          text.textAlign = label.textAlign;\n          text.textBaseline = label.textBaseline;\n          text.text = label.text;\n          text.x = x;\n          text.y = y - 10;\n          text.fill = color;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const { id: seriesId, axes, dataModel } = this;\n    const { xKey, xName, yName, tooltip, marker } = this.properties;\n    const { yKey, xValue, yValue, datum } = nodeDatum;\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !(xAxis && yAxis && isNumber2(yValue)) || !dataModel) {\n      return \"\";\n    }\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml(yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    const baseStyle = mergeDefaults({ fill: this.properties.fill }, marker.getStyle(), {\n      stroke: this.properties.stroke,\n      strokeWidth: this.properties.strokeWidth\n    });\n    const { fill: color } = this.getMarkerStyle(\n      marker,\n      { datum: nodeDatum, xKey, yKey, highlighted: false },\n      baseStyle\n    );\n    return tooltip.toTooltipHtml(\n      { title, content, backgroundColor: color },\n      {\n        datum,\n        xKey,\n        xName,\n        yKey,\n        yName,\n        color,\n        title,\n        seriesId\n      }\n    );\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || legendType !== \"category\") {\n      return [];\n    }\n    const { yKey, yName, fill, stroke, fillOpacity, strokeOpacity, strokeWidth, lineDash, marker, visible } = this.properties;\n    return [\n      {\n        legendType,\n        id: this.id,\n        itemId: yKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: {\n          text: yName != null ? yName : yKey\n        },\n        marker: {\n          shape: marker.shape,\n          fill: (_b = marker.fill) != null ? _b : fill,\n          stroke: (_c = marker.stroke) != null ? _c : stroke,\n          fillOpacity: (_d = marker.fillOpacity) != null ? _d : fillOpacity,\n          strokeOpacity: (_e = marker.strokeOpacity) != null ? _e : strokeOpacity,\n          strokeWidth: (_f = marker.strokeWidth) != null ? _f : 0,\n          enabled: marker.enabled || strokeWidth <= 0\n        },\n        line: {\n          stroke,\n          strokeOpacity,\n          strokeWidth,\n          lineDash\n        }\n      }\n    ];\n  }\n  animateEmptyUpdateReady(animationData) {\n    const { markerSelections, labelSelections, contextData, paths } = animationData;\n    const { animationManager } = this.ctx;\n    this.updateAreaPaths(paths, contextData);\n    pathSwipeInAnimation(this, animationManager, paths.flat());\n    resetMotion(markerSelections, resetMarkerPositionFn);\n    markerSwipeScaleInAnimation(this, animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n  }\n  animateReadyResize(animationData) {\n    const { contextData, paths } = animationData;\n    this.updateAreaPaths(paths, contextData);\n    super.animateReadyResize(animationData);\n  }\n  animateWaitingUpdateReady(animationData) {\n    var _a, _b;\n    const { animationManager } = this.ctx;\n    const { markerSelections, labelSelections, contextData, paths, previousContextData } = animationData;\n    super.resetAllAnimation(animationData);\n    if (contextData.length === 0 || !previousContextData || previousContextData.length === 0) {\n      animationManager.skipCurrentBatch();\n      this.updateAreaPaths(paths, contextData);\n      return;\n    }\n    const [[fill, stroke]] = paths;\n    const [newData] = contextData;\n    const [oldData] = previousContextData;\n    const fns = prepareAreaPathAnimation(newData, oldData, (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff);\n    if (fns === void 0) {\n      animationManager.skipCurrentBatch();\n      this.updateAreaPaths(paths, contextData);\n      return;\n    }\n    fromToMotion(this.id, \"marker_update\", animationManager, markerSelections, fns.marker);\n    fromToMotion(this.id, \"fill_path_properties\", animationManager, [fill], fns.fill.pathProperties);\n    pathMotion(this.id, \"fill_path_update\", animationManager, [fill], fns.fill.path);\n    this.updateStrokePath(paths, contextData);\n    pathFadeInAnimation(this, \"stroke\", animationManager, [stroke]);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_AreaSeries.className = \"AreaSeries\";\n_AreaSeries.type = \"area\";\nvar AreaSeries = _AreaSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/areaSeriesModule.ts\nvar AreaSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"area\",\n  instanceConstructor: AreaSeries,\n  stackable: true,\n  seriesDefaults: DEFAULT_CARTESIAN_CHART_OVERRIDES,\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    nodeClickRange: \"nearest\",\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    fillOpacity: 0.8,\n    strokeOpacity: 1,\n    strokeWidth: 0,\n    lineDash: [0],\n    lineDashOffset: 0,\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      enabled: false,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      strokeWidth: 0\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      formatter: void 0\n    }\n  },\n  paletteFactory: (params) => {\n    const { marker } = markerPaletteFactory(params);\n    return {\n      fill: marker.fill,\n      stroke: marker.stroke,\n      marker\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/abstractBarSeries.ts\nvar AbstractBarSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.direction = \"vertical\";\n  }\n};\n__decorateClass([\n  Validate(DIRECTION)\n], AbstractBarSeriesProperties.prototype, \"direction\", 2);\nvar AbstractBarSeries = class extends CartesianSeries {\n  getBandScalePadding() {\n    return { inner: 0.2, outer: 0.1 };\n  }\n  shouldFlipXY() {\n    return !this.isVertical();\n  }\n  isVertical() {\n    return this.properties.direction === \"vertical\";\n  }\n  getBarDirection() {\n    return this.shouldFlipXY() ? \"x\" /* X */ : \"y\" /* Y */;\n  }\n  getCategoryDirection() {\n    return this.shouldFlipXY() ? \"y\" /* Y */ : \"x\" /* X */;\n  }\n  getValueAxis() {\n    const direction = this.getBarDirection();\n    return this.axes[direction];\n  }\n  getCategoryAxis() {\n    const direction = this.getCategoryDirection();\n    return this.axes[direction];\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeriesProperties.ts\nvar BarSeriesLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.placement = \"inside\";\n  }\n};\n__decorateClass([\n  Validate(PLACEMENT)\n], BarSeriesLabel.prototype, \"placement\", 2);\nvar BarSeriesProperties = class extends AbstractBarSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"#c16068\";\n    this.fillOpacity = 1;\n    this.stroke = \"#874349\";\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.cornerRadius = 0;\n    this.shadow = new DropShadow();\n    this.label = new BarSeriesLabel();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], BarSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BarSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING)\n], BarSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BarSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BarSeriesProperties.prototype, \"stackGroup\", 2);\n__decorateClass([\n  Validate(NUMBER, { optional: true })\n], BarSeriesProperties.prototype, \"normalizedTo\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], BarSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO)\n], BarSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], BarSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], BarSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO)\n], BarSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH)\n], BarSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], BarSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], BarSeriesProperties.prototype, \"cornerRadius\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], BarSeriesProperties.prototype, \"formatter\", 2);\n__decorateClass([\n  Validate(OBJECT, { optional: true })\n], BarSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], BarSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], BarSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/barUtil.ts\nfunction updateRect({ rect, config }) {\n  const {\n    crisp = true,\n    fill,\n    stroke,\n    strokeWidth,\n    fillOpacity,\n    strokeOpacity,\n    lineDash,\n    lineDashOffset,\n    fillShadow,\n    cornerRadius = 0,\n    topLeftCornerRadius,\n    topRightCornerRadius,\n    bottomRightCornerRadius,\n    bottomLeftCornerRadius,\n    cornerRadiusBbox,\n    visible = true\n  } = config;\n  rect.crisp = crisp;\n  rect.fill = fill;\n  rect.stroke = stroke;\n  rect.strokeWidth = strokeWidth;\n  rect.fillOpacity = fillOpacity;\n  rect.strokeOpacity = strokeOpacity;\n  rect.lineDash = lineDash;\n  rect.lineDashOffset = lineDashOffset;\n  rect.fillShadow = fillShadow;\n  rect.topLeftCornerRadius = topLeftCornerRadius ? cornerRadius : 0;\n  rect.topRightCornerRadius = topRightCornerRadius ? cornerRadius : 0;\n  rect.bottomRightCornerRadius = bottomRightCornerRadius ? cornerRadius : 0;\n  rect.bottomLeftCornerRadius = bottomLeftCornerRadius ? cornerRadius : 0;\n  rect.cornerRadiusBbox = cornerRadiusBbox;\n  rect.visible = visible;\n}\nfunction getRectConfig(_a) {\n  var _b = _a, {\n    datum,\n    isHighlighted,\n    style,\n    highlightStyle,\n    formatter,\n    seriesId,\n    ctx: { callbackCache }\n  } = _b, opts = __objRest(_b, [\n    \"datum\",\n    \"isHighlighted\",\n    \"style\",\n    \"highlightStyle\",\n    \"formatter\",\n    \"seriesId\",\n    \"ctx\"\n  ]);\n  var _a2, _b2, _c, _d, _e, _f;\n  const { fill, fillOpacity, stroke, strokeWidth } = mergeDefaults(isHighlighted && highlightStyle, style);\n  const {\n    strokeOpacity,\n    fillShadow,\n    lineDash,\n    lineDashOffset,\n    cornerRadius = 0,\n    topLeftCornerRadius = true,\n    topRightCornerRadius = true,\n    bottomRightCornerRadius = true,\n    bottomLeftCornerRadius = true,\n    cornerRadiusBbox\n  } = style;\n  let format2;\n  if (formatter) {\n    format2 = callbackCache.call(formatter, __spreadValues({\n      datum: datum.datum,\n      xKey: datum.xKey,\n      fill,\n      stroke,\n      strokeWidth,\n      cornerRadius,\n      highlighted: isHighlighted,\n      seriesId\n    }, opts));\n  }\n  return {\n    fill: (_a2 = format2 == null ? void 0 : format2.fill) != null ? _a2 : fill,\n    stroke: (_b2 = format2 == null ? void 0 : format2.stroke) != null ? _b2 : stroke,\n    strokeWidth: (_c = format2 == null ? void 0 : format2.strokeWidth) != null ? _c : strokeWidth,\n    fillOpacity: (_d = format2 == null ? void 0 : format2.fillOpacity) != null ? _d : fillOpacity,\n    strokeOpacity: (_e = format2 == null ? void 0 : format2.strokeOpacity) != null ? _e : strokeOpacity,\n    lineDash,\n    lineDashOffset,\n    fillShadow,\n    // @ts-expect-error Remove once corner radius is officially added\n    cornerRadius: (_f = format2 == null ? void 0 : format2.cornerRadius) != null ? _f : cornerRadius,\n    topLeftCornerRadius,\n    topRightCornerRadius,\n    bottomRightCornerRadius,\n    bottomLeftCornerRadius,\n    cornerRadiusBbox\n  };\n}\nfunction checkCrisp(visibleRange = []) {\n  const [visibleMin, visibleMax] = visibleRange;\n  const isZoomed = visibleMin !== 0 || visibleMax !== 1;\n  return !isZoomed;\n}\nfunction collapsedStartingBarPosition(isVertical, axes) {\n  const { startingX, startingY } = getStartingValues(isVertical, axes);\n  const isDatumNegative = (datum) => {\n    var _a;\n    return isNegative((_a = datum[\"yValue\"]) != null ? _a : 0);\n  };\n  const calculate = (datum, prevDatum) => {\n    let x = isVertical ? datum.x : startingX;\n    let y = isVertical ? startingY : datum.y;\n    let width = isVertical ? datum.width : 0;\n    let height = isVertical ? 0 : datum.height;\n    if (prevDatum && (isNaN(x) || isNaN(y))) {\n      ({ x, y } = prevDatum);\n      width = isVertical ? prevDatum.width : 0;\n      height = isVertical ? 0 : prevDatum.height;\n      if (isVertical && !isDatumNegative(prevDatum)) {\n        y += prevDatum.height;\n      } else if (!isVertical && isDatumNegative(prevDatum)) {\n        x += prevDatum.width;\n      }\n    }\n    return { x, y, width, height };\n  };\n  return { isVertical, calculate };\n}\nfunction midpointStartingBarPosition(isVertical) {\n  return {\n    isVertical,\n    calculate: (datum) => {\n      return {\n        x: isVertical ? datum.x : datum.x + datum.width / 2,\n        y: isVertical ? datum.y + datum.height / 2 : datum.y,\n        width: isVertical ? datum.width : 0,\n        height: isVertical ? 0 : datum.height\n      };\n    }\n  };\n}\nfunction prepareBarAnimationFunctions(initPos) {\n  const isRemoved = (datum) => datum == null || isNaN(datum.x) || isNaN(datum.y);\n  const fromFn = (rect, datum, status) => {\n    if (status === \"updated\" && isRemoved(datum)) {\n      status = \"removed\";\n    } else if (status === \"updated\" && isRemoved(rect.previousDatum)) {\n      status = \"added\";\n    }\n    let source = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n    if (status === \"unknown\" || status === \"added\") {\n      source = initPos.calculate(datum, rect.previousDatum);\n    }\n    return __spreadValues(__spreadValues({}, source), FROM_TO_MIXINS[status]);\n  };\n  const toFn = (rect, datum, status) => {\n    if (status === \"removed\" || isRemoved(datum)) {\n      return initPos.calculate(datum, rect.previousDatum);\n    }\n    return { x: datum.x, y: datum.y, width: datum.width, height: datum.height };\n  };\n  return { toFn, fromFn };\n}\nfunction getStartingValues(isVertical, axes) {\n  const axis = axes[isVertical ? \"y\" /* Y */ : \"x\" /* X */];\n  let startingX = Infinity;\n  let startingY = 0;\n  if (!axis) {\n    return { startingX, startingY };\n  }\n  if (isVertical) {\n    startingY = axis.scale.convert(ContinuousScale.is(axis.scale) ? 0 : Math.max(...axis.range));\n  } else {\n    startingX = axis.scale.convert(ContinuousScale.is(axis.scale) ? 0 : Math.min(...axis.range));\n  }\n  return { startingX, startingY };\n}\nfunction resetBarSelectionsFn(_node, { x, y, width, height }) {\n  return { x, y, width, height };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/labelUtil.ts\nfunction updateLabelNode(textNode, label, labelDatum) {\n  if (label.enabled && labelDatum) {\n    const { x, y, text, textAlign, textBaseline } = labelDatum;\n    const { color: fill, fontStyle, fontWeight, fontSize, fontFamily } = label;\n    textNode.setProperties({\n      visible: true,\n      x,\n      y,\n      text,\n      fill,\n      fontStyle,\n      fontWeight,\n      fontSize,\n      fontFamily,\n      textAlign,\n      textBaseline\n    });\n  } else {\n    textNode.visible = false;\n  }\n}\nfunction adjustLabelPlacement({\n  isPositive,\n  isVertical,\n  placement,\n  padding = 0,\n  rect\n}) {\n  let x = rect.x + rect.width / 2;\n  let y = rect.y + rect.height / 2;\n  let textAlign = \"center\";\n  let textBaseline = \"middle\";\n  switch (placement) {\n    case \"start\": {\n      if (isVertical) {\n        y = isPositive ? rect.y + rect.height + padding : rect.y - padding;\n        textBaseline = isPositive ? \"top\" : \"bottom\";\n      } else {\n        x = isPositive ? rect.x - padding : rect.x + rect.width + padding;\n        textAlign = isPositive ? \"start\" : \"end\";\n      }\n      break;\n    }\n    case \"outside\":\n    case \"end\": {\n      if (isVertical) {\n        y = isPositive ? rect.y - padding : rect.y + rect.height + padding;\n        textBaseline = isPositive ? \"bottom\" : \"top\";\n      } else {\n        x = isPositive ? rect.x + rect.width + padding : rect.x - padding;\n        textAlign = isPositive ? \"start\" : \"end\";\n      }\n      break;\n    }\n  }\n  return { x, y, textAlign, textBaseline };\n}\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeries.ts\nvar _BarSeries = class _BarSeries extends AbstractBarSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      pathsPerSeries: 0,\n      hasHighlightedLabels: true,\n      datumSelectionGarbageCollection: false,\n      animationResetFns: {\n        datum: resetBarSelectionsFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new BarSeriesProperties();\n    /**\n     * Used to get the position of bars within each group.\n     */\n    this.groupScale = new BandScale();\n    this.smallestDataInterval = void 0;\n  }\n  resolveKeyDirection(direction) {\n    if (this.getBarDirection() === \"x\" /* X */) {\n      if (direction === \"x\" /* X */) {\n        return \"y\" /* Y */;\n      }\n      return \"x\" /* X */;\n    }\n    return direction;\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d;\n      if (!this.properties.isValid() || !this.data) {\n        return;\n      }\n      const { seriesGrouping: { groupIndex = this.id } = {}, data = [] } = this;\n      const { xKey, yKey, normalizedTo } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const normalizedToAbs = Math.abs(normalizedTo != null ? normalizedTo : NaN);\n      const isContinuousX = ContinuousScale.is((_a = this.getCategoryAxis()) == null ? void 0 : _a.scale);\n      const isContinuousY = ContinuousScale.is((_b = this.getValueAxis()) == null ? void 0 : _b.scale);\n      const stackGroupName = `bar-stack-${groupIndex}-yValues`;\n      const stackGroupTrailingName = `${stackGroupName}-trailing`;\n      const normaliseTo = normalizedToAbs && isFinite(normalizedToAbs) ? normalizedToAbs : void 0;\n      const extraProps = [];\n      if (normaliseTo) {\n        extraProps.push(normaliseGroupTo(this, [stackGroupName, stackGroupTrailingName], normaliseTo, \"range\"));\n      }\n      if (animationEnabled && this.processedData) {\n        extraProps.push(diff(this.processedData));\n      }\n      if (animationEnabled) {\n        extraProps.push(animationValidation(this));\n      }\n      const visibleProps = !this.visible ? { forceValue: 0 } : {};\n      const { processedData } = yield this.requestDataModel(dataController, data, {\n        props: [\n          keyProperty(this, xKey, isContinuousX, { id: \"xValue\" }),\n          valueProperty(this, yKey, isContinuousY, __spreadValues({ id: `yValue-raw`, invalidValue: null }, visibleProps)),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"normal\", \"current\", __spreadValues({\n            id: `yValue-end`,\n            rangeId: `yValue-range`,\n            invalidValue: null,\n            missingValue: 0,\n            groupId: stackGroupName,\n            separateNegative: true\n          }, visibleProps)),\n          ...groupAccumulativeValueProperty(this, yKey, isContinuousY, \"trailing\", \"current\", __spreadValues({\n            id: `yValue-start`,\n            invalidValue: null,\n            missingValue: 0,\n            groupId: stackGroupTrailingName,\n            separateNegative: true\n          }, visibleProps)),\n          ...isContinuousX ? [SMALLEST_KEY_INTERVAL] : [],\n          ...extraProps\n        ],\n        groupByKeys: true,\n        groupByData: false\n      });\n      this.smallestDataInterval = {\n        x: (_d = (_c = processedData.reduced) == null ? void 0 : _c.smallestKeyInterval) != null ? _d : Infinity,\n        y: Infinity\n      };\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    var _a;\n    const { processedData, dataModel } = this;\n    if (!processedData || !dataModel || processedData.data.length === 0)\n      return [];\n    const { reduced: { [SMALLEST_KEY_INTERVAL.property]: smallestX } = {} } = processedData;\n    const categoryAxis = this.getCategoryAxis();\n    const valueAxis = this.getValueAxis();\n    const keyDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    const keys = dataModel.getDomain(this, `xValue`, \"key\", processedData);\n    const yExtent = dataModel.getDomain(this, `yValue-end`, \"value\", processedData);\n    if (direction === this.getCategoryDirection()) {\n      if ((keyDef == null ? void 0 : keyDef.def.type) === \"key\" && (keyDef == null ? void 0 : keyDef.def.valueType) === \"category\") {\n        return keys;\n      }\n      const scalePadding = smallestX != null && isFinite(smallestX) ? smallestX : 0;\n      const keysExtent = (_a = extent(keys)) != null ? _a : [NaN, NaN];\n      const isReversed = categoryAxis == null ? void 0 : categoryAxis.isReversed();\n      if (direction === \"y\" /* Y */) {\n        const d02 = keysExtent[0] + (isReversed ? 0 : -scalePadding);\n        const d12 = keysExtent[1] + (isReversed ? scalePadding : 0);\n        return fixNumericExtent([d02, d12], categoryAxis);\n      }\n      const d0 = keysExtent[0] + (isReversed ? -scalePadding : 0);\n      const d1 = keysExtent[1] + (isReversed ? 0 : scalePadding);\n      return fixNumericExtent([d0, d1], categoryAxis);\n    } else if (this.getValueAxis() instanceof LogAxis) {\n      return fixNumericExtent(yExtent, valueAxis);\n    } else {\n      const fixedYExtent = [yExtent[0] > 0 ? 0 : yExtent[0], yExtent[1] < 0 ? 0 : yExtent[1]];\n      return fixNumericExtent(fixedYExtent, valueAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      const { dataModel } = this;\n      const xAxis = this.getCategoryAxis();\n      const yAxis = this.getValueAxis();\n      if (!(dataModel && xAxis && yAxis && this.properties.isValid())) {\n        return [];\n      }\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const {\n        groupScale,\n        processedData,\n        smallestDataInterval,\n        ctx: { seriesStateManager }\n      } = this;\n      const { xKey, yKey, xName, yName, fill, stroke, strokeWidth, cornerRadius, legendItemName, label } = this.properties;\n      const yReversed = yAxis.isReversed();\n      const xBandWidth = ContinuousScale.is(xScale) ? xScale.calcBandwidth(smallestDataInterval == null ? void 0 : smallestDataInterval.x) : xScale.bandwidth;\n      const domain = [];\n      const { index: groupIndex, visibleGroupCount } = seriesStateManager.getVisiblePeerGroupIndex(this);\n      for (let groupIdx = 0; groupIdx < visibleGroupCount; groupIdx++) {\n        domain.push(String(groupIdx));\n      }\n      groupScale.domain = domain;\n      groupScale.range = [0, xBandWidth != null ? xBandWidth : 0];\n      if (xAxis instanceof CategoryAxis) {\n        groupScale.paddingInner = xAxis.groupPaddingInner;\n      } else if (xAxis instanceof GroupedCategoryAxis) {\n        groupScale.padding = 0.1;\n      } else {\n        groupScale.padding = 0;\n      }\n      groupScale.round = groupScale.padding !== 0;\n      const barWidth = groupScale.bandwidth >= 1 ? (\n        // Pixel-rounded value for low-volume bar charts.\n        groupScale.bandwidth\n      ) : (\n        // Handle high-volume bar charts gracefully.\n        groupScale.rawBandwidth\n      );\n      const xIndex = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yRawIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-raw`).index;\n      const yStartIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-start`).index;\n      const yEndIndex = dataModel.resolveProcessedDataIndexById(this, `yValue-end`).index;\n      const yRangeIndex = dataModel.resolveProcessedDataDefById(this, `yValue-range`).index;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const contexts = [];\n      processedData == null ? void 0 : processedData.data.forEach(({ keys, datum: seriesDatum, values, aggValues }) => {\n        values.forEach((value, contextIndex) => {\n          var _a, _b;\n          (_a = contexts[contextIndex]) != null ? _a : contexts[contextIndex] = {\n            itemId: yKey,\n            nodeData: [],\n            labelData: [],\n            scales: __superGet(_BarSeries.prototype, this, \"calculateScaling\").call(this),\n            visible: this.visible || animationEnabled\n          };\n          const xValue = keys[xIndex];\n          const x = xScale.convert(xValue);\n          const currY = +value[yEndIndex];\n          const prevY = +value[yStartIndex];\n          const yRawValue = value[yRawIndex];\n          const isPositive = yRawValue >= 0;\n          const isUpward = isPositive !== yReversed;\n          const yRange = (_b = aggValues == null ? void 0 : aggValues[yRangeIndex][isPositive ? 1 : 0]) != null ? _b : 0;\n          const barX = x + groupScale.convert(String(groupIndex));\n          if (isNaN(currY)) {\n            return;\n          }\n          const y = yScale.convert(currY);\n          const bottomY = yScale.convert(prevY);\n          const barAlongX = this.getBarDirection() === \"x\" /* X */;\n          const bboxHeight = yScale.convert(yRange);\n          const bboxBottom = yScale.convert(0);\n          const cornerRadiusBbox = new BBox(\n            barAlongX ? Math.min(bboxBottom, bboxHeight) : barX,\n            barAlongX ? barX : Math.min(bboxBottom, bboxHeight),\n            barAlongX ? Math.abs(bboxBottom - bboxHeight) : barWidth,\n            barAlongX ? barWidth : Math.abs(bboxBottom - bboxHeight)\n          );\n          const rect = {\n            x: barAlongX ? Math.min(y, bottomY) : barX,\n            y: barAlongX ? barX : Math.min(y, bottomY),\n            width: barAlongX ? Math.abs(bottomY - y) : barWidth,\n            height: barAlongX ? barWidth : Math.abs(bottomY - y),\n            cornerRadiusBbox\n          };\n          const {\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily,\n            color: labelColor,\n            placement\n          } = label;\n          const labelText = this.getLabelText(\n            this.properties.label,\n            {\n              datum: seriesDatum[contextIndex],\n              value: yRawValue,\n              xKey,\n              yKey,\n              xName,\n              yName,\n              legendItemName\n            },\n            (value2) => isNumber2(value2) ? value2.toFixed(2) : \"\"\n          );\n          const labelDatum = labelText ? __spreadValues({\n            text: labelText,\n            fill: labelColor,\n            fontStyle: labelFontStyle,\n            fontWeight: labelFontWeight,\n            fontSize: labelFontSize,\n            fontFamily: labelFontFamily\n          }, adjustLabelPlacement({\n            isPositive,\n            isVertical: !barAlongX,\n            placement,\n            rect\n          })) : void 0;\n          const lengthRatioMultiplier = this.shouldFlipXY() ? rect.height : rect.width;\n          const nodeData = {\n            series: this,\n            itemId: yKey,\n            datum: seriesDatum[contextIndex],\n            cumulativeValue: currY,\n            xValue,\n            yValue: yRawValue,\n            yKey,\n            xKey,\n            capDefaults: {\n              lengthRatioMultiplier,\n              lengthMax: lengthRatioMultiplier\n            },\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            midPoint: { x: rect.x + rect.width / 2, y: rect.y + rect.height / 2 },\n            fill,\n            stroke,\n            strokeWidth,\n            cornerRadius,\n            topLeftCornerRadius: !(barAlongX === isUpward),\n            topRightCornerRadius: isUpward,\n            bottomRightCornerRadius: barAlongX === isUpward,\n            bottomLeftCornerRadius: !isUpward,\n            cornerRadiusBbox,\n            label: labelDatum\n          };\n          contexts[contextIndex].nodeData.push(nodeData);\n          contexts[contextIndex].labelData.push(nodeData);\n        });\n      });\n      return contexts;\n    });\n  }\n  nodeFactory() {\n    return new Rect();\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.datumSelection.update(\n        opts.nodeData,\n        (rect) => {\n          rect.tag = 0 /* Bar */;\n        },\n        (datum) => datum.xValue\n      );\n    });\n  }\n  updateDatumNodes(opts) {\n    return __async(this, null, function* () {\n      if (!this.properties.isValid()) {\n        return;\n      }\n      const {\n        yKey,\n        stackGroup,\n        fill,\n        fillOpacity,\n        stroke,\n        strokeWidth,\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        formatter,\n        shadow,\n        highlightStyle: { item: itemHighlightStyle }\n      } = this.properties;\n      const xAxis = this.axes[\"x\" /* X */];\n      const crisp = checkCrisp(xAxis == null ? void 0 : xAxis.visibleRange);\n      const categoryAlongX = this.getCategoryDirection() === \"x\" /* X */;\n      opts.datumSelection.each((rect, datum) => {\n        const style = {\n          fill,\n          stroke,\n          fillOpacity,\n          strokeOpacity,\n          lineDash,\n          lineDashOffset,\n          fillShadow: shadow,\n          strokeWidth: this.getStrokeWidth(strokeWidth),\n          cornerRadius: datum.cornerRadius,\n          topLeftCornerRadius: datum.topLeftCornerRadius,\n          topRightCornerRadius: datum.topRightCornerRadius,\n          bottomRightCornerRadius: datum.bottomRightCornerRadius,\n          bottomLeftCornerRadius: datum.bottomLeftCornerRadius,\n          cornerRadiusBbox: datum.cornerRadiusBbox\n        };\n        const visible = categoryAlongX ? datum.width > 0 : datum.height > 0;\n        const config = getRectConfig({\n          datum,\n          ctx: this.ctx,\n          seriesId: this.id,\n          isHighlighted: opts.isHighlight,\n          highlightStyle: itemHighlightStyle,\n          yKey,\n          style,\n          formatter,\n          stackGroup\n        });\n        config.crisp = crisp;\n        config.visible = visible;\n        updateRect({ rect, config });\n      });\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const data = this.isLabelEnabled() ? opts.labelData : [];\n      return opts.labelSelection.update(data, (text) => {\n        text.tag = 1 /* Label */;\n        text.pointerEvents = 1 /* None */;\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      opts.labelSelection.each((textNode, datum) => {\n        updateLabelNode(textNode, this.properties.label, datum.label);\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const {\n      id: seriesId,\n      processedData,\n      ctx: { callbackCache }\n    } = this;\n    const xAxis = this.getCategoryAxis();\n    const yAxis = this.getValueAxis();\n    if (!processedData || !this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const { xKey, yKey, xName, yName, fill, stroke, strokeWidth, tooltip, formatter, stackGroup } = this.properties;\n    const { xValue, yValue, datum } = nodeDatum;\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml(yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    let format2;\n    if (formatter) {\n      format2 = callbackCache.call(formatter, {\n        seriesId,\n        datum,\n        xKey,\n        yKey,\n        stackGroup,\n        fill,\n        stroke,\n        strokeWidth: this.getStrokeWidth(strokeWidth),\n        highlighted: false\n      });\n    }\n    const color = (_a = format2 == null ? void 0 : format2.fill) != null ? _a : fill;\n    return tooltip.toTooltipHtml(\n      { title, content, backgroundColor: color },\n      __spreadValues({\n        seriesId,\n        datum,\n        xKey,\n        yKey,\n        xName,\n        yName,\n        stackGroup,\n        title,\n        color\n      }, this.getModuleTooltipParams())\n    );\n  }\n  getLegendData(legendType) {\n    var _a, _b;\n    const { showInLegend } = this.properties;\n    if (legendType !== \"category\" || !((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || !showInLegend) {\n      return [];\n    }\n    const { yKey, yName, fill, stroke, strokeWidth, fillOpacity, strokeOpacity, legendItemName, visible } = this.properties;\n    return [\n      {\n        legendType: \"category\",\n        id: this.id,\n        itemId: yKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: { text: (_b = legendItemName != null ? legendItemName : yName) != null ? _b : yKey },\n        marker: { fill, fillOpacity, stroke, strokeWidth, strokeOpacity },\n        legendItemName\n      }\n    ];\n  }\n  animateEmptyUpdateReady({ datumSelections, labelSelections, annotationSelections }) {\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(this.isVertical(), this.axes));\n    fromToMotion(this.id, \"nodes\", this.ctx.animationManager, datumSelections, fns);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  animateWaitingUpdateReady(data) {\n    var _a, _b;\n    const { datumSelections, labelSelections, annotationSelections } = data;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    const diff2 = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff;\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(this.isVertical(), this.axes));\n    fromToMotion(\n      this.id,\n      \"nodes\",\n      this.ctx.animationManager,\n      datumSelections,\n      fns,\n      (_, datum) => String(datum.xValue),\n      diff2\n    );\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n};\n_BarSeries.className = \"BarSeries\";\n_BarSeries.type = \"bar\";\nvar BarSeries = _BarSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/barSeriesModule.ts\nvar BarSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"bar\",\n  instanceConstructor: BarSeries,\n  stackable: true,\n  groupable: true,\n  seriesDefaults: {\n    axes: [\n      {\n        type: CARTESIAN_AXIS_TYPES.NUMBER,\n        position: CARTESIAN_AXIS_POSITIONS.LEFT\n      },\n      {\n        type: CARTESIAN_AXIS_TYPES.CATEGORY,\n        position: CARTESIAN_AXIS_POSITIONS.BOTTOM\n      }\n    ]\n  },\n  swapDefaultAxesCondition: (series) => (series == null ? void 0 : series.direction) === \"horizontal\",\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    fillOpacity: 1,\n    strokeWidth: 0,\n    lineDash: [0],\n    lineDashOffset: 0,\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      formatter: void 0,\n      placement: \"inside\"\n    },\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 0.3\n      }\n    }\n  },\n  paletteFactory: singleSeriesPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeriesProperties.ts\nvar BubbleSeriesMarker = class extends SeriesMarker {\n  constructor() {\n    super(...arguments);\n    this.maxSize = 30;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], BubbleSeriesMarker.prototype, \"maxSize\", 2);\n__decorateClass([\n  Validate(NUMBER_ARRAY, { optional: true }),\n  SceneChangeDetection({ redraw: 3 /* MAJOR */ })\n], BubbleSeriesMarker.prototype, \"domain\", 2);\nvar BubbleSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.colorRange = [\"#ffff00\", \"#00ff00\", \"#0000ff\"];\n    this.marker = new BubbleSeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], BubbleSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING)\n], BubbleSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING)\n], BubbleSeriesProperties.prototype, \"sizeKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"labelKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"sizeName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"labelName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([\n  Validate(NUMBER_ARRAY, { optional: true })\n], BubbleSeriesProperties.prototype, \"colorDomain\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], BubbleSeriesProperties.prototype, \"colorRange\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], BubbleSeriesProperties.prototype, \"title\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], BubbleSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], BubbleSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], BubbleSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeries.ts\nvar BubbleSeriesNodeClickEvent = class extends CartesianSeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.sizeKey = series.properties.sizeKey;\n  }\n};\nvar _BubbleSeries = class _BubbleSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [\n        2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */,\n        3 /* NEAREST_NODE */,\n        0 /* EXACT_SHAPE_MATCH */\n      ],\n      pathsPerSeries: 0,\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        label: resetLabelFn,\n        marker: resetMarkerFn\n      }\n    });\n    this.NodeClickEvent = BubbleSeriesNodeClickEvent;\n    this.properties = new BubbleSeriesProperties();\n    this.sizeScale = new LinearScale();\n    this.colorScale = new ColorScale();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const { isContinuousX, isContinuousY } = this.isContinuous();\n      const { xKey, yKey, sizeKey, labelKey, colorDomain, colorRange, colorKey, marker } = this.properties;\n      const { dataModel, processedData } = yield this.requestDataModel(dataController, this.data, {\n        props: [\n          keyProperty(this, xKey, isContinuousX, { id: \"xKey-raw\" }),\n          keyProperty(this, yKey, isContinuousY, { id: \"yKey-raw\" }),\n          ...labelKey ? [keyProperty(this, labelKey, false, { id: `labelKey-raw` })] : [],\n          valueProperty(this, xKey, isContinuousX, { id: `xValue` }),\n          valueProperty(this, yKey, isContinuousY, { id: `yValue` }),\n          valueProperty(this, sizeKey, true, { id: `sizeValue` }),\n          ...colorKey ? [valueProperty(this, colorKey, true, { id: `colorValue` })] : [],\n          ...labelKey ? [valueProperty(this, labelKey, false, { id: `labelValue` })] : []\n        ],\n        dataVisible: this.visible\n      });\n      const sizeKeyIdx = dataModel.resolveProcessedDataIndexById(this, `sizeValue`).index;\n      const processedSize = (_a = processedData.domain.values[sizeKeyIdx]) != null ? _a : [];\n      this.sizeScale.domain = marker.domain ? marker.domain : processedSize;\n      if (colorKey) {\n        const colorKeyIdx = dataModel.resolveProcessedDataIndexById(this, `colorValue`).index;\n        this.colorScale.domain = (_b = colorDomain != null ? colorDomain : processedData.domain.values[colorKeyIdx]) != null ? _b : [];\n        this.colorScale.range = colorRange;\n        this.colorScale.update();\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const { dataModel, processedData } = this;\n    if (!processedData || !dataModel)\n      return [];\n    const id = direction === \"x\" /* X */ ? `xValue` : `yValue`;\n    const dataDef = dataModel.resolveProcessedDataDefById(this, id);\n    const domain = dataModel.getDomain(this, id, \"value\", processedData);\n    if ((dataDef == null ? void 0 : dataDef.def.type) === \"value\" && (dataDef == null ? void 0 : dataDef.def.valueType) === \"category\") {\n      return domain;\n    }\n    const axis = this.axes[direction];\n    return fixNumericExtent(extent(domain), axis);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const { axes, dataModel, processedData, colorScale, sizeScale } = this;\n      const { xKey, yKey, sizeKey, labelKey, xName, yName, sizeName, labelName, label, colorKey, marker, visible } = this.properties;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!(dataModel && processedData && visible && xAxis && yAxis)) {\n        return [];\n      }\n      const xDataIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yDataIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      const sizeDataIdx = sizeKey ? dataModel.resolveProcessedDataIndexById(this, `sizeValue`).index : -1;\n      const colorDataIdx = colorKey ? dataModel.resolveProcessedDataIndexById(this, `colorValue`).index : -1;\n      const labelDataIdx = labelKey ? dataModel.resolveProcessedDataIndexById(this, `labelValue`).index : -1;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      sizeScale.range = [marker.size, marker.maxSize];\n      const font = label.getFont();\n      for (const { values, datum } of (_c = processedData.data) != null ? _c : []) {\n        const xDatum = values[xDataIdx];\n        const yDatum = values[yDataIdx];\n        const x = xScale.convert(xDatum) + xOffset;\n        const y = yScale.convert(yDatum) + yOffset;\n        const labelText = this.getLabelText(label, {\n          value: labelKey ? values[labelDataIdx] : yDatum,\n          datum,\n          xKey,\n          yKey,\n          sizeKey,\n          labelKey,\n          xName,\n          yName,\n          sizeName,\n          labelName\n        });\n        const size = HdpiCanvas.getTextSize(String(labelText), font);\n        const markerSize = sizeKey ? sizeScale.convert(values[sizeDataIdx]) : marker.size;\n        const fill = colorKey ? colorScale.convert(values[colorDataIdx]) : void 0;\n        nodeData.push({\n          series: this,\n          itemId: yKey,\n          yKey,\n          xKey,\n          datum,\n          xValue: xDatum,\n          yValue: yDatum,\n          sizeValue: values[sizeDataIdx],\n          point: { x, y, size: markerSize },\n          midPoint: { x, y },\n          fill,\n          label: __spreadValues({ text: labelText }, size)\n        });\n      }\n      return [\n        {\n          itemId: yKey,\n          nodeData,\n          labelData: nodeData,\n          scales: __superGet(_BubbleSeries.prototype, this, \"calculateScaling\").call(this),\n          visible: this.visible\n        }\n      ];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  getLabelData() {\n    var _a;\n    return (_a = this.contextNodeData) == null ? void 0 : _a.reduce((r, n) => r.concat(n.labelData), []);\n  }\n  markerFactory() {\n    const { shape } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const { nodeData, markerSelection } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      const data = this.properties.marker.enabled ? nodeData : [];\n      return markerSelection.update(data, void 0, (datum) => this.getDatumId(datum));\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const { markerSelection, isHighlight: highlighted } = opts;\n      const { xKey, yKey, sizeKey, labelKey, marker } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && this.properties.highlightStyle.item, marker.getStyle());\n      this.sizeScale.range = [marker.size, marker.maxSize];\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, { datum, highlighted, xKey, yKey, sizeKey, labelKey }, baseStyle);\n      });\n      if (!highlighted) {\n        this.properties.marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const placedLabels = this.properties.label.enabled ? (_b = (_a = this.chart) == null ? void 0 : _a.placeLabels().get(this)) != null ? _b : [] : [];\n      return opts.labelSelection.update(\n        placedLabels.map((v) => __spreadProps(__spreadValues({}, v.datum), {\n          point: {\n            x: v.x,\n            y: v.y,\n            size: v.datum.point.size\n          }\n        }))\n      );\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const { label } = this.properties;\n      opts.labelSelection.each((text, datum) => {\n        var _a, _b, _c, _d;\n        text.text = datum.label.text;\n        text.fill = label.color;\n        text.x = (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : 0;\n        text.y = (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : 0;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.textAlign = \"left\";\n        text.textBaseline = \"top\";\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const { xKey, yKey, sizeKey, labelKey, xName, yName, sizeName, labelName, marker, tooltip } = this.properties;\n    const title = (_a = this.properties.title) != null ? _a : yName;\n    const baseStyle = mergeDefaults(\n      { fill: nodeDatum.fill, strokeWidth: this.getStrokeWidth(marker.strokeWidth) },\n      marker.getStyle()\n    );\n    const { fill: color = \"gray\" } = this.getMarkerStyle(\n      marker,\n      { datum: nodeDatum, highlighted: false, xKey, yKey, sizeKey, labelKey },\n      baseStyle\n    );\n    const {\n      datum,\n      xValue,\n      yValue,\n      sizeValue,\n      label: { text: labelText }\n    } = nodeDatum;\n    const xString = sanitizeHtml(xAxis.formatDatum(xValue));\n    const yString = sanitizeHtml(yAxis.formatDatum(yValue));\n    let content = `<b>${sanitizeHtml(xName != null ? xName : xKey)}</b>: ${xString}<br><b>${sanitizeHtml(yName != null ? yName : yKey)}</b>: ${yString}`;\n    if (sizeKey) {\n      content += `<br><b>${sanitizeHtml(sizeName != null ? sizeName : sizeKey)}</b>: ${sanitizeHtml(String(sizeValue))}`;\n    }\n    if (labelKey) {\n      content = `<b>${sanitizeHtml(labelName != null ? labelName : labelKey)}</b>: ${sanitizeHtml(labelText)}<br>` + content;\n    }\n    return tooltip.toTooltipHtml(\n      { title, content, backgroundColor: color },\n      {\n        datum,\n        xKey,\n        xName,\n        yKey,\n        yName,\n        sizeKey,\n        sizeName,\n        labelKey,\n        labelName,\n        title,\n        color,\n        seriesId: this.id\n      }\n    );\n  }\n  getLegendData() {\n    var _a, _b;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid()) {\n      return [];\n    }\n    const { yKey, yName, title, marker, visible } = this.properties;\n    const { shape, fill, stroke, fillOpacity, strokeOpacity, strokeWidth } = marker;\n    return [\n      {\n        legendType: \"category\",\n        id: this.id,\n        itemId: yKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: {\n          text: (_b = title != null ? title : yName) != null ? _b : yKey\n        },\n        marker: {\n          shape,\n          fill: fill != null ? fill : \"rgba(0, 0, 0, 0)\",\n          stroke: stroke != null ? stroke : \"rgba(0, 0, 0, 0)\",\n          fillOpacity: fillOpacity != null ? fillOpacity : 1,\n          strokeOpacity: strokeOpacity != null ? strokeOpacity : 1,\n          strokeWidth: strokeWidth != null ? strokeWidth : 0\n        }\n      }\n    ];\n  }\n  animateEmptyUpdateReady({ markerSelections, labelSelections }) {\n    markerScaleInAnimation(this, this.ctx.animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n  }\n  getDatumId(datum) {\n    return createDatumId([`${datum.xValue}`, `${datum.yValue}`, datum.label.text]);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_BubbleSeries.className = \"BubbleSeries\";\n_BubbleSeries.type = \"bubble\";\nvar BubbleSeries = _BubbleSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/bubbleSeriesModule.ts\nvar BubbleSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"bubble\",\n  instanceConstructor: BubbleSeries,\n  seriesDefaults: {\n    axes: [\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.BOTTOM },\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.LEFT }\n    ]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      maxSize: 30,\n      fillOpacity: 0.8\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR\n    }\n  },\n  paletteFactory: markerPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeriesProperties.ts\nvar HistogramSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fillOpacity = 1;\n    this.strokeWidth = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.areaPlot = false;\n    this.aggregation = \"sum\";\n    this.shadow = new DropShadow();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], HistogramSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HistogramSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HistogramSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HistogramSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], HistogramSeriesProperties.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO)\n], HistogramSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(COLOR_STRING, { optional: true })\n], HistogramSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], HistogramSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO)\n], HistogramSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH)\n], HistogramSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], HistogramSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], HistogramSeriesProperties.prototype, \"areaPlot\", 2);\n__decorateClass([\n  Validate(ARRAY, { optional: true })\n], HistogramSeriesProperties.prototype, \"bins\", 2);\n__decorateClass([\n  Validate(UNION([\"count\", \"sum\", \"mean\"], \"a histogram aggregation\"))\n], HistogramSeriesProperties.prototype, \"aggregation\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], HistogramSeriesProperties.prototype, \"binCount\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], HistogramSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], HistogramSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], HistogramSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeries.ts\nvar defaultBinCount = 10;\nvar _HistogramSeries = class _HistogramSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      datumSelectionGarbageCollection: false,\n      animationResetFns: {\n        datum: resetBarSelectionsFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new HistogramSeriesProperties();\n    this.calculatedBins = [];\n  }\n  // During processData phase, used to unify different ways of the user specifying\n  // the bins. Returns bins in format[[min1, max1], [min2, max2], ... ].\n  deriveBins(xDomain) {\n    if (this.properties.binCount) {\n      return this.calculateNiceBins(xDomain, this.properties.binCount);\n    }\n    const binStarts = ticks_default(xDomain[0], xDomain[1], defaultBinCount);\n    const binSize = tickStep(xDomain[0], xDomain[1], defaultBinCount);\n    const [firstBinEnd] = binStarts;\n    const expandStartToBin = (n) => [n, n + binSize];\n    return [[firstBinEnd - binSize, firstBinEnd], ...binStarts.map(expandStartToBin)];\n  }\n  calculateNiceBins(domain, binCount) {\n    const startGuess = Math.floor(domain[0]);\n    const stop = domain[1];\n    const segments = binCount || 1;\n    const { start, binSize } = this.calculateNiceStart(startGuess, stop, segments);\n    return this.getBins(start, stop, binSize, segments);\n  }\n  getBins(start, stop, step, count2) {\n    const bins = [];\n    const precision = this.calculatePrecision(step);\n    for (let i = 0; i < count2; i++) {\n      const a = Math.round((start + i * step) * precision) / precision;\n      let b = Math.round((start + (i + 1) * step) * precision) / precision;\n      if (i === count2 - 1) {\n        b = Math.max(b, stop);\n      }\n      bins[i] = [a, b];\n    }\n    return bins;\n  }\n  calculatePrecision(step) {\n    let precision = 10;\n    if (isReal(step) && step > 0) {\n      while (step < 1) {\n        precision *= 10;\n        step *= 10;\n      }\n    }\n    return precision;\n  }\n  calculateNiceStart(a, b, segments) {\n    const binSize = Math.abs(b - a) / segments;\n    const order = Math.floor(Math.log10(binSize));\n    const magnitude = Math.pow(10, order);\n    const start = Math.floor(a / magnitude) * magnitude;\n    return {\n      start,\n      binSize\n    };\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a;\n      const { xKey, yKey, areaPlot, aggregation } = this.properties;\n      const props = [keyProperty(this, xKey, true), SORT_DOMAIN_GROUPS];\n      if (yKey) {\n        let aggProp = groupCount(this, \"groupCount\");\n        if (aggregation === \"count\") {\n        } else if (aggregation === \"sum\") {\n          aggProp = groupSum(this, \"groupAgg\");\n        } else if (aggregation === \"mean\") {\n          aggProp = groupAverage(this, \"groupAgg\");\n        }\n        if (areaPlot) {\n          aggProp = area(this, \"groupAgg\", aggProp);\n        }\n        props.push(valueProperty(this, yKey, true, { invalidValue: void 0 }), aggProp);\n      } else {\n        let aggProp = groupCount(this, \"groupAgg\");\n        if (areaPlot) {\n          aggProp = area(this, \"groupAgg\", aggProp);\n        }\n        props.push(aggProp);\n      }\n      const groupByFn = (dataSet) => {\n        var _a2;\n        const xExtent = fixNumericExtent(dataSet.domain.keys[0]);\n        if (xExtent.length === 0) {\n          dataSet.domain.groups = [];\n          return () => [];\n        }\n        const bins = (_a2 = this.properties.bins) != null ? _a2 : this.deriveBins(xExtent);\n        const binCount = bins.length;\n        this.calculatedBins = [...bins];\n        return (item) => {\n          const xValue = item.keys[0];\n          for (let i = 0; i < binCount; i++) {\n            const nextBin = bins[i];\n            if (xValue >= nextBin[0] && xValue < nextBin[1]) {\n              return nextBin;\n            }\n            if (i === binCount - 1 && xValue <= nextBin[1]) {\n              return nextBin;\n            }\n          }\n          return [];\n        };\n      };\n      if (!this.ctx.animationManager.isSkipped() && this.processedData) {\n        props.push(diff(this.processedData, false));\n      }\n      yield this.requestDataModel(dataController, (_a = this.data) != null ? _a : [], {\n        props,\n        dataVisible: this.visible,\n        groupByFn\n      });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    var _a, _b, _c, _d;\n    const { processedData, dataModel } = this;\n    if (!processedData || !dataModel || !this.calculatedBins.length)\n      return [];\n    const yDomain = dataModel.getDomain(this, `groupAgg`, \"aggregate\", processedData);\n    const xDomainMin = (_a = this.calculatedBins) == null ? void 0 : _a[0][0];\n    const xDomainMax = (_d = this.calculatedBins) == null ? void 0 : _d[((_c = (_b = this.calculatedBins) == null ? void 0 : _b.length) != null ? _c : 0) - 1][1];\n    if (direction === \"x\" /* X */) {\n      return fixNumericExtent([xDomainMin, xDomainMax]);\n    }\n    return fixNumericExtent(yDomain);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a;\n      const {\n        id: seriesId,\n        axes,\n        processedData,\n        ctx: { callbackCache }\n      } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!this.visible || !xAxis || !yAxis || !processedData || processedData.type !== \"grouped\") {\n        return [];\n      }\n      const { scale: xScale } = xAxis;\n      const { scale: yScale } = yAxis;\n      const { xKey, yKey, xName, yName, fill, stroke, strokeWidth } = this.properties;\n      const {\n        formatter: labelFormatter = (params) => String(params.value),\n        fontStyle: labelFontStyle,\n        fontWeight: labelFontWeight,\n        fontSize: labelFontSize,\n        fontFamily: labelFontFamily,\n        color: labelColor\n      } = this.properties.label;\n      const nodeData = [];\n      processedData.data.forEach((group2) => {\n        var _a2;\n        const {\n          aggValues: [[negativeAgg, positiveAgg]] = [[0, 0]],\n          datum,\n          datum: { length: frequency },\n          keys: domain,\n          keys: [xDomainMin, xDomainMax]\n        } = group2;\n        const xMinPx = xScale.convert(xDomainMin);\n        const xMaxPx = xScale.convert(xDomainMax);\n        const total = negativeAgg + positiveAgg;\n        const yZeroPx = yScale.convert(0);\n        const yMaxPx = yScale.convert(total);\n        const w = Math.abs(xMaxPx - xMinPx);\n        const h = Math.abs(yMaxPx - yZeroPx);\n        const x = Math.min(xMinPx, xMaxPx);\n        const y = Math.min(yZeroPx, yMaxPx);\n        const selectionDatumLabel = total !== 0 ? {\n          text: (_a2 = callbackCache.call(labelFormatter, {\n            value: total,\n            datum,\n            seriesId,\n            xKey,\n            yKey,\n            xName,\n            yName\n          })) != null ? _a2 : String(total),\n          fontStyle: labelFontStyle,\n          fontWeight: labelFontWeight,\n          fontSize: labelFontSize,\n          fontFamily: labelFontFamily,\n          fill: labelColor,\n          x: x + w / 2,\n          y: y + h / 2\n        } : void 0;\n        const nodeMidPoint = {\n          x: x + w / 2,\n          y: y + h / 2\n        };\n        nodeData.push({\n          series: this,\n          datum,\n          // required by SeriesNodeDatum, but might not make sense here\n          // since each selection is an aggregation of multiple data.\n          aggregatedValue: total,\n          frequency,\n          domain,\n          yKey,\n          xKey,\n          x,\n          y,\n          xValue: xMinPx,\n          yValue: yMaxPx,\n          width: w,\n          height: h,\n          midPoint: nodeMidPoint,\n          fill,\n          stroke,\n          strokeWidth,\n          label: selectionDatumLabel\n        });\n      });\n      return [\n        {\n          itemId: (_a = this.properties.yKey) != null ? _a : this.id,\n          nodeData,\n          labelData: nodeData,\n          scales: __superGet(_HistogramSeries.prototype, this, \"calculateScaling\").call(this),\n          animationValid: true,\n          visible: this.visible\n        }\n      ];\n    });\n  }\n  nodeFactory() {\n    return new Rect();\n  }\n  updateDatumSelection(opts) {\n    return __async(this, null, function* () {\n      const { nodeData, datumSelection } = opts;\n      return datumSelection.update(\n        nodeData,\n        (rect) => {\n          rect.tag = 0 /* Bin */;\n          rect.crisp = true;\n        },\n        (datum) => datum.domain.join(\"_\")\n      );\n    });\n  }\n  updateDatumNodes(opts) {\n    return __async(this, null, function* () {\n      const { isHighlight: isDatumHighlighted } = opts;\n      const {\n        fillOpacity: seriesFillOpacity,\n        strokeOpacity,\n        lineDash,\n        lineDashOffset,\n        shadow,\n        highlightStyle: {\n          item: {\n            fill: highlightedFill,\n            fillOpacity: highlightFillOpacity = seriesFillOpacity,\n            stroke: highlightedStroke,\n            strokeWidth: highlightedDatumStrokeWidth\n          }\n        }\n      } = this.properties;\n      opts.datumSelection.each((rect, datum, index) => {\n        var _a, _b;\n        const strokeWidth = isDatumHighlighted && highlightedDatumStrokeWidth !== void 0 ? highlightedDatumStrokeWidth : datum.strokeWidth;\n        const fillOpacity = isDatumHighlighted ? highlightFillOpacity : seriesFillOpacity;\n        rect.fill = (_a = isDatumHighlighted ? highlightedFill : void 0) != null ? _a : datum.fill;\n        rect.stroke = (_b = isDatumHighlighted ? highlightedStroke : void 0) != null ? _b : datum.stroke;\n        rect.fillOpacity = fillOpacity;\n        rect.strokeOpacity = strokeOpacity;\n        rect.strokeWidth = strokeWidth;\n        rect.lineDash = lineDash;\n        rect.lineDashOffset = lineDashOffset;\n        rect.fillShadow = shadow;\n        rect.zIndex = isDatumHighlighted ? Series.highlightedZIndex : index;\n        rect.visible = datum.height > 0;\n      });\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      const { labelData, labelSelection } = opts;\n      return labelSelection.update(labelData, (text) => {\n        text.tag = 1 /* Label */;\n        text.pointerEvents = 1 /* None */;\n        text.textAlign = \"center\";\n        text.textBaseline = \"middle\";\n      });\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const labelEnabled = this.isLabelEnabled();\n      opts.labelSelection.each((text, datum) => {\n        const label = datum.label;\n        if (label && labelEnabled) {\n          text.text = label.text;\n          text.x = label.x;\n          text.y = label.y;\n          text.fontStyle = label.fontStyle;\n          text.fontWeight = label.fontWeight;\n          text.fontSize = label.fontSize;\n          text.fontFamily = label.fontFamily;\n          text.fill = label.fill;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const { xKey, yKey, xName, yName, fill: color, aggregation, tooltip } = this.properties;\n    const {\n      aggregatedValue,\n      frequency,\n      domain: [rangeMin, rangeMax]\n    } = nodeDatum;\n    const title = `${sanitizeHtml(xName != null ? xName : xKey)}: ${xAxis.formatDatum(rangeMin)} - ${xAxis.formatDatum(rangeMax)}`;\n    let content = yKey ? `<b>${sanitizeHtml(yName != null ? yName : yKey)} (${aggregation})</b>: ${yAxis.formatDatum(aggregatedValue)}<br>` : \"\";\n    content += `<b>Frequency</b>: ${frequency}`;\n    const defaults = {\n      title,\n      backgroundColor: color,\n      content\n    };\n    return tooltip.toTooltipHtml(defaults, {\n      datum: {\n        data: nodeDatum.datum,\n        aggregatedValue: nodeDatum.aggregatedValue,\n        domain: nodeDatum.domain,\n        frequency: nodeDatum.frequency\n      },\n      xKey,\n      xName,\n      yKey,\n      yName,\n      color,\n      title,\n      seriesId: this.id\n    });\n  }\n  getLegendData(legendType) {\n    var _a, _b;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || legendType !== \"category\") {\n      return [];\n    }\n    const { xKey, yName, fill, fillOpacity, stroke, strokeWidth, strokeOpacity, visible } = this.properties;\n    return [\n      {\n        legendType: \"category\",\n        id: this.id,\n        itemId: xKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: {\n          text: (_b = yName != null ? yName : xKey) != null ? _b : \"Frequency\"\n        },\n        marker: {\n          fill: fill != null ? fill : \"rgba(0, 0, 0, 0)\",\n          stroke: stroke != null ? stroke : \"rgba(0, 0, 0, 0)\",\n          fillOpacity,\n          strokeOpacity,\n          strokeWidth\n        }\n      }\n    ];\n  }\n  animateEmptyUpdateReady({ datumSelections, labelSelections }) {\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(true, this.axes));\n    fromToMotion(this.id, \"datums\", this.ctx.animationManager, datumSelections, fns);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n  }\n  animateWaitingUpdateReady(data) {\n    var _a, _b;\n    const diff2 = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff;\n    const fns = prepareBarAnimationFunctions(collapsedStartingBarPosition(true, this.axes));\n    fromToMotion(\n      this.id,\n      \"datums\",\n      this.ctx.animationManager,\n      data.datumSelections,\n      fns,\n      (_, datum) => this.getDatumId(datum),\n      diff2\n    );\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, data.labelSelections);\n  }\n  getDatumId(datum) {\n    return createDatumId(datum.domain.map((d) => `${d}`));\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n};\n_HistogramSeries.className = \"HistogramSeries\";\n_HistogramSeries.type = \"histogram\";\nvar HistogramSeries = _HistogramSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/histogramSeriesModule.ts\nvar HistogramSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"histogram\",\n  instanceConstructor: HistogramSeries,\n  seriesDefaults: {\n    axes: [\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.BOTTOM },\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.LEFT }\n    ]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    strokeWidth: 1,\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      formatter: void 0\n    },\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    }\n  },\n  paletteFactory: ({ takeColors }) => {\n    const {\n      fills: [fill],\n      strokes: [stroke]\n    } = takeColors(1);\n    return { fill, stroke };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeriesProperties.ts\nvar LineSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.stroke = \"#874349\";\n    this.strokeWidth = 2;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n    this.connectMissingData = false;\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], LineSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING)\n], LineSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], LineSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], LineSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], LineSeriesProperties.prototype, \"title\", 2);\n__decorateClass([\n  Validate(COLOR_STRING)\n], LineSeriesProperties.prototype, \"stroke\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LineSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(RATIO)\n], LineSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH)\n], LineSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], LineSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], LineSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], LineSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], LineSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], LineSeriesProperties.prototype, \"connectMissingData\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeries.ts\nvar _LineSeries = class _LineSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      hasMarkers: true,\n      pickModes: [\n        2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */,\n        3 /* NEAREST_NODE */,\n        0 /* EXACT_SHAPE_MATCH */\n      ],\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        path: buildResetPathFn({ getOpacity: () => this.getOpacity() }),\n        label: resetLabelFn,\n        marker: (node, datum) => __spreadValues(__spreadValues({}, resetMarkerFn(node)), resetMarkerPositionFn(node, datum))\n      }\n    });\n    this.properties = new LineSeriesProperties();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const { xKey, yKey } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const { isContinuousX, isContinuousY } = this.isContinuous();\n      const props = [];\n      if (!isContinuousX) {\n        props.push(keyProperty(this, xKey, isContinuousX, { id: \"xKey\" }));\n        if (animationEnabled && this.processedData) {\n          props.push(diff(this.processedData));\n        }\n      }\n      if (animationEnabled) {\n        props.push(animationValidation(this, isContinuousX ? [\"xValue\"] : []));\n      }\n      props.push(\n        valueProperty(this, xKey, isContinuousX, { id: \"xValue\" }),\n        valueProperty(this, yKey, isContinuousY, { id: \"yValue\", invalidValue: void 0 })\n      );\n      yield this.requestDataModel(dataController, this.data, { props });\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const { axes, dataModel, processedData } = this;\n    if (!processedData || !dataModel)\n      return [];\n    const xAxis = axes[\"x\" /* X */];\n    const yAxis = axes[\"y\" /* Y */];\n    const xDef = dataModel.resolveProcessedDataDefById(this, `xValue`);\n    if (direction === \"x\" /* X */) {\n      const domain = dataModel.getDomain(this, `xValue`, \"value\", processedData);\n      if ((xDef == null ? void 0 : xDef.def.type) === \"value\" && xDef.def.valueType === \"category\") {\n        return domain;\n      }\n      return fixNumericExtent(extent(domain), xAxis);\n    } else {\n      const domain = dataModel.getDomain(this, `yValue`, \"value\", processedData);\n      return fixNumericExtent(domain, yAxis);\n    }\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const { processedData, dataModel, axes } = this;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!processedData || !dataModel || !xAxis || !yAxis) {\n        return [];\n      }\n      const { xKey, yKey, xName, yName, marker, label, connectMissingData } = this.properties;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      const size = marker.enabled ? marker.size : 0;\n      const xIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      let moveTo = true;\n      let nextPoint;\n      for (let i = 0; i < processedData.data.length; i++) {\n        const { datum, values } = nextPoint != null ? nextPoint : processedData.data[i];\n        const xDatum = values[xIdx];\n        const yDatum = values[yIdx];\n        if (yDatum === void 0) {\n          moveTo = !connectMissingData;\n        } else {\n          const x = xScale.convert(xDatum) + xOffset;\n          if (isNaN(x)) {\n            moveTo = !connectMissingData;\n            nextPoint = void 0;\n            continue;\n          }\n          nextPoint = ((_c = processedData.data[i + 1]) == null ? void 0 : _c.values[yIdx]) === void 0 ? void 0 : processedData.data[i + 1];\n          const y = yScale.convert(yDatum) + yOffset;\n          const labelText = this.getLabelText(\n            label,\n            { value: yDatum, datum, xKey, yKey, xName, yName },\n            (value) => isNumber2(value) ? value.toFixed(2) : String(value)\n          );\n          nodeData.push({\n            series: this,\n            datum,\n            yKey,\n            xKey,\n            point: { x, y, moveTo, size },\n            midPoint: { x, y },\n            yValue: yDatum,\n            xValue: xDatum,\n            capDefaults: { lengthRatioMultiplier: this.properties.marker.getDiameter(), lengthMax: Infinity },\n            label: labelText ? {\n              text: labelText,\n              fontStyle: label.fontStyle,\n              fontWeight: label.fontWeight,\n              fontSize: label.fontSize,\n              fontFamily: label.fontFamily,\n              textAlign: \"center\",\n              textBaseline: \"bottom\",\n              fill: label.color\n            } : void 0\n          });\n          moveTo = false;\n        }\n      }\n      return [\n        {\n          itemId: yKey,\n          nodeData,\n          labelData: nodeData,\n          scales: __superGet(_LineSeries.prototype, this, \"calculateScaling\").call(this),\n          visible: this.visible\n        }\n      ];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  markerFactory() {\n    const { shape } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updatePathNodes(opts) {\n    return __async(this, null, function* () {\n      const {\n        paths: [lineNode],\n        opacity,\n        visible,\n        animationEnabled\n      } = opts;\n      lineNode.setProperties({\n        fill: void 0,\n        lineJoin: \"round\",\n        pointerEvents: 1 /* None */,\n        opacity,\n        stroke: this.properties.stroke,\n        strokeWidth: this.getStrokeWidth(this.properties.strokeWidth),\n        strokeOpacity: this.properties.strokeOpacity,\n        lineDash: this.properties.lineDash,\n        lineDashOffset: this.properties.lineDashOffset\n      });\n      if (!animationEnabled) {\n        lineNode.visible = visible;\n      }\n      updateClipPath(this, lineNode);\n    });\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      let { nodeData } = opts;\n      const { markerSelection } = opts;\n      const { shape, enabled } = this.properties.marker;\n      nodeData = shape && enabled ? nodeData : [];\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(nodeData, void 0, (datum) => this.getDatumId(datum));\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const { markerSelection, isHighlight: highlighted } = opts;\n      const { xKey, yKey, stroke, strokeWidth, strokeOpacity, marker, highlightStyle } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle(), {\n        stroke,\n        strokeWidth,\n        strokeOpacity\n      });\n      const applyTranslation = this.ctx.animationManager.isSkipped();\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, { datum, highlighted, xKey, yKey }, baseStyle, { applyTranslation });\n      });\n      if (!highlighted) {\n        marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      return opts.labelSelection.update(this.isLabelEnabled() ? opts.labelData : []);\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const { enabled, fontStyle, fontWeight, fontSize, fontFamily, color } = this.properties.label;\n      opts.labelSelection.each((text, datum) => {\n        const { point, label } = datum;\n        if (datum && label && enabled) {\n          text.fontStyle = fontStyle;\n          text.fontWeight = fontWeight;\n          text.fontSize = fontSize;\n          text.fontFamily = fontFamily;\n          text.textAlign = label.textAlign;\n          text.textBaseline = label.textBaseline;\n          text.text = label.text;\n          text.x = point.x;\n          text.y = point.y - 10;\n          text.fill = color;\n          text.visible = true;\n        } else {\n          text.visible = false;\n        }\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const { xKey, yKey, xName, yName, strokeWidth, marker, tooltip } = this.properties;\n    const { datum, xValue, yValue } = nodeDatum;\n    const xString = xAxis.formatDatum(xValue);\n    const yString = yAxis.formatDatum(yValue);\n    const title = sanitizeHtml((_a = this.properties.title) != null ? _a : yName);\n    const content = sanitizeHtml(xString + \": \" + yString);\n    const baseStyle = mergeDefaults({ fill: marker.stroke }, marker.getStyle(), { strokeWidth });\n    const { fill: color } = this.getMarkerStyle(\n      marker,\n      { datum: nodeDatum, xKey, yKey, highlighted: false },\n      baseStyle\n    );\n    return tooltip.toTooltipHtml(\n      { title, content, backgroundColor: color },\n      __spreadValues({\n        datum,\n        xKey,\n        xName,\n        yKey,\n        yName,\n        title,\n        color,\n        seriesId: this.id\n      }, this.getModuleTooltipParams())\n    );\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i;\n    if (!(((_a = this.data) == null ? void 0 : _a.length) && this.properties.isValid() && legendType === \"category\")) {\n      return [];\n    }\n    const { yKey, yName, stroke, strokeOpacity, strokeWidth, lineDash, title, marker, visible } = this.properties;\n    const color0 = \"rgba(0, 0, 0, 0)\";\n    return [\n      {\n        legendType: \"category\",\n        id: this.id,\n        itemId: yKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: {\n          text: (_b = title != null ? title : yName) != null ? _b : yKey\n        },\n        marker: {\n          shape: marker.shape,\n          fill: (_c = marker.fill) != null ? _c : color0,\n          stroke: (_e = (_d = marker.stroke) != null ? _d : stroke) != null ? _e : color0,\n          fillOpacity: (_f = marker.fillOpacity) != null ? _f : 1,\n          strokeOpacity: (_h = (_g = marker.strokeOpacity) != null ? _g : strokeOpacity) != null ? _h : 1,\n          strokeWidth: (_i = marker.strokeWidth) != null ? _i : 0,\n          enabled: marker.enabled\n        },\n        line: {\n          stroke: stroke != null ? stroke : color0,\n          strokeOpacity,\n          strokeWidth,\n          lineDash\n        }\n      }\n    ];\n  }\n  updatePaths(opts) {\n    return __async(this, null, function* () {\n      this.updateLinePaths([opts.paths], [opts.contextData]);\n    });\n  }\n  updateLinePaths(paths, contextData) {\n    contextData.forEach(({ nodeData }, contextDataIndex) => {\n      const [lineNode] = paths[contextDataIndex];\n      const { path: linePath } = lineNode;\n      linePath.clear({ trackChanges: true });\n      for (const data of nodeData) {\n        if (data.point.moveTo) {\n          linePath.moveTo(data.point.x, data.point.y);\n        } else {\n          linePath.lineTo(data.point.x, data.point.y);\n        }\n      }\n      lineNode.checkPathDirty();\n    });\n  }\n  animateEmptyUpdateReady(animationData) {\n    const { markerSelections, labelSelections, annotationSelections, contextData, paths } = animationData;\n    const { animationManager } = this.ctx;\n    this.updateLinePaths(paths, contextData);\n    pathSwipeInAnimation(this, animationManager, paths.flat());\n    resetMotion(markerSelections, resetMarkerPositionFn);\n    markerSwipeScaleInAnimation(this, animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", animationManager, annotationSelections);\n  }\n  animateReadyResize(animationData) {\n    const { contextData, paths } = animationData;\n    this.updateLinePaths(paths, contextData);\n    super.animateReadyResize(animationData);\n  }\n  animateWaitingUpdateReady(animationData) {\n    var _a, _b;\n    const { animationManager } = this.ctx;\n    const { markerSelections, labelSelections, annotationSelections, contextData, paths, previousContextData } = animationData;\n    super.resetAllAnimation(animationData);\n    if (contextData.length === 0 || !previousContextData || previousContextData.length === 0) {\n      animationManager.skipCurrentBatch();\n      this.updateLinePaths(paths, contextData);\n      return;\n    }\n    const [path] = paths;\n    const [newData] = contextData;\n    const [oldData] = previousContextData;\n    const fns = prepareLinePathAnimation(newData, oldData, (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.diff);\n    if (fns === void 0) {\n      animationManager.skipCurrentBatch();\n      this.updateLinePaths(paths, contextData);\n      return;\n    }\n    fromToMotion(this.id, \"marker\", animationManager, markerSelections, fns.marker);\n    fromToMotion(this.id, \"path_properties\", animationManager, path, fns.pathProperties);\n    pathMotion(this.id, \"path_update\", animationManager, path, fns.path);\n    if (fns.hasMotion) {\n      seriesLabelFadeInAnimation(this, \"labels\", animationManager, labelSelections);\n      seriesLabelFadeInAnimation(this, \"annotations\", animationManager, annotationSelections);\n    }\n  }\n  getDatumId(datum) {\n    return createDatumId([`${datum.xValue}`]);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  getBandScalePadding() {\n    return { inner: 1, outer: 0.1 };\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_LineSeries.className = \"LineSeries\";\n_LineSeries.type = \"line\";\nvar LineSeries = _LineSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/lineSeriesModule.ts\nvar LineSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"line\",\n  instanceConstructor: LineSeries,\n  seriesDefaults: DEFAULT_CARTESIAN_CHART_OVERRIDES,\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    strokeWidth: 2,\n    strokeOpacity: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      fillOpacity: 1,\n      strokeOpacity: 1,\n      strokeWidth: 0\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      formatter: void 0\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 1\n      }\n    }\n  },\n  paletteFactory: (params) => {\n    const { marker } = markerPaletteFactory(params);\n    return {\n      stroke: marker.fill,\n      marker\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeriesProperties.ts\nvar ScatterSeriesProperties = class extends CartesianSeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.colorRange = [\"#ffff00\", \"#00ff00\", \"#0000ff\"];\n    this.marker = new SeriesMarker();\n    this.label = new Label();\n    this.tooltip = new SeriesTooltip();\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], ScatterSeriesProperties.prototype, \"xKey\", 2);\n__decorateClass([\n  Validate(STRING)\n], ScatterSeriesProperties.prototype, \"yKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"labelKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"xName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"yName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"labelName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([\n  Validate(NUMBER_ARRAY, { optional: true })\n], ScatterSeriesProperties.prototype, \"colorDomain\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], ScatterSeriesProperties.prototype, \"colorRange\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], ScatterSeriesProperties.prototype, \"title\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], ScatterSeriesProperties.prototype, \"marker\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], ScatterSeriesProperties.prototype, \"label\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], ScatterSeriesProperties.prototype, \"tooltip\", 2);\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeries.ts\nvar _ScatterSeries = class _ScatterSeries extends CartesianSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [\n        2 /* NEAREST_BY_MAIN_CATEGORY_AXIS_FIRST */,\n        3 /* NEAREST_NODE */,\n        0 /* EXACT_SHAPE_MATCH */\n      ],\n      pathsPerSeries: 0,\n      hasMarkers: true,\n      markerSelectionGarbageCollection: false,\n      animationResetFns: {\n        marker: resetMarkerFn,\n        label: resetLabelFn\n      }\n    });\n    this.properties = new ScatterSeriesProperties();\n    this.colorScale = new ColorScale();\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a;\n      if (!this.properties.isValid() || this.data == null) {\n        return;\n      }\n      const { isContinuousX, isContinuousY } = this.isContinuous();\n      const { xKey, yKey, labelKey, colorKey, colorDomain, colorRange } = this.properties;\n      const { dataModel, processedData } = yield this.requestDataModel(dataController, this.data, {\n        props: [\n          keyProperty(this, xKey, isContinuousX, { id: \"xKey-raw\" }),\n          keyProperty(this, yKey, isContinuousY, { id: \"yKey-raw\" }),\n          ...labelKey ? [keyProperty(this, labelKey, false, { id: `labelKey-raw` })] : [],\n          valueProperty(this, xKey, isContinuousX, { id: `xValue` }),\n          valueProperty(this, yKey, isContinuousY, { id: `yValue` }),\n          ...colorKey ? [valueProperty(this, colorKey, true, { id: `colorValue` })] : [],\n          ...labelKey ? [valueProperty(this, labelKey, false, { id: `labelValue` })] : []\n        ],\n        dataVisible: this.visible\n      });\n      if (colorKey) {\n        const colorKeyIdx = dataModel.resolveProcessedDataIndexById(this, `colorValue`).index;\n        this.colorScale.domain = (_a = colorDomain != null ? colorDomain : processedData.domain.values[colorKeyIdx]) != null ? _a : [];\n        this.colorScale.range = colorRange;\n        this.colorScale.update();\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  getSeriesDomain(direction) {\n    const { dataModel, processedData } = this;\n    if (!processedData || !dataModel)\n      return [];\n    const id = direction === \"x\" /* X */ ? `xValue` : `yValue`;\n    const dataDef = dataModel.resolveProcessedDataDefById(this, id);\n    const domain = dataModel.getDomain(this, id, \"value\", processedData);\n    if ((dataDef == null ? void 0 : dataDef.def.type) === \"value\" && (dataDef == null ? void 0 : dataDef.def.valueType) === \"category\") {\n      return domain;\n    }\n    const axis = this.axes[direction];\n    return fixNumericExtent(extent(domain), axis);\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      var _a, _b, _c;\n      const { axes, dataModel, processedData, colorScale } = this;\n      const { xKey, yKey, labelKey, colorKey, xName, yName, labelName, marker, label, visible } = this.properties;\n      const xAxis = axes[\"x\" /* X */];\n      const yAxis = axes[\"y\" /* Y */];\n      if (!(dataModel && processedData && visible && xAxis && yAxis)) {\n        return [];\n      }\n      const xDataIdx = dataModel.resolveProcessedDataIndexById(this, `xValue`).index;\n      const yDataIdx = dataModel.resolveProcessedDataIndexById(this, `yValue`).index;\n      const colorDataIdx = colorKey ? dataModel.resolveProcessedDataIndexById(this, `colorValue`).index : -1;\n      const labelDataIdx = labelKey ? dataModel.resolveProcessedDataIndexById(this, `labelValue`).index : -1;\n      const xScale = xAxis.scale;\n      const yScale = yAxis.scale;\n      const xOffset = ((_a = xScale.bandwidth) != null ? _a : 0) / 2;\n      const yOffset = ((_b = yScale.bandwidth) != null ? _b : 0) / 2;\n      const nodeData = [];\n      const font = label.getFont();\n      for (const { values, datum } of (_c = processedData.data) != null ? _c : []) {\n        const xDatum = values[xDataIdx];\n        const yDatum = values[yDataIdx];\n        const x = xScale.convert(xDatum) + xOffset;\n        const y = yScale.convert(yDatum) + yOffset;\n        const labelText = this.getLabelText(label, {\n          value: labelKey ? values[labelDataIdx] : yDatum,\n          datum,\n          xKey,\n          yKey,\n          labelKey,\n          xName,\n          yName,\n          labelName\n        });\n        const size = HdpiCanvas.getTextSize(labelText, font);\n        const fill = colorKey ? colorScale.convert(values[colorDataIdx]) : void 0;\n        nodeData.push({\n          series: this,\n          itemId: yKey,\n          yKey,\n          xKey,\n          datum,\n          xValue: xDatum,\n          yValue: yDatum,\n          capDefaults: { lengthRatioMultiplier: marker.getDiameter(), lengthMax: Infinity },\n          point: { x, y, size: marker.size },\n          midPoint: { x, y },\n          fill,\n          label: __spreadValues({ text: labelText }, size)\n        });\n      }\n      return [\n        {\n          itemId: yKey,\n          nodeData,\n          labelData: nodeData,\n          scales: __superGet(_ScatterSeries.prototype, this, \"calculateScaling\").call(this),\n          visible: this.visible\n        }\n      ];\n    });\n  }\n  isPathOrSelectionDirty() {\n    return this.properties.marker.isDirty();\n  }\n  getLabelData() {\n    var _a;\n    return (_a = this.contextNodeData) == null ? void 0 : _a.reduce((r, n) => r.concat(n.labelData), []);\n  }\n  markerFactory() {\n    const { shape } = this.properties.marker;\n    const MarkerShape = getMarker(shape);\n    return new MarkerShape();\n  }\n  updateMarkerSelection(opts) {\n    return __async(this, null, function* () {\n      const { nodeData, markerSelection } = opts;\n      if (this.properties.marker.isDirty()) {\n        markerSelection.clear();\n        markerSelection.cleanup();\n      }\n      return markerSelection.update(this.properties.marker.enabled ? nodeData : []);\n    });\n  }\n  updateMarkerNodes(opts) {\n    return __async(this, null, function* () {\n      const { markerSelection, isHighlight: highlighted } = opts;\n      const { xKey, yKey, labelKey, marker, highlightStyle } = this.properties;\n      const baseStyle = mergeDefaults(highlighted && highlightStyle.item, marker.getStyle());\n      markerSelection.each((node, datum) => {\n        this.updateMarkerStyle(node, marker, { datum, highlighted, xKey, yKey, labelKey }, baseStyle);\n      });\n      if (!highlighted) {\n        marker.markClean();\n      }\n    });\n  }\n  updateLabelSelection(opts) {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const placedLabels = this.isLabelEnabled() ? (_b = (_a = this.chart) == null ? void 0 : _a.placeLabels().get(this)) != null ? _b : [] : [];\n      return opts.labelSelection.update(\n        placedLabels.map(({ datum, x, y }) => __spreadProps(__spreadValues({}, datum), {\n          point: { x, y, size: datum.point.size }\n        })),\n        (text) => {\n          text.pointerEvents = 1 /* None */;\n        }\n      );\n    });\n  }\n  updateLabelNodes(opts) {\n    return __async(this, null, function* () {\n      const { label } = this.properties;\n      opts.labelSelection.each((text, datum) => {\n        var _a, _b, _c, _d;\n        text.text = datum.label.text;\n        text.fill = label.color;\n        text.x = (_b = (_a = datum.point) == null ? void 0 : _a.x) != null ? _b : 0;\n        text.y = (_d = (_c = datum.point) == null ? void 0 : _c.y) != null ? _d : 0;\n        text.fontStyle = label.fontStyle;\n        text.fontWeight = label.fontWeight;\n        text.fontSize = label.fontSize;\n        text.fontFamily = label.fontFamily;\n        text.textAlign = \"left\";\n        text.textBaseline = \"top\";\n      });\n    });\n  }\n  getTooltipHtml(nodeDatum) {\n    const xAxis = this.axes[\"x\" /* X */];\n    const yAxis = this.axes[\"y\" /* Y */];\n    if (!this.properties.isValid() || !xAxis || !yAxis) {\n      return \"\";\n    }\n    const { xKey, yKey, labelKey, xName, yName, labelName, title = yName, marker, tooltip } = this.properties;\n    const { datum, xValue, yValue, label } = nodeDatum;\n    const baseStyle = mergeDefaults(\n      { fill: nodeDatum.fill, strokeWidth: this.getStrokeWidth(marker.strokeWidth) },\n      marker.getStyle()\n    );\n    const { fill: color = \"gray\" } = this.getMarkerStyle(\n      marker,\n      { datum: nodeDatum, highlighted: false, xKey, yKey, labelKey },\n      baseStyle\n    );\n    const xString = sanitizeHtml(xAxis.formatDatum(xValue));\n    const yString = sanitizeHtml(yAxis.formatDatum(yValue));\n    let content = `<b>${sanitizeHtml(xName != null ? xName : xKey)}</b>: ${xString}<br><b>${sanitizeHtml(yName != null ? yName : yKey)}</b>: ${yString}`;\n    if (labelKey) {\n      content = `<b>${sanitizeHtml(labelName != null ? labelName : labelKey)}</b>: ${sanitizeHtml(label.text)}<br>` + content;\n    }\n    return tooltip.toTooltipHtml(\n      { title, content, backgroundColor: color },\n      __spreadValues({\n        datum,\n        xKey,\n        xName,\n        yKey,\n        yName,\n        labelKey,\n        labelName,\n        title,\n        color,\n        seriesId: this.id\n      }, this.getModuleTooltipParams())\n    );\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e, _f;\n    const { yKey, yName, title, marker, visible } = this.properties;\n    const { fill, stroke, fillOpacity, strokeOpacity, strokeWidth } = marker;\n    if (!((_a = this.data) == null ? void 0 : _a.length) || !this.properties.isValid() || legendType !== \"category\") {\n      return [];\n    }\n    return [\n      {\n        legendType: \"category\",\n        id: this.id,\n        itemId: yKey,\n        seriesId: this.id,\n        enabled: visible,\n        label: {\n          text: (_b = title != null ? title : yName) != null ? _b : yKey\n        },\n        marker: {\n          shape: marker.shape,\n          fill: (_d = (_c = marker.fill) != null ? _c : fill) != null ? _d : \"rgba(0, 0, 0, 0)\",\n          stroke: (_f = (_e = marker.stroke) != null ? _e : stroke) != null ? _f : \"rgba(0, 0, 0, 0)\",\n          fillOpacity: fillOpacity != null ? fillOpacity : 1,\n          strokeOpacity: strokeOpacity != null ? strokeOpacity : 1,\n          strokeWidth: strokeWidth != null ? strokeWidth : 0\n        }\n      }\n    ];\n  }\n  animateEmptyUpdateReady(data) {\n    const { markerSelections, labelSelections, annotationSelections } = data;\n    markerScaleInAnimation(this, this.ctx.animationManager, markerSelections);\n    seriesLabelFadeInAnimation(this, \"labels\", this.ctx.animationManager, labelSelections);\n    seriesLabelFadeInAnimation(this, \"annotations\", this.ctx.animationManager, annotationSelections);\n  }\n  isLabelEnabled() {\n    return this.properties.label.enabled;\n  }\n  nodeFactory() {\n    return new Group();\n  }\n};\n_ScatterSeries.className = \"ScatterSeries\";\n_ScatterSeries.type = \"scatter\";\nvar ScatterSeries = _ScatterSeries;\n\n// packages/ag-charts-community/src/chart/series/cartesian/scatterSeriesModule.ts\nvar ScatterSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"cartesian\"],\n  identifier: \"scatter\",\n  instanceConstructor: ScatterSeries,\n  seriesDefaults: {\n    axes: [\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.BOTTOM },\n      { type: CARTESIAN_AXIS_TYPES.NUMBER, position: CARTESIAN_AXIS_POSITIONS.LEFT }\n    ]\n  },\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    tooltip: {\n      position: {\n        type: \"node\"\n      }\n    },\n    marker: {\n      __extends__: EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n      fillOpacity: 0.8\n    },\n    label: {\n      enabled: false,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR\n    }\n  },\n  enterpriseThemeTemplate: {\n    errorBar: {\n      cap: {\n        lengthRatio: 1\n      }\n    }\n  },\n  paletteFactory: markerPaletteFactory\n};\n\n// packages/ag-charts-community/src/chart/themes/defaultColors.ts\nvar DEFAULT_FILLS = {\n  BLUE: \"#5090dc\",\n  ORANGE: \"#ffa03a\",\n  GREEN: \"#459d55\",\n  CYAN: \"#34bfe1\",\n  YELLOW: \"#e1cc00\",\n  VIOLET: \"#9669cb\",\n  GRAY: \"#b5b5b5\",\n  MAGENTA: \"#bd5aa7\",\n  BROWN: \"#8a6224\",\n  RED: \"#ef5452\"\n};\nvar DEFAULT_STROKES = {\n  BLUE: \"#2b5c95\",\n  ORANGE: \"#cc6f10\",\n  GREEN: \"#1e652e\",\n  CYAN: \"#18859e\",\n  YELLOW: \"#a69400\",\n  VIOLET: \"#603c88\",\n  GRAY: \"#575757\",\n  MAGENTA: \"#7d2f6d\",\n  BROWN: \"#4f3508\",\n  RED: \"#a82529\"\n};\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeriesProperties.ts\nvar PieTitle = class extends Caption {\n  constructor() {\n    super(...arguments);\n    this.showInLegend = false;\n  }\n};\n__decorateClass([\n  Validate(BOOLEAN)\n], PieTitle.prototype, \"showInLegend\", 2);\nvar DoughnutInnerLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.margin = 2;\n  }\n  set(properties, _reset) {\n    return super.set(properties);\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], DoughnutInnerLabel.prototype, \"text\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], DoughnutInnerLabel.prototype, \"margin\", 2);\nvar DoughnutInnerCircle = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.fill = \"transparent\";\n    this.fillOpacity = 1;\n  }\n};\n__decorateClass([\n  Validate(COLOR_STRING)\n], DoughnutInnerCircle.prototype, \"fill\", 2);\n__decorateClass([\n  Validate(RATIO)\n], DoughnutInnerCircle.prototype, \"fillOpacity\", 2);\nvar PieSeriesCalloutLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.offset = 3;\n    this.minAngle = 0;\n    this.minSpacing = 4;\n    this.maxCollisionOffset = 50;\n    this.avoidCollisions = true;\n  }\n};\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesCalloutLabel.prototype, \"offset\", 2);\n__decorateClass([\n  Validate(DEGREE)\n], PieSeriesCalloutLabel.prototype, \"minAngle\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesCalloutLabel.prototype, \"minSpacing\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesCalloutLabel.prototype, \"maxCollisionOffset\", 2);\n__decorateClass([\n  Validate(BOOLEAN)\n], PieSeriesCalloutLabel.prototype, \"avoidCollisions\", 2);\nvar PieSeriesSectorLabel = class extends Label {\n  constructor() {\n    super(...arguments);\n    this.positionOffset = 0;\n    this.positionRatio = 0.5;\n  }\n};\n__decorateClass([\n  Validate(NUMBER)\n], PieSeriesSectorLabel.prototype, \"positionOffset\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PieSeriesSectorLabel.prototype, \"positionRatio\", 2);\nvar PieSeriesCalloutLine = class extends BaseProperties {\n  constructor() {\n    super(...arguments);\n    this.length = 10;\n    this.strokeWidth = 1;\n  }\n};\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY, { optional: true })\n], PieSeriesCalloutLine.prototype, \"colors\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesCalloutLine.prototype, \"length\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesCalloutLine.prototype, \"strokeWidth\", 2);\nvar PieSeriesProperties = class extends SeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.fills = Object.values(DEFAULT_FILLS);\n    this.strokes = Object.values(DEFAULT_STROKES);\n    this.fillOpacity = 1;\n    this.strokeOpacity = 1;\n    this.lineDash = [0];\n    this.lineDashOffset = 0;\n    this.rotation = 0;\n    this.outerRadiusOffset = 0;\n    this.outerRadiusRatio = 1;\n    this.innerRadiusOffset = 0;\n    this.innerRadiusRatio = 1;\n    this.strokeWidth = 1;\n    this.sectorSpacing = void 0;\n    this.innerLabels = new PropertiesArray(DoughnutInnerLabel);\n    this.title = new PieTitle();\n    this.innerCircle = new DoughnutInnerCircle();\n    this.shadow = new DropShadow();\n    this.calloutLabel = new PieSeriesCalloutLabel();\n    this.sectorLabel = new PieSeriesSectorLabel();\n    this.calloutLine = new PieSeriesCalloutLine();\n    this.tooltip = new SeriesTooltip();\n    this.__BACKGROUND_COLOR_DO_NOT_USE = void 0;\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], PieSeriesProperties.prototype, \"angleKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"angleName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"radiusKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"radiusName\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], PieSeriesProperties.prototype, \"radiusMin\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], PieSeriesProperties.prototype, \"radiusMax\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"calloutLabelKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"calloutLabelName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"sectorLabelKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"sectorLabelName\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"legendItemKey\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], PieSeriesProperties.prototype, \"fills\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], PieSeriesProperties.prototype, \"strokes\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PieSeriesProperties.prototype, \"fillOpacity\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PieSeriesProperties.prototype, \"strokeOpacity\", 2);\n__decorateClass([\n  Validate(LINE_DASH)\n], PieSeriesProperties.prototype, \"lineDash\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesProperties.prototype, \"lineDashOffset\", 2);\n__decorateClass([\n  Validate(FUNCTION, { optional: true })\n], PieSeriesProperties.prototype, \"formatter\", 2);\n__decorateClass([\n  Validate(DEGREE)\n], PieSeriesProperties.prototype, \"rotation\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], PieSeriesProperties.prototype, \"outerRadiusOffset\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PieSeriesProperties.prototype, \"outerRadiusRatio\", 2);\n__decorateClass([\n  Validate(NUMBER)\n], PieSeriesProperties.prototype, \"innerRadiusOffset\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PieSeriesProperties.prototype, \"innerRadiusRatio\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER)\n], PieSeriesProperties.prototype, \"strokeWidth\", 2);\n__decorateClass([\n  Validate(POSITIVE_NUMBER, { optional: true })\n], PieSeriesProperties.prototype, \"sectorSpacing\", 2);\n__decorateClass([\n  Validate(OBJECT_ARRAY)\n], PieSeriesProperties.prototype, \"innerLabels\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"title\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"innerCircle\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"shadow\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"calloutLabel\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"sectorLabel\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"calloutLine\", 2);\n__decorateClass([\n  Validate(OBJECT)\n], PieSeriesProperties.prototype, \"tooltip\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], PieSeriesProperties.prototype, \"__BACKGROUND_COLOR_DO_NOT_USE\", 2);\n\n// packages/ag-charts-community/src/chart/series/polar/pieUtil.ts\nfunction preparePieSeriesAnimationFunctions(initialLoad, rotationDegrees, scaleFn, oldScaleFn) {\n  const scale2 = [scaleFn.convert(0), scaleFn.convert(1)];\n  const oldScale = [oldScaleFn.convert(0), oldScaleFn.convert(1)];\n  const rotation = Math.PI / -2 + toRadians(rotationDegrees);\n  const scaleToNewRadius = ({ radius }) => {\n    return { innerRadius: scale2[0], outerRadius: scale2[0] + (scale2[1] - scale2[0]) * radius };\n  };\n  const scaleToOldRadius = ({ radius }) => {\n    return { innerRadius: oldScale[0], outerRadius: oldScale[0] + (oldScale[1] - oldScale[0]) * radius };\n  };\n  const fromFn = (sect, datum, status, { prevFromProps }) => {\n    var _a, _b, _c, _d, _e, _f;\n    let { startAngle, endAngle, innerRadius, outerRadius } = sect;\n    let { fill, stroke } = datum.sectorFormat;\n    if (status === \"unknown\" || status === \"added\" && !prevFromProps) {\n      startAngle = rotation;\n      endAngle = rotation;\n      innerRadius = datum.innerRadius;\n      outerRadius = datum.outerRadius;\n    } else if (status === \"added\" && prevFromProps) {\n      startAngle = (_a = prevFromProps.endAngle) != null ? _a : rotation;\n      endAngle = (_b = prevFromProps.endAngle) != null ? _b : rotation;\n      innerRadius = (_c = prevFromProps.innerRadius) != null ? _c : datum.innerRadius;\n      outerRadius = (_d = prevFromProps.outerRadius) != null ? _d : datum.outerRadius;\n    }\n    if (status === \"added\" && !initialLoad) {\n      const radii = scaleToOldRadius(datum);\n      innerRadius = radii.innerRadius;\n      outerRadius = radii.outerRadius;\n    }\n    if (status === \"updated\") {\n      fill = (_e = sect.fill) != null ? _e : fill;\n      stroke = (_f = sect.stroke) != null ? _f : stroke;\n    }\n    return { startAngle, endAngle, innerRadius, outerRadius, fill, stroke };\n  };\n  const toFn = (_sect, datum, status, { prevLive }) => {\n    var _a, _b;\n    let { startAngle, endAngle, innerRadius, outerRadius } = datum;\n    const { stroke, fill } = datum.sectorFormat;\n    if (status === \"removed\" && prevLive) {\n      startAngle = (_a = prevLive.datum) == null ? void 0 : _a.endAngle;\n      endAngle = (_b = prevLive.datum) == null ? void 0 : _b.endAngle;\n    } else if (status === \"removed\" && !prevLive) {\n      startAngle = rotation;\n      endAngle = rotation;\n    }\n    if (status === \"removed\") {\n      const radii = scaleToNewRadius(datum);\n      innerRadius = radii.innerRadius;\n      outerRadius = radii.outerRadius;\n    }\n    return { startAngle, endAngle, outerRadius, innerRadius, stroke, fill };\n  };\n  const innerCircle = {\n    fromFn: (node, _datum) => {\n      var _a, _b, _c;\n      return { size: (_c = (_b = (_a = node.previousDatum) == null ? void 0 : _a.radius) != null ? _b : node.size) != null ? _c : 0 };\n    },\n    toFn: (_node, datum) => {\n      var _a;\n      return { size: (_a = datum.radius) != null ? _a : 0 };\n    }\n  };\n  return { nodes: { toFn, fromFn }, innerCircle };\n}\nfunction resetPieSelectionsFn(_node, datum) {\n  return {\n    startAngle: datum.startAngle,\n    endAngle: datum.endAngle,\n    innerRadius: datum.innerRadius,\n    outerRadius: datum.outerRadius,\n    fill: datum.sectorFormat.fill,\n    stroke: datum.sectorFormat.stroke\n  };\n}\n\n// packages/ag-charts-community/src/chart/series/polar/polarSeries.ts\nvar PolarSeries = class extends DataModelSeries {\n  constructor(_a) {\n    var _b = _a, {\n      useLabelLayer = false,\n      pickModes = [0 /* EXACT_SHAPE_MATCH */],\n      canHaveAxes = false,\n      animationResetFns\n    } = _b, opts = __objRest(_b, [\n      \"useLabelLayer\",\n      \"pickModes\",\n      \"canHaveAxes\",\n      \"animationResetFns\"\n    ]);\n    super(__spreadProps(__spreadValues({}, opts), {\n      useLabelLayer,\n      pickModes,\n      contentGroupVirtual: false,\n      directionKeys: {\n        [\"x\" /* X */]: [\"angleKey\"],\n        [\"y\" /* Y */]: [\"radiusKey\"]\n      },\n      directionNames: {\n        [\"x\" /* X */]: [\"angleName\"],\n        [\"y\" /* Y */]: [\"radiusName\"]\n      },\n      canHaveAxes\n    }));\n    this.sectorGroup = this.contentGroup.appendChild(new Group());\n    this.itemSelection = Selection.select(\n      this.sectorGroup,\n      () => this.nodeFactory(),\n      false\n    );\n    this.labelSelection = Selection.select(this.labelGroup, Text, false);\n    this.highlightSelection = Selection.select(\n      this.highlightGroup,\n      () => this.nodeFactory()\n    );\n    /**\n     * The center of the polar series (for example, the center of a pie).\n     * If the polar chart has multiple series, all of them will have their\n     * center set to the same value as a result of the polar chart layout.\n     * The center coordinates are not supposed to be set by the user.\n     */\n    this.centerX = 0;\n    this.centerY = 0;\n    /**\n     * The maximum radius the series can use.\n     * This value is set automatically as a result of the polar chart layout\n     * and is not supposed to be set by the user.\n     */\n    this.radius = 0;\n    this.sectorGroup.zIndexSubOrder = [() => this._declarationOrder, 1];\n    this.animationResetFns = animationResetFns;\n    this.animationState = new StateMachine(\n      \"empty\",\n      {\n        empty: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateEmptyUpdateReady(data)\n          }\n        },\n        ready: {\n          updateData: \"waiting\",\n          clear: \"clearing\",\n          highlight: (data) => this.animateReadyHighlight(data),\n          highlightMarkers: (data) => this.animateReadyHighlightMarkers(data),\n          resize: (data) => this.animateReadyResize(data)\n        },\n        waiting: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateWaitingUpdateReady(data)\n          }\n        },\n        clearing: {\n          update: {\n            target: \"empty\",\n            action: (data) => this.animateClearingUpdateEmpty(data)\n          }\n        }\n      },\n      () => this.checkProcessedDataAnimatable()\n    );\n  }\n  getLabelData() {\n    return [];\n  }\n  computeLabelsBBox(_options, _seriesRect) {\n    return null;\n  }\n  resetAllAnimation() {\n    var _a;\n    const { item, label } = (_a = this.animationResetFns) != null ? _a : {};\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (item) {\n      resetMotion([this.itemSelection, this.highlightSelection], item);\n    }\n    if (label) {\n      resetMotion([this.labelSelection], label);\n    }\n    this.itemSelection.cleanup();\n    this.labelSelection.cleanup();\n    this.highlightSelection.cleanup();\n  }\n  animateEmptyUpdateReady(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animateWaitingUpdateReady(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animateReadyHighlight(_data) {\n    var _a;\n    const { item } = (_a = this.animationResetFns) != null ? _a : {};\n    if (item) {\n      resetMotion([this.highlightSelection], item);\n    }\n  }\n  animateReadyHighlightMarkers(_data) {\n  }\n  animateReadyResize(_data) {\n    this.resetAllAnimation();\n  }\n  animateClearingUpdateEmpty(_data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation();\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData(seriesRect) {\n    return { seriesRect };\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeries.ts\nvar PieSeriesNodeClickEvent = class extends SeriesNodeClickEvent {\n  constructor(type, nativeEvent, datum, series) {\n    super(type, nativeEvent, datum, series);\n    this.angleKey = series.properties.angleKey;\n    this.radiusKey = series.properties.radiusKey;\n    this.calloutLabelKey = series.properties.calloutLabelKey;\n    this.sectorLabelKey = series.properties.sectorLabelKey;\n  }\n};\nvar PieSeries = class extends PolarSeries {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      useLabelLayer: true,\n      animationResetFns: { item: resetPieSelectionsFn, label: resetLabelFn }\n    });\n    this.properties = new PieSeriesProperties();\n    this.previousRadiusScale = new LinearScale();\n    this.radiusScale = new LinearScale();\n    // The group node that contains the background graphics.\n    this.backgroundGroup = this.rootGroup.appendChild(\n      new Group({\n        name: `${this.id}-background`,\n        layer: true,\n        zIndex: 0 /* SERIES_BACKGROUND_ZINDEX */\n      })\n    );\n    // AG-6193 If the sum of all datums is 0, then we'll draw 1 or 2 rings to represent the empty series.\n    this.zerosumRingsGroup = this.backgroundGroup.appendChild(new Group({ name: `${this.id}-zerosumRings` }));\n    this.zerosumOuterRing = this.zerosumRingsGroup.appendChild(new Circle());\n    this.zerosumInnerRing = this.zerosumRingsGroup.appendChild(new Circle());\n    this.innerCircleGroup = this.backgroundGroup.appendChild(new Group({ name: `${this.id}-innerCircle` }));\n    this.nodeData = [];\n    // When a user toggles a series item (e.g. from the legend), its boolean state is recorded here.\n    this.seriesItemEnabled = [];\n    this.surroundingRadius = void 0;\n    this.NodeClickEvent = PieSeriesNodeClickEvent;\n    this.angleScale = new LinearScale();\n    this.angleScale.domain = [0, 1];\n    this.angleScale.range = [-Math.PI, Math.PI].map((angle) => angle + Math.PI / 2);\n    const pieCalloutLabels = new Group({ name: \"pieCalloutLabels\" });\n    const pieSectorLabels = new Group({ name: \"pieSectorLabels\" });\n    const innerLabels = new Group({ name: \"innerLabels\" });\n    this.labelGroup.append(pieCalloutLabels);\n    this.labelGroup.append(pieSectorLabels);\n    this.labelGroup.append(innerLabels);\n    this.calloutLabelSelection = Selection.select(pieCalloutLabels, Group);\n    this.sectorLabelSelection = Selection.select(pieSectorLabels, Text);\n    this.innerLabelsSelection = Selection.select(innerLabels, Text);\n    this.innerCircleSelection = Selection.select(this.innerCircleGroup, Circle);\n    for (const circle of [this.zerosumInnerRing, this.zerosumOuterRing]) {\n      circle.fillOpacity = 0;\n      circle.stroke = this.properties.calloutLabel.color;\n      circle.strokeWidth = 1;\n      circle.strokeOpacity = 1;\n    }\n  }\n  addChartEventListeners() {\n    var _a;\n    (_a = this.ctx.chartEventManager) == null ? void 0 : _a.addListener(\"legend-item-click\", (event) => this.onLegendItemClick(event));\n  }\n  visibleChanged() {\n    this.processSeriesItemEnabled();\n  }\n  get visible() {\n    return this.seriesItemEnabled.length ? this.seriesItemEnabled.some((visible) => visible) : super.visible;\n  }\n  processSeriesItemEnabled() {\n    var _a;\n    const { data, visible } = this;\n    this.seriesItemEnabled = (_a = data == null ? void 0 : data.map(() => visible)) != null ? _a : [];\n  }\n  nodeFactory() {\n    return new Sector();\n  }\n  getSeriesDomain(direction) {\n    if (direction === \"x\" /* X */) {\n      return this.angleScale.domain;\n    } else {\n      return this.radiusScale.domain;\n    }\n  }\n  processData(dataController) {\n    return __async(this, null, function* () {\n      var _a, _b, _c, _d, _e;\n      if (this.data == null || !this.properties.isValid()) {\n        return;\n      }\n      let { data } = this;\n      const { seriesItemEnabled } = this;\n      const { angleKey, radiusKey, calloutLabelKey, sectorLabelKey, legendItemKey } = this.properties;\n      const animationEnabled = !this.ctx.animationManager.isSkipped();\n      const extraKeyProps = [];\n      const extraProps = [];\n      if (legendItemKey) {\n        extraKeyProps.push(keyProperty(this, legendItemKey, false, { id: `legendItemKey` }));\n      } else if (calloutLabelKey) {\n        extraKeyProps.push(keyProperty(this, calloutLabelKey, false, { id: `calloutLabelKey` }));\n      } else if (sectorLabelKey) {\n        extraKeyProps.push(keyProperty(this, sectorLabelKey, false, { id: `sectorLabelKey` }));\n      }\n      if (radiusKey) {\n        extraProps.push(\n          rangedValueProperty(this, radiusKey, {\n            id: \"radiusValue\",\n            min: (_a = this.properties.radiusMin) != null ? _a : 0,\n            max: this.properties.radiusMax\n          }),\n          valueProperty(this, radiusKey, true, { id: `radiusRaw` }),\n          // Raw value pass-through.\n          normalisePropertyTo(\n            this,\n            { id: \"radiusValue\" },\n            [0, 1],\n            1,\n            (_b = this.properties.radiusMin) != null ? _b : 0,\n            this.properties.radiusMax\n          )\n        );\n      }\n      if (calloutLabelKey) {\n        extraProps.push(valueProperty(this, calloutLabelKey, false, { id: `calloutLabelValue` }));\n      }\n      if (sectorLabelKey) {\n        extraProps.push(valueProperty(this, sectorLabelKey, false, { id: `sectorLabelValue` }));\n      }\n      if (legendItemKey) {\n        extraProps.push(valueProperty(this, legendItemKey, false, { id: `legendItemValue` }));\n      }\n      if (animationEnabled && this.processedData && extraKeyProps.length > 0) {\n        extraProps.push(diff(this.processedData));\n      }\n      extraProps.push(animationValidation(this));\n      data = data.map((d, idx) => seriesItemEnabled[idx] ? d : __spreadProps(__spreadValues({}, d), { [angleKey]: 0 }));\n      yield this.requestDataModel(dataController, data, {\n        props: [\n          ...extraKeyProps,\n          accumulativeValueProperty(this, angleKey, true, { id: `angleValue`, onlyPositive: true }),\n          valueProperty(this, angleKey, true, { id: `angleRaw` }),\n          // Raw value pass-through.\n          normalisePropertyTo(this, { id: \"angleValue\" }, [0, 1], 0, 0),\n          ...extraProps\n        ]\n      });\n      for (const valueDef of (_e = (_d = (_c = this.processedData) == null ? void 0 : _c.defs) == null ? void 0 : _d.values) != null ? _e : []) {\n        const { id, missing, property } = valueDef;\n        if (id !== \"angleRaw\" && missing !== void 0 && missing > 0) {\n          Logger.warnOnce(\n            `no value was found for the key '${String(property)}' on ${missing} data element${missing > 1 ? \"s\" : \"\"}`\n          );\n        }\n      }\n      this.animationState.transition(\"updateData\");\n    });\n  }\n  maybeRefreshNodeData() {\n    return __async(this, null, function* () {\n      if (!this.nodeDataRefresh)\n        return;\n      const [{ nodeData = [] } = {}] = yield this.createNodeData();\n      this.nodeData = nodeData;\n      this.nodeDataRefresh = false;\n    });\n  }\n  getProcessedDataIndexes(dataModel) {\n    const angleIdx = dataModel.resolveProcessedDataIndexById(this, `angleValue`).index;\n    const radiusIdx = this.properties.radiusKey ? dataModel.resolveProcessedDataIndexById(this, `radiusValue`).index : -1;\n    const calloutLabelIdx = this.properties.calloutLabelKey ? dataModel.resolveProcessedDataIndexById(this, `calloutLabelValue`).index : -1;\n    const sectorLabelIdx = this.properties.sectorLabelKey ? dataModel.resolveProcessedDataIndexById(this, `sectorLabelValue`).index : -1;\n    const legendItemIdx = this.properties.legendItemKey ? dataModel.resolveProcessedDataIndexById(this, `legendItemValue`).index : -1;\n    return { angleIdx, radiusIdx, calloutLabelIdx, sectorLabelIdx, legendItemIdx };\n  }\n  createNodeData() {\n    return __async(this, null, function* () {\n      const { id: seriesId, processedData, dataModel, angleScale } = this;\n      const { rotation } = this.properties;\n      if (!processedData || !dataModel || processedData.type !== \"ungrouped\")\n        return [];\n      const { angleIdx, radiusIdx, calloutLabelIdx, sectorLabelIdx, legendItemIdx } = this.getProcessedDataIndexes(dataModel);\n      let currentStart = 0;\n      let sum2 = 0;\n      const nodeData = processedData.data.map((group2, index) => {\n        var _a;\n        const { datum, values } = group2;\n        const currentValue = values[angleIdx];\n        const startAngle = angleScale.convert(currentStart) + toRadians(rotation);\n        currentStart = currentValue;\n        sum2 += currentValue;\n        const endAngle = angleScale.convert(currentStart) + toRadians(rotation);\n        const span = Math.abs(endAngle - startAngle);\n        const midAngle = startAngle + span / 2;\n        const angleValue = values[angleIdx + 1];\n        const radius = radiusIdx >= 0 ? (_a = values[radiusIdx]) != null ? _a : 1 : 1;\n        const radiusValue = radiusIdx >= 0 ? values[radiusIdx + 1] : void 0;\n        const legendItemValue = legendItemIdx >= 0 ? values[legendItemIdx] : void 0;\n        const labels = this.getLabels(\n          datum,\n          midAngle,\n          span,\n          true,\n          values[calloutLabelIdx],\n          values[sectorLabelIdx],\n          legendItemValue\n        );\n        const sectorFormat = this.getSectorFormat(datum, index, false);\n        return __spreadValues({\n          itemId: index,\n          series: this,\n          datum,\n          index,\n          angleValue,\n          midAngle,\n          midCos: Math.cos(midAngle),\n          midSin: Math.sin(midAngle),\n          startAngle,\n          endAngle,\n          sectorFormat,\n          radiusValue,\n          radius,\n          innerRadius: Math.max(this.radiusScale.convert(0), 0),\n          outerRadius: Math.max(this.radiusScale.convert(radius), 0),\n          legendItemValue\n        }, labels);\n      });\n      this.zerosumOuterRing.visible = sum2 === 0;\n      this.zerosumInnerRing.visible = sum2 === 0 && this.properties.innerRadiusRatio !== 1 && this.properties.innerRadiusRatio > 0;\n      return [{ itemId: seriesId, nodeData, labelData: nodeData }];\n    });\n  }\n  getLabels(datum, midAngle, span, skipDisabled, calloutLabelValue, sectorLabelValue, legendItemValue) {\n    const { calloutLabel, sectorLabel, legendItemKey } = this.properties;\n    const calloutLabelKey = !skipDisabled || calloutLabel.enabled ? this.properties.calloutLabelKey : void 0;\n    const sectorLabelKey = !skipDisabled || sectorLabel.enabled ? this.properties.sectorLabelKey : void 0;\n    if (!calloutLabelKey && !sectorLabelKey && !legendItemKey) {\n      return {};\n    }\n    const labelFormatterParams = {\n      datum,\n      angleKey: this.properties.angleKey,\n      angleName: this.properties.angleName,\n      radiusKey: this.properties.radiusKey,\n      radiusName: this.properties.radiusName,\n      calloutLabelKey: this.properties.calloutLabelKey,\n      calloutLabelName: this.properties.calloutLabelName,\n      sectorLabelKey: this.properties.sectorLabelKey,\n      sectorLabelName: this.properties.sectorLabelName,\n      legendItemKey: this.properties.legendItemKey\n    };\n    const result = {};\n    if (calloutLabelKey && span > toRadians(calloutLabel.minAngle)) {\n      result.calloutLabel = __spreadProps(__spreadValues({}, this.getTextAlignment(midAngle)), {\n        text: this.getLabelText(calloutLabel, __spreadProps(__spreadValues({}, labelFormatterParams), {\n          value: calloutLabelValue\n        })),\n        hidden: false,\n        collisionTextAlign: void 0,\n        collisionOffsetY: 0,\n        box: void 0\n      });\n    }\n    if (sectorLabelKey) {\n      result.sectorLabel = {\n        text: this.getLabelText(sectorLabel, __spreadProps(__spreadValues({}, labelFormatterParams), {\n          value: sectorLabelValue\n        }))\n      };\n    }\n    if (legendItemKey != null && legendItemValue != null) {\n      result.legendItem = { key: legendItemKey, text: legendItemValue };\n    }\n    return result;\n  }\n  getTextAlignment(midAngle) {\n    const quadrantTextOpts = [\n      { textAlign: \"center\", textBaseline: \"bottom\" },\n      { textAlign: \"left\", textBaseline: \"middle\" },\n      { textAlign: \"center\", textBaseline: \"hanging\" },\n      { textAlign: \"right\", textBaseline: \"middle\" }\n    ];\n    const midAngle180 = normalizeAngle180(midAngle);\n    const quadrantStart = -3 * Math.PI / 4;\n    const quadrantOffset = midAngle180 - quadrantStart;\n    const quadrant = Math.floor(quadrantOffset / (Math.PI / 2));\n    const quadrantIndex = mod(quadrant, quadrantTextOpts.length);\n    return quadrantTextOpts[quadrantIndex];\n  }\n  getSectorFormat(datum, formatIndex, highlight) {\n    var _a, _b, _c, _d, _e;\n    const { callbackCache, highlightManager } = this.ctx;\n    const { angleKey, radiusKey, fills, strokes, formatter, sectorSpacing, __BACKGROUND_COLOR_DO_NOT_USE } = this.properties;\n    const highlightedDatum = highlightManager.getActiveHighlight();\n    const isDatumHighlighted = highlight && (highlightedDatum == null ? void 0 : highlightedDatum.series) === this && formatIndex === highlightedDatum.itemId;\n    const { fill, fillOpacity, stroke, strokeWidth, strokeOpacity } = mergeDefaults(\n      isDatumHighlighted && this.properties.highlightStyle.item,\n      {\n        fill: fills.length > 0 ? fills[formatIndex % fills.length] : void 0,\n        fillOpacity: this.properties.fillOpacity,\n        // @todo(AG-10275) Remove sectorSpacing null case\n        stroke: sectorSpacing != null ? strokes.length > 0 ? strokes[formatIndex % strokes.length] : void 0 : strokes.length > 0 ? strokes[formatIndex % strokes.length] : __BACKGROUND_COLOR_DO_NOT_USE,\n        strokeWidth: this.getStrokeWidth(this.properties.strokeWidth),\n        strokeOpacity: this.getOpacity()\n      }\n    );\n    let format2;\n    if (formatter) {\n      format2 = callbackCache.call(formatter, {\n        datum,\n        angleKey,\n        radiusKey,\n        fill,\n        stroke,\n        fills,\n        strokes,\n        strokeWidth,\n        highlighted: isDatumHighlighted,\n        seriesId: this.id\n      });\n    }\n    return {\n      fill: (_a = format2 == null ? void 0 : format2.fill) != null ? _a : fill,\n      fillOpacity: (_b = format2 == null ? void 0 : format2.fillOpacity) != null ? _b : fillOpacity,\n      stroke: (_c = format2 == null ? void 0 : format2.stroke) != null ? _c : stroke,\n      strokeWidth: (_d = format2 == null ? void 0 : format2.strokeWidth) != null ? _d : strokeWidth,\n      strokeOpacity: (_e = format2 == null ? void 0 : format2.strokeOpacity) != null ? _e : strokeOpacity\n    };\n  }\n  getInnerRadius() {\n    const { radius } = this;\n    const { innerRadiusRatio, innerRadiusOffset } = this.properties;\n    const innerRadius = radius * innerRadiusRatio + innerRadiusOffset;\n    if (innerRadius === radius || innerRadius < 0) {\n      return 0;\n    }\n    return innerRadius;\n  }\n  getOuterRadius() {\n    return Math.max(this.radius * this.properties.outerRadiusRatio + this.properties.outerRadiusOffset, 0);\n  }\n  updateRadiusScale(resize) {\n    const newRange = [this.getInnerRadius(), this.getOuterRadius()];\n    this.radiusScale.range = newRange;\n    if (resize) {\n      this.previousRadiusScale.range = newRange;\n    }\n    this.nodeData = this.nodeData.map((_a) => {\n      var _b = _a, { radius } = _b, d = __objRest(_b, [\"radius\"]);\n      return __spreadProps(__spreadValues({}, d), {\n        radius,\n        innerRadius: Math.max(this.radiusScale.convert(0), 0),\n        outerRadius: Math.max(this.radiusScale.convert(radius), 0)\n      });\n    });\n  }\n  getTitleTranslationY() {\n    var _a, _b;\n    const outerRadius = Math.max(0, this.radiusScale.range[1]);\n    if (outerRadius === 0) {\n      return NaN;\n    }\n    const spacing = (_b = (_a = this.properties.title) == null ? void 0 : _a.spacing) != null ? _b : 0;\n    const titleOffset = 2 + spacing;\n    const dy = Math.max(0, -outerRadius);\n    return -outerRadius - titleOffset - dy;\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({ seriesRect }) {\n      const { title } = this.properties;\n      const newNodeDataDependencies = {\n        seriesRectWidth: seriesRect == null ? void 0 : seriesRect.width,\n        seriesRectHeight: seriesRect == null ? void 0 : seriesRect.height\n      };\n      const resize = jsonDiff(this.nodeDataDependencies, newNodeDataDependencies) != null;\n      if (resize) {\n        this._nodeDataDependencies = newNodeDataDependencies;\n      }\n      yield this.maybeRefreshNodeData();\n      this.updateTitleNodes();\n      this.updateRadiusScale(resize);\n      this.contentGroup.translationX = this.centerX;\n      this.contentGroup.translationY = this.centerY;\n      this.highlightGroup.translationX = this.centerX;\n      this.highlightGroup.translationY = this.centerY;\n      this.backgroundGroup.translationX = this.centerX;\n      this.backgroundGroup.translationY = this.centerY;\n      if (this.labelGroup) {\n        this.labelGroup.translationX = this.centerX;\n        this.labelGroup.translationY = this.centerY;\n      }\n      if (title) {\n        const dy = this.getTitleTranslationY();\n        const titleBox = title.node.computeBBox();\n        title.node.visible = title.enabled && isFinite(dy) && !this.bboxIntersectsSurroundingSeries(titleBox, 0, dy);\n        title.node.translationY = isFinite(dy) ? dy : 0;\n      }\n      this.updateNodeMidPoint();\n      yield this.updateSelections();\n      yield this.updateNodes(seriesRect);\n    });\n  }\n  updateTitleNodes() {\n    var _a, _b;\n    const { oldTitle } = this;\n    const { title } = this.properties;\n    if (oldTitle !== title) {\n      if (oldTitle) {\n        (_a = this.labelGroup) == null ? void 0 : _a.removeChild(oldTitle.node);\n      }\n      if (title) {\n        title.node.textBaseline = \"bottom\";\n        (_b = this.labelGroup) == null ? void 0 : _b.appendChild(title.node);\n      }\n      this.oldTitle = title;\n    }\n  }\n  updateNodeMidPoint() {\n    this.nodeData.forEach((d) => {\n      const radius = d.innerRadius + (d.outerRadius - d.innerRadius) / 2;\n      d.midPoint = {\n        x: d.midCos * Math.max(0, radius),\n        y: d.midSin * Math.max(0, radius)\n      };\n    });\n  }\n  updateSelections() {\n    return __async(this, null, function* () {\n      yield this.updateGroupSelection();\n      this.updateInnerCircleSelection();\n    });\n  }\n  updateGroupSelection() {\n    return __async(this, null, function* () {\n      const { itemSelection, highlightSelection, calloutLabelSelection, sectorLabelSelection, innerLabelsSelection } = this;\n      const update = (selection, clone) => {\n        let nodeData = this.nodeData;\n        if (clone) {\n          nodeData = nodeData.map((datum) => __spreadProps(__spreadValues({}, datum), { sectorFormat: __spreadValues({}, datum.sectorFormat) }));\n        }\n        selection.update(nodeData);\n        if (this.ctx.animationManager.isSkipped()) {\n          selection.cleanup();\n        }\n      };\n      update(itemSelection, false);\n      update(highlightSelection, true);\n      calloutLabelSelection.update(this.nodeData, (group2) => {\n        const line = new Line();\n        line.tag = 1 /* Callout */;\n        line.pointerEvents = 1 /* None */;\n        group2.appendChild(line);\n        const text = new Text();\n        text.tag = 2 /* Label */;\n        text.pointerEvents = 1 /* None */;\n        group2.appendChild(text);\n      });\n      sectorLabelSelection.update(this.nodeData, (node) => {\n        node.pointerEvents = 1 /* None */;\n      });\n      innerLabelsSelection.update(this.properties.innerLabels, (node) => {\n        node.pointerEvents = 1 /* None */;\n      });\n    });\n  }\n  updateInnerCircleSelection() {\n    const { innerCircle } = this.properties;\n    let radius = 0;\n    const innerRadius = this.getInnerRadius();\n    if (innerRadius > 0) {\n      const circleRadius = Math.min(innerRadius, this.getOuterRadius());\n      const antiAliasingPadding = 1;\n      radius = Math.ceil(circleRadius * 2 + antiAliasingPadding);\n    }\n    const datums = innerCircle ? [{ radius }] : [];\n    this.innerCircleSelection.update(datums);\n  }\n  updateNodes(seriesRect) {\n    return __async(this, null, function* () {\n      const highlightedDatum = this.ctx.highlightManager.getActiveHighlight();\n      const isVisible = this.seriesItemEnabled.indexOf(true) >= 0;\n      this.rootGroup.visible = isVisible;\n      this.backgroundGroup.visible = isVisible;\n      this.contentGroup.visible = isVisible;\n      this.highlightGroup.visible = isVisible && (highlightedDatum == null ? void 0 : highlightedDatum.series) === this;\n      if (this.labelGroup) {\n        this.labelGroup.visible = isVisible;\n      }\n      this.contentGroup.opacity = this.getOpacity();\n      this.innerCircleSelection.each((node, { radius }) => {\n        var _a, _b;\n        node.setProperties({\n          fill: (_a = this.properties.innerCircle) == null ? void 0 : _a.fill,\n          opacity: (_b = this.properties.innerCircle) == null ? void 0 : _b.fillOpacity,\n          size: radius\n        });\n      });\n      const updateSectorFn = (sector, datum, _index, isDatumHighlighted) => {\n        const format2 = this.getSectorFormat(datum.datum, datum.itemId, isDatumHighlighted);\n        datum.sectorFormat.fill = format2.fill;\n        datum.sectorFormat.stroke = format2.stroke;\n        const animationDisabled = this.ctx.animationManager.isSkipped();\n        if (animationDisabled) {\n          sector.startAngle = datum.startAngle;\n          sector.endAngle = datum.endAngle;\n          sector.innerRadius = datum.innerRadius;\n          sector.outerRadius = datum.outerRadius;\n        }\n        if (isDatumHighlighted || animationDisabled) {\n          sector.fill = format2.fill;\n          sector.stroke = format2.stroke;\n        }\n        sector.strokeWidth = format2.strokeWidth;\n        sector.fillOpacity = format2.fillOpacity;\n        sector.strokeOpacity = this.properties.strokeOpacity;\n        sector.lineDash = this.properties.lineDash;\n        sector.lineDashOffset = this.properties.lineDashOffset;\n        sector.fillShadow = this.properties.shadow;\n        sector.inset = this.properties.sectorSpacing != null ? (this.properties.sectorSpacing + (format2.stroke != null ? format2.strokeWidth : 0)) / 2 : 0;\n        sector.lineJoin = this.properties.sectorSpacing != null ? \"miter\" : \"round\";\n      };\n      this.itemSelection.each((node, datum, index) => updateSectorFn(node, datum, index, false));\n      this.highlightSelection.each((node, datum, index) => {\n        const isDatumHighlighted = (highlightedDatum == null ? void 0 : highlightedDatum.series) === this && node.datum.itemId === highlightedDatum.itemId;\n        updateSectorFn(node, datum, index, isDatumHighlighted);\n        node.visible = isDatumHighlighted;\n      });\n      this.updateCalloutLineNodes();\n      this.updateCalloutLabelNodes(seriesRect);\n      this.updateSectorLabelNodes();\n      this.updateInnerLabelNodes();\n      this.updateZerosumRings();\n      this.animationState.transition(\"update\");\n    });\n  }\n  updateCalloutLineNodes() {\n    var _a;\n    const { calloutLine } = this.properties;\n    const calloutLength = calloutLine.length;\n    const calloutStrokeWidth = calloutLine.strokeWidth;\n    const calloutColors = (_a = calloutLine.colors) != null ? _a : this.properties.strokes;\n    const { offset: offset4 } = this.properties.calloutLabel;\n    this.calloutLabelSelection.selectByTag(1 /* Callout */).forEach((line, index) => {\n      const datum = line.datum;\n      const { calloutLabel: label, outerRadius } = datum;\n      if ((label == null ? void 0 : label.text) && !label.hidden && outerRadius !== 0) {\n        line.visible = true;\n        line.strokeWidth = calloutStrokeWidth;\n        line.stroke = calloutColors[index % calloutColors.length];\n        line.fill = void 0;\n        const x1 = datum.midCos * outerRadius;\n        const y1 = datum.midSin * outerRadius;\n        let x2 = datum.midCos * (outerRadius + calloutLength);\n        let y2 = datum.midSin * (outerRadius + calloutLength);\n        const isMoved = label.collisionTextAlign || label.collisionOffsetY !== 0;\n        if (isMoved && label.box != null) {\n          const box = label.box;\n          let cx = x2;\n          let cy = y2;\n          if (x2 < box.x) {\n            cx = box.x;\n          } else if (x2 > box.x + box.width) {\n            cx = box.x + box.width;\n          }\n          if (y2 < box.y) {\n            cy = box.y;\n          } else if (y2 > box.y + box.height) {\n            cy = box.y + box.height;\n          }\n          const dx = cx - x2;\n          const dy = cy - y2;\n          const length = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n          const paddedLength = length - offset4;\n          if (paddedLength > 0) {\n            x2 = x2 + dx * paddedLength / length;\n            y2 = y2 + dy * paddedLength / length;\n          }\n        }\n        line.x1 = x1;\n        line.y1 = y1;\n        line.x2 = x2;\n        line.y2 = y2;\n      } else {\n        line.visible = false;\n      }\n    });\n  }\n  getLabelOverflow(text, box, seriesRect) {\n    const seriesLeft = seriesRect.x - this.centerX;\n    const seriesRight = seriesRect.x + seriesRect.width - this.centerX;\n    const seriesTop = seriesRect.y - this.centerY;\n    const seriesBottom = seriesRect.y + seriesRect.height - this.centerY;\n    const errPx = 1;\n    let visibleTextPart = 1;\n    if (box.x + errPx < seriesLeft) {\n      visibleTextPart = (box.x + box.width - seriesLeft) / box.width;\n    } else if (box.x + box.width - errPx > seriesRight) {\n      visibleTextPart = (seriesRight - box.x) / box.width;\n    }\n    const hasVerticalOverflow = box.y + errPx < seriesTop || box.y + box.height - errPx > seriesBottom;\n    const textLength = visibleTextPart === 1 ? text.length : Math.floor(text.length * visibleTextPart) - 1;\n    const hasSurroundingSeriesOverflow = this.bboxIntersectsSurroundingSeries(box);\n    return { textLength, hasVerticalOverflow, hasSurroundingSeriesOverflow };\n  }\n  bboxIntersectsSurroundingSeries(box, dx = 0, dy = 0) {\n    const { surroundingRadius } = this;\n    if (surroundingRadius == null) {\n      return false;\n    }\n    const corners = [\n      { x: box.x + dx, y: box.y + dy },\n      { x: box.x + box.width + dx, y: box.y + dy },\n      { x: box.x + box.width + dx, y: box.y + box.height + dy },\n      { x: box.x + dx, y: box.y + box.height + dy }\n    ];\n    const sur2 = __pow(surroundingRadius, 2);\n    return corners.some((corner) => __pow(corner.x, 2) + __pow(corner.y, 2) > sur2);\n  }\n  computeCalloutLabelCollisionOffsets() {\n    const { radiusScale } = this;\n    const { calloutLabel, calloutLine } = this.properties;\n    const { offset: offset4, minSpacing } = calloutLabel;\n    const innerRadius = radiusScale.convert(0);\n    const shouldSkip = (datum) => {\n      const label = datum.calloutLabel;\n      return !label || datum.outerRadius === 0;\n    };\n    const fullData = this.nodeData;\n    const data = this.nodeData.filter((t) => !shouldSkip(t));\n    data.forEach((datum) => {\n      const label = datum.calloutLabel;\n      if (label == null)\n        return;\n      label.hidden = false;\n      label.collisionTextAlign = void 0;\n      label.collisionOffsetY = 0;\n    });\n    if (data.length <= 1) {\n      return;\n    }\n    const leftLabels = data.filter((d) => d.midCos < 0).sort((a, b) => a.midSin - b.midSin);\n    const rightLabels = data.filter((d) => d.midCos >= 0).sort((a, b) => a.midSin - b.midSin);\n    const topLabels = data.filter((d) => {\n      var _a;\n      return d.midSin < 0 && ((_a = d.calloutLabel) == null ? void 0 : _a.textAlign) === \"center\";\n    }).sort((a, b) => a.midCos - b.midCos);\n    const bottomLabels = data.filter((d) => {\n      var _a;\n      return d.midSin >= 0 && ((_a = d.calloutLabel) == null ? void 0 : _a.textAlign) === \"center\";\n    }).sort((a, b) => a.midCos - b.midCos);\n    const tempTextNode = new Text();\n    const getTextBBox = (datum) => {\n      var _a;\n      const label = datum.calloutLabel;\n      if (label == null)\n        return new BBox(0, 0, 0, 0);\n      const labelRadius = datum.outerRadius + calloutLine.length + offset4;\n      const x = datum.midCos * labelRadius;\n      const y = datum.midSin * labelRadius + label.collisionOffsetY;\n      tempTextNode.text = label.text;\n      tempTextNode.x = x;\n      tempTextNode.y = y;\n      tempTextNode.setFont(this.properties.calloutLabel);\n      tempTextNode.setAlign({\n        textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n        textBaseline: label.textBaseline\n      });\n      return tempTextNode.computeBBox();\n    };\n    const avoidNeighbourYCollision = (label, next, direction) => {\n      const box = getTextBBox(label).grow(minSpacing / 2);\n      const other = getTextBBox(next).grow(minSpacing / 2);\n      const collidesOrBehind = box.x < other.x + other.width && box.x + box.width > other.x && (direction === \"to-top\" ? box.y < other.y + other.height : box.y + box.height > other.y);\n      if (collidesOrBehind) {\n        const dy = direction === \"to-top\" ? box.y - other.y - other.height : box.y + box.height - other.y;\n        next.calloutLabel.collisionOffsetY = dy;\n      }\n    };\n    const avoidYCollisions = (labels) => {\n      const midLabel = labels.slice().sort((a, b) => Math.abs(a.midSin) - Math.abs(b.midSin))[0];\n      const midIndex = labels.indexOf(midLabel);\n      for (let i = midIndex - 1; i >= 0; i--) {\n        const prev = labels[i + 1];\n        const next = labels[i];\n        avoidNeighbourYCollision(prev, next, \"to-top\");\n      }\n      for (let i = midIndex + 1; i < labels.length; i++) {\n        const prev = labels[i - 1];\n        const next = labels[i];\n        avoidNeighbourYCollision(prev, next, \"to-bottom\");\n      }\n    };\n    const avoidXCollisions = (labels) => {\n      const labelsCollideLabelsByY = data.some((datum) => datum.calloutLabel.collisionOffsetY !== 0);\n      const boxes = labels.map((label) => getTextBBox(label));\n      const paddedBoxes = boxes.map((box) => box.clone().grow(minSpacing / 2));\n      let labelsCollideLabelsByX = false;\n      for (let i = 0; i < paddedBoxes.length && !labelsCollideLabelsByX; i++) {\n        const box = paddedBoxes[i];\n        for (let j = i + 1; j < labels.length; j++) {\n          const other = paddedBoxes[j];\n          if (box.collidesBBox(other)) {\n            labelsCollideLabelsByX = true;\n            break;\n          }\n        }\n      }\n      const sectors = fullData.map((datum) => {\n        const { startAngle, endAngle, outerRadius } = datum;\n        return { startAngle, endAngle, innerRadius, outerRadius };\n      });\n      const labelsCollideSectors = boxes.some((box) => {\n        return sectors.some((sector) => boxCollidesSector(box, sector));\n      });\n      if (!labelsCollideLabelsByX && !labelsCollideLabelsByY && !labelsCollideSectors) {\n        return;\n      }\n      labels.filter((d) => d.calloutLabel.textAlign === \"center\").forEach((d) => {\n        const label = d.calloutLabel;\n        if (d.midCos < 0) {\n          label.collisionTextAlign = \"right\";\n        } else if (d.midCos > 0) {\n          label.collisionTextAlign = \"left\";\n        } else {\n          label.collisionTextAlign = \"center\";\n        }\n      });\n    };\n    avoidYCollisions(leftLabels);\n    avoidYCollisions(rightLabels);\n    avoidXCollisions(topLabels);\n    avoidXCollisions(bottomLabels);\n  }\n  updateCalloutLabelNodes(seriesRect) {\n    const { radiusScale } = this;\n    const { calloutLabel, calloutLine } = this.properties;\n    const calloutLength = calloutLine.length;\n    const { offset: offset4, color } = calloutLabel;\n    const tempTextNode = new Text();\n    this.calloutLabelSelection.selectByTag(2 /* Label */).forEach((text) => {\n      var _a;\n      const { datum } = text;\n      const label = datum.calloutLabel;\n      const radius = radiusScale.convert(datum.radius);\n      const outerRadius = Math.max(0, radius);\n      if (!(label == null ? void 0 : label.text) || outerRadius === 0 || label.hidden) {\n        text.visible = false;\n        return;\n      }\n      const labelRadius = outerRadius + calloutLength + offset4;\n      const x = datum.midCos * labelRadius;\n      const y = datum.midSin * labelRadius + label.collisionOffsetY;\n      const align = {\n        textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n        textBaseline: label.textBaseline\n      };\n      tempTextNode.text = label.text;\n      tempTextNode.x = x;\n      tempTextNode.y = y;\n      tempTextNode.setFont(this.properties.calloutLabel);\n      tempTextNode.setAlign(align);\n      const box = tempTextNode.computeBBox();\n      let displayText = label.text;\n      let visible = true;\n      if (calloutLabel.avoidCollisions) {\n        const { textLength, hasVerticalOverflow } = this.getLabelOverflow(label.text, box, seriesRect);\n        displayText = label.text.length === textLength ? label.text : `${label.text.substring(0, textLength)}\\u2026`;\n        visible = !hasVerticalOverflow;\n      }\n      text.text = displayText;\n      text.x = x;\n      text.y = y;\n      text.setFont(this.properties.calloutLabel);\n      text.setAlign(align);\n      text.fill = color;\n      text.visible = visible;\n    });\n  }\n  computeLabelsBBox(options, seriesRect) {\n    return __async(this, null, function* () {\n      const { calloutLabel, calloutLine } = this.properties;\n      const calloutLength = calloutLine.length;\n      const { offset: offset4, maxCollisionOffset, minSpacing } = calloutLabel;\n      if (!calloutLabel.avoidCollisions) {\n        return null;\n      }\n      yield this.maybeRefreshNodeData();\n      this.updateRadiusScale(false);\n      this.computeCalloutLabelCollisionOffsets();\n      const textBoxes = [];\n      const text = new Text();\n      let titleBox;\n      const { title } = this.properties;\n      if ((title == null ? void 0 : title.text) && title.enabled) {\n        const dy = this.getTitleTranslationY();\n        if (isFinite(dy)) {\n          text.text = title.text;\n          text.x = 0;\n          text.y = dy;\n          text.setFont(title);\n          text.setAlign({\n            textBaseline: \"bottom\",\n            textAlign: \"center\"\n          });\n          titleBox = text.computeBBox();\n          textBoxes.push(titleBox);\n        }\n      }\n      this.nodeData.forEach((datum) => {\n        var _a;\n        const label = datum.calloutLabel;\n        if (!label || datum.outerRadius === 0) {\n          return null;\n        }\n        const labelRadius = datum.outerRadius + calloutLength + offset4;\n        const x = datum.midCos * labelRadius;\n        const y = datum.midSin * labelRadius + label.collisionOffsetY;\n        text.text = label.text;\n        text.x = x;\n        text.y = y;\n        text.setFont(this.properties.calloutLabel);\n        text.setAlign({\n          textAlign: (_a = label.collisionTextAlign) != null ? _a : label.textAlign,\n          textBaseline: label.textBaseline\n        });\n        const box = text.computeBBox();\n        label.box = box;\n        if (Math.abs(label.collisionOffsetY) > maxCollisionOffset) {\n          label.hidden = true;\n          return;\n        }\n        if (titleBox) {\n          const seriesTop = seriesRect.y - this.centerY;\n          const titleCleanArea = new BBox(\n            titleBox.x - minSpacing,\n            seriesTop,\n            titleBox.width + 2 * minSpacing,\n            titleBox.y + titleBox.height + minSpacing - seriesTop\n          );\n          if (box.collidesBBox(titleCleanArea)) {\n            label.hidden = true;\n            return;\n          }\n        }\n        if (options.hideWhenNecessary) {\n          const { textLength, hasVerticalOverflow, hasSurroundingSeriesOverflow } = this.getLabelOverflow(\n            label.text,\n            box,\n            seriesRect\n          );\n          const isTooShort = label.text.length > 2 && textLength < 2;\n          if (hasVerticalOverflow || isTooShort || hasSurroundingSeriesOverflow) {\n            label.hidden = true;\n            return;\n          }\n        }\n        label.hidden = false;\n        textBoxes.push(box);\n      });\n      if (textBoxes.length === 0) {\n        return null;\n      }\n      return BBox.merge(textBoxes);\n    });\n  }\n  updateSectorLabelNodes() {\n    const { radiusScale } = this;\n    const innerRadius = radiusScale.convert(0);\n    const { fontSize, fontStyle, fontWeight, fontFamily, positionOffset, positionRatio, color } = this.properties.sectorLabel;\n    const isDoughnut = innerRadius > 0;\n    const singleVisibleSector = this.seriesItemEnabled.filter(Boolean).length === 1;\n    this.sectorLabelSelection.each((text, datum) => {\n      const { sectorLabel, outerRadius } = datum;\n      let isTextVisible = false;\n      if (sectorLabel && outerRadius !== 0) {\n        const labelRadius = innerRadius * (1 - positionRatio) + outerRadius * positionRatio + positionOffset;\n        text.fill = color;\n        text.fontStyle = fontStyle;\n        text.fontWeight = fontWeight;\n        text.fontSize = fontSize;\n        text.fontFamily = fontFamily;\n        text.text = sectorLabel.text;\n        const shouldPutTextInCenter = !isDoughnut && singleVisibleSector;\n        if (shouldPutTextInCenter) {\n          text.x = 0;\n          text.y = 0;\n        } else {\n          text.x = datum.midCos * labelRadius;\n          text.y = datum.midSin * labelRadius;\n        }\n        text.textAlign = \"center\";\n        text.textBaseline = \"middle\";\n        const bbox = text.computeBBox();\n        const corners = [\n          [bbox.x, bbox.y],\n          [bbox.x + bbox.width, bbox.y],\n          [bbox.x + bbox.width, bbox.y + bbox.height],\n          [bbox.x, bbox.y + bbox.height]\n        ];\n        const { startAngle, endAngle } = datum;\n        const sectorBounds = { startAngle, endAngle, innerRadius, outerRadius };\n        if (corners.every(([x, y]) => isPointInSector(x, y, sectorBounds))) {\n          isTextVisible = true;\n        }\n      }\n      text.visible = isTextVisible;\n    });\n  }\n  updateInnerLabelNodes() {\n    const textBBoxes = [];\n    const margins = [];\n    this.innerLabelsSelection.each((text, datum) => {\n      const { fontStyle, fontWeight, fontSize, fontFamily, color } = datum;\n      text.fontStyle = fontStyle;\n      text.fontWeight = fontWeight;\n      text.fontSize = fontSize;\n      text.fontFamily = fontFamily;\n      text.text = datum.text;\n      text.x = 0;\n      text.y = 0;\n      text.fill = color;\n      text.textAlign = \"center\";\n      text.textBaseline = \"alphabetic\";\n      textBBoxes.push(text.computeBBox());\n      margins.push(datum.margin);\n    });\n    const getMarginTop = (index) => index === 0 ? 0 : margins[index];\n    const getMarginBottom = (index) => index === margins.length - 1 ? 0 : margins[index];\n    const totalHeight = textBBoxes.reduce((sum2, bbox, i) => {\n      return sum2 + bbox.height + getMarginTop(i) + getMarginBottom(i);\n    }, 0);\n    const totalWidth = Math.max(...textBBoxes.map((bbox) => bbox.width));\n    const innerRadius = this.getInnerRadius();\n    const labelRadius = Math.sqrt(Math.pow(totalWidth / 2, 2) + Math.pow(totalHeight / 2, 2));\n    const labelsVisible = labelRadius <= (innerRadius > 0 ? innerRadius : this.getOuterRadius());\n    const textBottoms = [];\n    for (let i = 0, prev = -totalHeight / 2; i < textBBoxes.length; i++) {\n      const bbox = textBBoxes[i];\n      const bottom = bbox.height + prev + getMarginTop(i);\n      textBottoms.push(bottom);\n      prev = bottom + getMarginBottom(i);\n    }\n    this.innerLabelsSelection.each((text, _datum, index) => {\n      text.y = textBottoms[index];\n      text.visible = labelsVisible;\n    });\n  }\n  updateZerosumRings() {\n    this.zerosumOuterRing.size = this.getOuterRadius() * 2;\n    this.zerosumInnerRing.size = this.getInnerRadius() * 2;\n  }\n  getDatumLegendName(nodeDatum) {\n    const { angleKey, calloutLabelKey, sectorLabelKey, legendItemKey } = this.properties;\n    const { sectorLabel, calloutLabel, legendItem } = nodeDatum;\n    if (legendItemKey && legendItem !== void 0) {\n      return legendItem.text;\n    } else if (calloutLabelKey && calloutLabelKey !== angleKey && (calloutLabel == null ? void 0 : calloutLabel.text) !== void 0) {\n      return calloutLabel.text;\n    } else if (sectorLabelKey && sectorLabelKey !== angleKey && (sectorLabel == null ? void 0 : sectorLabel.text) !== void 0) {\n      return sectorLabel.text;\n    }\n  }\n  getTooltipHtml(nodeDatum) {\n    var _a;\n    if (!this.properties.isValid()) {\n      return \"\";\n    }\n    const {\n      datum,\n      angleValue,\n      sectorFormat: { fill: color }\n    } = nodeDatum;\n    const title = sanitizeHtml((_a = this.properties.title) == null ? void 0 : _a.text);\n    const content = isNumber2(angleValue) ? toFixed(angleValue) : String(angleValue);\n    const labelText = this.getDatumLegendName(nodeDatum);\n    return this.properties.tooltip.toTooltipHtml(\n      {\n        title: title != null ? title : labelText,\n        content: title && labelText ? `${labelText}: ${content}` : content,\n        backgroundColor: color\n      },\n      {\n        datum,\n        title,\n        color,\n        seriesId: this.id,\n        angleKey: this.properties.angleKey,\n        angleName: this.properties.angleName,\n        radiusKey: this.properties.radiusKey,\n        radiusName: this.properties.radiusName,\n        calloutLabelKey: this.properties.calloutLabelKey,\n        calloutLabelName: this.properties.calloutLabelName,\n        sectorLabelKey: this.properties.sectorLabelKey,\n        sectorLabelName: this.properties.sectorLabelName\n      }\n    );\n  }\n  getLegendData(legendType) {\n    var _a, _b, _c, _d, _e;\n    const { processedData, dataModel } = this;\n    if (!dataModel || !(processedData == null ? void 0 : processedData.data.length) || legendType !== \"category\") {\n      return [];\n    }\n    const { angleKey, calloutLabelKey, sectorLabelKey, legendItemKey } = this.properties;\n    if (!legendItemKey && (!calloutLabelKey || calloutLabelKey === angleKey) && (!sectorLabelKey || sectorLabelKey === angleKey))\n      return [];\n    const { calloutLabelIdx, sectorLabelIdx, legendItemIdx } = this.getProcessedDataIndexes(dataModel);\n    const titleText = ((_a = this.properties.title) == null ? void 0 : _a.showInLegend) && this.properties.title.text;\n    const legendData = [];\n    for (let index = 0; index < processedData.data.length; index++) {\n      const { datum, values } = processedData.data[index];\n      const labelParts = [];\n      if (titleText) {\n        labelParts.push(titleText);\n      }\n      const labels = this.getLabels(\n        datum,\n        2 * Math.PI,\n        2 * Math.PI,\n        false,\n        values[calloutLabelIdx],\n        values[sectorLabelIdx],\n        values[legendItemIdx]\n      );\n      if (legendItemKey && labels.legendItem !== void 0) {\n        labelParts.push(labels.legendItem.text);\n      } else if (calloutLabelKey && calloutLabelKey !== angleKey && ((_b = labels.calloutLabel) == null ? void 0 : _b.text) !== void 0) {\n        labelParts.push((_c = labels.calloutLabel) == null ? void 0 : _c.text);\n      } else if (sectorLabelKey && sectorLabelKey !== angleKey && ((_d = labels.sectorLabel) == null ? void 0 : _d.text) !== void 0) {\n        labelParts.push((_e = labels.sectorLabel) == null ? void 0 : _e.text);\n      }\n      if (labelParts.length === 0)\n        continue;\n      const sectorFormat = this.getSectorFormat(datum, index, false);\n      legendData.push({\n        legendType: \"category\",\n        id: this.id,\n        itemId: index,\n        seriesId: this.id,\n        enabled: this.seriesItemEnabled[index],\n        label: {\n          text: labelParts.join(\" - \")\n        },\n        marker: {\n          fill: sectorFormat.fill,\n          stroke: sectorFormat.stroke,\n          fillOpacity: this.properties.fillOpacity,\n          strokeOpacity: this.properties.strokeOpacity,\n          strokeWidth: this.properties.strokeWidth\n        }\n      });\n    }\n    return legendData;\n  }\n  onLegendItemClick(event) {\n    const { enabled, itemId, series } = event;\n    if (series.id === this.id) {\n      this.toggleSeriesItem(itemId, enabled);\n    } else if (series.type === \"pie\") {\n      this.toggleOtherSeriesItems(series, itemId, enabled);\n    }\n  }\n  toggleSeriesItem(itemId, enabled) {\n    this.seriesItemEnabled[itemId] = enabled;\n    this.nodeDataRefresh = true;\n  }\n  toggleOtherSeriesItems(series, itemId, enabled) {\n    var _a, _b;\n    if (!this.properties.legendItemKey || !this.dataModel) {\n      return;\n    }\n    const datumToggledLegendItemValue = series.properties.legendItemKey && ((_a = series.data) == null ? void 0 : _a.find((_, index) => index === itemId)[series.properties.legendItemKey]);\n    if (!datumToggledLegendItemValue) {\n      return;\n    }\n    const legendItemIdx = this.dataModel.resolveProcessedDataIndexById(this, `legendItemValue`).index;\n    (_b = this.processedData) == null ? void 0 : _b.data.forEach(({ values }, datumItemId) => {\n      if (values[legendItemIdx] === datumToggledLegendItemValue) {\n        this.toggleSeriesItem(datumItemId, enabled);\n      }\n    });\n  }\n  animateEmptyUpdateReady(_data) {\n    const { animationManager } = this.ctx;\n    const fns = preparePieSeriesAnimationFunctions(\n      true,\n      this.properties.rotation,\n      this.radiusScale,\n      this.previousRadiusScale\n    );\n    fromToMotion(this.id, \"nodes\", animationManager, [this.itemSelection, this.highlightSelection], fns.nodes);\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeInAnimation(this, \"callout\", animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"sector\", animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"inner\", animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  animateWaitingUpdateReady() {\n    var _a, _b, _c, _d, _e, _f;\n    const { itemSelection, highlightSelection, processedData, radiusScale, previousRadiusScale } = this;\n    const { animationManager } = this.ctx;\n    const diff2 = (_a = processedData == null ? void 0 : processedData.reduced) == null ? void 0 : _a.diff;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    const supportedDiff = ((_b = diff2 == null ? void 0 : diff2.moved.length) != null ? _b : 0) === 0 && (diff2 == null ? void 0 : diff2.addedIndices.every((i) => !diff2.removedIndices.includes(i)));\n    const hasKeys = ((_c = processedData == null ? void 0 : processedData.defs.keys.length) != null ? _c : 0) > 0;\n    const hasUniqueKeys = (_f = (_e = (_d = processedData == null ? void 0 : processedData.reduced) == null ? void 0 : _d.animationValidation) == null ? void 0 : _e.uniqueKeys) != null ? _f : true;\n    if (!supportedDiff || !hasKeys || !hasUniqueKeys) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n    const fns = preparePieSeriesAnimationFunctions(\n      false,\n      this.properties.rotation,\n      radiusScale,\n      previousRadiusScale\n    );\n    fromToMotion(\n      this.id,\n      \"nodes\",\n      animationManager,\n      [itemSelection, highlightSelection],\n      fns.nodes,\n      (_, datum) => this.getDatumId(datum),\n      diff2\n    );\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeInAnimation(this, \"callout\", this.ctx.animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"sector\", this.ctx.animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeInAnimation(this, \"inner\", this.ctx.animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  animateClearingUpdateEmpty() {\n    const { itemSelection, highlightSelection, radiusScale, previousRadiusScale } = this;\n    const { animationManager } = this.ctx;\n    const fns = preparePieSeriesAnimationFunctions(\n      false,\n      this.properties.rotation,\n      radiusScale,\n      previousRadiusScale\n    );\n    fromToMotion(this.id, \"nodes\", animationManager, [itemSelection, highlightSelection], fns.nodes);\n    fromToMotion(this.id, `innerCircle`, animationManager, [this.innerCircleSelection], fns.innerCircle);\n    seriesLabelFadeOutAnimation(this, \"callout\", this.ctx.animationManager, [this.calloutLabelSelection]);\n    seriesLabelFadeOutAnimation(this, \"sector\", this.ctx.animationManager, [this.sectorLabelSelection]);\n    seriesLabelFadeOutAnimation(this, \"inner\", this.ctx.animationManager, [this.innerLabelsSelection]);\n    this.previousRadiusScale.range = this.radiusScale.range;\n  }\n  getDatumIdFromData(datum) {\n    var _a, _b, _c;\n    const { calloutLabelKey, sectorLabelKey, legendItemKey } = this.properties;\n    if (!((_c = (_b = (_a = this.processedData) == null ? void 0 : _a.reduced) == null ? void 0 : _b.animationValidation) == null ? void 0 : _c.uniqueKeys)) {\n      return;\n    }\n    if (legendItemKey) {\n      return datum[legendItemKey];\n    } else if (calloutLabelKey) {\n      return datum[calloutLabelKey];\n    } else if (sectorLabelKey) {\n      return datum[sectorLabelKey];\n    }\n  }\n  getDatumId(datum) {\n    var _a;\n    const { index } = datum;\n    return (_a = this.getDatumIdFromData(datum.datum)) != null ? _a : `${index}`;\n  }\n  onDataChange() {\n    this.processSeriesItemEnabled();\n  }\n};\nPieSeries.className = \"PieSeries\";\nPieSeries.type = \"pie\";\n\n// packages/ag-charts-community/src/chart/series/polar/pieSeriesModule.ts\nvar PieSeriesModule = {\n  type: \"series\",\n  optionsKey: \"series[]\",\n  packageType: \"community\",\n  chartTypes: [\"polar\"],\n  identifier: \"pie\",\n  instanceConstructor: PieSeries,\n  seriesDefaults: {},\n  themeTemplate: {\n    __extends__: EXTENDS_SERIES_DEFAULTS,\n    title: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 14,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_MUTED_LABEL_COLOUR,\n      spacing: 5\n    },\n    calloutLabel: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      offset: 3,\n      minAngle: 0\n    },\n    sectorLabel: {\n      enabled: true,\n      fontStyle: void 0,\n      fontWeight: FONT_WEIGHT2.NORMAL,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n      positionOffset: 0,\n      positionRatio: 0.5\n    },\n    calloutLine: {\n      length: 10,\n      strokeWidth: 2\n    },\n    fillOpacity: 1,\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    lineDash: [0],\n    lineDashOffset: 0,\n    rotation: 0,\n    outerRadiusOffset: 0,\n    innerRadiusOffset: 0,\n    // @todo(AG-10275) Uncomment this\n    // sectorSpacing: 1,\n    shadow: {\n      enabled: false,\n      color: DEFAULT_SHADOW_COLOUR,\n      xOffset: 3,\n      yOffset: 3,\n      blur: 5\n    },\n    innerLabels: {\n      fontStyle: void 0,\n      fontWeight: void 0,\n      fontSize: 12,\n      fontFamily: DEFAULT_FONT_FAMILY,\n      color: DEFAULT_LABEL_COLOUR,\n      margin: 2\n    },\n    // @todo(AG-10275) Remove this\n    // @ts-expect-error\n    __BACKGROUND_COLOR_DO_NOT_USE: DEFAULT_BACKGROUND_COLOUR\n  },\n  paletteFactory: ({ takeColors, colorsCount, userPalette }) => {\n    const { fills, strokes } = takeColors(colorsCount);\n    return {\n      fills,\n      strokes: userPalette ? strokes : [],\n      calloutLine: {\n        colors: strokes\n      }\n    };\n  }\n};\n\n// packages/ag-charts-community/src/chart/factory/registerInbuiltModules.ts\nfunction registerInbuiltModules() {\n  registerModule(BackgroundModule);\n  registerModule(NavigatorModule);\n  registerModule(AreaSeriesModule);\n  registerModule(BarSeriesModule);\n  registerModule(BubbleSeriesModule);\n  registerModule(LineSeriesModule);\n  registerModule(ScatterSeriesModule);\n  registerModule(PieSeriesModule);\n  registerModule(HistogramSeriesModule);\n}\n\n// packages/ag-charts-community/src/module-support.ts\nvar module_support_exports = {};\n__export(module_support_exports, {\n  ADD_PHASE: () => ADD_PHASE,\n  AGG_VALUES_EXTENT: () => AGG_VALUES_EXTENT,\n  AND: () => AND,\n  ARRAY: () => ARRAY,\n  ARRAY_OF: () => ARRAY_OF,\n  AbstractBarSeries: () => AbstractBarSeries,\n  AbstractBarSeriesProperties: () => AbstractBarSeriesProperties,\n  ActionOnSet: () => ActionOnSet,\n  Animation: () => Animation,\n  AnimationManager: () => AnimationManager,\n  AreaSeriesTag: () => AreaSeriesTag,\n  Axis: () => Axis,\n  AxisLabel: () => AxisLabel,\n  AxisTick: () => AxisTick,\n  BOOLEAN: () => BOOLEAN,\n  BOOLEAN_ARRAY: () => BOOLEAN_ARRAY,\n  Background: () => Background,\n  BackgroundModule: () => BackgroundModule,\n  BaseModuleInstance: () => BaseModuleInstance,\n  BaseProperties: () => BaseProperties,\n  COLOR_STRING: () => COLOR_STRING,\n  COLOR_STRING_ARRAY: () => COLOR_STRING_ARRAY,\n  CartesianAxis: () => CartesianAxis,\n  CartesianSeries: () => CartesianSeries,\n  CartesianSeriesNodeClickEvent: () => CartesianSeriesNodeClickEvent,\n  CartesianSeriesProperties: () => CartesianSeriesProperties,\n  CategoryAxis: () => CategoryAxis,\n  ChartAxisDirection: () => ChartAxisDirection,\n  ChartEventManager: () => ChartEventManager,\n  ChartUpdateType: () => ChartUpdateType,\n  CursorManager: () => CursorManager,\n  DATE: () => DATE,\n  DATE_ARRAY: () => DATE_ARRAY,\n  DATE_OR_DATETIME_MS: () => DATE_OR_DATETIME_MS,\n  DEGREE: () => DEGREE,\n  DIRECTION: () => DIRECTION,\n  DataController: () => DataController,\n  DataModel: () => DataModel,\n  Default: () => Default,\n  Deprecated: () => Deprecated,\n  DeprecatedAndRenamedTo: () => DeprecatedAndRenamedTo,\n  FONT_STYLE: () => FONT_STYLE,\n  FONT_WEIGHT: () => FONT_WEIGHT,\n  FROM_TO_MIXINS: () => FROM_TO_MIXINS,\n  FUNCTION: () => FUNCTION,\n  GREATER_THAN: () => GREATER_THAN,\n  HierarchyNode: () => HierarchyNode,\n  HierarchySeries: () => HierarchySeries,\n  HierarchySeriesProperties: () => HierarchySeriesProperties,\n  HighlightManager: () => HighlightManager,\n  HighlightStyle: () => HighlightStyle,\n  INITIAL_LOAD: () => INITIAL_LOAD,\n  INTERACTION_RANGE: () => INTERACTION_RANGE,\n  InteractionManager: () => InteractionManager,\n  LABEL_PHASE: () => LABEL_PHASE,\n  LESS_THAN: () => LESS_THAN,\n  LINE_CAP: () => LINE_CAP,\n  LINE_DASH: () => LINE_DASH,\n  LINE_JOIN: () => LINE_JOIN,\n  Layers: () => Layers,\n  LayoutService: () => LayoutService,\n  MATCHING_CROSSLINE_TYPE: () => MATCHING_CROSSLINE_TYPE,\n  MAX_SPACING: () => MAX_SPACING,\n  MIN_SPACING: () => MIN_SPACING,\n  MODULE_CONFLICTS: () => MODULE_CONFLICTS,\n  Motion: () => easing_exports,\n  NAN: () => NAN,\n  NODE_UPDATE_PHASES: () => NODE_UPDATE_PHASES,\n  NUMBER: () => NUMBER,\n  NUMBER_ARRAY: () => NUMBER_ARRAY,\n  NUMBER_OR_NAN: () => NUMBER_OR_NAN,\n  OBJECT: () => OBJECT,\n  OBJECT_ARRAY: () => OBJECT_ARRAY,\n  OR: () => OR,\n  OVERFLOW_STRATEGY: () => OVERFLOW_STRATEGY,\n  PLACEMENT: () => PLACEMENT,\n  POLAR_AXIS_SHAPE: () => POLAR_AXIS_SHAPE,\n  POSITION: () => POSITION,\n  POSITIVE_NUMBER: () => POSITIVE_NUMBER,\n  PolarAxis: () => PolarAxis,\n  PolarSeries: () => PolarSeries,\n  PropertiesArray: () => PropertiesArray,\n  ProxyOnWrite: () => ProxyOnWrite,\n  ProxyProperty: () => ProxyProperty,\n  ProxyPropertyOnWrite: () => ProxyPropertyOnWrite,\n  QUICK_TRANSITION: () => QUICK_TRANSITION,\n  RATIO: () => RATIO,\n  REGISTERED_MODULES: () => REGISTERED_MODULES,\n  REMOVE_PHASE: () => REMOVE_PHASE,\n  RepeatType: () => RepeatType,\n  SMALLEST_KEY_INTERVAL: () => SMALLEST_KEY_INTERVAL,\n  SORT_DOMAIN_GROUPS: () => SORT_DOMAIN_GROUPS,\n  STRING: () => STRING,\n  STRING_ARRAY: () => STRING_ARRAY,\n  Series: () => Series,\n  SeriesItemHighlightStyle: () => SeriesItemHighlightStyle,\n  SeriesMarker: () => SeriesMarker,\n  SeriesNodeClickEvent: () => SeriesNodeClickEvent,\n  SeriesNodePickMode: () => SeriesNodePickMode,\n  SeriesProperties: () => SeriesProperties,\n  SeriesTooltip: () => SeriesTooltip,\n  StateMachine: () => StateMachine,\n  TEXT_ALIGN: () => TEXT_ALIGN,\n  TEXT_WRAP: () => TEXT_WRAP,\n  Tags: () => Tags,\n  TooltipManager: () => TooltipManager,\n  UNION: () => UNION,\n  UPDATE_PHASE: () => UPDATE_PHASE,\n  UpdateService: () => UpdateService,\n  VERTICAL_ALIGN: () => VERTICAL_ALIGN,\n  Validate: () => Validate,\n  ZoomManager: () => ZoomManager,\n  __FORCE_MODULE_DETECTION: () => __FORCE_MODULE_DETECTION2,\n  accumulateGroup: () => accumulateGroup,\n  accumulatedValue: () => accumulatedValue,\n  accumulativeValueProperty: () => accumulativeValueProperty,\n  adjustLabelPlacement: () => adjustLabelPlacement,\n  animationValidation: () => animationValidation,\n  area: () => area,\n  arraysEqual: () => arraysEqual,\n  assignJsonApplyConstructedArray: () => assignJsonApplyConstructedArray,\n  average: () => average,\n  backfillPathPointData: () => backfillPathPointData,\n  buildResetPathFn: () => buildResetPathFn,\n  checkCrisp: () => checkCrisp,\n  clamp: () => clamp2,\n  clampArray: () => clampArray,\n  collapsedStartingBarPosition: () => collapsedStartingBarPosition,\n  count: () => count,\n  countFractionDigits: () => countFractionDigits,\n  createDatumId: () => createDatumId,\n  createDeprecationWarning: () => createDeprecationWarning,\n  deconstructSelectionsOrNodes: () => deconstructSelectionsOrNodes,\n  deepMerge: () => deepMerge,\n  determinePathStatus: () => determinePathStatus,\n  diff: () => diff,\n  enterpriseModule: () => enterpriseModule,\n  extent: () => extent,\n  extractDecoratedProperties: () => extractDecoratedProperties,\n  fixNumericExtent: () => fixNumericExtent,\n  fromToMotion: () => fromToMotion,\n  getRectConfig: () => getRectConfig,\n  groupAccumulativeValueProperty: () => groupAccumulativeValueProperty,\n  groupAverage: () => groupAverage,\n  groupCount: () => groupCount,\n  groupSum: () => groupSum,\n  hasRegisteredEnterpriseModules: () => hasRegisteredEnterpriseModules,\n  injectStyle: () => injectStyle,\n  invertShapeDirection: () => invertShapeDirection,\n  isArray: () => isArray,\n  isBoolean: () => isBoolean,\n  isDate: () => isDate,\n  isDecoratedObject: () => isDecoratedObject,\n  isDefined: () => isDefined,\n  isEqual: () => isEqual,\n  isFiniteNumber: () => isFiniteNumber,\n  isFunction: () => isFunction,\n  isHtmlElement: () => isHtmlElement,\n  isNegative: () => isNegative,\n  isNumber: () => isNumber,\n  isObject: () => isObject,\n  isObjectLike: () => isObjectLike,\n  isPlainObject: () => isPlainObject,\n  isProperties: () => isProperties,\n  isReal: () => isReal,\n  isString: () => isString,\n  isValidDate: () => isValidDate,\n  keyProperty: () => keyProperty,\n  listDecoratedProperties: () => listDecoratedProperties,\n  markerFadeInAnimation: () => markerFadeInAnimation,\n  markerPaletteFactory: () => markerPaletteFactory,\n  markerScaleInAnimation: () => markerScaleInAnimation,\n  markerSwipeScaleInAnimation: () => markerSwipeScaleInAnimation,\n  mergeDefaults: () => mergeDefaults,\n  midpointStartingBarPosition: () => midpointStartingBarPosition,\n  minMax: () => minMax,\n  mod: () => mod,\n  normaliseGroupTo: () => normaliseGroupTo,\n  normalisePropertyTo: () => normalisePropertyTo,\n  normalisedExtent: () => normalisedExtent,\n  normalisedExtentWithMetadata: () => normalisedExtentWithMetadata,\n  pairCategoryData: () => pairCategoryData,\n  pairContinuousData: () => pairContinuousData,\n  partialAssign: () => partialAssign,\n  pathFadeInAnimation: () => pathFadeInAnimation,\n  pathFadeOutAnimation: () => pathFadeOutAnimation,\n  pathSwipeInAnimation: () => pathSwipeInAnimation,\n  predicateWithMessage: () => predicateWithMessage,\n  prepareAreaPathAnimation: () => prepareAreaPathAnimation,\n  prepareAxisAnimationContext: () => prepareAxisAnimationContext,\n  prepareAxisAnimationFunctions: () => prepareAxisAnimationFunctions,\n  prepareBarAnimationFunctions: () => prepareBarAnimationFunctions,\n  prepareLinePathAnimation: () => prepareLinePathAnimation,\n  prepareLinePathAnimationFns: () => prepareLinePathAnimationFns,\n  prepareMarkerAnimation: () => prepareMarkerAnimation,\n  range: () => range2,\n  rangedValueProperty: () => rangedValueProperty,\n  registerModule: () => registerModule,\n  registerModuleConflicts: () => registerModuleConflicts,\n  renderPartialPath: () => renderPartialPath,\n  resetAxisGroupFn: () => resetAxisGroupFn,\n  resetAxisLabelSelectionFn: () => resetAxisLabelSelectionFn,\n  resetAxisLineSelectionFn: () => resetAxisLineSelectionFn,\n  resetAxisSelectionFn: () => resetAxisSelectionFn,\n  resetBarSelectionsFn: () => resetBarSelectionsFn,\n  resetIds: () => resetIds,\n  resetLabelFn: () => resetLabelFn,\n  resetMarkerFn: () => resetMarkerFn,\n  resetMarkerPositionFn: () => resetMarkerPositionFn,\n  resetMotion: () => resetMotion,\n  round: () => round,\n  seriesLabelFadeInAnimation: () => seriesLabelFadeInAnimation,\n  seriesLabelFadeOutAnimation: () => seriesLabelFadeOutAnimation,\n  singleSeriesPaletteFactory: () => singleSeriesPaletteFactory,\n  staticFromToMotion: () => staticFromToMotion,\n  stringify: () => stringify,\n  sum: () => sum,\n  toArray: () => toArray,\n  toFixed: () => toFixed,\n  toReal: () => toReal,\n  trailingAccumulatedValue: () => trailingAccumulatedValue,\n  trailingAccumulatedValueProperty: () => trailingAccumulatedValueProperty,\n  trailingValue: () => trailingValue,\n  trailingValueProperty: () => trailingValueProperty,\n  unique: () => unique,\n  updateClipPath: () => updateClipPath,\n  updateLabelNode: () => updateLabelNode,\n  updateRect: () => updateRect,\n  validateCrossLineValues: () => validateCrossLineValues,\n  valueProperty: () => valueProperty\n});\n\n// packages/ag-charts-community/src/util/shapes.ts\nfunction invertShapeDirection(...supportedShapes) {\n  for (const shape of supportedShapes) {\n    if (shape instanceof Rect) {\n      const { x, y, width, height } = shape;\n      shape.setProperties({ x: y, y: x, width: height, height: width });\n    } else if (shape instanceof Line) {\n      const { x1, y1, x2, y2 } = shape;\n      shape.setProperties({ x1: y1, y1: x1, x2: y2, y2: x2 });\n    }\n  }\n}\n\n// packages/ag-charts-community/src/chart/series/hierarchy/hierarchySeries.ts\nvar _HierarchyNode = class _HierarchyNode {\n  constructor(series, index, datum, size, colorValue, fill, stroke, sumSize, depth, parent, children) {\n    this.series = series;\n    this.index = index;\n    this.datum = datum;\n    this.size = size;\n    this.colorValue = colorValue;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.sumSize = sumSize;\n    this.depth = depth;\n    this.parent = parent;\n    this.children = children;\n    this.midPoint = { x: 0, y: 0 };\n  }\n  contains(other) {\n    let current = other;\n    while (current != null && current.index >= this.index) {\n      if (current === this) {\n        return true;\n      }\n      current = current.parent;\n    }\n    return false;\n  }\n  walk(callback, order = _HierarchyNode.Walk.PreOrder) {\n    if (order === _HierarchyNode.Walk.PreOrder) {\n      callback(this);\n    }\n    this.children.forEach((child) => {\n      child.walk(callback, order);\n    });\n    if (order === _HierarchyNode.Walk.PostOrder) {\n      callback(this);\n    }\n  }\n  *[Symbol.iterator]() {\n    yield this;\n    for (const child of this.children) {\n      yield* __yieldStar(child);\n    }\n  }\n};\n_HierarchyNode.Walk = {\n  PreOrder: 0,\n  PostOrder: 1\n};\nvar HierarchyNode = _HierarchyNode;\nvar HierarchySeries = class extends Series {\n  constructor(moduleCtx) {\n    super({\n      moduleCtx,\n      pickModes: [0 /* EXACT_SHAPE_MATCH */],\n      contentGroupVirtual: false\n    });\n    this.rootNode = new HierarchyNode(\n      this,\n      0,\n      void 0,\n      0,\n      void 0,\n      void 0,\n      void 0,\n      0,\n      void 0,\n      void 0,\n      []\n    );\n    this.colorDomain = [0, 0];\n    this.maxDepth = 0;\n    this.animationState = new StateMachine(\n      \"empty\",\n      {\n        empty: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateEmptyUpdateReady(data)\n          }\n        },\n        ready: {\n          updateData: \"waiting\",\n          clear: \"clearing\",\n          highlight: (data) => this.animateReadyHighlight(data),\n          resize: (data) => this.animateReadyResize(data)\n        },\n        waiting: {\n          update: {\n            target: \"ready\",\n            action: (data) => this.animateWaitingUpdateReady(data)\n          }\n        },\n        clearing: {\n          update: {\n            target: \"empty\",\n            action: (data) => this.animateClearingUpdateEmpty(data)\n          }\n        }\n      },\n      () => this.checkProcessedDataAnimatable()\n    );\n  }\n  hasData() {\n    return Array.isArray(this.data) && this.data.length > 0;\n  }\n  processData() {\n    return __async(this, null, function* () {\n      var _a, _b;\n      const { childrenKey, sizeKey, colorKey, fills, strokes, colorRange } = this.properties;\n      let index = 0;\n      const getIndex = () => {\n        index += 1;\n        return index;\n      };\n      let maxDepth = 0;\n      let minColor = Infinity;\n      let maxColor = -Infinity;\n      const colors = new Array(((_b = (_a = this.data) == null ? void 0 : _a.length) != null ? _b : 0) + 1).fill(void 0);\n      const createNode = (datum, parent) => {\n        const index2 = getIndex();\n        const depth = parent.depth != null ? parent.depth + 1 : 0;\n        const children = childrenKey != null ? datum[childrenKey] : void 0;\n        const isLeaf = children == null || children.length === 0;\n        let size = sizeKey != null ? datum[sizeKey] : void 0;\n        if (Number.isFinite(size)) {\n          size = Math.max(size, 0);\n        } else {\n          size = isLeaf ? 1 : 0;\n        }\n        const sumSize = size;\n        maxDepth = Math.max(maxDepth, depth);\n        const color = colorKey != null ? datum[colorKey] : void 0;\n        if (typeof color === \"number\") {\n          colors[index2] = color;\n          minColor = Math.min(minColor, color);\n          maxColor = Math.max(maxColor, color);\n        }\n        return appendChildren(\n          new HierarchyNode(\n            this,\n            index2,\n            datum,\n            size,\n            color,\n            void 0,\n            void 0,\n            sumSize,\n            depth,\n            parent,\n            []\n          ),\n          children\n        );\n      };\n      const appendChildren = (node, data) => {\n        data == null ? void 0 : data.forEach((datum) => {\n          const child = createNode(datum, node);\n          node.children.push(child);\n          node.sumSize += child.sumSize;\n        });\n        return node;\n      };\n      const rootNode = appendChildren(\n        new HierarchyNode(\n          this,\n          0,\n          void 0,\n          0,\n          void 0,\n          void 0,\n          void 0,\n          0,\n          void 0,\n          void 0,\n          []\n        ),\n        this.data\n      );\n      const colorDomain = [minColor, maxColor];\n      let colorScale;\n      if (colorRange != null && Number.isFinite(minColor) && Number.isFinite(maxColor)) {\n        colorScale = new ColorScale();\n        colorScale.domain = colorDomain;\n        colorScale.range = colorRange;\n        colorScale.update();\n      }\n      rootNode.children.forEach((child, index2) => {\n        child.walk((node) => {\n          let fill;\n          const color = colors[node.index];\n          if (color != null) {\n            fill = colorScale == null ? void 0 : colorScale.convert(color);\n          }\n          fill != null ? fill : fill = fills == null ? void 0 : fills[index2 % fills.length];\n          node.fill = fill;\n          node.stroke = colorScale == null ? strokes == null ? void 0 : strokes[index2 % strokes.length] : \"rgba(0, 0, 0, 0.2)\";\n        });\n      });\n      this.rootNode = rootNode;\n      this.maxDepth = maxDepth;\n      this.colorDomain = colorDomain;\n    });\n  }\n  update(_0) {\n    return __async(this, arguments, function* ({ seriesRect }) {\n      yield this.updateSelections();\n      yield this.updateNodes();\n      const animationData = this.getAnimationData();\n      const resize = this.checkResize(seriesRect);\n      if (resize) {\n        this.animationState.transition(\"resize\", animationData);\n      }\n      this.animationState.transition(\"update\", animationData);\n    });\n  }\n  resetAllAnimation(data) {\n    var _a;\n    const datum = (_a = this.animationResetFns) == null ? void 0 : _a.datum;\n    this.ctx.animationManager.stopByAnimationGroupId(this.id);\n    if (datum != null) {\n      resetMotion(data.datumSelections, datum);\n    }\n  }\n  animateEmptyUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateWaitingUpdateReady(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animateReadyHighlight(data) {\n    var _a;\n    const datum = (_a = this.animationResetFns) == null ? void 0 : _a.datum;\n    if (datum != null) {\n      resetMotion([data], datum);\n    }\n  }\n  animateReadyResize(data) {\n    this.resetAllAnimation(data);\n  }\n  animateClearingUpdateEmpty(data) {\n    this.ctx.animationManager.skipCurrentBatch();\n    this.resetAllAnimation(data);\n  }\n  animationTransitionClear() {\n    this.animationState.transition(\"clear\", this.getAnimationData());\n  }\n  getAnimationData() {\n    const animationData = {\n      datumSelections: [this.groupSelection]\n    };\n    return animationData;\n  }\n  isProcessedDataAnimatable() {\n    return true;\n  }\n  checkProcessedDataAnimatable() {\n    if (!this.isProcessedDataAnimatable()) {\n      this.ctx.animationManager.skipCurrentBatch();\n    }\n  }\n  getLabelData() {\n    return [];\n  }\n  getSeriesDomain() {\n    return [NaN, NaN];\n  }\n  getLegendData(legendType) {\n    const { colorKey, colorName, colorRange, visible } = this.properties;\n    return legendType === \"gradient\" && colorKey != null && colorRange != null ? [\n      {\n        legendType: \"gradient\",\n        enabled: visible,\n        seriesId: this.id,\n        colorName,\n        colorRange,\n        colorDomain: this.colorDomain\n      }\n    ] : [];\n  }\n  getDatumIdFromData(node) {\n    return `${node.index}`;\n  }\n  getDatumId(node) {\n    return this.getDatumIdFromData(node);\n  }\n};\n\n// packages/ag-charts-community/src/chart/series/hierarchy/hierarchySeriesProperties.ts\nvar HierarchySeriesProperties = class extends SeriesProperties {\n  constructor() {\n    super(...arguments);\n    this.childrenKey = \"children\";\n    this.fills = Object.values(DEFAULT_FILLS);\n    this.strokes = Object.values(DEFAULT_STROKES);\n  }\n};\n__decorateClass([\n  Validate(STRING)\n], HierarchySeriesProperties.prototype, \"childrenKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HierarchySeriesProperties.prototype, \"sizeKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HierarchySeriesProperties.prototype, \"colorKey\", 2);\n__decorateClass([\n  Validate(STRING, { optional: true })\n], HierarchySeriesProperties.prototype, \"colorName\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], HierarchySeriesProperties.prototype, \"fills\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY)\n], HierarchySeriesProperties.prototype, \"strokes\", 2);\n__decorateClass([\n  Validate(COLOR_STRING_ARRAY, { optional: true })\n], HierarchySeriesProperties.prototype, \"colorRange\", 2);\n\n// packages/ag-charts-community/src/chart/axis/polarAxis.ts\nvar POLAR_AXIS_SHAPE = UNION([\"polygon\", \"circle\"], \"a polar axis shape\");\nvar PolarAxis = class extends Axis {\n  constructor() {\n    super(...arguments);\n    this.shape = \"polygon\";\n    this.innerRadiusRatio = 0;\n    this.defaultTickMinSpacing = 20;\n  }\n  computeLabelsBBox(_options, _seriesRect) {\n    return null;\n  }\n};\n__decorateClass([\n  Validate(POLAR_AXIS_SHAPE)\n], PolarAxis.prototype, \"shape\", 2);\n__decorateClass([\n  Validate(RATIO)\n], PolarAxis.prototype, \"innerRadiusRatio\", 2);\n\n// packages/ag-charts-community/src/chart/legendDatum.ts\nvar __FORCE_MODULE_DETECTION2 = 0;\n\n// packages/ag-charts-community/src/chart/factory/seriesTypes.ts\nvar SERIES_FACTORIES = {};\nvar SERIES_DEFAULTS = {};\nvar SERIES_THEME_TEMPLATES = {};\nvar ENTERPRISE_SERIES_THEME_TEMPLATES = {};\nvar SERIES_PALETTE_FACTORIES = {};\nvar SOLO_SERIES_TYPES = /* @__PURE__ */ new Set();\nvar STACKABLE_SERIES_TYPES = /* @__PURE__ */ new Set();\nvar GROUPABLE_SERIES_TYPES = /* @__PURE__ */ new Set();\nvar STACKED_BY_DEFAULT_SERIES_TYPES = /* @__PURE__ */ new Set();\nvar SWAP_DEFAULT_AXES_CONDITIONS = {};\nvar CUSTOM_DEFAULTS_FUNCTIONS = {};\nfunction registerSeries(seriesType, chartType2, cstr, defaults, theme, enterpriseTheme, paletteFactory, solo, stackable, groupable, stackedByDefault, swapDefaultAxesCondition, customDefaultsFunction) {\n  SERIES_FACTORIES[seriesType] = cstr;\n  SERIES_DEFAULTS[seriesType] = defaults;\n  registerSeriesThemeTemplate(seriesType, theme, enterpriseTheme);\n  if (paletteFactory) {\n    addSeriesPaletteFactory(seriesType, paletteFactory);\n  }\n  if (solo) {\n    addSoloSeriesType(seriesType);\n  }\n  if (stackable) {\n    addStackableSeriesType(seriesType);\n  }\n  if (groupable) {\n    addGroupableSeriesType(seriesType);\n  }\n  if (stackedByDefault) {\n    addStackedByDefaultSeriesType(seriesType);\n  }\n  if (swapDefaultAxesCondition) {\n    addSwapDefaultAxesCondition(seriesType, swapDefaultAxesCondition);\n  }\n  if (customDefaultsFunction) {\n    addCustomDefaultsFunctions(seriesType, customDefaultsFunction);\n  }\n  registerChartSeriesType(seriesType, chartType2);\n}\nfunction registerSeriesThemeTemplate(seriesType, themeTemplate, enterpriseThemeTemplate = {}) {\n  const existingTemplate = SERIES_THEME_TEMPLATES[seriesType];\n  SERIES_THEME_TEMPLATES[seriesType] = jsonMerge([existingTemplate, themeTemplate]);\n  ENTERPRISE_SERIES_THEME_TEMPLATES[seriesType] = jsonMerge([\n    existingTemplate,\n    themeTemplate,\n    enterpriseThemeTemplate\n  ]);\n}\nfunction getSeries(chartType2, moduleCtx) {\n  const seriesConstructor = SERIES_FACTORIES[chartType2];\n  if (seriesConstructor) {\n    return new seriesConstructor(moduleCtx);\n  }\n  throw new Error(`AG Charts - unknown series type: ${chartType2}`);\n}\nfunction getSeriesDefaults(chartType2) {\n  return SERIES_DEFAULTS[chartType2];\n}\nfunction getSeriesThemeTemplate(chartType2) {\n  if (hasRegisteredEnterpriseModules()) {\n    return ENTERPRISE_SERIES_THEME_TEMPLATES[chartType2];\n  }\n  return SERIES_THEME_TEMPLATES[chartType2];\n}\nfunction addSeriesPaletteFactory(seriesType, factory) {\n  SERIES_PALETTE_FACTORIES[seriesType] = factory;\n}\nfunction getSeriesPaletteFactory(seriesType) {\n  return SERIES_PALETTE_FACTORIES[seriesType];\n}\nfunction isSoloSeries(seriesType) {\n  return SOLO_SERIES_TYPES.has(seriesType);\n}\nfunction isStackableSeries(seriesType) {\n  return STACKABLE_SERIES_TYPES.has(seriesType);\n}\nfunction isGroupableSeries(seriesType) {\n  return GROUPABLE_SERIES_TYPES.has(seriesType);\n}\nfunction isSeriesStackedByDefault(seriesType) {\n  return STACKED_BY_DEFAULT_SERIES_TYPES.has(seriesType);\n}\nfunction addGroupableSeriesType(seriesType) {\n  GROUPABLE_SERIES_TYPES.add(seriesType);\n}\nfunction addSoloSeriesType(seriesType) {\n  SOLO_SERIES_TYPES.add(seriesType);\n}\nfunction addStackableSeriesType(seriesType) {\n  STACKABLE_SERIES_TYPES.add(seriesType);\n}\nfunction addStackedByDefaultSeriesType(seriesType) {\n  STACKED_BY_DEFAULT_SERIES_TYPES.add(seriesType);\n}\nfunction addSwapDefaultAxesCondition(seriesType, predicate) {\n  SWAP_DEFAULT_AXES_CONDITIONS[seriesType] = predicate;\n}\nfunction addCustomDefaultsFunctions(seriesType, predicate) {\n  CUSTOM_DEFAULTS_FUNCTIONS[seriesType] = predicate;\n}\nfunction isDefaultAxisSwapNeeded(opts) {\n  var _a, _b;\n  let result;\n  for (const series of (_a = opts.series) != null ? _a : []) {\n    const { type = \"line\" } = series;\n    const isDefaultAxisSwapped = (_b = SWAP_DEFAULT_AXES_CONDITIONS[type]) == null ? void 0 : _b.call(SWAP_DEFAULT_AXES_CONDITIONS, series);\n    if (isDefaultAxisSwapped != null) {\n      if (result != null && result != isDefaultAxisSwapped) {\n        throw new Error(\"AG Charts - The provided series have incompatible directions\");\n      }\n      result = isDefaultAxisSwapped;\n    }\n  }\n  return result;\n}\nfunction executeCustomDefaultsFunctions(opts, initialDefaults) {\n  var _a;\n  let result = initialDefaults;\n  for (const series of (_a = opts.series) != null ? _a : []) {\n    const { type } = series;\n    const fn = type != null ? CUSTOM_DEFAULTS_FUNCTIONS[type] : void 0;\n    if (fn !== void 0) {\n      result = __spreadValues(__spreadValues({}, result), fn(series));\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/chart/factory/setupModules.ts\nfunction setupModules() {\n  var _a;\n  for (const m of REGISTERED_MODULES) {\n    if (m.packageType === \"enterprise\" && !verifyIfModuleExpected(m)) {\n      Logger.errorOnce(\"Unexpected enterprise module registered: \" + m.identifier);\n    }\n    if (JSON_APPLY_PLUGINS.constructors != null && m.optionConstructors != null) {\n      Object.assign(JSON_APPLY_PLUGINS.constructors, m.optionConstructors);\n    }\n    if (m.type === \"root\" && m.themeTemplate) {\n      for (const chartType2 of m.chartTypes) {\n        registerChartDefaults(chartType2, m.themeTemplate);\n      }\n    }\n    if (m.type === \"root\" && ((_a = m.conflicts) == null ? void 0 : _a.length)) {\n      registerModuleConflicts(m.optionsKey, m.conflicts);\n    }\n    if (m.type === \"series\") {\n      if (m.chartTypes.length > 1)\n        throw new Error(\"AG Charts - Module definition error: \" + m.identifier);\n      registerSeries(\n        m.identifier,\n        m.chartTypes[0],\n        m.instanceConstructor,\n        m.seriesDefaults,\n        m.themeTemplate,\n        m.enterpriseThemeTemplate,\n        m.paletteFactory,\n        m.solo,\n        m.stackable,\n        m.groupable,\n        m.stackedByDefault,\n        m.swapDefaultAxesCondition,\n        m.customDefaultsFunction\n      );\n    }\n    if (m.type === \"series-option\" && m.themeTemplate) {\n      for (const seriesType of m.seriesTypes) {\n        registerSeriesThemeTemplate(seriesType, m.themeTemplate);\n      }\n    }\n    if (m.type === \"axis-option\" && m.themeTemplate) {\n      for (const axisType of m.axisTypes) {\n        const axisTypeTheme = m.themeTemplate[axisType];\n        const theme = __spreadValues(__spreadValues({}, m.themeTemplate), typeof axisTypeTheme === \"object\" ? axisTypeTheme : {});\n        for (const axisType2 of m.axisTypes) {\n          delete theme[axisType2];\n        }\n        registerAxisThemeTemplate(axisType, theme);\n      }\n    }\n    if (m.type === \"axis\") {\n      registerAxis(m.identifier, m.instanceConstructor);\n      if (m.themeTemplate) {\n        registerAxisThemeTemplate(m.identifier, m.themeTemplate);\n      }\n    }\n    if (m.type === \"legend\") {\n      registerLegend(m.identifier, m.optionsKey, m.instanceConstructor, m.themeTemplate);\n    }\n  }\n  if (hasRegisteredEnterpriseModules()) {\n    const expectedButUnused = getUnusedExpectedModules();\n    if (expectedButUnused.length > 0) {\n      Logger.errorOnce(\"Enterprise modules expected but not registered: \", expectedButUnused);\n    }\n  }\n}\n\n// packages/ag-charts-community/src/chart/hierarchyChart.ts\nvar _HierarchyChart = class _HierarchyChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    this._data = {};\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_HierarchyChart.prototype, this, \"performLayout\").call(this);\n      const {\n        seriesArea: { padding },\n        seriesRoot\n      } = this;\n      const fullSeriesRect = shrinkRect.clone();\n      shrinkRect.shrink(padding.left, \"left\");\n      shrinkRect.shrink(padding.top, \"top\");\n      shrinkRect.shrink(padding.right, \"right\");\n      shrinkRect.shrink(padding.bottom, \"bottom\");\n      this.seriesRect = shrinkRect;\n      this.animationRect = shrinkRect;\n      this.hoverRect = shrinkRect;\n      seriesRoot.translationX = Math.floor(shrinkRect.x);\n      seriesRoot.translationY = Math.floor(shrinkRect.y);\n      yield Promise.all(\n        this.series.map((series) => __async(this, null, function* () {\n          yield series.update({ seriesRect: shrinkRect });\n        }))\n      );\n      seriesRoot.visible = this.series[0].visible;\n      seriesRoot.setClipRectInGroupCoordinateSpace(\n        new BBox(shrinkRect.x, shrinkRect.y, shrinkRect.width, shrinkRect.height)\n      );\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: { width: this.scene.width, height: this.scene.height },\n        clipSeries: false,\n        series: { rect: fullSeriesRect, paddedRect: shrinkRect, visible: true },\n        axes: []\n      });\n      return shrinkRect;\n    });\n  }\n};\n_HierarchyChart.className = \"HierarchyChart\";\n_HierarchyChart.type = \"hierarchy\";\nvar HierarchyChart = _HierarchyChart;\n\n// packages/ag-charts-community/src/chart/factory/processEnterpriseOptions.ts\nfunction removeUsedEnterpriseOptions(options) {\n  var _a, _b, _c, _d;\n  const usedOptions = [];\n  const optionsChartType = getChartType(optionsType(options));\n  for (const { type, chartTypes, optionsKey, optionsInnerKey, identifier } of EXPECTED_ENTERPRISE_MODULES) {\n    if (optionsChartType !== \"unknown\" && !chartTypes.includes(optionsChartType))\n      continue;\n    if (type === \"root\" || type === \"legend\") {\n      const optionValue = options[optionsKey];\n      if (optionValue == null)\n        continue;\n      if (!optionsInnerKey) {\n        usedOptions.push(optionsKey);\n        delete options[optionsKey];\n      } else if (optionValue[optionsInnerKey]) {\n        usedOptions.push(`${optionsKey}.${optionsInnerKey}`);\n        delete optionValue[optionsInnerKey];\n      }\n    } else if (type === \"axis\") {\n      if (!(\"axes\" in options) || !((_a = options.axes) == null ? void 0 : _a.some((axis) => axis.type === identifier)))\n        continue;\n      usedOptions.push(`axis[type=${identifier}]`);\n      options.axes = options.axes.filter((axis) => axis.type !== identifier);\n    } else if (type === \"axis-option\") {\n      if (!(\"axes\" in options) || !((_b = options.axes) == null ? void 0 : _b.some((axis) => axis[optionsKey])))\n        continue;\n      usedOptions.push(`axis.${optionsKey}`);\n      options.axes.forEach((axis) => {\n        if (axis[optionsKey]) {\n          delete axis[optionsKey];\n        }\n      });\n    } else if (type === \"series\") {\n      if (!((_c = options.series) == null ? void 0 : _c.some((series) => series.type === identifier)))\n        continue;\n      usedOptions.push(`series[type=${identifier}]`);\n      options.series = options.series.filter((series) => series.type !== identifier);\n    } else if (type === \"series-option\") {\n      if (!((_d = options.series) == null ? void 0 : _d.some((series) => series[optionsKey])))\n        continue;\n      usedOptions.push(`series.${optionsKey}`);\n      options.series.forEach((series) => {\n        if (series[optionsKey]) {\n          delete series[optionsKey];\n        }\n      });\n    }\n  }\n  if (usedOptions.length > 0) {\n    Logger.warnOnce(\n      [\n        `unable to use these enterprise features as 'ag-charts-enterprise' has not been loaded:`,\n        ``,\n        ...usedOptions,\n        ``,\n        \"See: https://charts.ag-grid.com/javascript/installation/\"\n      ].join(\"\\n\")\n    );\n  }\n}\n\n// packages/ag-charts-community/src/chart/themes/chartTheme.ts\nvar DEFAULT_BACKGROUND_FILL = \"white\";\nvar palette = {\n  fills: Array.from(Object.values(DEFAULT_FILLS)),\n  strokes: Array.from(Object.values(DEFAULT_STROKES))\n};\nvar CHART_TYPE_CONFIG = {\n  get cartesian() {\n    return { seriesTypes: CHART_TYPES.cartesianTypes, commonOptions: [\"zoom\", \"navigator\"] };\n  },\n  get polar() {\n    return { seriesTypes: CHART_TYPES.polarTypes, commonOptions: [] };\n  },\n  get hierarchy() {\n    return { seriesTypes: CHART_TYPES.hierarchyTypes, commonOptions: [] };\n  }\n};\nvar CHART_TYPE_SPECIFIC_COMMON_OPTIONS = Object.values(CHART_TYPE_CONFIG).reduce((r, { commonOptions }) => [...r, ...commonOptions], []);\nfunction resolvePartialPalette(partialPalette, basePalette) {\n  var _a, _b;\n  if (partialPalette == null)\n    return null;\n  return {\n    fills: (_a = partialPalette.fills) != null ? _a : basePalette.fills,\n    strokes: (_b = partialPalette.strokes) != null ? _b : basePalette.strokes\n  };\n}\nvar _ChartTheme = class _ChartTheme {\n  getPalette() {\n    return palette;\n  }\n  static getAxisDefaults() {\n    return {\n      top: {},\n      right: {},\n      bottom: {},\n      left: {},\n      title: {\n        enabled: false,\n        text: \"Axis Title\",\n        spacing: 25,\n        fontStyle: void 0,\n        fontWeight: FONT_WEIGHT2.NORMAL,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_LABEL_COLOUR\n      },\n      label: {\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.SMALL,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        padding: 5,\n        rotation: void 0,\n        color: DEFAULT_LABEL_COLOUR,\n        formatter: void 0,\n        avoidCollisions: true\n      },\n      line: {\n        enabled: true,\n        width: 1,\n        color: DEFAULT_AXIS_LINE_COLOUR\n      },\n      tick: {\n        enabled: false,\n        width: 1,\n        color: DEFAULT_AXIS_LINE_COLOUR\n      },\n      gridLine: {\n        enabled: true,\n        style: [\n          {\n            stroke: DEFAULT_AXIS_GRID_COLOUR,\n            lineDash: []\n          }\n        ]\n      },\n      crossLines: {\n        enabled: false,\n        fill: DEFAULT_CROSS_LINES_COLOUR,\n        stroke: DEFAULT_CROSS_LINES_COLOUR,\n        fillOpacity: 0.1,\n        strokeWidth: 1,\n        label: {\n          enabled: false,\n          fontStyle: void 0,\n          fontWeight: void 0,\n          fontSize: FONT_SIZE.SMALL,\n          fontFamily: DEFAULT_FONT_FAMILY,\n          padding: 5,\n          color: DEFAULT_LABEL_COLOUR\n        }\n      }\n    };\n  }\n  static getSeriesDefaults() {\n    return {\n      tooltip: {\n        enabled: true,\n        renderer: void 0\n      },\n      visible: true,\n      showInLegend: true,\n      highlightStyle: {\n        item: {\n          fill: \"rgba(255,255,255, 0.33)\",\n          stroke: `rgba(0, 0, 0, 0.4)`,\n          strokeWidth: 2\n        },\n        series: {\n          dimOpacity: 1\n        },\n        text: {\n          color: \"black\"\n        }\n      },\n      nodeClickRange: \"exact\"\n    };\n  }\n  static getCartesianSeriesMarkerDefaults() {\n    return {\n      enabled: true,\n      shape: \"circle\",\n      size: 7,\n      strokeWidth: 1,\n      formatter: void 0\n    };\n  }\n  static getLegendItemMarkerDefaults() {\n    return {\n      shape: void 0,\n      size: 15,\n      padding: 8\n    };\n  }\n  static getCaptionWrappingDefaults() {\n    return \"hyphenate\";\n  }\n  static getChartDefaults() {\n    return {\n      background: {\n        visible: true,\n        fill: DEFAULT_BACKGROUND_COLOUR\n      },\n      padding: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      title: {\n        enabled: false,\n        text: \"Title\",\n        fontStyle: void 0,\n        fontWeight: FONT_WEIGHT2.NORMAL,\n        fontSize: FONT_SIZE.LARGE,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_LABEL_COLOUR,\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      subtitle: {\n        enabled: false,\n        text: \"Subtitle\",\n        spacing: 20,\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: DEFAULT_MUTED_LABEL_COLOUR,\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      footnote: {\n        enabled: false,\n        text: \"Footnote\",\n        spacing: 20,\n        fontStyle: void 0,\n        fontWeight: void 0,\n        fontSize: FONT_SIZE.MEDIUM,\n        fontFamily: DEFAULT_FONT_FAMILY,\n        color: \"rgb(140, 140, 140)\",\n        wrapping: _ChartTheme.getCaptionWrappingDefaults()\n      },\n      legend: {\n        position: BOTTOM,\n        spacing: 30,\n        listeners: {},\n        item: {\n          paddingX: 16,\n          paddingY: 8,\n          marker: _ChartTheme.getLegendItemMarkerDefaults(),\n          label: {\n            color: DEFAULT_LABEL_COLOUR,\n            fontStyle: void 0,\n            fontWeight: void 0,\n            fontSize: FONT_SIZE.SMALL,\n            fontFamily: DEFAULT_FONT_FAMILY,\n            formatter: void 0\n          }\n        },\n        reverseOrder: false,\n        pagination: {\n          marker: {\n            size: 12\n          },\n          activeStyle: {\n            fill: DEFAULT_LABEL_COLOUR\n          },\n          inactiveStyle: {\n            fill: DEFAULT_MUTED_LABEL_COLOUR\n          },\n          highlightStyle: {\n            fill: DEFAULT_LABEL_COLOUR\n          },\n          label: {\n            color: DEFAULT_LABEL_COLOUR\n          }\n        }\n      },\n      tooltip: {\n        enabled: true,\n        range: \"nearest\",\n        delay: 0\n      },\n      listeners: {}\n    };\n  }\n  constructor(options) {\n    var _a;\n    options = deepMerge({}, options != null ? options : {});\n    const { overrides = null, palette: palette11 = null } = options;\n    const defaults = this.createChartConfigPerChartType(this.getDefaults());\n    if (overrides) {\n      const { common } = overrides;\n      const applyOverrides = (seriesTypes, overrideOpts) => {\n        if (!overrideOpts)\n          return;\n        for (const s of seriesTypes) {\n          const seriesType = s;\n          defaults[seriesType] = deepMerge(defaults[seriesType], overrideOpts);\n        }\n      };\n      for (const [, { seriesTypes, commonOptions }] of Object.entries(CHART_TYPE_CONFIG)) {\n        const cleanedCommon = __spreadValues({}, common);\n        for (const commonKey of CHART_TYPE_SPECIFIC_COMMON_OPTIONS) {\n          if (!commonOptions.includes(commonKey)) {\n            delete cleanedCommon[commonKey];\n          }\n        }\n        applyOverrides(seriesTypes, cleanedCommon);\n      }\n      CHART_TYPES.seriesTypes.forEach((s) => {\n        const seriesType = s;\n        if (overrides[seriesType]) {\n          defaults[seriesType] = deepMerge(defaults[seriesType], overrides[seriesType]);\n        }\n      });\n    }\n    const basePalette = this.getPalette();\n    this.palette = (_a = resolvePartialPalette(palette11, basePalette)) != null ? _a : basePalette;\n    this.config = Object.freeze(this.templateTheme(defaults));\n  }\n  createChartConfigPerChartType(config) {\n    Object.entries(CHART_TYPE_CONFIG).forEach(([nextType, { seriesTypes }]) => {\n      const typeDefaults = getChartDefaults(nextType);\n      seriesTypes.forEach((next) => {\n        const alias = next;\n        if (!config[alias]) {\n          config[alias] = {};\n          deepMerge(config[alias], typeDefaults);\n        }\n      });\n    });\n    return config;\n  }\n  getDefaults() {\n    let defaults = {};\n    const getChartTypeDefaults = (chartType2) => {\n      return __spreadValues(__spreadValues(__spreadValues({}, getLegendThemeTemplates()), _ChartTheme.getChartDefaults()), getChartDefaults(chartType2));\n    };\n    const getOverridesByType = (chartType2, seriesTypes) => {\n      var _a, _b, _c, _d;\n      const chartDefaults = getChartTypeDefaults(chartType2);\n      const result = {};\n      for (const seriesType of seriesTypes) {\n        (_a = result[seriesType]) != null ? _a : result[seriesType] = deepMerge({}, chartDefaults);\n        const axes = (_c = (_b = result[seriesType]).axes) != null ? _c : _b.axes = {};\n        const template = getSeriesThemeTemplate(seriesType);\n        if (template) {\n          result[seriesType].series = deepMerge(result[seriesType].series, template);\n        }\n        for (const axisType of AXIS_TYPES.axesTypes) {\n          const template2 = getAxisThemeTemplate(axisType);\n          if (chartType2 === \"cartesian\") {\n            axes[axisType] = deepMerge(\n              axes[axisType],\n              (_d = _ChartTheme.cartesianAxisDefault[axisType]) != null ? _d : {}\n            );\n          }\n          if (template2) {\n            axes[axisType] = deepMerge(axes[axisType], template2);\n          }\n        }\n      }\n      return result;\n    };\n    defaults = deepMerge(defaults, getOverridesByType(\"cartesian\", CHART_TYPES.cartesianTypes));\n    defaults = deepMerge(defaults, getOverridesByType(\"polar\", CHART_TYPES.polarTypes));\n    defaults = deepMerge(defaults, getOverridesByType(\"hierarchy\", CHART_TYPES.hierarchyTypes));\n    return defaults;\n  }\n  templateTheme(themeTemplate) {\n    const themeInstance = jsonClone(themeTemplate);\n    const { extensions, properties } = this.getTemplateParameters();\n    jsonWalk(themeInstance, (node) => {\n      if (node[\"__extends__\"]) {\n        const key = node[\"__extends__\"];\n        const source = extensions.get(key);\n        if (source == null) {\n          throw new Error(`AG Charts - no template variable provided for: ${key}`);\n        }\n        Object.keys(source).forEach((key2) => {\n          if (!(key2 in node)) {\n            node[key2] = source[key2];\n          }\n        });\n        delete node[\"__extends__\"];\n      }\n      if (node[\"__overrides__\"]) {\n        const key = node[\"__overrides__\"];\n        const source = extensions.get(key);\n        if (source == null) {\n          throw new Error(`AG Charts - no template variable provided for: ${key}`);\n        }\n        Object.assign(node, source);\n        delete node[\"__overrides__\"];\n      }\n      if (Array.isArray(node)) {\n        for (let i = 0; i < node.length; i++) {\n          const symbol = node[i];\n          if (properties.has(symbol)) {\n            node[i] = properties.get(symbol);\n          }\n        }\n      } else {\n        for (const [name, value] of Object.entries(node)) {\n          if (properties.has(value)) {\n            node[name] = properties.get(value);\n          }\n        }\n      }\n    });\n    return themeInstance;\n  }\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: DEFAULT_FILLS.BLUE,\n      stroke: DEFAULT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: DEFAULT_FILLS.ORANGE,\n      stroke: DEFAULT_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: DEFAULT_FILLS.GRAY,\n      stroke: DEFAULT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const extensions = /* @__PURE__ */ new Map();\n    extensions.set(EXTENDS_CHART_DEFAULTS, _ChartTheme.getChartDefaults());\n    extensions.set(EXTENDS_AXES_DEFAULTS, _ChartTheme.getAxisDefaults());\n    extensions.set(EXTENDS_LEGEND_DEFAULTS, _ChartTheme.getChartDefaults().legend);\n    extensions.set(EXTENDS_LEGEND_ITEM_DEFAULTS, _ChartTheme.getChartDefaults().legend.item);\n    extensions.set(EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS, _ChartTheme.getLegendItemMarkerDefaults());\n    extensions.set(EXTENDS_AXES_LABEL_DEFAULTS, _ChartTheme.getAxisDefaults().label);\n    extensions.set(EXTENDS_AXES_LINE_DEFAULTS, _ChartTheme.getAxisDefaults().line);\n    extensions.set(EXTENDS_AXES_TICK_DEFAULTS, _ChartTheme.getAxisDefaults().tick);\n    extensions.set(EXTENDS_AXES_GRID_LINE_DEFAULTS, _ChartTheme.getAxisDefaults().gridLine);\n    extensions.set(EXTENDS_SERIES_DEFAULTS, _ChartTheme.getSeriesDefaults());\n    extensions.set(OVERRIDE_SERIES_LABEL_DEFAULTS, {});\n    extensions.set(EXTENDS_CARTESIAN_MARKER_DEFAULTS, _ChartTheme.getCartesianSeriesMarkerDefaults());\n    const properties = /* @__PURE__ */ new Map();\n    properties.set(DEFAULT_FONT_FAMILY, \"Verdana, sans-serif\");\n    properties.set(DEFAULT_LABEL_COLOUR, \"rgb(70, 70, 70)\");\n    properties.set(DEFAULT_INVERTED_LABEL_COLOUR, \"white\");\n    properties.set(DEFAULT_MUTED_LABEL_COLOUR, \"rgb(140, 140, 140)\");\n    properties.set(DEFAULT_AXIS_GRID_COLOUR, \"rgb(224,234,241)\");\n    properties.set(DEFAULT_AXIS_LINE_COLOUR, \"rgb(195, 195, 195)\");\n    properties.set(DEFAULT_CROSS_LINES_COLOUR, \"rgb(70, 70, 70)\");\n    properties.set(DEFAULT_INSIDE_SERIES_LABEL_COLOUR, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_BACKGROUND_COLOUR, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_SHADOW_COLOUR, \"rgba(0, 0, 0, 0.5)\");\n    properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      DEFAULT_FILLS.ORANGE,\n      DEFAULT_FILLS.YELLOW,\n      DEFAULT_FILLS.GREEN\n    ]);\n    properties.set(DEFAULT_HIERARCHY_FILLS, [\"#ffffff\", \"#e0e5ea\", \"#c1ccd5\", \"#a3b4c1\", \"#859cad\"]);\n    properties.set(DEFAULT_HIERARCHY_STROKES, [\"#ffffff\", \"#c5cbd1\", \"#a4b1bd\", \"#8498a9\", \"#648096\"]);\n    properties.set(DEFAULT_POLAR_SERIES_STROKE, DEFAULT_BACKGROUND_FILL);\n    properties.set(DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS, _ChartTheme.getWaterfallSeriesDefaultPositiveColors());\n    properties.set(DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS, _ChartTheme.getWaterfallSeriesDefaultNegativeColors());\n    properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _ChartTheme.getWaterfallSeriesDefaultTotalColors());\n    properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _ChartTheme.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return {\n      extensions,\n      properties\n    };\n  }\n};\n_ChartTheme.cartesianAxisDefault = {\n  number: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    line: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().line), {\n      enabled: false\n    })\n  }),\n  log: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    base: 10,\n    line: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().line), {\n      enabled: false\n    })\n  }),\n  category: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    groupPaddingInner: 0.1,\n    label: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().label), {\n      autoRotate: true\n    }),\n    gridLine: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().gridLine), {\n      enabled: false\n    })\n  }),\n  \"grouped-category\": __spreadValues({}, _ChartTheme.getAxisDefaults()),\n  time: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults()), {\n    gridLine: __spreadProps(__spreadValues({}, _ChartTheme.getAxisDefaults().gridLine), {\n      enabled: false\n    })\n  })\n};\nvar ChartTheme = _ChartTheme;\n\n// packages/ag-charts-community/src/chart/mapping/prepareSeries.ts\nfunction groupSeriesByType(seriesOptions) {\n  var _a, _b, _c;\n  const groupMap = {};\n  const stackMap = {};\n  const defaultUnstackedGroup = \"default-ag-charts-group\";\n  const result = [];\n  for (const s of seriesOptions) {\n    const type = (_a = s.type) != null ? _a : \"line\";\n    const stackable = isStackableSeries(type);\n    const groupable = isGroupableSeries(type);\n    if (!stackable && !groupable) {\n      result.push({ type: \"ungrouped\", opts: [s] });\n      continue;\n    }\n    const { stacked: sStacked, stackGroup: sStackGroup, grouped: sGrouped = void 0, xKey } = s;\n    const stacked = sStackGroup != null || sStacked === true;\n    const grouped = sGrouped === true;\n    let groupingKey = [sStackGroup != null ? sStackGroup : sStacked === true ? \"stacked\" : void 0, grouped ? \"grouped\" : void 0].filter((v) => v != null).join(\"-\");\n    if (!groupingKey) {\n      groupingKey = defaultUnstackedGroup;\n    }\n    const indexKey = `${type}-${xKey}-${groupingKey}`;\n    if (stacked && stackable) {\n      const updated = (_b = stackMap[indexKey]) != null ? _b : stackMap[indexKey] = { type: \"stack\", opts: [] };\n      if (updated.opts.length === 0)\n        result.push(updated);\n      updated.opts.push(s);\n    } else if (grouped && groupable) {\n      const updated = (_c = groupMap[indexKey]) != null ? _c : groupMap[indexKey] = { type: \"group\", opts: [] };\n      if (updated.opts.length === 0)\n        result.push(updated);\n      updated.opts.push(s);\n    } else {\n      result.push({ type: \"ungrouped\", opts: [s] });\n    }\n  }\n  return result;\n}\nfunction processSeriesOptions(_opts, seriesOptions) {\n  var _a;\n  const result = [];\n  const preprocessed = seriesOptions.map((series) => {\n    var _a2;\n    const sType = (_a2 = series.type) != null ? _a2 : \"line\";\n    const groupable = isGroupableSeries(sType);\n    const stackable = isStackableSeries(sType);\n    const stackedByDefault = isSeriesStackedByDefault(sType);\n    if (series.grouped && !groupable) {\n      Logger.warnOnce(`unsupported grouping of series type: ${sType}`);\n    }\n    if (series.stacked && !stackable) {\n      Logger.warnOnce(`unsupported stacking of series type: ${sType}`);\n    }\n    if (!groupable && !stackable) {\n      return series;\n    }\n    let stacked = false;\n    let grouped2 = false;\n    if (series.stacked === void 0 && series.grouped === void 0) {\n      stacked = stackable && stackedByDefault;\n      grouped2 = groupable && !stacked;\n    } else if (series.stacked === void 0) {\n      stacked = stackable && stackedByDefault && !(series.grouped && groupable);\n      grouped2 = groupable && !stacked && !!series.grouped;\n    } else if (series.grouped === void 0) {\n      stacked = stackable && series.stacked;\n      grouped2 = groupable && !stacked;\n    } else {\n      stacked = stackable && series.stacked;\n      grouped2 = groupable && !stacked && series.grouped;\n    }\n    return __spreadProps(__spreadValues({}, series), { stacked, grouped: grouped2 });\n  });\n  const grouped = groupSeriesByType(preprocessed);\n  const groupCount2 = grouped.reduce(\n    (result2, next) => {\n      var _a2, _b;\n      if (next.type === \"ungrouped\")\n        return result2;\n      const seriesType = (_a2 = next.opts[0].type) != null ? _a2 : \"line\";\n      (_b = result2[seriesType]) != null ? _b : result2[seriesType] = 0;\n      result2[seriesType] += next.type === \"stack\" ? 1 : next.opts.length;\n      return result2;\n    },\n    {}\n  );\n  const groupIdx = {};\n  const addSeriesGroupingMeta = (group2) => {\n    var _a2, _b;\n    let stackIdx = 0;\n    const seriesType = (_a2 = group2.opts[0].type) != null ? _a2 : \"line\";\n    (_b = groupIdx[seriesType]) != null ? _b : groupIdx[seriesType] = 0;\n    if (group2.type === \"stack\") {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = {\n          groupIndex: groupIdx[seriesType],\n          groupCount: groupCount2[seriesType],\n          stackIndex: stackIdx++,\n          stackCount: group2.opts.length\n        };\n      }\n      groupIdx[seriesType]++;\n    } else if (group2.type === \"group\") {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = {\n          groupIndex: groupIdx[seriesType],\n          groupCount: groupCount2[seriesType],\n          stackIndex: 0,\n          stackCount: 0\n        };\n        groupIdx[seriesType]++;\n      }\n    } else {\n      for (const opts of group2.opts) {\n        opts.seriesGrouping = void 0;\n      }\n    }\n    return group2.opts;\n  };\n  Debug.create(true, \"opts\")(\"processSeriesOptions() - series grouping: \", grouped);\n  for (const group2 of grouped) {\n    const seriesType = (_a = group2.opts[0].type) != null ? _a : \"line\";\n    if (isGroupableSeries(seriesType) || isStackableSeries(seriesType)) {\n      result.push(...addSeriesGroupingMeta(group2));\n    } else {\n      result.push(...group2.opts);\n    }\n  }\n  return result;\n}\n\n// packages/ag-charts-community/src/chart/themes/darkTheme.ts\nvar DEFAULT_DARK_BACKGROUND_FILL = \"#192232\";\nvar DEFAULT_DARK_FILLS = {\n  BLUE: \"#5090dc\",\n  ORANGE: \"#ffa03a\",\n  GREEN: \"#459d55\",\n  CYAN: \"#34bfe1\",\n  YELLOW: \"#e1cc00\",\n  VIOLET: \"#9669cb\",\n  GRAY: \"#b5b5b5\",\n  MAGENTA: \"#bd5aa7\",\n  BROWN: \"#8a6224\",\n  RED: \"#ef5452\"\n};\nvar DEFAULT_DARK_STROKES = {\n  BLUE: \"#74a8e6\",\n  ORANGE: \"#ffbe70\",\n  GREEN: \"#6cb176\",\n  CYAN: \"#75d4ef\",\n  YELLOW: \"#f6e559\",\n  VIOLET: \"#aa86d8\",\n  GRAY: \"#a1a1a1\",\n  MAGENTA: \"#ce7ab9\",\n  BROWN: \"#997b52\",\n  RED: \"#ff7872\"\n};\nvar palette2 = {\n  fills: Array.from(Object.values(DEFAULT_DARK_FILLS)),\n  strokes: Array.from(Object.values(DEFAULT_DARK_STROKES))\n};\nvar DarkTheme = class _DarkTheme extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.BLUE,\n      stroke: DEFAULT_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.ORANGE,\n      stroke: DEFAULT_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: DEFAULT_DARK_FILLS.GRAY,\n      stroke: DEFAULT_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _DarkTheme.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _DarkTheme.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _DarkTheme.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _DarkTheme.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    result.properties.set(DEFAULT_POLAR_SERIES_STROKE, DEFAULT_DARK_BACKGROUND_FILL);\n    result.properties.set(DEFAULT_LABEL_COLOUR, \"white\");\n    result.properties.set(DEFAULT_MUTED_LABEL_COLOUR, \"#7D91A0\");\n    result.properties.set(DEFAULT_AXIS_GRID_COLOUR, \"#545A6E\");\n    result.properties.set(DEFAULT_CROSS_LINES_COLOUR, \"white\");\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      DEFAULT_DARK_FILLS.ORANGE,\n      DEFAULT_DARK_FILLS.YELLOW,\n      DEFAULT_DARK_FILLS.GREEN\n    ]);\n    result.properties.set(DEFAULT_HIERARCHY_FILLS, [\"#192834\", \"#253746\", \"#324859\", \"#3f596c\", \"#4d6a80\"]);\n    result.properties.set(DEFAULT_HIERARCHY_STROKES, [\"#192834\", \"#3b5164\", \"#496275\", \"#577287\", \"#668399\"]);\n    result.properties.set(DEFAULT_BACKGROUND_COLOUR, DEFAULT_DARK_BACKGROUND_FILL);\n    result.properties.set(DEFAULT_INSIDE_SERIES_LABEL_COLOUR, DEFAULT_DARK_BACKGROUND_FILL);\n    return result;\n  }\n  getPalette() {\n    return palette2;\n  }\n  constructor(options) {\n    super(options);\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/materialDark.ts\nvar MATERIAL_DARK_FILLS = {\n  BLUE: \"#2196F3\",\n  ORANGE: \"#FF9800\",\n  GREEN: \"#4CAF50\",\n  CYAN: \"#00BCD4\",\n  YELLOW: \"#FFEB3B\",\n  VIOLET: \"#7E57C2\",\n  GRAY: \"#9E9E9E\",\n  MAGENTA: \"#F06292\",\n  BROWN: \"#795548\",\n  RED: \"#F44336\"\n};\nvar MATERIAL_DARK_STROKES = {\n  BLUE: \"#90CAF9\",\n  ORANGE: \"#FFCC80\",\n  GREEN: \"#A5D6A7\",\n  CYAN: \"#80DEEA\",\n  YELLOW: \"#FFF9C4\",\n  VIOLET: \"#B39DDB\",\n  GRAY: \"#E0E0E0\",\n  MAGENTA: \"#F48FB1\",\n  BROWN: \"#A1887F\",\n  RED: \"#EF9A9A\"\n};\nvar palette3 = {\n  fills: Array.from(Object.values(MATERIAL_DARK_FILLS)),\n  strokes: Array.from(Object.values(MATERIAL_DARK_STROKES))\n};\nvar MaterialDark = class _MaterialDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.BLUE,\n      stroke: MATERIAL_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.RED,\n      stroke: MATERIAL_DARK_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: MATERIAL_DARK_FILLS.GRAY,\n      stroke: MATERIAL_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _MaterialDark.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _MaterialDark.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _MaterialDark.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      MATERIAL_DARK_FILLS.ORANGE,\n      MATERIAL_DARK_FILLS.YELLOW,\n      MATERIAL_DARK_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _MaterialDark.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette3;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/materialLight.ts\nvar MATERIAL_LIGHT_FILLS = {\n  BLUE: \"#2196F3\",\n  ORANGE: \"#FF9800\",\n  GREEN: \"#4CAF50\",\n  CYAN: \"#00BCD4\",\n  YELLOW: \"#FFEB3B\",\n  VIOLET: \"#7E57C2\",\n  GRAY: \"#9E9E9E\",\n  MAGENTA: \"#F06292\",\n  BROWN: \"#795548\",\n  RED: \"#F44336\"\n};\nvar MATERIAL_LIGHT_STROKES = {\n  BLUE: \"#1565C0\",\n  ORANGE: \"#E65100\",\n  GREEN: \"#2E7D32\",\n  CYAN: \"#00838F\",\n  YELLOW: \"#F9A825\",\n  VIOLET: \"#4527A0\",\n  GRAY: \"#616161\",\n  MAGENTA: \"#C2185B\",\n  BROWN: \"#4E342E\",\n  RED: \"#B71C1C\"\n};\nvar palette4 = {\n  fills: Array.from(Object.values(MATERIAL_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(MATERIAL_LIGHT_STROKES))\n};\nvar MaterialLight = class _MaterialLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.BLUE,\n      stroke: MATERIAL_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.RED,\n      stroke: MATERIAL_LIGHT_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: MATERIAL_LIGHT_FILLS.GRAY,\n      stroke: MATERIAL_LIGHT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _MaterialLight.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _MaterialLight.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _MaterialLight.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      MATERIAL_LIGHT_FILLS.ORANGE,\n      MATERIAL_LIGHT_FILLS.YELLOW,\n      MATERIAL_LIGHT_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _MaterialLight.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette4;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/polychromaDark.ts\nvar POLYCHROMA_DARK_FILLS = {\n  BLUE: \"#436ff4\",\n  PURPLE: \"#9a7bff\",\n  MAGENTA: \"#d165d2\",\n  PINK: \"#f0598b\",\n  RED: \"#f47348\",\n  ORANGE: \"#f2a602\",\n  YELLOW: \"#e9e201\",\n  GREEN: \"#21b448\",\n  CYAN: \"#00b9a2\",\n  MODERATE_BLUE: \"#00aee4\"\n};\nvar POLYCHROMA_DARK_STROKES = {\n  BLUE: \"#6698ff\",\n  PURPLE: \"#c0a3ff\",\n  MAGENTA: \"#fc8dfc\",\n  PINK: \"#ff82b1\",\n  RED: \"#ff9b70\",\n  ORANGE: \"#ffcf4e\",\n  YELLOW: \"#ffff58\",\n  GREEN: \"#58dd70\",\n  CYAN: \"#51e2c9\",\n  MODERATE_BLUE: \"#4fd7ff\"\n};\nvar POLYCHROMA_DARK_FILL_GRAY = \"#bbbbbb\";\nvar POLYCHROMA_DARK_STROKE_GRAY = \"#eeeeee\";\nvar palette5 = {\n  fills: Array.from(Object.values(POLYCHROMA_DARK_FILLS)),\n  strokes: Array.from(Object.values(POLYCHROMA_DARK_STROKES))\n};\nvar PolychromaDark = class _PolychromaDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILLS.BLUE,\n      stroke: POLYCHROMA_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILLS.RED,\n      stroke: POLYCHROMA_DARK_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: POLYCHROMA_DARK_FILL_GRAY,\n      stroke: POLYCHROMA_DARK_STROKE_GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _PolychromaDark.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _PolychromaDark.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _PolychromaDark.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      POLYCHROMA_DARK_FILLS.BLUE,\n      POLYCHROMA_DARK_FILLS.RED\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _PolychromaDark.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette5;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/polychromaLight.ts\nvar POLYCHROMA_LIGHT_FILLS = {\n  BLUE: \"#436ff4\",\n  PURPLE: \"#9a7bff\",\n  MAGENTA: \"#d165d2\",\n  PINK: \"#f0598b\",\n  RED: \"#f47348\",\n  ORANGE: \"#f2a602\",\n  YELLOW: \"#e9e201\",\n  GREEN: \"#21b448\",\n  CYAN: \"#00b9a2\",\n  MODERATE_BLUE: \"#00aee4\"\n};\nvar POLYCHROMA_LIGHT_STROKES = {\n  BLUE: \"#2346c9\",\n  PURPLE: \"#7653d4\",\n  MAGENTA: \"#a73da9\",\n  PINK: \"#c32d66\",\n  RED: \"#c84b1c\",\n  ORANGE: \"#c87f00\",\n  YELLOW: \"#c1b900\",\n  GREEN: \"#008c1c\",\n  CYAN: \"#00927c\",\n  MODERATE_BLUE: \"#0087bb\"\n};\nvar POLYCHROMA_LIGHT_FILL_GRAY = \"#bbbbbb\";\nvar POLYCHROMA_LIGHT_STROKE_GRAY = \"#888888\";\nvar palette6 = {\n  fills: Array.from(Object.values(POLYCHROMA_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(POLYCHROMA_LIGHT_STROKES))\n};\nvar PolychromaLight = class _PolychromaLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILLS.BLUE,\n      stroke: POLYCHROMA_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILLS.RED,\n      stroke: POLYCHROMA_LIGHT_STROKES.RED\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: POLYCHROMA_LIGHT_FILL_GRAY,\n      stroke: POLYCHROMA_LIGHT_STROKE_GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _PolychromaLight.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _PolychromaLight.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _PolychromaLight.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      POLYCHROMA_LIGHT_FILLS.BLUE,\n      POLYCHROMA_LIGHT_FILLS.RED\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _PolychromaLight.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette6;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/sheetsDark.ts\nvar SHEETS_DARK_FILLS = {\n  BLUE: \"#4472C4\",\n  ORANGE: \"#ED7D31\",\n  GRAY: \"#A5A5A5\",\n  YELLOW: \"#FFC000\",\n  MODERATE_BLUE: \"#5B9BD5\",\n  GREEN: \"#70AD47\",\n  DARK_GRAY: \"#7B7B7B\",\n  DARK_BLUE: \"#264478\",\n  VERY_DARK_GRAY: \"#636363\",\n  DARK_YELLOW: \"#997300\"\n};\nvar SHEETS_DARK_STROKES = {\n  BLUE: \"#6899ee\",\n  ORANGE: \"#ffa55d\",\n  GRAY: \"#cdcdcd\",\n  YELLOW: \"#ffea53\",\n  MODERATE_BLUE: \"#82c3ff\",\n  GREEN: \"#96d56f\",\n  DARK_GRAY: \"#a1a1a1\",\n  DARK_BLUE: \"#47689f\",\n  VERY_DARK_GRAY: \"#878787\",\n  DARK_YELLOW: \"#c0993d\"\n};\nvar palette7 = {\n  fills: Array.from(Object.values(SHEETS_DARK_FILLS)),\n  strokes: Array.from(Object.values(SHEETS_DARK_STROKES))\n};\nvar SheetsDark = class _SheetsDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.BLUE,\n      stroke: SHEETS_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.ORANGE,\n      stroke: SHEETS_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: SHEETS_DARK_FILLS.GRAY,\n      stroke: SHEETS_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _SheetsDark.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _SheetsDark.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _SheetsDark.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      SHEETS_DARK_FILLS.ORANGE,\n      SHEETS_DARK_FILLS.YELLOW,\n      SHEETS_DARK_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _SheetsDark.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette7;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/sheetsLight.ts\nvar SHEETS_LIGHT_FILLS = {\n  BLUE: \"#5281d5\",\n  ORANGE: \"#ff8d44\",\n  GRAY: \"#b5b5b5\",\n  YELLOW: \"#ffd02f\",\n  MODERATE_BLUE: \"#6aabe6\",\n  GREEN: \"#7fbd57\",\n  DARK_GRAY: \"#8a8a8a\",\n  DARK_BLUE: \"#335287\",\n  VERY_DARK_GRAY: \"#717171\",\n  DARK_YELLOW: \"#a98220\"\n};\nvar SHEETS_LIGHT_STROKES = {\n  BLUE: \"#214d9b\",\n  ORANGE: \"#c25600\",\n  GRAY: \"#7f7f7f\",\n  YELLOW: \"#d59800\",\n  MODERATE_BLUE: \"#3575ac\",\n  GREEN: \"#4b861a\",\n  DARK_GRAY: \"#575757\",\n  DARK_BLUE: \"#062253\",\n  VERY_DARK_GRAY: \"#414141\",\n  DARK_YELLOW: \"#734f00\"\n};\nvar palette8 = {\n  fills: Array.from(Object.values(SHEETS_LIGHT_FILLS)),\n  strokes: Array.from(Object.values(SHEETS_LIGHT_STROKES))\n};\nvar SheetsLight = class _SheetsLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.BLUE,\n      stroke: SHEETS_LIGHT_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.ORANGE,\n      stroke: SHEETS_LIGHT_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: SHEETS_LIGHT_FILLS.GRAY,\n      stroke: SHEETS_LIGHT_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _SheetsLight.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _SheetsLight.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _SheetsLight.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      SHEETS_LIGHT_FILLS.ORANGE,\n      SHEETS_LIGHT_FILLS.YELLOW,\n      SHEETS_LIGHT_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _SheetsLight.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette8;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/vividDark.ts\nvar VIVID_DARK_FILLS = {\n  BLUE: \"#0083ff\",\n  ORANGE: \"#ff6600\",\n  GREEN: \"#00af00\",\n  CYAN: \"#00ccff\",\n  YELLOW: \"#f7c700\",\n  VIOLET: \"#ac26ff\",\n  GRAY: \"#a7a7b7\",\n  MAGENTA: \"#e800c5\",\n  BROWN: \"#b54300\",\n  RED: \"#ff0000\"\n};\nvar VIVID_DARK_STROKES = {\n  BLUE: \"#67b7ff\",\n  ORANGE: \"#ffc24d\",\n  GREEN: \"#5cc86f\",\n  CYAN: \"#54ebff\",\n  VIOLET: \"#c18aff\",\n  YELLOW: \"#fff653\",\n  GRAY: \"#aeaeae\",\n  MAGENTA: \"#f078d4\",\n  BROWN: \"#ba8438\",\n  RED: \"#ff726e\"\n};\nvar palette9 = {\n  fills: Array.from(Object.values(VIVID_DARK_FILLS)),\n  strokes: Array.from(Object.values(VIVID_DARK_STROKES))\n};\nvar VividDark = class _VividDark extends DarkTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: VIVID_DARK_FILLS.BLUE,\n      stroke: VIVID_DARK_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: VIVID_DARK_FILLS.ORANGE,\n      stroke: VIVID_DARK_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: VIVID_DARK_FILLS.GRAY,\n      stroke: VIVID_DARK_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _VividDark.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _VividDark.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS, _VividDark.getWaterfallSeriesDefaultTotalColors());\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      VIVID_DARK_FILLS.ORANGE,\n      VIVID_DARK_FILLS.YELLOW,\n      VIVID_DARK_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _VividDark.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette9;\n  }\n};\n\n// packages/ag-charts-community/src/chart/themes/vividLight.ts\nvar VIVID_FILLS = {\n  BLUE: \"#0083ff\",\n  ORANGE: \"#ff6600\",\n  GREEN: \"#00af00\",\n  CYAN: \"#00ccff\",\n  YELLOW: \"#f7c700\",\n  VIOLET: \"#ac26ff\",\n  GRAY: \"#a7a7b7\",\n  MAGENTA: \"#e800c5\",\n  BROWN: \"#b54300\",\n  RED: \"#ff0000\"\n};\nvar VIVID_STROKES = {\n  BLUE: \"#0f68c0\",\n  ORANGE: \"#d47100\",\n  GREEN: \"#007922\",\n  CYAN: \"#009ac2\",\n  VIOLET: \"#bca400\",\n  YELLOW: \"#753cac\",\n  GRAY: \"#646464\",\n  MAGENTA: \"#9b2685\",\n  BROWN: \"#6c3b00\",\n  RED: \"#cb0021\"\n};\nvar palette10 = {\n  fills: Array.from(Object.values(VIVID_FILLS)),\n  strokes: Array.from(Object.values(VIVID_STROKES))\n};\nvar VividLight = class _VividLight extends ChartTheme {\n  static getWaterfallSeriesDefaultPositiveColors() {\n    return {\n      fill: VIVID_FILLS.BLUE,\n      stroke: VIVID_STROKES.BLUE\n    };\n  }\n  static getWaterfallSeriesDefaultNegativeColors() {\n    return {\n      fill: VIVID_FILLS.ORANGE,\n      stroke: VIVID_STROKES.ORANGE\n    };\n  }\n  static getWaterfallSeriesDefaultTotalColors() {\n    return {\n      fill: VIVID_FILLS.GRAY,\n      stroke: VIVID_STROKES.GRAY\n    };\n  }\n  getTemplateParameters() {\n    const result = super.getTemplateParameters();\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n      _VividLight.getWaterfallSeriesDefaultPositiveColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n      _VividLight.getWaterfallSeriesDefaultNegativeColors()\n    );\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n      _VividLight.getWaterfallSeriesDefaultTotalColors()\n    );\n    result.properties.set(DEFAULT_DIVERGING_SERIES_COLOUR_RANGE, [\n      VIVID_FILLS.ORANGE,\n      VIVID_FILLS.YELLOW,\n      VIVID_FILLS.GREEN\n    ]);\n    result.properties.set(\n      DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n      _VividLight.getWaterfallSeriesDefaultTotalColors().stroke\n    );\n    return result;\n  }\n  getPalette() {\n    return palette10;\n  }\n};\n\n// packages/ag-charts-community/src/chart/mapping/themes.ts\nvar lightTheme = () => new ChartTheme();\nvar darkTheme = () => new DarkTheme();\nvar lightThemes = {\n  undefined: lightTheme,\n  null: lightTheme,\n  \"ag-default\": lightTheme,\n  \"ag-sheets\": () => new SheetsLight(),\n  \"ag-polychroma\": () => new PolychromaLight(),\n  \"ag-vivid\": () => new VividLight(),\n  \"ag-material\": () => new MaterialLight()\n};\nvar darkThemes = {\n  undefined: darkTheme,\n  null: darkTheme,\n  \"ag-default-dark\": darkTheme,\n  \"ag-sheets-dark\": () => new SheetsDark(),\n  \"ag-polychroma-dark\": () => new PolychromaDark(),\n  \"ag-vivid-dark\": () => new VividDark(),\n  \"ag-material-dark\": () => new MaterialDark()\n};\nvar themes = __spreadValues(__spreadValues({}, darkThemes), lightThemes);\nfunction validateChartThemeObject(unknownObject) {\n  if (unknownObject === null) {\n    return void 0;\n  }\n  let valid = true;\n  const { baseTheme, palette: palette11, overrides } = unknownObject;\n  if (baseTheme !== void 0 && typeof baseTheme !== \"string\" && typeof baseTheme !== \"object\") {\n    Logger.warn(`invalid theme.baseTheme type ${typeof baseTheme}, expected (string | object).`);\n    valid = false;\n  }\n  if (overrides !== void 0 && typeof overrides !== \"object\") {\n    Logger.warn(`invalid theme.overrides type ${typeof overrides}, expected object.`);\n    valid = false;\n  }\n  if (typeof palette11 === \"object\") {\n    if (palette11 !== null) {\n      const { fills, strokes } = palette11;\n      if (fills !== void 0 && !Array.isArray(fills)) {\n        Logger.warn(`theme.overrides.fills must be undefined or an array`);\n        valid = false;\n      }\n      if (strokes !== void 0 && !Array.isArray(strokes)) {\n        Logger.warn(`theme.overrides.strokes must be undefined or an array`);\n        valid = false;\n      }\n    }\n  } else if (palette11 !== void 0) {\n    Logger.warn(`invalid theme.palette type ${typeof palette11}, expected object.`);\n    valid = false;\n  }\n  if (valid) {\n    return unknownObject;\n  }\n  return void 0;\n}\nfunction validateChartTheme(value) {\n  if (value === void 0 || typeof value === \"string\" || value instanceof ChartTheme) {\n    return value;\n  }\n  if (typeof value === \"object\") {\n    return validateChartThemeObject(value);\n  }\n  Logger.warn(`invalid theme value type ${typeof value}, expected object.`);\n  return void 0;\n}\nfunction getChartTheme(unvalidatedValue) {\n  var _a;\n  let value = validateChartTheme(unvalidatedValue);\n  if (value instanceof ChartTheme) {\n    return value;\n  }\n  if (value === void 0 || typeof value === \"string\") {\n    const stockTheme = themes[value];\n    if (stockTheme) {\n      return stockTheme();\n    }\n    Logger.warnOnce(`the theme [${value}] is invalid, using [ag-default] instead.`);\n    return lightTheme();\n  }\n  const overrides = [];\n  let palette11;\n  while (typeof value === \"object\") {\n    overrides.push((_a = value.overrides) != null ? _a : {});\n    if (value.palette && palette11 == null) {\n      palette11 = value.palette;\n    }\n    value = value.baseTheme;\n  }\n  overrides.reverse();\n  const flattenedTheme = __spreadValues({\n    baseTheme: value,\n    overrides: jsonMerge(overrides)\n  }, palette11 ? { palette: palette11 } : {});\n  const baseTheme = flattenedTheme.baseTheme ? getChartTheme(flattenedTheme.baseTheme) : lightTheme();\n  return new baseTheme.constructor(flattenedTheme);\n}\n\n// packages/ag-charts-community/src/chart/mapping/prepare.ts\nfunction takeColours(context, colours, maxCount) {\n  const result = [];\n  for (let count2 = 0; count2 < maxCount; count2++) {\n    result.push(colours[(count2 + context.colourIndex) % colours.length]);\n  }\n  return result;\n}\nvar noDataCloneMergeOptions = {\n  avoidDeepClone: [\"data\"]\n};\nfunction getGlobalTooltipPositionOptions(position) {\n  if (position === void 0 || typeof position !== \"object\" || position === null) {\n    return {};\n  }\n  const { type, xOffset, yOffset } = position;\n  const AgTooltipPositionTypeMap = { pointer: true, node: true };\n  const result = {};\n  const isTooltipPositionType = (value) => Object.keys(AgTooltipPositionTypeMap).includes(value);\n  if (typeof type === \"string\" && isTooltipPositionType(type)) {\n    result.type = type;\n  }\n  if (typeof xOffset === \"number\" && !isNaN(xOffset) && isFinite(xOffset)) {\n    result.xOffset = xOffset;\n  }\n  if (typeof yOffset === \"number\" && !isNaN(yOffset) && isFinite(yOffset)) {\n    result.yOffset = yOffset;\n  }\n  return result;\n}\nfunction prepareOptions(options) {\n  var _a, _b, _c, _d;\n  sanityCheckOptions(options);\n  const type = optionsType(options);\n  const checkSeriesType = (type2) => {\n    if (type2 != null && !(isSeriesOptionType(type2) || isEnterpriseSeriesType(type2) || getSeriesDefaults(type2))) {\n      throw new Error(`AG Charts - unknown series type: ${type2}; expected one of: ${CHART_TYPES.seriesTypes}`);\n    }\n  };\n  for (const { type: seriesType } of (_a = options.series) != null ? _a : []) {\n    if (seriesType == null)\n      continue;\n    checkSeriesType(seriesType);\n  }\n  options = validateSoloSeries(options);\n  let defaultSeriesType = \"line\";\n  if (isAgCartesianChartOptions(options)) {\n    defaultSeriesType = \"line\";\n  } else if (isAgHierarchyChartOptions(options)) {\n    defaultSeriesType = \"treemap\";\n  } else if (isAgPolarChartOptions(options)) {\n    defaultSeriesType = \"pie\";\n  }\n  let defaultOverrides = getSeriesDefaults(type);\n  if (isDefaultAxisSwapNeeded(options)) {\n    defaultOverrides = swapAxes(defaultOverrides);\n  }\n  defaultOverrides = executeCustomDefaultsFunctions(options, defaultOverrides);\n  const conflictOverrides = resolveModuleConflicts(options);\n  removeDisabledOptions(options);\n  const globalTooltipPositionOptions = getGlobalTooltipPositionOptions((_b = options.tooltip) == null ? void 0 : _b.position);\n  const { context, mergedOptions, axesThemes, seriesThemes, theme } = prepareMainOptions(\n    defaultOverrides,\n    options,\n    conflictOverrides\n  );\n  mergedOptions.series = processSeriesOptions(\n    mergedOptions,\n    ((_c = mergedOptions.series) != null ? _c : []).map((s) => {\n      var _a2;\n      const type2 = (_a2 = s.type) != null ? _a2 : defaultSeriesType;\n      const mergedSeries = mergeSeriesOptions(s, type2, seriesThemes, globalTooltipPositionOptions);\n      if (type2 === \"pie\") {\n        preparePieOptions(seriesThemes.pie, s, mergedSeries);\n      }\n      return mergedSeries;\n    })\n  ).map((s) => prepareSeries(context, s)).map((s) => theme.templateTheme(s));\n  const checkAxisType = (type2) => {\n    const isAxisType = isAxisOptionType(type2);\n    if (!isAxisType) {\n      Logger.warnOnce(`unknown axis type: ${type2}; expected one of: ${AXIS_TYPES.axesTypes}, ignoring.`);\n    }\n    return isAxisType;\n  };\n  if (\"axes\" in mergedOptions) {\n    let validAxesTypes = true;\n    for (const { type: axisType } of (_d = mergedOptions.axes) != null ? _d : []) {\n      validAxesTypes && (validAxesTypes = checkAxisType(axisType));\n    }\n    const axisSource = validAxesTypes ? mergedOptions.axes : defaultOverrides.axes;\n    mergedOptions.axes = axisSource == null ? void 0 : axisSource.map((axis) => {\n      var _a2, _b2, _c2, _d2, _e;\n      const axisType = axis.type;\n      let axisDefaults;\n      if (validAxesTypes) {\n        axisDefaults = (_a2 = defaultOverrides.axes) == null ? void 0 : _a2.find(\n          ({ type: type2 }) => type2 === axisType\n        );\n      }\n      const axesTheme = jsonMerge([\n        (_b2 = axesThemes[axisType]) != null ? _b2 : {},\n        (_e = (_d2 = axesThemes[axisType]) == null ? void 0 : _d2[(_c2 = axis.position) != null ? _c2 : \"unknown\"]) != null ? _e : {},\n        axisDefaults\n      ]);\n      return prepareAxis(axis, axesTheme);\n    });\n    prepareLegendEnabledOption(options, mergedOptions);\n  }\n  prepareEnabledOptions(options, mergedOptions);\n  return mergedOptions;\n}\nfunction sanityCheckOptions(options) {\n  const deprecatedArrayProps = {\n    yKeys: \"yKey\",\n    yNames: \"yName\"\n  };\n  Object.entries(deprecatedArrayProps).forEach(([oldProp, newProp]) => {\n    var _a;\n    if ((_a = options.series) == null ? void 0 : _a.some((s) => s[oldProp] != null)) {\n      Logger.warnOnce(\n        `Property [series.${oldProp}] is deprecated, please use [series.${newProp}] and multiple series instead.`\n      );\n    }\n  });\n}\nfunction hasSoloSeries(options) {\n  return options.some((series) => isSoloSeries(series.type));\n}\nfunction validateSoloSeries(options) {\n  if (options.series === void 0 || options.series.length <= 1 || !hasSoloSeries(options.series)) {\n    return options;\n  }\n  let series = [...options.series];\n  if (isSoloSeries(series[0].type)) {\n    Logger.warn(\n      `series[0] of type '${series[0].type}' is incompatible with other series types. Only processing series[0]`\n    );\n    series = series.slice(0, 1);\n  } else {\n    const rejects = Array.from(new Set(series.filter((s) => isSoloSeries(s.type)).map((s) => s.type)));\n    Logger.warnOnce(`Unable to mix these series types with the lead series type: ${rejects}`);\n    series = series.filter((s) => !isSoloSeries(s.type));\n  }\n  return __spreadProps(__spreadValues({}, options), { series });\n}\nfunction mergeSeriesOptions(series, type, seriesThemes, globalTooltipPositionOptions) {\n  var _a, _b;\n  const mergedTooltipPosition = jsonMerge(\n    [__spreadValues({}, globalTooltipPositionOptions), (_a = series.tooltip) == null ? void 0 : _a.position],\n    noDataCloneMergeOptions\n  );\n  return jsonMerge(\n    [\n      (_b = seriesThemes[type]) != null ? _b : {},\n      __spreadProps(__spreadValues({}, series), { type, tooltip: __spreadProps(__spreadValues({}, series.tooltip), { position: mergedTooltipPosition }) })\n    ],\n    noDataCloneMergeOptions\n  );\n}\nfunction prepareMainOptions(defaultOverrides, options, conflictOverrides) {\n  const { theme, cleanedTheme, axesThemes, seriesThemes, userPalette: partialPalette } = prepareTheme(options);\n  const userPalette = resolvePartialPalette(partialPalette, theme.palette);\n  const context = { colourIndex: 0, palette: theme.palette, userPalette, theme };\n  defaultOverrides = theme.templateTheme(defaultOverrides);\n  const mergedOptions = jsonMerge(\n    [defaultOverrides, cleanedTheme, options, conflictOverrides],\n    noDataCloneMergeOptions\n  );\n  if (!enterpriseModule.isEnterprise) {\n    removeUsedEnterpriseOptions(mergedOptions);\n  }\n  return { context, mergedOptions, axesThemes, seriesThemes, theme };\n}\nfunction prepareTheme(options) {\n  var _a;\n  const theme = getChartTheme(options.theme);\n  const themeConfig = theme.config[optionsType(options)];\n  const seriesThemes = Object.entries(theme.config).reduce((result, [seriesType, { series }]) => {\n    result[seriesType] = series;\n    return result;\n  }, {});\n  const userTheme = options.theme;\n  const userPalette = typeof userTheme === \"object\" && userTheme.palette ? userTheme.palette : null;\n  return {\n    theme,\n    axesThemes: (_a = themeConfig == null ? void 0 : themeConfig[\"axes\"]) != null ? _a : {},\n    seriesThemes,\n    cleanedTheme: jsonMerge([themeConfig != null ? themeConfig : {}, { axes: DELETE, series: DELETE }]),\n    userPalette\n  };\n}\nfunction prepareSeries(context, input, ...defaults) {\n  const paletteOptions = calculateSeriesPalette(context, input);\n  const removeOptions = { stacked: DELETE, grouped: DELETE };\n  return jsonMerge([...defaults, paletteOptions, input, removeOptions], noDataCloneMergeOptions);\n}\nfunction calculateSeriesPalette(context, input) {\n  const paletteFactory = getSeriesPaletteFactory(input.type);\n  if (!paletteFactory) {\n    return {};\n  }\n  const {\n    palette: { fills = [], strokes = [] },\n    userPalette,\n    theme\n  } = context;\n  const colorsCount = Math.max(fills.length, strokes.length);\n  return paletteFactory({\n    userPalette,\n    themeTemplateParameters: theme.getTemplateParameters(),\n    colorsCount,\n    takeColors: (count2) => {\n      const colors = {\n        fills: takeColours(context, fills, count2),\n        strokes: takeColours(context, strokes, count2)\n      };\n      context.colourIndex += count2;\n      return colors;\n    }\n  });\n}\nfunction prepareAxis(axis, axisTheme) {\n  var _a, _b;\n  const removeOptions = { top: DELETE, bottom: DELETE, left: DELETE, right: DELETE };\n  if (axis.crossLines) {\n    if (!Array.isArray(axis.crossLines)) {\n      Logger.warn(\"axis[].crossLines should be an array.\");\n      axis.crossLines = [];\n    }\n    axis.crossLines = axis.crossLines.map((crossLine) => {\n      var _a2;\n      return jsonMerge([(_a2 = axisTheme.crossLines) != null ? _a2 : {}, crossLine]);\n    });\n  }\n  const gridLineStyle = (_a = axisTheme.gridLine) == null ? void 0 : _a.style;\n  if (((_b = axis.gridLine) == null ? void 0 : _b.style) !== void 0 && gridLineStyle !== void 0 && gridLineStyle.length > 0) {\n    if (!Array.isArray(axis.gridLine.style)) {\n      Logger.warn(\"axis[].gridLine.style should be an array.\");\n      axis.gridLine.style = [];\n    }\n    axis.gridLine.style = axis.gridLine.style.map((userStyle, index) => {\n      if (userStyle.stroke === void 0 && userStyle.lineDash === void 0) {\n        return userStyle;\n      }\n      const themeStyle = gridLineStyle[index % gridLineStyle.length];\n      return jsonMerge([themeStyle, userStyle]);\n    });\n  }\n  const cleanTheme = { crossLines: DELETE };\n  return jsonMerge([axisTheme, cleanTheme, axis, removeOptions], noDataCloneMergeOptions);\n}\nfunction removeDisabledOptions(options) {\n  jsonWalk(\n    options,\n    (userOptionsNode) => {\n      if (\"enabled\" in userOptionsNode && userOptionsNode.enabled === false) {\n        Object.keys(userOptionsNode).forEach((key) => {\n          if (key === \"enabled\")\n            return;\n          delete userOptionsNode[key];\n        });\n      }\n    },\n    { skip: [\"data\", \"theme\"] }\n  );\n}\nfunction prepareLegendEnabledOption(options, mergedOptions) {\n  var _a, _b, _c, _d;\n  if (!isDefined((_a = options.legend) == null ? void 0 : _a.enabled) && !isDefined((_b = mergedOptions.legend) == null ? void 0 : _b.enabled)) {\n    (_c = mergedOptions.legend) != null ? _c : mergedOptions.legend = {};\n    mergedOptions.legend.enabled = ((_d = options.series) != null ? _d : []).length > 1;\n  }\n}\nfunction prepareEnabledOptions(options, mergedOptions) {\n  jsonWalk(\n    options,\n    (visitingUserOpts, visitingMergedOpts) => {\n      if (visitingMergedOpts && \"enabled\" in visitingMergedOpts && !visitingMergedOpts._enabledFromTheme && visitingUserOpts.enabled == null) {\n        visitingMergedOpts.enabled = true;\n      }\n    },\n    { skip: [\"data\", \"theme\"] },\n    mergedOptions\n  );\n  jsonWalk(\n    mergedOptions,\n    (visitingMergedOpts) => {\n      if (visitingMergedOpts._enabledFromTheme != null) {\n        delete visitingMergedOpts._enabledFromTheme;\n      }\n    },\n    { skip: [\"data\", \"theme\"] }\n  );\n}\nfunction preparePieOptions(pieSeriesTheme, seriesOptions, mergedSeries) {\n  if (isArray(seriesOptions.innerLabels)) {\n    mergedSeries.innerLabels = seriesOptions.innerLabels.map(\n      (innerLabel) => jsonMerge([pieSeriesTheme.innerLabels, innerLabel])\n    );\n  } else {\n    mergedSeries.innerLabels = DELETE;\n  }\n}\n\n// packages/ag-charts-community/src/chart/mapping/prepareAxis.ts\nvar CARTESIAN_AXIS_POSITIONS2 = [\"top\", \"right\", \"bottom\", \"left\"];\nvar CARTESIAN_AXIS_TYPES2 = [\"category\", \"grouped-category\", \"number\", \"log\", \"time\"];\nfunction hasCartesianAxisPosition(axis) {\n  const allowedTypes = CARTESIAN_AXIS_TYPES2;\n  return allowedTypes.includes(axis.type);\n}\nfunction isCartesianAxisOptions(options) {\n  const allowedTypes = CARTESIAN_AXIS_TYPES2;\n  return allowedTypes.includes(options.type);\n}\nfunction isAxisPosition(position) {\n  const allowedPositions = CARTESIAN_AXIS_POSITIONS2;\n  return typeof position === \"string\" && allowedPositions.includes(position);\n}\nvar AxisPositionGuesser = class {\n  constructor() {\n    this.result = [];\n    this.valid = [];\n    this.invalid = [];\n  }\n  push(axis, options) {\n    const { result, valid, invalid } = this;\n    if (isCartesianAxisOptions(options)) {\n      if (isAxisPosition(options.position)) {\n        valid.push(axis);\n      } else {\n        invalid.push(axis);\n      }\n    }\n    result.push(axis);\n  }\n  guessInvalidPositions() {\n    const takenPosition = this.valid.filter((v) => hasCartesianAxisPosition(v)).map((v) => v.position).filter((v) => v !== void 0);\n    const guesses = [\"top\", \"right\", \"bottom\", \"left\"];\n    for (const invalidAxis of this.invalid) {\n      let nextGuess = guesses.pop();\n      while (takenPosition.includes(nextGuess) && nextGuess !== void 0) {\n        nextGuess = guesses.pop();\n      }\n      if (nextGuess === void 0)\n        break;\n      invalidAxis.position = nextGuess;\n    }\n    return this.result;\n  }\n};\n\n// packages/ag-charts-community/src/chart/polarChart.ts\nvar _PolarChart = class _PolarChart extends Chart {\n  constructor(specialOverrides, resources) {\n    super(specialOverrides, resources);\n    this.padding = new Padding(40);\n    this.axisGroup.zIndex = 5 /* AXIS_FOREGROUND_ZINDEX */;\n  }\n  performLayout() {\n    return __async(this, null, function* () {\n      const shrinkRect = yield __superGet(_PolarChart.prototype, this, \"performLayout\").call(this);\n      const fullSeriesRect = shrinkRect.clone();\n      this.computeSeriesRect(shrinkRect);\n      yield this.computeCircle(shrinkRect);\n      this.axes.forEach((axis) => axis.update());\n      this.hoverRect = shrinkRect;\n      this.layoutService.dispatchLayoutComplete({\n        type: \"layout-complete\",\n        chart: { width: this.scene.width, height: this.scene.height },\n        clipSeries: false,\n        series: { rect: fullSeriesRect, paddedRect: shrinkRect, visible: true },\n        axes: []\n      });\n      return shrinkRect;\n    });\n  }\n  updateAxes(cx, cy, radius) {\n    var _a, _b;\n    const angleAxis = this.axes.find((axis) => axis.direction === \"x\" /* X */);\n    const radiusAxis = this.axes.find((axis) => axis.direction === \"y\" /* Y */);\n    if (!(angleAxis instanceof PolarAxis) || !(radiusAxis instanceof PolarAxis)) {\n      return;\n    }\n    const angleScale = angleAxis.scale;\n    const angles = (_a = angleScale.ticks) == null ? void 0 : _a.call(angleScale).map((value) => angleScale.convert(value));\n    const innerRadiusRatio = radiusAxis.innerRadiusRatio;\n    angleAxis.innerRadiusRatio = innerRadiusRatio;\n    (_b = angleAxis.computeRange) == null ? void 0 : _b.call(angleAxis);\n    angleAxis.gridLength = radius;\n    radiusAxis.gridAngles = angles;\n    radiusAxis.gridRange = angleAxis.range;\n    radiusAxis.range = [radius, radius * innerRadiusRatio];\n    [angleAxis, radiusAxis].forEach((axis) => {\n      axis.translation.x = cx;\n      axis.translation.y = cy;\n      axis.calculateLayout();\n    });\n  }\n  computeSeriesRect(shrinkRect) {\n    const {\n      seriesArea: { padding }\n    } = this;\n    shrinkRect.shrink(padding.left, \"left\");\n    shrinkRect.shrink(padding.top, \"top\");\n    shrinkRect.shrink(padding.right, \"right\");\n    shrinkRect.shrink(padding.bottom, \"bottom\");\n    this.seriesRect = shrinkRect;\n    this.animationRect = shrinkRect;\n  }\n  computeCircle(seriesBox) {\n    return __async(this, null, function* () {\n      const polarSeries = this.series.filter((series) => {\n        return series instanceof PolarSeries;\n      });\n      const polarAxes = this.axes.filter((axis) => {\n        return axis instanceof PolarAxis;\n      });\n      const setSeriesCircle = (cx, cy, r) => {\n        this.updateAxes(cx, cy, r);\n        polarSeries.forEach((series) => {\n          series.centerX = cx;\n          series.centerY = cy;\n          series.radius = r;\n        });\n        const pieSeries = polarSeries.filter((s) => s instanceof PieSeries);\n        if (pieSeries.length > 1) {\n          const innerRadii = pieSeries.map((series) => {\n            const innerRadius = series.getInnerRadius();\n            return { series, innerRadius };\n          }).sort((a, b) => a.innerRadius - b.innerRadius);\n          innerRadii[innerRadii.length - 1].series.surroundingRadius = void 0;\n          for (let i = 0; i < innerRadii.length - 1; i++) {\n            innerRadii[i].series.surroundingRadius = innerRadii[i + 1].innerRadius;\n          }\n        }\n      };\n      const centerX = seriesBox.x + seriesBox.width / 2;\n      const centerY = seriesBox.y + seriesBox.height / 2;\n      const initialRadius = Math.max(0, Math.min(seriesBox.width, seriesBox.height) / 2);\n      let radius = initialRadius;\n      setSeriesCircle(centerX, centerY, radius);\n      const shake = (..._0) => __async(this, [..._0], function* ({ hideWhenNecessary = false } = {}) {\n        const labelBoxes = [];\n        for (const series of [...polarAxes, ...polarSeries]) {\n          const box = yield series.computeLabelsBBox({ hideWhenNecessary }, seriesBox);\n          if (box) {\n            labelBoxes.push(box);\n          }\n        }\n        if (labelBoxes.length === 0) {\n          setSeriesCircle(centerX, centerY, initialRadius);\n          return;\n        }\n        const labelBox = BBox.merge(labelBoxes);\n        const refined = this.refineCircle(labelBox, radius, seriesBox);\n        setSeriesCircle(refined.centerX, refined.centerY, refined.radius);\n        if (refined.radius === radius) {\n          return;\n        }\n        radius = refined.radius;\n      });\n      yield shake();\n      yield shake();\n      yield shake();\n      yield shake({ hideWhenNecessary: true });\n      yield shake({ hideWhenNecessary: true });\n      return { radius, centerX, centerY };\n    });\n  }\n  refineCircle(labelsBox, radius, seriesBox) {\n    const minCircleRatio = 0.5;\n    const circleLeft = -radius;\n    const circleTop = -radius;\n    const circleRight = radius;\n    const circleBottom = radius;\n    let padLeft = Math.max(0, circleLeft - labelsBox.x);\n    let padTop = Math.max(0, circleTop - labelsBox.y);\n    let padRight = Math.max(0, labelsBox.x + labelsBox.width - circleRight);\n    let padBottom = Math.max(0, labelsBox.y + labelsBox.height - circleBottom);\n    padLeft = padRight = Math.max(padLeft, padRight);\n    padTop = padBottom = Math.max(padTop, padBottom);\n    const availCircleWidth = seriesBox.width - padLeft - padRight;\n    const availCircleHeight = seriesBox.height - padTop - padBottom;\n    let newRadius = Math.min(availCircleWidth, availCircleHeight) / 2;\n    const minHorizontalRadius = minCircleRatio * seriesBox.width / 2;\n    const minVerticalRadius = minCircleRatio * seriesBox.height / 2;\n    const minRadius = Math.min(minHorizontalRadius, minVerticalRadius);\n    if (newRadius < minRadius) {\n      newRadius = minRadius;\n      const horizontalPadding = padLeft + padRight;\n      const verticalPadding = padTop + padBottom;\n      if (2 * newRadius + verticalPadding > seriesBox.height) {\n        const padHeight = seriesBox.height - 2 * newRadius;\n        if (Math.min(padTop, padBottom) * 2 > padHeight) {\n          padTop = padHeight / 2;\n          padBottom = padHeight / 2;\n        } else if (padTop > padBottom) {\n          padTop = padHeight - padBottom;\n        } else {\n          padBottom = padHeight - padTop;\n        }\n      }\n      if (2 * newRadius + horizontalPadding > seriesBox.width) {\n        const padWidth = seriesBox.width - 2 * newRadius;\n        if (Math.min(padLeft, padRight) * 2 > padWidth) {\n          padLeft = padWidth / 2;\n          padRight = padWidth / 2;\n        } else if (padLeft > padRight) {\n          padLeft = padWidth - padRight;\n        } else {\n          padRight = padWidth - padLeft;\n        }\n      }\n    }\n    const newWidth = padLeft + 2 * newRadius + padRight;\n    const newHeight = padTop + 2 * newRadius + padBottom;\n    return {\n      centerX: seriesBox.x + (seriesBox.width - newWidth) / 2 + padLeft + newRadius,\n      centerY: seriesBox.y + (seriesBox.height - newHeight) / 2 + padTop + newRadius,\n      radius: newRadius\n    };\n  }\n};\n_PolarChart.className = \"PolarChart\";\n_PolarChart.type = \"polar\";\nvar PolarChart = _PolarChart;\n\n// packages/ag-charts-community/src/chart/agChartV2.ts\nvar debug = Debug.create(true, \"opts\");\nfunction chartType(options) {\n  if (isAgCartesianChartOptions(options)) {\n    return \"cartesian\";\n  } else if (isAgPolarChartOptions(options)) {\n    return \"polar\";\n  } else if (isAgHierarchyChartOptions(options)) {\n    return \"hierarchy\";\n  }\n  throw new Error(`AG Chart - unknown type of chart for options with type: ${options.type}`);\n}\nvar _AgCharts = class _AgCharts {\n  static licenseCheck(options) {\n    var _a, _b, _c, _d;\n    if (this.licenseChecked)\n      return;\n    this.licenseManager = (_b = (_a = enterpriseModule).licenseManager) == null ? void 0 : _b.call(_a, options);\n    (_c = this.licenseManager) == null ? void 0 : _c.setLicenseKey(this.licenseKey);\n    (_d = this.licenseManager) == null ? void 0 : _d.validateLicense();\n    this.licenseChecked = true;\n  }\n  static setLicenseKey(licenseKey) {\n    this.licenseKey = licenseKey;\n  }\n  /**\n   * Returns the `AgChartInstance` for a DOM node, if there is one.\n   */\n  static getInstance(element2) {\n    return AgChartsInternal.getInstance(element2);\n  }\n  /**\n   * Create a new `AgChartInstance` based upon the given configuration options.\n   */\n  static create(options) {\n    var _a, _b, _c, _d;\n    this.licenseCheck(options);\n    const chart = AgChartsInternal.createOrUpdate(options);\n    if ((_a = this.licenseManager) == null ? void 0 : _a.isDisplayWatermark()) {\n      (_d = (_c = enterpriseModule).injectWatermark) == null ? void 0 : _d.call(\n        _c,\n        (_b = options.document) != null ? _b : document,\n        chart.chart.element,\n        this.licenseManager.getWatermarkMessage()\n      );\n    }\n    return chart;\n  }\n  /**\n   * Update an existing `AgChartInstance`. Options provided should be complete and not\n   * partial.\n   *\n   * __NOTE__: As each call could trigger a chart redraw, multiple calls to update options in\n   * quick succession could result in undesirable flickering, so callers should batch up and/or\n   * debounce changes to avoid unintended partial update renderings.\n   */\n  static update(chart, options) {\n    if (!AgChartInstanceProxy.isInstance(chart)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.createOrUpdate(options, chart);\n  }\n  /**\n   * Update an existing `AgChartInstance` by applying a partial set of option changes.\n   *\n   * __NOTE__: As each call could trigger a chart redraw, each individual delta options update\n   * should leave the chart in a valid options state. Also, multiple calls to update options in\n   * quick succession could result in undesirable flickering, so callers should batch up and/or\n   * debounce changes to avoid unintended partial update renderings.\n   */\n  static updateDelta(chart, deltaOptions) {\n    if (!AgChartInstanceProxy.isInstance(chart)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.updateUserDelta(chart, deltaOptions);\n  }\n  /**\n   * Starts a browser-based image download for the given `AgChartInstance`.\n   */\n  static download(chart, options) {\n    if (!(chart instanceof AgChartInstanceProxy)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    AgChartsInternal.download(chart, options);\n  }\n  /**\n   * Returns a base64-encoded image data URL for the given `AgChartInstance`.\n   */\n  static getImageDataURL(chart, options) {\n    if (!(chart instanceof AgChartInstanceProxy)) {\n      throw new Error(_AgCharts.INVALID_CHART_REF_MESSAGE);\n    }\n    return AgChartsInternal.getImageDataURL(chart, options);\n  }\n};\n_AgCharts.INVALID_CHART_REF_MESSAGE = \"AG Charts - invalid chart reference passed\";\n_AgCharts.licenseChecked = false;\nvar AgCharts = _AgCharts;\nvar AgChart = class _AgChart {\n  static warnDeprecated(memberName) {\n    const warnDeprecated = createDeprecationWarning();\n    warnDeprecated(`AgChart.${memberName}`, `Use AgCharts.${memberName} instead`);\n  }\n  static create(options) {\n    _AgChart.warnDeprecated(\"create\");\n    return AgCharts.create(options);\n  }\n  static update(chart, options) {\n    _AgChart.warnDeprecated(\"update\");\n    return AgCharts.update(chart, options);\n  }\n  static updateDelta(chart, deltaOptions) {\n    _AgChart.warnDeprecated(\"updateDelta\");\n    return AgCharts.updateDelta(chart, deltaOptions);\n  }\n  static download(chart, options) {\n    _AgChart.warnDeprecated(\"download\");\n    return AgCharts.download(chart, options);\n  }\n  static getImageDataURL(chart, options) {\n    _AgChart.warnDeprecated(\"getImageDataURL\");\n    return AgCharts.getImageDataURL(chart, options);\n  }\n};\nvar proxyInstances = /* @__PURE__ */ new WeakMap();\nvar _AgChartsInternal = class _AgChartsInternal {\n  static getInstance(element2) {\n    const chart = Chart.getInstance(element2);\n    return chart != null ? proxyInstances.get(chart) : void 0;\n  }\n  static initialiseModules() {\n    if (_AgChartsInternal.initialised)\n      return;\n    registerInbuiltModules();\n    setupModules();\n    _AgChartsInternal.initialised = true;\n  }\n  static createOrUpdate(userOptions, proxy) {\n    var _b;\n    _AgChartsInternal.initialiseModules();\n    debug(\">>> AgChartV2.createOrUpdate() user options\", userOptions);\n    const _a = userOptions, { overrideDevicePixelRatio, document: document2, window: userWindow } = _a, chartOptions = __objRest(_a, [\"overrideDevicePixelRatio\", \"document\", \"window\"]);\n    const specialOverrides = { overrideDevicePixelRatio, document: document2, window: userWindow };\n    const processedOptions = prepareOptions(chartOptions);\n    let chart = proxy == null ? void 0 : proxy.chart;\n    if (chart != null) {\n      proxyInstances.delete(chart);\n    }\n    if (chart == null || chartType(chartOptions) !== chartType(chart.processedOptions)) {\n      chart = _AgChartsInternal.createChartInstance(processedOptions, specialOverrides, chart);\n    }\n    if (proxy == null) {\n      proxy = new AgChartInstanceProxy(chart);\n    } else {\n      proxy.chart = chart;\n    }\n    proxyInstances.set(chart, proxy);\n    if (Debug.check() && typeof window !== \"undefined\") {\n      (_b = window.agChartInstances) != null ? _b : window.agChartInstances = {};\n      window.agChartInstances[chart.id] = chart;\n    }\n    const chartToUpdate = chart;\n    chartToUpdate.queuedUserOptions.push(chartOptions);\n    const dequeue = () => {\n      const queuedOptionsIdx = chartToUpdate.queuedUserOptions.indexOf(chartOptions);\n      chartToUpdate.queuedUserOptions.splice(0, queuedOptionsIdx);\n    };\n    chartToUpdate.requestFactoryUpdate(() => __async(this, null, function* () {\n      if (chartToUpdate.destroyed)\n        return;\n      const deltaOptions = jsonDiff(chartToUpdate.processedOptions, processedOptions);\n      if (deltaOptions == null) {\n        dequeue();\n        return;\n      }\n      yield _AgChartsInternal.updateDelta(chartToUpdate, deltaOptions, chartOptions);\n      dequeue();\n    }));\n    return proxy;\n  }\n  static updateUserDelta(proxy, deltaOptions) {\n    var _a;\n    const {\n      chart,\n      chart: { queuedUserOptions }\n    } = proxy;\n    const lastUpdateOptions = (_a = queuedUserOptions[queuedUserOptions.length - 1]) != null ? _a : chart.userOptions;\n    const userOptions = jsonMerge([lastUpdateOptions, deltaOptions]);\n    debug(\">>> AgChartV2.updateUserDelta() user delta\", deltaOptions);\n    debug(\"AgChartV2.updateUserDelta() - base options\", lastUpdateOptions);\n    _AgChartsInternal.createOrUpdate(userOptions, proxy);\n  }\n  /**\n   * Returns the content of the current canvas as an image.\n   * @param opts The download options including `width` and `height` of the image as well as `fileName` and `fileFormat`.\n   */\n  static download(proxy, opts) {\n    const asyncDownload = () => __async(this, null, function* () {\n      const maybeClone = yield _AgChartsInternal.prepareResizedChart(proxy, opts);\n      const { chart } = maybeClone;\n      chart.scene.download(opts == null ? void 0 : opts.fileName, opts == null ? void 0 : opts.fileFormat);\n      if (maybeClone !== proxy) {\n        maybeClone.destroy();\n      }\n    });\n    asyncDownload().catch((e) => Logger.errorOnce(e));\n  }\n  static getImageDataURL(proxy, opts) {\n    return __async(this, null, function* () {\n      const maybeClone = yield _AgChartsInternal.prepareResizedChart(proxy, opts);\n      const { chart } = maybeClone;\n      const result = chart.scene.canvas.getDataURL(opts == null ? void 0 : opts.fileFormat);\n      if (maybeClone !== proxy) {\n        maybeClone.destroy();\n      }\n      return result;\n    });\n  }\n  static prepareResizedChart(proxy, opts) {\n    return __async(this, null, function* () {\n      var _a;\n      const { chart } = proxy;\n      let { width, height } = opts != null ? opts : {};\n      const currentWidth = chart.width;\n      const currentHeight = chart.height;\n      const unchanged = width === void 0 && height === void 0 || chart.scene.canvas.pixelRatio === 1 && currentWidth === width && currentHeight === height;\n      if (unchanged) {\n        return proxy;\n      }\n      width != null ? width : width = currentWidth;\n      height != null ? height : height = currentHeight;\n      const options = __spreadProps(__spreadValues({}, chart.userOptions), {\n        container: document.createElement(\"div\"),\n        width,\n        height,\n        autoSize: false,\n        overrideDevicePixelRatio: 1\n      });\n      if (hasRegisteredEnterpriseModules()) {\n        (_a = options.animation) != null ? _a : options.animation = {};\n        options.animation.enabled = false;\n      }\n      const clonedChart = _AgChartsInternal.createOrUpdate(options);\n      yield clonedChart.chart.waitForUpdate();\n      return clonedChart;\n    });\n  }\n  static createChartInstance(options, specialOverrides, oldChart) {\n    const transferableResource = oldChart == null ? void 0 : oldChart.destroy({ keepTransferableResources: true });\n    if (isAgCartesianChartOptions(options)) {\n      return new CartesianChart(specialOverrides, transferableResource);\n    } else if (isAgHierarchyChartOptions(options)) {\n      return new HierarchyChart(specialOverrides, transferableResource);\n    } else if (isAgPolarChartOptions(options)) {\n      return new PolarChart(specialOverrides, transferableResource);\n    }\n    throw new Error(\n      `AG Charts - couldn't apply configuration, check options are correctly structured and series types are specified`\n    );\n  }\n  static updateDelta(chart, processedOptions, userOptions) {\n    return __async(this, null, function* () {\n      var _a;\n      if (processedOptions.type == null) {\n        processedOptions = __spreadProps(__spreadValues({}, processedOptions), {\n          type: (_a = chart.processedOptions.type) != null ? _a : optionsType(processedOptions)\n        });\n      }\n      if (chart.destroyed)\n        return;\n      debug(\"AgChartV2.updateDelta() - applying delta\", processedOptions);\n      applyChartOptions(chart, processedOptions, userOptions);\n    });\n  }\n};\n_AgChartsInternal.initialised = false;\nvar AgChartsInternal = _AgChartsInternal;\nfunction applyChartOptions(chart, processedOptions, userOptions) {\n  var _a, _b, _c;\n  const completeOptions = jsonMerge([(_a = chart.processedOptions) != null ? _a : {}, processedOptions], noDataCloneMergeOptions);\n  const modulesChanged = applyModules(chart, completeOptions);\n  const skip = [\"type\", \"data\", \"series\", \"listeners\", \"theme\", \"legend.listeners\"];\n  if (isAgCartesianChartOptions(processedOptions) || isAgPolarChartOptions(processedOptions)) {\n    skip.push(\"axes\");\n  } else if (isAgHierarchyChartOptions(processedOptions)) {\n  } else {\n    throw new Error(\n      `AG Charts - couldn't apply configuration, check type of options and chart: ${processedOptions[\"type\"]}`\n    );\n  }\n  if (processedOptions.listeners) {\n    registerListeners(chart, processedOptions.listeners);\n  }\n  applyOptionValues(chart, chart.getModuleContext(), processedOptions, { skip });\n  let forceNodeDataRefresh = false;\n  let seriesRecreated = false;\n  if (processedOptions.series && processedOptions.series.length > 0) {\n    seriesRecreated = applySeries(chart, processedOptions);\n    forceNodeDataRefresh = true;\n  }\n  if (\"axes\" in completeOptions && Array.isArray(completeOptions.axes)) {\n    const axesPresent = applyAxes(chart, completeOptions, seriesRecreated);\n    if (axesPresent) {\n      forceNodeDataRefresh = true;\n    }\n  }\n  const seriesOpts = processedOptions.series;\n  const seriesDataUpdate = !!processedOptions.data || (seriesOpts == null ? void 0 : seriesOpts.some((s) => s.data != null));\n  const legendKeys = getLegendKeys();\n  const optionsHaveLegend = Object.values(legendKeys).some(\n    (legendKey) => processedOptions[legendKey] != null\n  );\n  const otherRefreshUpdate = processedOptions.title != null && processedOptions.subtitle != null;\n  forceNodeDataRefresh = forceNodeDataRefresh || seriesDataUpdate || optionsHaveLegend || otherRefreshUpdate;\n  if (processedOptions.data) {\n    chart.data = processedOptions.data;\n  }\n  if ((_b = processedOptions.legend) == null ? void 0 : _b.listeners) {\n    Object.assign(chart.legend.listeners, processedOptions.legend.listeners);\n  }\n  if (processedOptions.listeners) {\n    chart.updateAllSeriesListeners();\n  }\n  chart.processedOptions = completeOptions;\n  chart.userOptions = jsonMerge([(_c = chart.userOptions) != null ? _c : {}, userOptions], noDataCloneMergeOptions);\n  const majorChange = forceNodeDataRefresh || modulesChanged;\n  const updateType = majorChange ? 1 /* PROCESS_DATA */ : 2 /* PERFORM_LAYOUT */;\n  debug(\"AgChartV2.applyChartOptions() - update type\", ChartUpdateType[updateType]);\n  chart.update(updateType, { forceNodeDataRefresh, newAnimationBatch: true });\n}\nfunction applyModules(chart, options) {\n  const matchingChartType = ({ chartTypes }) => chart instanceof CartesianChart && chartTypes.includes(\"cartesian\") || chart instanceof PolarChart && chartTypes.includes(\"polar\") || chart instanceof HierarchyChart && chartTypes.includes(\"hierarchy\");\n  let modulesChanged = false;\n  for (const module of REGISTERED_MODULES) {\n    if (module.type !== \"root\" && module.type !== \"legend\") {\n      continue;\n    }\n    const shouldBeEnabled = matchingChartType(module) && options[module.optionsKey] != null;\n    const isEnabled = chart.isModuleEnabled(module);\n    if (shouldBeEnabled === isEnabled) {\n      continue;\n    }\n    if (shouldBeEnabled) {\n      chart.addModule(module);\n      chart[module.optionsKey] = chart.modules.get(module.optionsKey);\n    } else {\n      chart.removeModule(module);\n      delete chart[module.optionsKey];\n    }\n    modulesChanged = true;\n  }\n  return modulesChanged;\n}\nfunction applySeries(chart, options) {\n  const optSeries = options.series;\n  if (!optSeries) {\n    return false;\n  }\n  const keysToConsider = [\"direction\", \"xKey\", \"yKey\", \"sizeKey\", \"angleKey\", \"stacked\", \"stackGroup\"];\n  let matchingTypes = chart.series.length === optSeries.length;\n  for (let i = 0; i < chart.series.length && matchingTypes; i++) {\n    matchingTypes && (matchingTypes = chart.series[i].type === optSeries[i].type);\n    for (const key of keysToConsider) {\n      matchingTypes && (matchingTypes = chart.series[i].properties[key] === optSeries[i][key]);\n    }\n  }\n  if (matchingTypes) {\n    chart.series.forEach((s, i) => {\n      var _a, _b, _c, _d;\n      const previousOpts = (_c = (_b = (_a = chart.processedOptions) == null ? void 0 : _a.series) == null ? void 0 : _b[i]) != null ? _c : {};\n      const seriesDiff = jsonDiff(previousOpts, (_d = optSeries[i]) != null ? _d : {});\n      if (!seriesDiff) {\n        return;\n      }\n      debug(`AgChartV2.applySeries() - applying series diff idx ${i}`, seriesDiff);\n      applySeriesValues(s, seriesDiff);\n      s.markNodeDataDirty();\n    });\n    return false;\n  }\n  debug(`AgChartV2.applySeries() - creating new series instances`);\n  chart.series = createSeries(chart, optSeries);\n  return true;\n}\nfunction applyAxes(chart, options, forceRecreate) {\n  const optAxes = options.axes;\n  if (!optAxes) {\n    return false;\n  }\n  const matchingTypes = !forceRecreate && chart.axes.length === optAxes.length && chart.axes.every((a, i) => a.type === optAxes[i].type);\n  if (matchingTypes) {\n    const oldOpts = chart.processedOptions;\n    const moduleContext = chart.getModuleContext();\n    if (isAgCartesianChartOptions(oldOpts)) {\n      chart.axes.forEach((a, i) => {\n        var _a, _b;\n        const previousOpts = (_b = (_a = oldOpts.axes) == null ? void 0 : _a[i]) != null ? _b : {};\n        const axisDiff = jsonDiff(previousOpts, optAxes[i]);\n        debug(`AgChartV2.applyAxes() - applying axis diff idx ${i}`, axisDiff);\n        const path = `axes[${i}]`;\n        const skip = [\"axes[].type\"];\n        applyOptionValues(a, moduleContext, axisDiff, { path, skip });\n      });\n      return true;\n    }\n  }\n  chart.axes = createAxis(chart, optAxes);\n  return true;\n}\nfunction createSeries(chart, options) {\n  var _a;\n  const series = [];\n  const moduleContext = chart.getModuleContext();\n  for (const seriesOptions of options != null ? options : []) {\n    const type = (_a = seriesOptions.type) != null ? _a : \"unknown\";\n    if (isEnterpriseSeriesType(type) && !isEnterpriseSeriesTypeLoaded(type)) {\n      continue;\n    }\n    const seriesInstance = getSeries(type, moduleContext);\n    applySeriesOptionModules(seriesInstance, seriesOptions);\n    applySeriesValues(seriesInstance, seriesOptions);\n    series.push(seriesInstance);\n  }\n  return series;\n}\nfunction applySeriesOptionModules(series, options) {\n  const seriesOptionModules = REGISTERED_MODULES.filter((m) => m.type === \"series-option\");\n  const moduleContext = series.createModuleContext();\n  const moduleMap = series.getModuleMap();\n  for (const module of seriesOptionModules) {\n    const supportedSeriesTypes = module.seriesTypes;\n    if (module.optionsKey in options && supportedSeriesTypes.includes(series.type)) {\n      moduleMap.addModule(module, (module2) => new module2.instanceConstructor(moduleContext));\n      series[module.optionsKey] = moduleMap.getModule(module);\n    }\n  }\n}\nfunction createAxis(chart, options) {\n  const guesser = new AxisPositionGuesser();\n  const moduleContext = chart.getModuleContext();\n  const skip = [\"axes[].type\"];\n  let index = 0;\n  for (const axisOptions of options != null ? options : []) {\n    const axis = getAxis(axisOptions.type, moduleContext);\n    const path = `axes[${index++}]`;\n    applyAxisModules(axis, axisOptions);\n    applyOptionValues(axis, moduleContext, axisOptions, { path, skip });\n    guesser.push(axis, axisOptions);\n  }\n  return guesser.guessInvalidPositions();\n}\nfunction applyAxisModules(axis, options) {\n  let modulesChanged = false;\n  const rootModules = REGISTERED_MODULES.filter((m) => m.type === \"axis-option\");\n  const moduleContext = axis.createModuleContext();\n  for (const module of rootModules) {\n    const shouldBeEnabled = options[module.optionsKey] != null;\n    const moduleMap = axis.getModuleMap();\n    const isEnabled = moduleMap.isModuleEnabled(module);\n    if (shouldBeEnabled === isEnabled)\n      continue;\n    modulesChanged = true;\n    if (shouldBeEnabled) {\n      moduleMap.addModule(module, (module2) => new module2.instanceConstructor(moduleContext));\n      axis[module.optionsKey] = moduleMap.getModule(module);\n    } else {\n      moduleMap.removeModule(module);\n      delete axis[module.optionsKey];\n    }\n  }\n  return modulesChanged;\n}\nfunction registerListeners(source, listeners) {\n  source.clearEventListeners();\n  const entries = Object.entries(listeners != null ? listeners : {});\n  for (const [property, listener] of entries) {\n    if (typeof listener !== \"function\")\n      continue;\n    source.addEventListener(property, listener);\n  }\n}\nfunction applyOptionValues(target, moduleContext, options, { skip, path } = {}) {\n  const applyOpts = __spreadValues(__spreadProps(__spreadValues({}, getJsonApplyOptions(moduleContext)), {\n    skip\n  }), path ? { path } : {});\n  return jsonApply(target, options, applyOpts);\n}\nfunction applySeriesValues(target, options) {\n  const moduleMap = target.getModuleMap();\n  const _a = options, { type, data, errorBar, listeners, seriesGrouping } = _a, seriesOptions = __objRest(_a, [\"type\", \"data\", \"errorBar\", \"listeners\", \"seriesGrouping\"]);\n  target.properties.set(seriesOptions);\n  if (\"data\" in options) {\n    target.data = options.data;\n  }\n  if (\"errorBar\" in options && moduleMap.isModuleEnabled(\"errorBar\")) {\n    moduleMap.getModule(\"errorBar\").properties.set(options.errorBar);\n  }\n  if ((options == null ? void 0 : options.listeners) != null) {\n    registerListeners(target, options.listeners);\n  }\n  if (\"seriesGrouping\" in options) {\n    target.seriesGrouping = seriesGrouping ? Object.freeze(__spreadValues(__spreadValues({}, target.seriesGrouping), seriesGrouping)) : void 0;\n  }\n}\n\n// packages/ag-charts-community/src/version.ts\nvar VERSION = \"9.0.2\";\n\n// packages/ag-charts-community/src/integrated-charts-theme.ts\nvar integrated_charts_theme_exports = {};\n__export(integrated_charts_theme_exports, {\n  BOTTOM: () => BOTTOM,\n  CARTESIAN_AXIS_POSITIONS: () => CARTESIAN_AXIS_POSITIONS,\n  CARTESIAN_AXIS_TYPES: () => CARTESIAN_AXIS_TYPES,\n  CIRCLE: () => CIRCLE,\n  ChartTheme: () => ChartTheme,\n  DEFAULT_AXIS_GRID_COLOUR: () => DEFAULT_AXIS_GRID_COLOUR,\n  DEFAULT_AXIS_LINE_COLOUR: () => DEFAULT_AXIS_LINE_COLOUR,\n  DEFAULT_BACKGROUND_COLOUR: () => DEFAULT_BACKGROUND_COLOUR,\n  DEFAULT_CROSS_LINES_COLOUR: () => DEFAULT_CROSS_LINES_COLOUR,\n  DEFAULT_DIVERGING_SERIES_COLOUR_RANGE: () => DEFAULT_DIVERGING_SERIES_COLOUR_RANGE,\n  DEFAULT_FONT_FAMILY: () => DEFAULT_FONT_FAMILY,\n  DEFAULT_HIERARCHY_FILLS: () => DEFAULT_HIERARCHY_FILLS,\n  DEFAULT_HIERARCHY_STROKES: () => DEFAULT_HIERARCHY_STROKES,\n  DEFAULT_INSIDE_SERIES_LABEL_COLOUR: () => DEFAULT_INSIDE_SERIES_LABEL_COLOUR,\n  DEFAULT_INVERTED_LABEL_COLOUR: () => DEFAULT_INVERTED_LABEL_COLOUR,\n  DEFAULT_LABEL_COLOUR: () => DEFAULT_LABEL_COLOUR,\n  DEFAULT_MUTED_LABEL_COLOUR: () => DEFAULT_MUTED_LABEL_COLOUR,\n  DEFAULT_POLAR_SERIES_STROKE: () => DEFAULT_POLAR_SERIES_STROKE,\n  DEFAULT_SHADOW_COLOUR: () => DEFAULT_SHADOW_COLOUR,\n  DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE: () => DEFAULT_WATERFALL_SERIES_CONNECTOR_LINE_STROKE,\n  DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS: () => DEFAULT_WATERFALL_SERIES_NEGATIVE_COLOURS,\n  DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS: () => DEFAULT_WATERFALL_SERIES_POSITIVE_COLOURS,\n  DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS: () => DEFAULT_WATERFALL_SERIES_TOTAL_COLOURS,\n  EXTENDS_AXES_DEFAULTS: () => EXTENDS_AXES_DEFAULTS,\n  EXTENDS_AXES_GRID_LINE_DEFAULTS: () => EXTENDS_AXES_GRID_LINE_DEFAULTS,\n  EXTENDS_AXES_LABEL_DEFAULTS: () => EXTENDS_AXES_LABEL_DEFAULTS,\n  EXTENDS_AXES_LINE_DEFAULTS: () => EXTENDS_AXES_LINE_DEFAULTS,\n  EXTENDS_AXES_TICK_DEFAULTS: () => EXTENDS_AXES_TICK_DEFAULTS,\n  EXTENDS_CARTESIAN_MARKER_DEFAULTS: () => EXTENDS_CARTESIAN_MARKER_DEFAULTS,\n  EXTENDS_CHART_DEFAULTS: () => EXTENDS_CHART_DEFAULTS,\n  EXTENDS_LEGEND_DEFAULTS: () => EXTENDS_LEGEND_DEFAULTS,\n  EXTENDS_LEGEND_ITEM_DEFAULTS: () => EXTENDS_LEGEND_ITEM_DEFAULTS,\n  EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS: () => EXTENDS_LEGEND_ITEM_MARKER_DEFAULTS,\n  EXTENDS_SERIES_DEFAULTS: () => EXTENDS_SERIES_DEFAULTS,\n  FONT_SIZE: () => FONT_SIZE,\n  FONT_WEIGHT: () => FONT_WEIGHT2,\n  OVERRIDE_SERIES_LABEL_DEFAULTS: () => OVERRIDE_SERIES_LABEL_DEFAULTS,\n  POLAR_AXIS_TYPES: () => POLAR_AXIS_TYPES,\n  getChartTheme: () => getChartTheme,\n  themes: () => themes2\n});\nvar themes2 = Object.entries(themes).reduce(\n  (obj, [name, factory]) => {\n    obj[name] = factory();\n    return obj;\n  },\n  {}\n);\n\n// packages/ag-charts-community/src/sparklines-scale.ts\nvar sparklines_scale_exports = {};\n__export(sparklines_scale_exports, {\n  BandScale: () => BandScale,\n  ColorScale: () => ColorScale,\n  ContinuousScale: () => ContinuousScale,\n  Invalidating: () => Invalidating,\n  LinearScale: () => LinearScale,\n  TimeScale: () => TimeScale\n});\nexport {\n  AgChart,\n  AgCharts,\n  AgErrorBarSupportedSeriesTypes,\n  Marker,\n  VERSION,\n  module_support_exports as _ModuleSupport,\n  sparklines_scale_exports as _Scale,\n  integrated_charts_scene_exports as _Scene,\n  integrated_charts_theme_exports as _Theme,\n  sparklines_util_exports as _Util,\n  __FORCE_MODULE_DETECTION,\n  time_exports as time\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}